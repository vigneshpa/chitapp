{"version":3,"file":"js/26.js","mappings":"qWAwDoB,EAAG,GAACA,OAAG,qB,mBAAO,EAAG,GAACC,Q,qBAAc,EAAG,GAACA,Q,kFADhD,SAEK,QADH,SAAsD,M,0HAFnD,EAAI,G,qBAAT,OAAI,K,oSAFV,SASK,QARH,SAMK,K,2DACL,SAA0C,M,6BANjC,EAAI,G,QAAT,OAAI,M,gHAAJ,S,2EArDR,C,CAEA,YACA,iCACA,4B,CAGA,YACA,+BACA,gC,CAGA,WACA,iCACA,wD,CAGA,YACA,8DACA,iC,CAGA,YACA,mCACA,4B,CAIA,YACA,mBACA,+B,CAGA,YACA,mBACA,wC,CAGA,YACA,0CACA,oC,CAGA,YACA,0CACA,2C,GAS6BC,OAAOC,KAAKC,EAAIC,O,8WCzCrB,qE,8BACoD,oC,sgCAJxE,SAA2C,Q,mDAE3C,SAAiC,Q,iBACjC,SAeK,Q,eAd8D,SAAK,M,eAC9C,SAAK,M,eAC7B,SAGG,M,eACH,SAGG,M,eACH,SAEG,M,eACH,SAAwH,K,o4BAIvH,EAAkB,S,sNAAlB,EAAkB,G,ybA1BzB,K,wFAsB4CH,OAAO,iBAAiBI,QAAQC,MAAM,kB,IAKpDL,OAAO,iBAAiBI,QAAQC,MAAM,Y,2aCzBhE,SAEK,O,iCACL,SAIC,O,wZARE,EAAI,S,sFAAJ,EAAI,G,8RALX,gC,KACA,Q,6HAUsBC,QAAQC,QAAQC,KAAYC,MAAKC,GAAO,EAAJ,EAAKC,IAAwB,kBAARD,GAAqBA,O,gaCI5F,SAA8G,Q,+DAF3G,EAAU,Q,mMAIO,EAAO,I,uPANjC,SAaK,QAZH,SAOK,K,+BAFH,SAAmC,M,4DAIrC,SAEK,K,8BAVE,EAAU,G,oEAIO,EAAO,I,geAhBnC,Y,IACA,Y,4BACA,iB,eACA,S,QACA,K,OACA,0BACA,qC","sources":["webpack:///./src/routes/About/Technologies.svelte","webpack:///./src/routes/About/About.svelte","webpack:///./theme/Dialouge.svelte","webpack:///./theme/Page.svelte"],"sourcesContent":["<script lang=\"ts\">\n  let favs = [\n    {\n      src: require('./assets/svelte-logo-horizontal.svg'),\n      title: 'Svelte Frontend Compiler',\n      href: 'https://svelte.dev/',\n    },\n    {\n      src: require('./assets/webpack-logo.svg'),\n      title: 'Webpack Module Bundler',\n      href: 'https://webpack.js.org/',\n    },\n    {\n      src: require('./assets/Workbox-Logo-Grey.svg'),\n      title: 'Google Workbox Libraries',\n      href: 'https://developers.google.com/web/tools/workbox',\n    },\n    {\n      src: require('./assets/webassembly.svg'),\n      title: 'WebAssembly binary format for predictable performance',\n      href: 'https://webassembly.org/',\n    },\n    {\n      src: require('./assets/nodejs-logo.svg'),\n      title: 'Node.js JavaScript Runtime',\n      href: 'https://nodejs.org/',\n    },\n\n    {\n      src: require('./assets/Expressjs.png'),\n      title: 'Express JS',\n      href: 'https://expressjs.com/',\n    },\n    {\n      src: require('./assets/typescript.png'),\n      title: 'TypeScript',\n      href: 'https://www.typescriptlang.org/',\n    },\n    {\n      src: require('./assets/electron.svg'),\n      title: 'Electron JS Desktop GUI Framework',\n      href: 'https://www.electronjs.org/',\n    },\n    {\n      src: require('./assets/sqlite.png'),\n      title: 'SQLite Database Management System',\n      href: 'https://www.sqlite.org/index.html',\n    },\n  ];\n</script>\n\n<template>\n  <div class=\"root\">\n    <div class=\"grd\">\n      {#each favs as fav}\n        <div on:click={() => window.open(fav.href)}>\n          <img src={fav.src} alt={fav.title} title={fav.title} />\n        </div>\n      {/each}\n    </div>\n    <div class=\"footer\">and many more ...</div>\n  </div>\n</template>\n\n<style>\n  .root > .grd {\n    display: grid;\n    grid-template-columns: auto auto auto;\n    align-items: center;\n    justify-content: space-evenly;\n  }\n  @media screen and (max-width: 99rem) {\n    .root > .grd {\n      grid-template-columns: auto auto;\n    }\n  }\n  @media screen and (max-width: 66rem) {\n    .root > .grd {\n      grid-template-columns: auto;\n    }\n  }\n  .root > .grd > div {\n    margin: 4rem;\n    height: 6rem;\n    width: 25rem;\n    overflow: hidden;\n    text-align: center;\n    transition: transform 0.2s ease;\n    cursor: pointer;\n  }\n  .root > .grd > div:hover {\n    transform: scale(1.2);\n  }\n  .root > .grd > div:active {\n    transform: scale(1.1);\n  }\n  .root > .grd > div > img {\n    max-height: 6rem;\n    max-width: 25rem;\n  }\n  .root {\n    text-align: center;\n  }\n</style>\n","<script lang=\"ts\">\n  import Dialouge from '@theme/Dialouge.svelte';\n  import Page from '@theme/Page.svelte';\n  import Router from '@vigneshpa/svelte-router/Router.svelte';\n  import type { Writable } from 'svelte/store';\n  import Technologies from './Technologies.svelte';\n  export let hasChildRouteComp: Writable<boolean>;\n</script>\n\n<template>\n  <Page heading=\"About\">\n    <div class=\"heading\">Technologies used</div>\n    <Technologies />\n    <div class=\"heading\">License</div>\n    <div class=\"license\">\n      Chit Management System (ChitAPP) - Reports for chit crowd funding<br />\n      Copyright Â© 2021 Vignesh<br />\n      <p>\n        This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the\n        Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n      </p>\n      <p>\n        This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n        or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n      </p>\n      <p>\n        You should have received a copy of the GNU General Public License along with this program. If not, see <a href=\"/about/license/\">here</a>.\n      </p>\n      <button class=\"t-btn\" on:click={() => window['svelte-router'].router?.route('/about/license')}>View Full Version</button>\n    </div>\n  </Page>\n\n  {#if $hasChildRouteComp}\n    <Dialouge preClose={() => window['svelte-router'].router?.route('/groups')}>\n      <Router />\n    </Dialouge>\n  {/if}\n</template>\n\n<style>\n  .heading {\n    font-size: 2rem;\n    padding: 1rem;\n    text-decoration: underline;\n    text-align: center;\n    margin-top: 3rem;\n  }\n  .license {\n    max-width: 50rem;\n    margin: 1rem auto;\n    line-height: 1.5rem;\n  }\n</style>\n","<script lang=\"ts\">\n  import { fade as trans } from 'svelte/transition';\n  export let preClose: () => Promise<boolean | void> | boolean | void = () => Promise.resolve(false);\n  export let show: boolean = true;\n</script>\n\n<template>\n  {#if show}\n    <div class=\"t-dialouge\">\n      <slot />\n    </div>\n    <div\n      class=\"t-dialouge-cover\"\n      on:click={() => Promise.resolve(preClose()).then(val => (show = !(typeof val === 'boolean' && val)))}\n      transition:trans\n    />\n  {/if}\n</template>\n\n<style lang=\"scss\">\n  @use \"./scheme.scss\" as scheme;\n  .t-dialouge-cover {\n    position: fixed;\n    overflow: auto;\n    top: 0px;\n    right: 0px;\n    z-index: 1;\n    bottom: 0px;\n    left: 0px;\n    background-color: scheme.$coverColor;\n  }\n  .t-dialouge {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: 2;\n    margin: Auto;\n    > :global(div) {\n      border-bottom-left-radius: 10px;\n      border-bottom-right-radius: 10px;\n      background-color: scheme.$background;\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import { slide as trns } from 'svelte/transition';\n  import getStore from './TStore';\n  const store = getStore();\n  let store_mobile = store.mobile;\n  store.drawer.set(!$store_mobile);\n  export let backButton: boolean = false;\n  export let heading: string;\n  document.body.scrollTop = 0;\n  document.documentElement.scrollTop = 0;\n</script>\n\n<template>\n  <div class=\"page\" transition:trns>\n    <div class=\"top\">\n      {#if backButton}\n        <!-- svelte-ignore a11y-invalid-attribute -->\n        <a href=\"javascript:history.back()\" class=\"t-a-btn\"><span class=\"material-icons-outlined\">arrow_back</span></a>\n      {/if}\n      <div class=\"heading\">{heading}</div>\n      <slot name=\"top-extra\" />\n    </div>\n\n    <div class=\"content\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n  @import './scheme.scss';\n  .page {\n    margin: 0px;\n    padding: 10px;\n    transition: padding $aniDuration ease;\n    @media only screen and (max-width: 720px) {\n      padding: 10px 5px;\n    }\n    .top {\n      color: $textOnBackground;\n      .t-a-btn {\n        height: 34px;\n        display: inline-block;\n        box-sizing: border-box;\n        border-radius: 17px;\n        width: 34px;\n      }\n      .heading {\n        font-size: 1.5em;\n      }\n      border-bottom: solid 2px $textOnBackground;\n      padding: 10px;\n      display: flex;\n      flex-flow: row nowrap;\n      align-items: center;\n      justify-content: space-between;\n      div {\n        display: inline-block;\n      }\n    }\n    .content {\n      padding: 10px;\n      transition: padding $aniDuration ease;\n      @media only screen and (max-width: 720px) {\n        padding: 10px 0px;\n      }\n    }\n  }\n</style>\n"],"names":["src","title","window","open","fav","href","router","route","Promise","resolve","preClose","then","val","show"],"sourceRoot":""}