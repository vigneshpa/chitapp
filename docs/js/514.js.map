{"version":3,"file":"js/514.js","mappings":"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","sources":["webpack:///../node_modules/base64-js/index.js","webpack:///../node_modules/buffer/index.js","webpack:///../node_modules/ieee754/index.js","webpack:///../node_modules/inherits/inherits_browser.js","webpack:///../node_modules/jszip/dist/jszip.min.js","webpack:///../node_modules/localforage/dist/localforage.js","webpack:///../node_modules/reflect-metadata/Reflect.js","webpack:///../node_modules/safe-buffer/index.js","webpack:///../node_modules/sha.js/hash.js","webpack:///../node_modules/sha.js/index.js","webpack:///../node_modules/sha.js/sha.js","webpack:///../node_modules/sha.js/sha1.js","webpack:///../node_modules/sha.js/sha224.js","webpack:///../node_modules/sha.js/sha256.js","webpack:///../node_modules/sha.js/sha384.js","webpack:///../node_modules/sha.js/sha512.js","webpack:///../node_modules/sql.js/dist/sql-wasm.js","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///../node_modules/typeorm/browser/driver/DriverUtils.js","webpack:///../node_modules/typeorm/browser/schema-builder/util/ViewUtils.js","webpack:///../node_modules/typeorm/browser/schema-builder/RdbmsSchemaBuilder.js","webpack:///../node_modules/typeorm/browser/driver/sqlite-abstract/AbstractSqliteDriver.js","webpack:///../node_modules/typeorm/browser/entity-schema/EntitySchema.js","webpack:///../node_modules/typeorm/browser/error/AlreadyHasActiveConnectionError.js","webpack:///../node_modules/typeorm/browser/error/CannotAttachTreeChildrenEntityError.js","webpack:///../node_modules/typeorm/browser/error/CannotConnectAlreadyConnectedError.js","webpack:///../node_modules/typeorm/browser/error/CannotCreateEntityIdMapError.js","webpack:///../node_modules/typeorm/browser/error/CannotDetermineEntityError.js","webpack:///../node_modules/typeorm/browser/error/CannotExecuteNotConnectedError.js","webpack:///../node_modules/typeorm/browser/error/CannotReflectMethodParameterTypeError.js","webpack:///../node_modules/typeorm/browser/error/CircularRelationsError.js","webpack:///../node_modules/typeorm/browser/error/ColumnTypeUndefinedError.js","webpack:///../node_modules/typeorm/browser/error/ConnectionNotFoundError.js","webpack:///../node_modules/typeorm/browser/error/CustomRepositoryCannotInheritRepositoryError.js","webpack:///../node_modules/typeorm/browser/error/CustomRepositoryDoesNotHaveEntityError.js","webpack:///../node_modules/typeorm/browser/error/CustomRepositoryNotFoundError.js","webpack:///../node_modules/typeorm/browser/error/DataTypeNotSupportedError.js","webpack:///../node_modules/typeorm/browser/error/DriverOptionNotSetError.js","webpack:///../node_modules/typeorm/browser/error/DriverPackageNotInstalledError.js","webpack:///../node_modules/typeorm/browser/error/EntityColumnNotFound.js","webpack:///../node_modules/typeorm/browser/error/EntityMetadataNotFoundError.js","webpack:///../node_modules/typeorm/browser/error/EntityNotFoundError.js","webpack:///../node_modules/typeorm/browser/error/FindRelationsNotFoundError.js","webpack:///../node_modules/typeorm/browser/error/InitializedRelationError.js","webpack:///../node_modules/typeorm/browser/error/InsertValuesMissingError.js","webpack:///../node_modules/typeorm/browser/error/LimitOnUpdateNotSupportedError.js","webpack:///../node_modules/typeorm/browser/error/LockNotSupportedOnGivenDriverError.js","webpack:///../node_modules/typeorm/browser/error/MissingDeleteDateColumnError.js","webpack:///../node_modules/typeorm/browser/error/MissingDriverError.js","webpack:///../node_modules/typeorm/browser/error/MissingPrimaryColumnError.js","webpack:///../node_modules/typeorm/browser/error/MustBeEntityError.js","webpack:///../node_modules/typeorm/browser/error/NoConnectionOptionError.js","webpack:///../node_modules/typeorm/browser/error/NoNeedToReleaseEntityManagerError.js","webpack:///../node_modules/typeorm/browser/error/NoVersionOrUpdateDateColumnError.js","webpack:///../node_modules/typeorm/browser/error/OffsetWithoutLimitNotSupportedError.js","webpack:///../node_modules/typeorm/browser/error/OptimisticLockCanNotBeUsedError.js","webpack:///../node_modules/typeorm/browser/error/OptimisticLockVersionMismatchError.js","webpack:///../node_modules/typeorm/browser/error/PessimisticLockTransactionRequiredError.js","webpack:///../node_modules/typeorm/browser/error/PrimaryColumnCannotBeNullableError.js","webpack:///../node_modules/typeorm/browser/error/QueryFailedError.js","webpack:///../node_modules/typeorm/browser/error/QueryRunnerAlreadyReleasedError.js","webpack:///../node_modules/typeorm/browser/error/QueryRunnerProviderAlreadyReleasedError.js","webpack:///../node_modules/typeorm/browser/error/RepositoryNotFoundError.js","webpack:///../node_modules/typeorm/browser/error/RepositoryNotTreeError.js","webpack:///../node_modules/typeorm/browser/error/ReturningStatementNotSupportedError.js","webpack:///../node_modules/typeorm/browser/error/SubjectRemovedAndUpdatedError.js","webpack:///../node_modules/typeorm/browser/error/SubjectWithoutIdentifierError.js","webpack:///../node_modules/typeorm/browser/error/TransactionAlreadyStartedError.js","webpack:///../node_modules/typeorm/browser/error/TransactionNotStartedError.js","webpack:///../node_modules/typeorm/browser/error/TreeRepositoryNotSupportedError.js","webpack:///../node_modules/typeorm/browser/error/TypeORMError.js","webpack:///../node_modules/typeorm/browser/error/UpdateValuesMissingError.js","webpack:///../node_modules/typeorm/browser/error/ConnectionIsNotSetError.js","webpack:///../node_modules/typeorm/browser/error/MetadataAlreadyExistsError.js","webpack:///../node_modules/typeorm/browser/error/NoConnectionForRepositoryError.js","webpack:///../node_modules/typeorm/browser/error/UsingJoinTableIsNotAllowedError.js","webpack:///../node_modules/typeorm/browser/error/MissingJoinColumnError.js","webpack:///../node_modules/typeorm/browser/error/CannotGetEntityManagerNotConnectedError.js","webpack:///../node_modules/typeorm/browser/error/MetadataWithSuchNameAlreadyExistsError.js","webpack:///../node_modules/typeorm/browser/error/NamingStrategyNotFoundError.js","webpack:///../node_modules/typeorm/browser/error/MissingJoinTableError.js","webpack:///../node_modules/typeorm/browser/error/UsingJoinColumnOnlyOnOneSideAllowedError.js","webpack:///../node_modules/typeorm/browser/error/UsingJoinTableOnlyOnOneSideAllowedError.js","webpack:///../node_modules/typeorm/browser/error/PersistedEntityNotFoundError.js","webpack:///../node_modules/typeorm/browser/error/UsingJoinColumnIsNotAllowedError.js","webpack:///../node_modules/typeorm/browser/find-options/FindOperator.js","webpack:///../node_modules/typeorm/browser/find-options/operator/In.js","webpack:///../node_modules/typeorm/browser/metadata-builder/MetadataUtils.js","webpack:///../node_modules/typeorm/browser/metadata-args/MetadataArgsStorage.js","webpack:///../node_modules/typeorm/browser/platform/BrowserPlatformTools.js","webpack:///../node_modules/typeorm/browser/platform/BrowserConnectionOptionsReaderDummy.js","webpack:///../node_modules/typeorm/browser/naming-strategy/DefaultNamingStrategy.js","webpack:///../node_modules/typeorm/browser/migration/Migration.js","webpack:///../node_modules/typeorm/browser/driver/sqlserver/MssqlParameter.js","webpack:///../node_modules/typeorm/browser/migration/MigrationExecutor.js","webpack:///../node_modules/typeorm/browser/util/DepGraph.js","webpack:///../node_modules/typeorm/browser/metadata-builder/EntityMetadataValidator.js","webpack:///../node_modules/typeorm/browser/repository/Repository.js","webpack:///../node_modules/typeorm/browser/find-options/FindOptionsUtils.js","webpack:///../node_modules/typeorm/browser/repository/TreeRepository.js","webpack:///../node_modules/typeorm/browser/query-builder/transformer/PlainObjectToNewEntityTransformer.js","webpack:///../node_modules/typeorm/browser/query-builder/transformer/PlainObjectToDatabaseEntityTransformer.js","webpack:///../node_modules/typeorm/browser/repository/AbstractRepository.js","webpack:///../node_modules/typeorm/browser/repository/RepositoryFactory.js","webpack:///../node_modules/typeorm/browser/persistence/SubjectTopoligicalSorter.js","webpack:///../node_modules/typeorm/browser/persistence/SubjectChangedColumnsComputer.js","webpack:///../node_modules/typeorm/browser/error/NestedSetMultipleRootError.js","webpack:///../node_modules/typeorm/browser/persistence/tree/NestedSetSubjectExecutor.js","webpack:///../node_modules/typeorm/browser/persistence/tree/ClosureSubjectExecutor.js","webpack:///../node_modules/typeorm/browser/persistence/tree/MaterializedPathSubjectExecutor.js","webpack:///../node_modules/typeorm/browser/persistence/SubjectExecutor.js","webpack:///../node_modules/typeorm/browser/persistence/Subject.js","webpack:///../node_modules/typeorm/browser/persistence/subject-builder/OneToManySubjectBuilder.js","webpack:///../node_modules/typeorm/browser/persistence/subject-builder/OneToOneInverseSideSubjectBuilder.js","webpack:///../node_modules/typeorm/browser/persistence/subject-builder/ManyToManySubjectBuilder.js","webpack:///../node_modules/typeorm/browser/persistence/SubjectDatabaseEntityLoader.js","webpack:///../node_modules/typeorm/browser/persistence/subject-builder/CascadesSubjectBuilder.js","webpack:///../node_modules/typeorm/browser/persistence/EntityPersistExecutor.js","webpack:///../node_modules/typeorm/browser/entity-manager/EntityManager.js","webpack:///../node_modules/typeorm/browser/entity-manager/SqljsEntityManager.js","webpack:///../node_modules/typeorm/browser/metadata/ColumnMetadata.js","webpack:///../node_modules/typeorm/browser/driver/Query.js","webpack:///../node_modules/typeorm/browser/driver/SqlInMemory.js","webpack:///../node_modules/typeorm/browser/query-runner/BaseQueryRunner.js","webpack:///../node_modules/typeorm/browser/driver/sqlite-abstract/AbstractSqliteQueryRunner.js","webpack:///../node_modules/typeorm/browser/subscriber/Broadcaster.js","webpack:///../node_modules/typeorm/browser/query-runner/QueryResult.js","webpack:///../node_modules/typeorm/browser/driver/sqljs/SqljsQueryRunner.js","webpack:///../node_modules/typeorm/browser/driver/sqljs/SqljsDriver.js","webpack:///../node_modules/typeorm/browser/entity-manager/EntityManagerFactory.js","webpack:///../node_modules/typeorm/browser/driver/cordova/CordovaQueryRunner.js","webpack:///../node_modules/typeorm/browser/driver/cordova/CordovaDriver.js","webpack:///../node_modules/typeorm/browser/driver/react-native/ReactNativeQueryRunner.js","webpack:///../node_modules/typeorm/browser/driver/react-native/ReactNativeDriver.js","webpack:///../node_modules/typeorm/browser/driver/nativescript/NativescriptQueryRunner.js","webpack:///../node_modules/typeorm/browser/driver/nativescript/NativescriptDriver.js","webpack:///../node_modules/typeorm/browser/driver/expo/ExpoQueryRunner.js","webpack:///../node_modules/typeorm/browser/driver/expo/ExpoDriver.js","webpack:///../node_modules/typeorm/browser/util/VersionUtils.js","webpack:///../node_modules/typeorm/browser/driver/postgres/PostgresQueryRunner.js","webpack:///../node_modules/typeorm/browser/driver/aurora-data-api-pg/AuroraDataApiPostgresQueryRunner.js","webpack:///../node_modules/typeorm/browser/driver/aurora-data-api-pg/AuroraDataApiPostgresDriver.js","webpack:///../node_modules/typeorm/browser/driver/capacitor/CapacitorQueryRunner.js","webpack:///../node_modules/typeorm/browser/driver/capacitor/CapacitorDriver.js","webpack:///../node_modules/typeorm/browser/driver/DriverFactory.js","webpack:///../node_modules/typeorm/browser/platform/BrowserDirectoryExportedClassesLoader.js","webpack:///../node_modules/typeorm/browser/container.js","webpack:///../node_modules/typeorm/browser/metadata/IndexMetadata.js","webpack:///../node_modules/typeorm/browser/metadata/RelationMetadata.js","webpack:///../node_modules/typeorm/browser/metadata/EmbeddedMetadata.js","webpack:///../node_modules/typeorm/browser/metadata/RelationIdMetadata.js","webpack:///../node_modules/typeorm/browser/metadata/RelationCountMetadata.js","webpack:///../node_modules/typeorm/browser/metadata/types/EventListenerTypes.js","webpack:///../node_modules/typeorm/browser/metadata/ForeignKeyMetadata.js","webpack:///../node_modules/typeorm/browser/metadata-builder/JunctionEntityMetadataBuilder.js","webpack:///../node_modules/typeorm/browser/metadata-builder/ClosureJunctionEntityMetadataBuilder.js","webpack:///../node_modules/typeorm/browser/metadata/UniqueMetadata.js","webpack:///../node_modules/typeorm/browser/metadata-builder/RelationJoinColumnBuilder.js","webpack:///../node_modules/typeorm/browser/metadata/EntityListenerMetadata.js","webpack:///../node_modules/typeorm/browser/metadata/CheckMetadata.js","webpack:///../node_modules/typeorm/browser/metadata/ExclusionMetadata.js","webpack:///../node_modules/typeorm/browser/metadata-builder/EntityMetadataBuilder.js","webpack:///../node_modules/typeorm/browser/entity-schema/EntitySchemaTransformer.js","webpack:///../node_modules/typeorm/browser/connection/ConnectionMetadataBuilder.js","webpack:///../node_modules/typeorm/browser/logger/SimpleConsoleLogger.js","webpack:///../node_modules/typeorm/browser/logger/AdvancedConsoleLogger.js","webpack:///../node_modules/typeorm/browser/platform/BrowserFileLoggerDummy.js","webpack:///../node_modules/typeorm/browser/logger/DebugLogger.js","webpack:///../node_modules/typeorm/browser/logger/LoggerFactory.js","webpack:///../node_modules/typeorm/browser/cache/RedisQueryResultCache.js","webpack:///../node_modules/typeorm/browser/cache/DbQueryResultCache.js","webpack:///../node_modules/typeorm/browser/cache/QueryResultCacheFactory.js","webpack:///../node_modules/typeorm/browser/query-builder/RelationLoader.js","webpack:///../node_modules/typeorm/browser/connection/Connection.js","webpack:///../node_modules/typeorm/browser/connection/ConnectionManager.js","webpack:///../node_modules/typeorm/browser/globals.js","webpack:///../node_modules/typeorm/browser/decorator/columns/Column.js","webpack:///../node_modules/typeorm/browser/decorator/columns/CreateDateColumn.js","webpack:///../node_modules/typeorm/browser/decorator/columns/PrimaryGeneratedColumn.js","webpack:///../node_modules/typeorm/browser/decorator/columns/UpdateDateColumn.js","webpack:///../node_modules/typeorm/browser/decorator/relations/JoinColumn.js","webpack:///../node_modules/typeorm/browser/decorator/relations/ManyToOne.js","webpack:///../node_modules/typeorm/browser/decorator/relations/OneToMany.js","webpack:///../node_modules/typeorm/browser/decorator/entity/Entity.js","webpack:///../node_modules/typeorm/browser/repository/BaseEntity.js","webpack:///../node_modules/typeorm/browser/metadata/EntityMetadata.js","webpack:///../node_modules/typeorm/browser/platform/BrowserDisabledDriversDummy.js","webpack:///../node_modules/typeorm/browser/query-builder/Brackets.js","webpack:///../node_modules/typeorm/browser/query-builder/DeleteQueryBuilder.js","webpack:///../node_modules/typeorm/browser/query-builder/InsertQueryBuilder.js","webpack:///../node_modules/typeorm/browser/query-builder/JoinAttribute.js","webpack:///../node_modules/typeorm/browser/query-builder/Alias.js","webpack:///../node_modules/typeorm/browser/query-builder/QueryExpressionMap.js","webpack:///../node_modules/typeorm/browser/query-builder/QueryBuilder.js","webpack:///../node_modules/typeorm/browser/query-builder/QueryBuilderUtils.js","webpack:///../node_modules/typeorm/browser/query-builder/RelationUpdater.js","webpack:///../node_modules/typeorm/browser/query-builder/RelationRemover.js","webpack:///../node_modules/typeorm/browser/query-builder/RelationQueryBuilder.js","webpack:///../node_modules/typeorm/browser/query-builder/ReturningResultsEntityUpdator.js","webpack:///../node_modules/typeorm/browser/query-builder/transformer/RawSqlResultsToEntityTransformer.js","webpack:///../node_modules/typeorm/browser/query-builder/relation-id/RelationIdLoader.js","webpack:///../node_modules/typeorm/browser/query-builder/relation-id/RelationIdMetadataToAttributeTransformer.js","webpack:///../node_modules/typeorm/browser/query-builder/relation-count/RelationCountLoader.js","webpack:///../node_modules/typeorm/browser/query-builder/relation-count/RelationCountMetadataToAttributeTransformer.js","webpack:///../node_modules/typeorm/browser/query-builder/SelectQueryBuilder.js","webpack:///../node_modules/typeorm/browser/query-builder/SoftDeleteQueryBuilder.js","webpack:///../node_modules/typeorm/browser/query-builder/UpdateQueryBuilder.js","webpack:///../node_modules/typeorm/browser/query-builder/relation-count/RelationCountAttribute.js","webpack:///../node_modules/typeorm/browser/query-builder/relation-id/RelationIdAttribute.js","webpack:///../node_modules/typeorm/browser/query-builder/result/DeleteResult.js","webpack:///../node_modules/typeorm/browser/query-builder/result/InsertResult.js","webpack:///../node_modules/typeorm/browser/query-builder/result/UpdateResult.js","webpack:///../node_modules/typeorm/browser/schema-builder/table/Table.js","webpack:///../node_modules/typeorm/browser/schema-builder/table/TableCheck.js","webpack:///../node_modules/typeorm/browser/schema-builder/table/TableColumn.js","webpack:///../node_modules/typeorm/browser/schema-builder/table/TableExclusion.js","webpack:///../node_modules/typeorm/browser/schema-builder/table/TableForeignKey.js","webpack:///../node_modules/typeorm/browser/schema-builder/table/TableIndex.js","webpack:///../node_modules/typeorm/browser/schema-builder/table/TableUnique.js","webpack:///../node_modules/typeorm/browser/schema-builder/util/TableUtils.js","webpack:///../node_modules/typeorm/browser/schema-builder/view/View.js","webpack:///../node_modules/typeorm/browser/subscriber/BroadcasterResult.js","webpack:///../node_modules/typeorm/browser/util/ApplyValueTransformers.js","webpack:///../node_modules/typeorm/browser/util/DateUtils.js","webpack:///../node_modules/typeorm/browser/util/ObjectUtils.js","webpack:///../node_modules/typeorm/browser/util/OrmUtils.js","webpack:///../node_modules/typeorm/browser/util/RandomGenerator.js","webpack:///../node_modules/typeorm/browser/util/StringUtils.js","webpack:///../node_modules/typeorm/node_modules/debug/src/browser.js","webpack:///../node_modules/typeorm/node_modules/debug/src/common.js","webpack:///../node_modules/typeorm/node_modules/ms/index.js","webpack:///../node_modules/uuid/dist/esm-browser/rng.js","webpack:///../node_modules/uuid/dist/esm-browser/regex.js","webpack:///../node_modules/uuid/dist/esm-browser/validate.js","webpack:///../node_modules/uuid/dist/esm-browser/stringify.js","webpack:///../node_modules/uuid/dist/esm-browser/v4.js","webpack:///../node_modules/comlink/dist/esm/comlink.mjs"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/*!\n\nJSZip v3.7.1 - A JavaScript class for generating and reading zip files\n<http://stuartk.com/jszip>\n\n(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>\nDual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/master/LICENSE.markdown.\n\nJSZip uses the library pako released under the MIT license :\nhttps://github.com/nodeca/pako/blob/master/LICENSE\n*/\n\n!function(t){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=t();else if(\"function\"==typeof define&&define.amd)define([],t);else{(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:this).JSZip=t()}}(function(){return function s(a,o,h){function u(r,t){if(!o[r]){if(!a[r]){var e=\"function\"==typeof require&&require;if(!t&&e)return e(r,!0);if(l)return l(r,!0);var i=new Error(\"Cannot find module '\"+r+\"'\");throw i.code=\"MODULE_NOT_FOUND\",i}var n=o[r]={exports:{}};a[r][0].call(n.exports,function(t){var e=a[r][1][t];return u(e||t)},n,n.exports,s,a,o,h)}return o[r].exports}for(var l=\"function\"==typeof require&&require,t=0;t<h.length;t++)u(h[t]);return u}({1:[function(t,e,r){\"use strict\";var c=t(\"./utils\"),d=t(\"./support\"),p=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";r.encode=function(t){for(var e,r,i,n,s,a,o,h=[],u=0,l=t.length,f=l,d=\"string\"!==c.getTypeOf(t);u<t.length;)f=l-u,i=d?(e=t[u++],r=u<l?t[u++]:0,u<l?t[u++]:0):(e=t.charCodeAt(u++),r=u<l?t.charCodeAt(u++):0,u<l?t.charCodeAt(u++):0),n=e>>2,s=(3&e)<<4|r>>4,a=1<f?(15&r)<<2|i>>6:64,o=2<f?63&i:64,h.push(p.charAt(n)+p.charAt(s)+p.charAt(a)+p.charAt(o));return h.join(\"\")},r.decode=function(t){var e,r,i,n,s,a,o=0,h=0,u=\"data:\";if(t.substr(0,u.length)===u)throw new Error(\"Invalid base64 input, it looks like a data url.\");var l,f=3*(t=t.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\")).length/4;if(t.charAt(t.length-1)===p.charAt(64)&&f--,t.charAt(t.length-2)===p.charAt(64)&&f--,f%1!=0)throw new Error(\"Invalid base64 input, bad content length.\");for(l=d.uint8array?new Uint8Array(0|f):new Array(0|f);o<t.length;)e=p.indexOf(t.charAt(o++))<<2|(n=p.indexOf(t.charAt(o++)))>>4,r=(15&n)<<4|(s=p.indexOf(t.charAt(o++)))>>2,i=(3&s)<<6|(a=p.indexOf(t.charAt(o++))),l[h++]=e,64!==s&&(l[h++]=r),64!==a&&(l[h++]=i);return l}},{\"./support\":30,\"./utils\":32}],2:[function(t,e,r){\"use strict\";var i=t(\"./external\"),n=t(\"./stream/DataWorker\"),s=t(\"./stream/Crc32Probe\"),a=t(\"./stream/DataLengthProbe\");function o(t,e,r,i,n){this.compressedSize=t,this.uncompressedSize=e,this.crc32=r,this.compression=i,this.compressedContent=n}o.prototype={getContentWorker:function(){var t=new n(i.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a(\"data_length\")),e=this;return t.on(\"end\",function(){if(this.streamInfo.data_length!==e.uncompressedSize)throw new Error(\"Bug : uncompressed data size mismatch\")}),t},getCompressedWorker:function(){return new n(i.Promise.resolve(this.compressedContent)).withStreamInfo(\"compressedSize\",this.compressedSize).withStreamInfo(\"uncompressedSize\",this.uncompressedSize).withStreamInfo(\"crc32\",this.crc32).withStreamInfo(\"compression\",this.compression)}},o.createWorkerFrom=function(t,e,r){return t.pipe(new s).pipe(new a(\"uncompressedSize\")).pipe(e.compressWorker(r)).pipe(new a(\"compressedSize\")).withStreamInfo(\"compression\",e)},e.exports=o},{\"./external\":6,\"./stream/Crc32Probe\":25,\"./stream/DataLengthProbe\":26,\"./stream/DataWorker\":27}],3:[function(t,e,r){\"use strict\";var i=t(\"./stream/GenericWorker\");r.STORE={magic:\"\\0\\0\",compressWorker:function(t){return new i(\"STORE compression\")},uncompressWorker:function(){return new i(\"STORE decompression\")}},r.DEFLATE=t(\"./flate\")},{\"./flate\":7,\"./stream/GenericWorker\":28}],4:[function(t,e,r){\"use strict\";var i=t(\"./utils\");var o=function(){for(var t,e=[],r=0;r<256;r++){t=r;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[r]=t}return e}();e.exports=function(t,e){return void 0!==t&&t.length?\"string\"!==i.getTypeOf(t)?function(t,e,r,i){var n=o,s=i+r;t^=-1;for(var a=i;a<s;a++)t=t>>>8^n[255&(t^e[a])];return-1^t}(0|e,t,t.length,0):function(t,e,r,i){var n=o,s=i+r;t^=-1;for(var a=i;a<s;a++)t=t>>>8^n[255&(t^e.charCodeAt(a))];return-1^t}(0|e,t,t.length,0):0}},{\"./utils\":32}],5:[function(t,e,r){\"use strict\";r.base64=!1,r.binary=!1,r.dir=!1,r.createFolders=!0,r.date=null,r.compression=null,r.compressionOptions=null,r.comment=null,r.unixPermissions=null,r.dosPermissions=null},{}],6:[function(t,e,r){\"use strict\";var i=null;i=\"undefined\"!=typeof Promise?Promise:t(\"lie\"),e.exports={Promise:i}},{lie:37}],7:[function(t,e,r){\"use strict\";var i=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Uint32Array,n=t(\"pako\"),s=t(\"./utils\"),a=t(\"./stream/GenericWorker\"),o=i?\"uint8array\":\"array\";function h(t,e){a.call(this,\"FlateWorker/\"+t),this._pako=null,this._pakoAction=t,this._pakoOptions=e,this.meta={}}r.magic=\"\\b\\0\",s.inherits(h,a),h.prototype.processChunk=function(t){this.meta=t.meta,null===this._pako&&this._createPako(),this._pako.push(s.transformTo(o,t.data),!1)},h.prototype.flush=function(){a.prototype.flush.call(this),null===this._pako&&this._createPako(),this._pako.push([],!0)},h.prototype.cleanUp=function(){a.prototype.cleanUp.call(this),this._pako=null},h.prototype._createPako=function(){this._pako=new n[this._pakoAction]({raw:!0,level:this._pakoOptions.level||-1});var e=this;this._pako.onData=function(t){e.push({data:t,meta:e.meta})}},r.compressWorker=function(t){return new h(\"Deflate\",t)},r.uncompressWorker=function(){return new h(\"Inflate\",{})}},{\"./stream/GenericWorker\":28,\"./utils\":32,pako:38}],8:[function(t,e,r){\"use strict\";function A(t,e){var r,i=\"\";for(r=0;r<e;r++)i+=String.fromCharCode(255&t),t>>>=8;return i}function i(t,e,r,i,n,s){var a,o,h=t.file,u=t.compression,l=s!==O.utf8encode,f=I.transformTo(\"string\",s(h.name)),d=I.transformTo(\"string\",O.utf8encode(h.name)),c=h.comment,p=I.transformTo(\"string\",s(c)),m=I.transformTo(\"string\",O.utf8encode(c)),_=d.length!==h.name.length,g=m.length!==c.length,b=\"\",v=\"\",y=\"\",w=h.dir,k=h.date,x={crc32:0,compressedSize:0,uncompressedSize:0};e&&!r||(x.crc32=t.crc32,x.compressedSize=t.compressedSize,x.uncompressedSize=t.uncompressedSize);var S=0;e&&(S|=8),l||!_&&!g||(S|=2048);var z=0,C=0;w&&(z|=16),\"UNIX\"===n?(C=798,z|=function(t,e){var r=t;return t||(r=e?16893:33204),(65535&r)<<16}(h.unixPermissions,w)):(C=20,z|=function(t){return 63&(t||0)}(h.dosPermissions)),a=k.getUTCHours(),a<<=6,a|=k.getUTCMinutes(),a<<=5,a|=k.getUTCSeconds()/2,o=k.getUTCFullYear()-1980,o<<=4,o|=k.getUTCMonth()+1,o<<=5,o|=k.getUTCDate(),_&&(v=A(1,1)+A(B(f),4)+d,b+=\"up\"+A(v.length,2)+v),g&&(y=A(1,1)+A(B(p),4)+m,b+=\"uc\"+A(y.length,2)+y);var E=\"\";return E+=\"\\n\\0\",E+=A(S,2),E+=u.magic,E+=A(a,2),E+=A(o,2),E+=A(x.crc32,4),E+=A(x.compressedSize,4),E+=A(x.uncompressedSize,4),E+=A(f.length,2),E+=A(b.length,2),{fileRecord:R.LOCAL_FILE_HEADER+E+f+b,dirRecord:R.CENTRAL_FILE_HEADER+A(C,2)+E+A(p.length,2)+\"\\0\\0\\0\\0\"+A(z,4)+A(i,4)+f+b+p}}var I=t(\"../utils\"),n=t(\"../stream/GenericWorker\"),O=t(\"../utf8\"),B=t(\"../crc32\"),R=t(\"../signature\");function s(t,e,r,i){n.call(this,\"ZipFileWorker\"),this.bytesWritten=0,this.zipComment=e,this.zipPlatform=r,this.encodeFileName=i,this.streamFiles=t,this.accumulate=!1,this.contentBuffer=[],this.dirRecords=[],this.currentSourceOffset=0,this.entriesCount=0,this.currentFile=null,this._sources=[]}I.inherits(s,n),s.prototype.push=function(t){var e=t.meta.percent||0,r=this.entriesCount,i=this._sources.length;this.accumulate?this.contentBuffer.push(t):(this.bytesWritten+=t.data.length,n.prototype.push.call(this,{data:t.data,meta:{currentFile:this.currentFile,percent:r?(e+100*(r-i-1))/r:100}}))},s.prototype.openedSource=function(t){this.currentSourceOffset=this.bytesWritten,this.currentFile=t.file.name;var e=this.streamFiles&&!t.file.dir;if(e){var r=i(t,e,!1,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);this.push({data:r.fileRecord,meta:{percent:0}})}else this.accumulate=!0},s.prototype.closedSource=function(t){this.accumulate=!1;var e=this.streamFiles&&!t.file.dir,r=i(t,e,!0,this.currentSourceOffset,this.zipPlatform,this.encodeFileName);if(this.dirRecords.push(r.dirRecord),e)this.push({data:function(t){return R.DATA_DESCRIPTOR+A(t.crc32,4)+A(t.compressedSize,4)+A(t.uncompressedSize,4)}(t),meta:{percent:100}});else for(this.push({data:r.fileRecord,meta:{percent:0}});this.contentBuffer.length;)this.push(this.contentBuffer.shift());this.currentFile=null},s.prototype.flush=function(){for(var t=this.bytesWritten,e=0;e<this.dirRecords.length;e++)this.push({data:this.dirRecords[e],meta:{percent:100}});var r=this.bytesWritten-t,i=function(t,e,r,i,n){var s=I.transformTo(\"string\",n(i));return R.CENTRAL_DIRECTORY_END+\"\\0\\0\\0\\0\"+A(t,2)+A(t,2)+A(e,4)+A(r,4)+A(s.length,2)+s}(this.dirRecords.length,r,t,this.zipComment,this.encodeFileName);this.push({data:i,meta:{percent:100}})},s.prototype.prepareNextSource=function(){this.previous=this._sources.shift(),this.openedSource(this.previous.streamInfo),this.isPaused?this.previous.pause():this.previous.resume()},s.prototype.registerPrevious=function(t){this._sources.push(t);var e=this;return t.on(\"data\",function(t){e.processChunk(t)}),t.on(\"end\",function(){e.closedSource(e.previous.streamInfo),e._sources.length?e.prepareNextSource():e.end()}),t.on(\"error\",function(t){e.error(t)}),this},s.prototype.resume=function(){return!!n.prototype.resume.call(this)&&(!this.previous&&this._sources.length?(this.prepareNextSource(),!0):this.previous||this._sources.length||this.generatedError?void 0:(this.end(),!0))},s.prototype.error=function(t){var e=this._sources;if(!n.prototype.error.call(this,t))return!1;for(var r=0;r<e.length;r++)try{e[r].error(t)}catch(t){}return!0},s.prototype.lock=function(){n.prototype.lock.call(this);for(var t=this._sources,e=0;e<t.length;e++)t[e].lock()},e.exports=s},{\"../crc32\":4,\"../signature\":23,\"../stream/GenericWorker\":28,\"../utf8\":31,\"../utils\":32}],9:[function(t,e,r){\"use strict\";var u=t(\"../compressions\"),i=t(\"./ZipFileWorker\");r.generateWorker=function(t,a,e){var o=new i(a.streamFiles,e,a.platform,a.encodeFileName),h=0;try{t.forEach(function(t,e){h++;var r=function(t,e){var r=t||e,i=u[r];if(!i)throw new Error(r+\" is not a valid compression method !\");return i}(e.options.compression,a.compression),i=e.options.compressionOptions||a.compressionOptions||{},n=e.dir,s=e.date;e._compressWorker(r,i).withStreamInfo(\"file\",{name:t,dir:n,date:s,comment:e.comment||\"\",unixPermissions:e.unixPermissions,dosPermissions:e.dosPermissions}).pipe(o)}),o.entriesCount=h}catch(t){o.error(t)}return o}},{\"../compressions\":3,\"./ZipFileWorker\":8}],10:[function(t,e,r){\"use strict\";function i(){if(!(this instanceof i))return new i;if(arguments.length)throw new Error(\"The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.\");this.files=Object.create(null),this.comment=null,this.root=\"\",this.clone=function(){var t=new i;for(var e in this)\"function\"!=typeof this[e]&&(t[e]=this[e]);return t}}(i.prototype=t(\"./object\")).loadAsync=t(\"./load\"),i.support=t(\"./support\"),i.defaults=t(\"./defaults\"),i.version=\"3.7.1\",i.loadAsync=function(t,e){return(new i).loadAsync(t,e)},i.external=t(\"./external\"),e.exports=i},{\"./defaults\":5,\"./external\":6,\"./load\":11,\"./object\":15,\"./support\":30}],11:[function(t,e,r){\"use strict\";var i=t(\"./utils\"),n=t(\"./external\"),o=t(\"./utf8\"),h=t(\"./zipEntries\"),s=t(\"./stream/Crc32Probe\"),u=t(\"./nodejsUtils\");function l(i){return new n.Promise(function(t,e){var r=i.decompressed.getContentWorker().pipe(new s);r.on(\"error\",function(t){e(t)}).on(\"end\",function(){r.streamInfo.crc32!==i.decompressed.crc32?e(new Error(\"Corrupted zip : CRC32 mismatch\")):t()}).resume()})}e.exports=function(t,s){var a=this;return s=i.extend(s||{},{base64:!1,checkCRC32:!1,optimizedBinaryString:!1,createFolders:!1,decodeFileName:o.utf8decode}),u.isNode&&u.isStream(t)?n.Promise.reject(new Error(\"JSZip can't accept a stream when loading a zip file.\")):i.prepareContent(\"the loaded zip file\",t,!0,s.optimizedBinaryString,s.base64).then(function(t){var e=new h(s);return e.load(t),e}).then(function(t){var e=[n.Promise.resolve(t)],r=t.files;if(s.checkCRC32)for(var i=0;i<r.length;i++)e.push(l(r[i]));return n.Promise.all(e)}).then(function(t){for(var e=t.shift(),r=e.files,i=0;i<r.length;i++){var n=r[i];a.file(n.fileNameStr,n.decompressed,{binary:!0,optimizedBinaryString:!0,date:n.date,dir:n.dir,comment:n.fileCommentStr.length?n.fileCommentStr:null,unixPermissions:n.unixPermissions,dosPermissions:n.dosPermissions,createFolders:s.createFolders})}return e.zipComment.length&&(a.comment=e.zipComment),a})}},{\"./external\":6,\"./nodejsUtils\":14,\"./stream/Crc32Probe\":25,\"./utf8\":31,\"./utils\":32,\"./zipEntries\":33}],12:[function(t,e,r){\"use strict\";var i=t(\"../utils\"),n=t(\"../stream/GenericWorker\");function s(t,e){n.call(this,\"Nodejs stream input adapter for \"+t),this._upstreamEnded=!1,this._bindStream(e)}i.inherits(s,n),s.prototype._bindStream=function(t){var e=this;(this._stream=t).pause(),t.on(\"data\",function(t){e.push({data:t,meta:{percent:0}})}).on(\"error\",function(t){e.isPaused?this.generatedError=t:e.error(t)}).on(\"end\",function(){e.isPaused?e._upstreamEnded=!0:e.end()})},s.prototype.pause=function(){return!!n.prototype.pause.call(this)&&(this._stream.pause(),!0)},s.prototype.resume=function(){return!!n.prototype.resume.call(this)&&(this._upstreamEnded?this.end():this._stream.resume(),!0)},e.exports=s},{\"../stream/GenericWorker\":28,\"../utils\":32}],13:[function(t,e,r){\"use strict\";var n=t(\"readable-stream\").Readable;function i(t,e,r){n.call(this,e),this._helper=t;var i=this;t.on(\"data\",function(t,e){i.push(t)||i._helper.pause(),r&&r(e)}).on(\"error\",function(t){i.emit(\"error\",t)}).on(\"end\",function(){i.push(null)})}t(\"../utils\").inherits(i,n),i.prototype._read=function(){this._helper.resume()},e.exports=i},{\"../utils\":32,\"readable-stream\":16}],14:[function(t,e,r){\"use strict\";e.exports={isNode:\"undefined\"!=typeof Buffer,newBufferFrom:function(t,e){if(Buffer.from&&Buffer.from!==Uint8Array.from)return Buffer.from(t,e);if(\"number\"==typeof t)throw new Error('The \"data\" argument must not be a number');return new Buffer(t,e)},allocBuffer:function(t){if(Buffer.alloc)return Buffer.alloc(t);var e=new Buffer(t);return e.fill(0),e},isBuffer:function(t){return Buffer.isBuffer(t)},isStream:function(t){return t&&\"function\"==typeof t.on&&\"function\"==typeof t.pause&&\"function\"==typeof t.resume}}},{}],15:[function(t,e,r){\"use strict\";function s(t,e,r){var i,n=u.getTypeOf(e),s=u.extend(r||{},f);s.date=s.date||new Date,null!==s.compression&&(s.compression=s.compression.toUpperCase()),\"string\"==typeof s.unixPermissions&&(s.unixPermissions=parseInt(s.unixPermissions,8)),s.unixPermissions&&16384&s.unixPermissions&&(s.dir=!0),s.dosPermissions&&16&s.dosPermissions&&(s.dir=!0),s.dir&&(t=g(t)),s.createFolders&&(i=_(t))&&b.call(this,i,!0);var a=\"string\"===n&&!1===s.binary&&!1===s.base64;r&&void 0!==r.binary||(s.binary=!a),(e instanceof d&&0===e.uncompressedSize||s.dir||!e||0===e.length)&&(s.base64=!1,s.binary=!0,e=\"\",s.compression=\"STORE\",n=\"string\");var o=null;o=e instanceof d||e instanceof l?e:p.isNode&&p.isStream(e)?new m(t,e):u.prepareContent(t,e,s.binary,s.optimizedBinaryString,s.base64);var h=new c(t,o,s);this.files[t]=h}var n=t(\"./utf8\"),u=t(\"./utils\"),l=t(\"./stream/GenericWorker\"),a=t(\"./stream/StreamHelper\"),f=t(\"./defaults\"),d=t(\"./compressedObject\"),c=t(\"./zipObject\"),o=t(\"./generate\"),p=t(\"./nodejsUtils\"),m=t(\"./nodejs/NodejsStreamInputAdapter\"),_=function(t){\"/\"===t.slice(-1)&&(t=t.substring(0,t.length-1));var e=t.lastIndexOf(\"/\");return 0<e?t.substring(0,e):\"\"},g=function(t){return\"/\"!==t.slice(-1)&&(t+=\"/\"),t},b=function(t,e){return e=void 0!==e?e:f.createFolders,t=g(t),this.files[t]||s.call(this,t,null,{dir:!0,createFolders:e}),this.files[t]};function h(t){return\"[object RegExp]\"===Object.prototype.toString.call(t)}var i={load:function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},forEach:function(t){var e,r,i;for(e in this.files)i=this.files[e],(r=e.slice(this.root.length,e.length))&&e.slice(0,this.root.length)===this.root&&t(r,i)},filter:function(r){var i=[];return this.forEach(function(t,e){r(t,e)&&i.push(e)}),i},file:function(t,e,r){if(1!==arguments.length)return t=this.root+t,s.call(this,t,e,r),this;if(h(t)){var i=t;return this.filter(function(t,e){return!e.dir&&i.test(t)})}var n=this.files[this.root+t];return n&&!n.dir?n:null},folder:function(r){if(!r)return this;if(h(r))return this.filter(function(t,e){return e.dir&&r.test(t)});var t=this.root+r,e=b.call(this,t),i=this.clone();return i.root=e.name,i},remove:function(r){r=this.root+r;var t=this.files[r];if(t||(\"/\"!==r.slice(-1)&&(r+=\"/\"),t=this.files[r]),t&&!t.dir)delete this.files[r];else for(var e=this.filter(function(t,e){return e.name.slice(0,r.length)===r}),i=0;i<e.length;i++)delete this.files[e[i].name];return this},generate:function(t){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},generateInternalStream:function(t){var e,r={};try{if((r=u.extend(t||{},{streamFiles:!1,compression:\"STORE\",compressionOptions:null,type:\"\",platform:\"DOS\",comment:null,mimeType:\"application/zip\",encodeFileName:n.utf8encode})).type=r.type.toLowerCase(),r.compression=r.compression.toUpperCase(),\"binarystring\"===r.type&&(r.type=\"string\"),!r.type)throw new Error(\"No output type specified.\");u.checkSupport(r.type),\"darwin\"!==r.platform&&\"freebsd\"!==r.platform&&\"linux\"!==r.platform&&\"sunos\"!==r.platform||(r.platform=\"UNIX\"),\"win32\"===r.platform&&(r.platform=\"DOS\");var i=r.comment||this.comment||\"\";e=o.generateWorker(this,r,i)}catch(t){(e=new l(\"error\")).error(t)}return new a(e,r.type||\"string\",r.mimeType)},generateAsync:function(t,e){return this.generateInternalStream(t).accumulate(e)},generateNodeStream:function(t,e){return(t=t||{}).type||(t.type=\"nodebuffer\"),this.generateInternalStream(t).toNodejsStream(e)}};e.exports=i},{\"./compressedObject\":2,\"./defaults\":5,\"./generate\":9,\"./nodejs/NodejsStreamInputAdapter\":12,\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31,\"./utils\":32,\"./zipObject\":35}],16:[function(t,e,r){e.exports=t(\"stream\")},{stream:void 0}],17:[function(t,e,r){\"use strict\";var i=t(\"./DataReader\");function n(t){i.call(this,t);for(var e=0;e<this.data.length;e++)t[e]=255&t[e]}t(\"../utils\").inherits(n,i),n.prototype.byteAt=function(t){return this.data[this.zero+t]},n.prototype.lastIndexOfSignature=function(t){for(var e=t.charCodeAt(0),r=t.charCodeAt(1),i=t.charCodeAt(2),n=t.charCodeAt(3),s=this.length-4;0<=s;--s)if(this.data[s]===e&&this.data[s+1]===r&&this.data[s+2]===i&&this.data[s+3]===n)return s-this.zero;return-1},n.prototype.readAndCheckSignature=function(t){var e=t.charCodeAt(0),r=t.charCodeAt(1),i=t.charCodeAt(2),n=t.charCodeAt(3),s=this.readData(4);return e===s[0]&&r===s[1]&&i===s[2]&&n===s[3]},n.prototype.readData=function(t){if(this.checkOffset(t),0===t)return[];var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{\"../utils\":32,\"./DataReader\":18}],18:[function(t,e,r){\"use strict\";var i=t(\"../utils\");function n(t){this.data=t,this.length=t.length,this.index=0,this.zero=0}n.prototype={checkOffset:function(t){this.checkIndex(this.index+t)},checkIndex:function(t){if(this.length<this.zero+t||t<0)throw new Error(\"End of data reached (data length = \"+this.length+\", asked index = \"+t+\"). Corrupted zip ?\")},setIndex:function(t){this.checkIndex(t),this.index=t},skip:function(t){this.setIndex(this.index+t)},byteAt:function(t){},readInt:function(t){var e,r=0;for(this.checkOffset(t),e=this.index+t-1;e>=this.index;e--)r=(r<<8)+this.byteAt(e);return this.index+=t,r},readString:function(t){return i.transformTo(\"string\",this.readData(t))},readData:function(t){},lastIndexOfSignature:function(t){},readAndCheckSignature:function(t){},readDate:function(){var t=this.readInt(4);return new Date(Date.UTC(1980+(t>>25&127),(t>>21&15)-1,t>>16&31,t>>11&31,t>>5&63,(31&t)<<1))}},e.exports=n},{\"../utils\":32}],19:[function(t,e,r){\"use strict\";var i=t(\"./Uint8ArrayReader\");function n(t){i.call(this,t)}t(\"../utils\").inherits(n,i),n.prototype.readData=function(t){this.checkOffset(t);var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{\"../utils\":32,\"./Uint8ArrayReader\":21}],20:[function(t,e,r){\"use strict\";var i=t(\"./DataReader\");function n(t){i.call(this,t)}t(\"../utils\").inherits(n,i),n.prototype.byteAt=function(t){return this.data.charCodeAt(this.zero+t)},n.prototype.lastIndexOfSignature=function(t){return this.data.lastIndexOf(t)-this.zero},n.prototype.readAndCheckSignature=function(t){return t===this.readData(4)},n.prototype.readData=function(t){this.checkOffset(t);var e=this.data.slice(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{\"../utils\":32,\"./DataReader\":18}],21:[function(t,e,r){\"use strict\";var i=t(\"./ArrayReader\");function n(t){i.call(this,t)}t(\"../utils\").inherits(n,i),n.prototype.readData=function(t){if(this.checkOffset(t),0===t)return new Uint8Array(0);var e=this.data.subarray(this.zero+this.index,this.zero+this.index+t);return this.index+=t,e},e.exports=n},{\"../utils\":32,\"./ArrayReader\":17}],22:[function(t,e,r){\"use strict\";var i=t(\"../utils\"),n=t(\"../support\"),s=t(\"./ArrayReader\"),a=t(\"./StringReader\"),o=t(\"./NodeBufferReader\"),h=t(\"./Uint8ArrayReader\");e.exports=function(t){var e=i.getTypeOf(t);return i.checkSupport(e),\"string\"!==e||n.uint8array?\"nodebuffer\"===e?new o(t):n.uint8array?new h(i.transformTo(\"uint8array\",t)):new s(i.transformTo(\"array\",t)):new a(t)}},{\"../support\":30,\"../utils\":32,\"./ArrayReader\":17,\"./NodeBufferReader\":19,\"./StringReader\":20,\"./Uint8ArrayReader\":21}],23:[function(t,e,r){\"use strict\";r.LOCAL_FILE_HEADER=\"PK\u0003\u0004\",r.CENTRAL_FILE_HEADER=\"PK\u0001\u0002\",r.CENTRAL_DIRECTORY_END=\"PK\u0005\u0006\",r.ZIP64_CENTRAL_DIRECTORY_LOCATOR=\"PK\u0006\u0007\",r.ZIP64_CENTRAL_DIRECTORY_END=\"PK\u0006\u0006\",r.DATA_DESCRIPTOR=\"PK\u0007\\b\"},{}],24:[function(t,e,r){\"use strict\";var i=t(\"./GenericWorker\"),n=t(\"../utils\");function s(t){i.call(this,\"ConvertWorker to \"+t),this.destType=t}n.inherits(s,i),s.prototype.processChunk=function(t){this.push({data:n.transformTo(this.destType,t.data),meta:t.meta})},e.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],25:[function(t,e,r){\"use strict\";var i=t(\"./GenericWorker\"),n=t(\"../crc32\");function s(){i.call(this,\"Crc32Probe\"),this.withStreamInfo(\"crc32\",0)}t(\"../utils\").inherits(s,i),s.prototype.processChunk=function(t){this.streamInfo.crc32=n(t.data,this.streamInfo.crc32||0),this.push(t)},e.exports=s},{\"../crc32\":4,\"../utils\":32,\"./GenericWorker\":28}],26:[function(t,e,r){\"use strict\";var i=t(\"../utils\"),n=t(\"./GenericWorker\");function s(t){n.call(this,\"DataLengthProbe for \"+t),this.propName=t,this.withStreamInfo(t,0)}i.inherits(s,n),s.prototype.processChunk=function(t){if(t){var e=this.streamInfo[this.propName]||0;this.streamInfo[this.propName]=e+t.data.length}n.prototype.processChunk.call(this,t)},e.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],27:[function(t,e,r){\"use strict\";var i=t(\"../utils\"),n=t(\"./GenericWorker\");function s(t){n.call(this,\"DataWorker\");var e=this;this.dataIsReady=!1,this.index=0,this.max=0,this.data=null,this.type=\"\",this._tickScheduled=!1,t.then(function(t){e.dataIsReady=!0,e.data=t,e.max=t&&t.length||0,e.type=i.getTypeOf(t),e.isPaused||e._tickAndRepeat()},function(t){e.error(t)})}i.inherits(s,n),s.prototype.cleanUp=function(){n.prototype.cleanUp.call(this),this.data=null},s.prototype.resume=function(){return!!n.prototype.resume.call(this)&&(!this._tickScheduled&&this.dataIsReady&&(this._tickScheduled=!0,i.delay(this._tickAndRepeat,[],this)),!0)},s.prototype._tickAndRepeat=function(){this._tickScheduled=!1,this.isPaused||this.isFinished||(this._tick(),this.isFinished||(i.delay(this._tickAndRepeat,[],this),this._tickScheduled=!0))},s.prototype._tick=function(){if(this.isPaused||this.isFinished)return!1;var t=null,e=Math.min(this.max,this.index+16384);if(this.index>=this.max)return this.end();switch(this.type){case\"string\":t=this.data.substring(this.index,e);break;case\"uint8array\":t=this.data.subarray(this.index,e);break;case\"array\":case\"nodebuffer\":t=this.data.slice(this.index,e)}return this.index=e,this.push({data:t,meta:{percent:this.max?this.index/this.max*100:0}})},e.exports=s},{\"../utils\":32,\"./GenericWorker\":28}],28:[function(t,e,r){\"use strict\";function i(t){this.name=t||\"default\",this.streamInfo={},this.generatedError=null,this.extraStreamInfo={},this.isPaused=!0,this.isFinished=!1,this.isLocked=!1,this._listeners={data:[],end:[],error:[]},this.previous=null}i.prototype={push:function(t){this.emit(\"data\",t)},end:function(){if(this.isFinished)return!1;this.flush();try{this.emit(\"end\"),this.cleanUp(),this.isFinished=!0}catch(t){this.emit(\"error\",t)}return!0},error:function(t){return!this.isFinished&&(this.isPaused?this.generatedError=t:(this.isFinished=!0,this.emit(\"error\",t),this.previous&&this.previous.error(t),this.cleanUp()),!0)},on:function(t,e){return this._listeners[t].push(e),this},cleanUp:function(){this.streamInfo=this.generatedError=this.extraStreamInfo=null,this._listeners=[]},emit:function(t,e){if(this._listeners[t])for(var r=0;r<this._listeners[t].length;r++)this._listeners[t][r].call(this,e)},pipe:function(t){return t.registerPrevious(this)},registerPrevious:function(t){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.streamInfo=t.streamInfo,this.mergeStreamInfo(),this.previous=t;var e=this;return t.on(\"data\",function(t){e.processChunk(t)}),t.on(\"end\",function(){e.end()}),t.on(\"error\",function(t){e.error(t)}),this},pause:function(){return!this.isPaused&&!this.isFinished&&(this.isPaused=!0,this.previous&&this.previous.pause(),!0)},resume:function(){if(!this.isPaused||this.isFinished)return!1;var t=this.isPaused=!1;return this.generatedError&&(this.error(this.generatedError),t=!0),this.previous&&this.previous.resume(),!t},flush:function(){},processChunk:function(t){this.push(t)},withStreamInfo:function(t,e){return this.extraStreamInfo[t]=e,this.mergeStreamInfo(),this},mergeStreamInfo:function(){for(var t in this.extraStreamInfo)this.extraStreamInfo.hasOwnProperty(t)&&(this.streamInfo[t]=this.extraStreamInfo[t])},lock:function(){if(this.isLocked)throw new Error(\"The stream '\"+this+\"' has already been used.\");this.isLocked=!0,this.previous&&this.previous.lock()},toString:function(){var t=\"Worker \"+this.name;return this.previous?this.previous+\" -> \"+t:t}},e.exports=i},{}],29:[function(t,e,r){\"use strict\";var h=t(\"../utils\"),n=t(\"./ConvertWorker\"),s=t(\"./GenericWorker\"),u=t(\"../base64\"),i=t(\"../support\"),a=t(\"../external\"),o=null;if(i.nodestream)try{o=t(\"../nodejs/NodejsStreamOutputAdapter\")}catch(t){}function l(t,o){return new a.Promise(function(e,r){var i=[],n=t._internalType,s=t._outputType,a=t._mimeType;t.on(\"data\",function(t,e){i.push(t),o&&o(e)}).on(\"error\",function(t){i=[],r(t)}).on(\"end\",function(){try{var t=function(t,e,r){switch(t){case\"blob\":return h.newBlob(h.transformTo(\"arraybuffer\",e),r);case\"base64\":return u.encode(e);default:return h.transformTo(t,e)}}(s,function(t,e){var r,i=0,n=null,s=0;for(r=0;r<e.length;r++)s+=e[r].length;switch(t){case\"string\":return e.join(\"\");case\"array\":return Array.prototype.concat.apply([],e);case\"uint8array\":for(n=new Uint8Array(s),r=0;r<e.length;r++)n.set(e[r],i),i+=e[r].length;return n;case\"nodebuffer\":return Buffer.concat(e);default:throw new Error(\"concat : unsupported type '\"+t+\"'\")}}(n,i),a);e(t)}catch(t){r(t)}i=[]}).resume()})}function f(t,e,r){var i=e;switch(e){case\"blob\":case\"arraybuffer\":i=\"uint8array\";break;case\"base64\":i=\"string\"}try{this._internalType=i,this._outputType=e,this._mimeType=r,h.checkSupport(i),this._worker=t.pipe(new n(i)),t.lock()}catch(t){this._worker=new s(\"error\"),this._worker.error(t)}}f.prototype={accumulate:function(t){return l(this,t)},on:function(t,e){var r=this;return\"data\"===t?this._worker.on(t,function(t){e.call(r,t.data,t.meta)}):this._worker.on(t,function(){h.delay(e,arguments,r)}),this},resume:function(){return h.delay(this._worker.resume,[],this._worker),this},pause:function(){return this._worker.pause(),this},toNodejsStream:function(t){if(h.checkSupport(\"nodestream\"),\"nodebuffer\"!==this._outputType)throw new Error(this._outputType+\" is not supported by this method\");return new o(this,{objectMode:\"nodebuffer\"!==this._outputType},t)}},e.exports=f},{\"../base64\":1,\"../external\":6,\"../nodejs/NodejsStreamOutputAdapter\":13,\"../support\":30,\"../utils\":32,\"./ConvertWorker\":24,\"./GenericWorker\":28}],30:[function(t,e,r){\"use strict\";if(r.base64=!0,r.array=!0,r.string=!0,r.arraybuffer=\"undefined\"!=typeof ArrayBuffer&&\"undefined\"!=typeof Uint8Array,r.nodebuffer=\"undefined\"!=typeof Buffer,r.uint8array=\"undefined\"!=typeof Uint8Array,\"undefined\"==typeof ArrayBuffer)r.blob=!1;else{var i=new ArrayBuffer(0);try{r.blob=0===new Blob([i],{type:\"application/zip\"}).size}catch(t){try{var n=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);n.append(i),r.blob=0===n.getBlob(\"application/zip\").size}catch(t){r.blob=!1}}}try{r.nodestream=!!t(\"readable-stream\").Readable}catch(t){r.nodestream=!1}},{\"readable-stream\":16}],31:[function(t,e,s){\"use strict\";for(var o=t(\"./utils\"),h=t(\"./support\"),r=t(\"./nodejsUtils\"),i=t(\"./stream/GenericWorker\"),u=new Array(256),n=0;n<256;n++)u[n]=252<=n?6:248<=n?5:240<=n?4:224<=n?3:192<=n?2:1;u[254]=u[254]=1;function a(){i.call(this,\"utf-8 decode\"),this.leftOver=null}function l(){i.call(this,\"utf-8 encode\")}s.utf8encode=function(t){return h.nodebuffer?r.newBufferFrom(t,\"utf-8\"):function(t){var e,r,i,n,s,a=t.length,o=0;for(n=0;n<a;n++)55296==(64512&(r=t.charCodeAt(n)))&&n+1<a&&56320==(64512&(i=t.charCodeAt(n+1)))&&(r=65536+(r-55296<<10)+(i-56320),n++),o+=r<128?1:r<2048?2:r<65536?3:4;for(e=h.uint8array?new Uint8Array(o):new Array(o),n=s=0;s<o;n++)55296==(64512&(r=t.charCodeAt(n)))&&n+1<a&&56320==(64512&(i=t.charCodeAt(n+1)))&&(r=65536+(r-55296<<10)+(i-56320),n++),r<128?e[s++]=r:(r<2048?e[s++]=192|r>>>6:(r<65536?e[s++]=224|r>>>12:(e[s++]=240|r>>>18,e[s++]=128|r>>>12&63),e[s++]=128|r>>>6&63),e[s++]=128|63&r);return e}(t)},s.utf8decode=function(t){return h.nodebuffer?o.transformTo(\"nodebuffer\",t).toString(\"utf-8\"):function(t){var e,r,i,n,s=t.length,a=new Array(2*s);for(e=r=0;e<s;)if((i=t[e++])<128)a[r++]=i;else if(4<(n=u[i]))a[r++]=65533,e+=n-1;else{for(i&=2===n?31:3===n?15:7;1<n&&e<s;)i=i<<6|63&t[e++],n--;1<n?a[r++]=65533:i<65536?a[r++]=i:(i-=65536,a[r++]=55296|i>>10&1023,a[r++]=56320|1023&i)}return a.length!==r&&(a.subarray?a=a.subarray(0,r):a.length=r),o.applyFromCharCode(a)}(t=o.transformTo(h.uint8array?\"uint8array\":\"array\",t))},o.inherits(a,i),a.prototype.processChunk=function(t){var e=o.transformTo(h.uint8array?\"uint8array\":\"array\",t.data);if(this.leftOver&&this.leftOver.length){if(h.uint8array){var r=e;(e=new Uint8Array(r.length+this.leftOver.length)).set(this.leftOver,0),e.set(r,this.leftOver.length)}else e=this.leftOver.concat(e);this.leftOver=null}var i=function(t,e){var r;for((e=e||t.length)>t.length&&(e=t.length),r=e-1;0<=r&&128==(192&t[r]);)r--;return r<0?e:0===r?e:r+u[t[r]]>e?r:e}(e),n=e;i!==e.length&&(h.uint8array?(n=e.subarray(0,i),this.leftOver=e.subarray(i,e.length)):(n=e.slice(0,i),this.leftOver=e.slice(i,e.length))),this.push({data:s.utf8decode(n),meta:t.meta})},a.prototype.flush=function(){this.leftOver&&this.leftOver.length&&(this.push({data:s.utf8decode(this.leftOver),meta:{}}),this.leftOver=null)},s.Utf8DecodeWorker=a,o.inherits(l,i),l.prototype.processChunk=function(t){this.push({data:s.utf8encode(t.data),meta:t.meta})},s.Utf8EncodeWorker=l},{\"./nodejsUtils\":14,\"./stream/GenericWorker\":28,\"./support\":30,\"./utils\":32}],32:[function(t,e,a){\"use strict\";var o=t(\"./support\"),h=t(\"./base64\"),r=t(\"./nodejsUtils\"),i=t(\"set-immediate-shim\"),u=t(\"./external\");function n(t){return t}function l(t,e){for(var r=0;r<t.length;++r)e[r]=255&t.charCodeAt(r);return e}a.newBlob=function(e,r){a.checkSupport(\"blob\");try{return new Blob([e],{type:r})}catch(t){try{var i=new(self.BlobBuilder||self.WebKitBlobBuilder||self.MozBlobBuilder||self.MSBlobBuilder);return i.append(e),i.getBlob(r)}catch(t){throw new Error(\"Bug : can't construct the Blob.\")}}};var s={stringifyByChunk:function(t,e,r){var i=[],n=0,s=t.length;if(s<=r)return String.fromCharCode.apply(null,t);for(;n<s;)\"array\"===e||\"nodebuffer\"===e?i.push(String.fromCharCode.apply(null,t.slice(n,Math.min(n+r,s)))):i.push(String.fromCharCode.apply(null,t.subarray(n,Math.min(n+r,s)))),n+=r;return i.join(\"\")},stringifyByChar:function(t){for(var e=\"\",r=0;r<t.length;r++)e+=String.fromCharCode(t[r]);return e},applyCanBeUsed:{uint8array:function(){try{return o.uint8array&&1===String.fromCharCode.apply(null,new Uint8Array(1)).length}catch(t){return!1}}(),nodebuffer:function(){try{return o.nodebuffer&&1===String.fromCharCode.apply(null,r.allocBuffer(1)).length}catch(t){return!1}}()}};function f(t){var e=65536,r=a.getTypeOf(t),i=!0;if(\"uint8array\"===r?i=s.applyCanBeUsed.uint8array:\"nodebuffer\"===r&&(i=s.applyCanBeUsed.nodebuffer),i)for(;1<e;)try{return s.stringifyByChunk(t,r,e)}catch(t){e=Math.floor(e/2)}return s.stringifyByChar(t)}function d(t,e){for(var r=0;r<t.length;r++)e[r]=t[r];return e}a.applyFromCharCode=f;var c={};c.string={string:n,array:function(t){return l(t,new Array(t.length))},arraybuffer:function(t){return c.string.uint8array(t).buffer},uint8array:function(t){return l(t,new Uint8Array(t.length))},nodebuffer:function(t){return l(t,r.allocBuffer(t.length))}},c.array={string:f,array:n,arraybuffer:function(t){return new Uint8Array(t).buffer},uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return r.newBufferFrom(t)}},c.arraybuffer={string:function(t){return f(new Uint8Array(t))},array:function(t){return d(new Uint8Array(t),new Array(t.byteLength))},arraybuffer:n,uint8array:function(t){return new Uint8Array(t)},nodebuffer:function(t){return r.newBufferFrom(new Uint8Array(t))}},c.uint8array={string:f,array:function(t){return d(t,new Array(t.length))},arraybuffer:function(t){return t.buffer},uint8array:n,nodebuffer:function(t){return r.newBufferFrom(t)}},c.nodebuffer={string:f,array:function(t){return d(t,new Array(t.length))},arraybuffer:function(t){return c.nodebuffer.uint8array(t).buffer},uint8array:function(t){return d(t,new Uint8Array(t.length))},nodebuffer:n},a.transformTo=function(t,e){if(e=e||\"\",!t)return e;a.checkSupport(t);var r=a.getTypeOf(e);return c[r][t](e)},a.getTypeOf=function(t){return\"string\"==typeof t?\"string\":\"[object Array]\"===Object.prototype.toString.call(t)?\"array\":o.nodebuffer&&r.isBuffer(t)?\"nodebuffer\":o.uint8array&&t instanceof Uint8Array?\"uint8array\":o.arraybuffer&&t instanceof ArrayBuffer?\"arraybuffer\":void 0},a.checkSupport=function(t){if(!o[t.toLowerCase()])throw new Error(t+\" is not supported by this platform\")},a.MAX_VALUE_16BITS=65535,a.MAX_VALUE_32BITS=-1,a.pretty=function(t){var e,r,i=\"\";for(r=0;r<(t||\"\").length;r++)i+=\"\\\\x\"+((e=t.charCodeAt(r))<16?\"0\":\"\")+e.toString(16).toUpperCase();return i},a.delay=function(t,e,r){i(function(){t.apply(r||null,e||[])})},a.inherits=function(t,e){function r(){}r.prototype=e.prototype,t.prototype=new r},a.extend=function(){var t,e,r={};for(t=0;t<arguments.length;t++)for(e in arguments[t])arguments[t].hasOwnProperty(e)&&void 0===r[e]&&(r[e]=arguments[t][e]);return r},a.prepareContent=function(r,t,i,n,s){return u.Promise.resolve(t).then(function(i){return o.blob&&(i instanceof Blob||-1!==[\"[object File]\",\"[object Blob]\"].indexOf(Object.prototype.toString.call(i)))&&\"undefined\"!=typeof FileReader?new u.Promise(function(e,r){var t=new FileReader;t.onload=function(t){e(t.target.result)},t.onerror=function(t){r(t.target.error)},t.readAsArrayBuffer(i)}):i}).then(function(t){var e=a.getTypeOf(t);return e?(\"arraybuffer\"===e?t=a.transformTo(\"uint8array\",t):\"string\"===e&&(s?t=h.decode(t):i&&!0!==n&&(t=function(t){return l(t,o.uint8array?new Uint8Array(t.length):new Array(t.length))}(t))),t):u.Promise.reject(new Error(\"Can't read the data of '\"+r+\"'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?\"))})}},{\"./base64\":1,\"./external\":6,\"./nodejsUtils\":14,\"./support\":30,\"set-immediate-shim\":54}],33:[function(t,e,r){\"use strict\";var i=t(\"./reader/readerFor\"),n=t(\"./utils\"),s=t(\"./signature\"),a=t(\"./zipEntry\"),o=(t(\"./utf8\"),t(\"./support\"));function h(t){this.files=[],this.loadOptions=t}h.prototype={checkSignature:function(t){if(!this.reader.readAndCheckSignature(t)){this.reader.index-=4;var e=this.reader.readString(4);throw new Error(\"Corrupted zip or bug: unexpected signature (\"+n.pretty(e)+\", expected \"+n.pretty(t)+\")\")}},isSignature:function(t,e){var r=this.reader.index;this.reader.setIndex(t);var i=this.reader.readString(4)===e;return this.reader.setIndex(r),i},readBlockEndOfCentral:function(){this.diskNumber=this.reader.readInt(2),this.diskWithCentralDirStart=this.reader.readInt(2),this.centralDirRecordsOnThisDisk=this.reader.readInt(2),this.centralDirRecords=this.reader.readInt(2),this.centralDirSize=this.reader.readInt(4),this.centralDirOffset=this.reader.readInt(4),this.zipCommentLength=this.reader.readInt(2);var t=this.reader.readData(this.zipCommentLength),e=o.uint8array?\"uint8array\":\"array\",r=n.transformTo(e,t);this.zipComment=this.loadOptions.decodeFileName(r)},readBlockZip64EndOfCentral:function(){this.zip64EndOfCentralSize=this.reader.readInt(8),this.reader.skip(4),this.diskNumber=this.reader.readInt(4),this.diskWithCentralDirStart=this.reader.readInt(4),this.centralDirRecordsOnThisDisk=this.reader.readInt(8),this.centralDirRecords=this.reader.readInt(8),this.centralDirSize=this.reader.readInt(8),this.centralDirOffset=this.reader.readInt(8),this.zip64ExtensibleData={};for(var t,e,r,i=this.zip64EndOfCentralSize-44;0<i;)t=this.reader.readInt(2),e=this.reader.readInt(4),r=this.reader.readData(e),this.zip64ExtensibleData[t]={id:t,length:e,value:r}},readBlockZip64EndOfCentralLocator:function(){if(this.diskWithZip64CentralDirStart=this.reader.readInt(4),this.relativeOffsetEndOfZip64CentralDir=this.reader.readInt(8),this.disksCount=this.reader.readInt(4),1<this.disksCount)throw new Error(\"Multi-volumes zip are not supported\")},readLocalFiles:function(){var t,e;for(t=0;t<this.files.length;t++)e=this.files[t],this.reader.setIndex(e.localHeaderOffset),this.checkSignature(s.LOCAL_FILE_HEADER),e.readLocalPart(this.reader),e.handleUTF8(),e.processAttributes()},readCentralDir:function(){var t;for(this.reader.setIndex(this.centralDirOffset);this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER);)(t=new a({zip64:this.zip64},this.loadOptions)).readCentralPart(this.reader),this.files.push(t);if(this.centralDirRecords!==this.files.length&&0!==this.centralDirRecords&&0===this.files.length)throw new Error(\"Corrupted zip or bug: expected \"+this.centralDirRecords+\" records in central dir, got \"+this.files.length)},readEndOfCentral:function(){var t=this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);if(t<0)throw!this.isSignature(0,s.LOCAL_FILE_HEADER)?new Error(\"Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html\"):new Error(\"Corrupted zip: can't find end of central directory\");this.reader.setIndex(t);var e=t;if(this.checkSignature(s.CENTRAL_DIRECTORY_END),this.readBlockEndOfCentral(),this.diskNumber===n.MAX_VALUE_16BITS||this.diskWithCentralDirStart===n.MAX_VALUE_16BITS||this.centralDirRecordsOnThisDisk===n.MAX_VALUE_16BITS||this.centralDirRecords===n.MAX_VALUE_16BITS||this.centralDirSize===n.MAX_VALUE_32BITS||this.centralDirOffset===n.MAX_VALUE_32BITS){if(this.zip64=!0,(t=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR))<0)throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory locator\");if(this.reader.setIndex(t),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR),this.readBlockZip64EndOfCentralLocator(),!this.isSignature(this.relativeOffsetEndOfZip64CentralDir,s.ZIP64_CENTRAL_DIRECTORY_END)&&(this.relativeOffsetEndOfZip64CentralDir=this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.relativeOffsetEndOfZip64CentralDir<0))throw new Error(\"Corrupted zip: can't find the ZIP64 end of central directory\");this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir),this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END),this.readBlockZip64EndOfCentral()}var r=this.centralDirOffset+this.centralDirSize;this.zip64&&(r+=20,r+=12+this.zip64EndOfCentralSize);var i=e-r;if(0<i)this.isSignature(e,s.CENTRAL_FILE_HEADER)||(this.reader.zero=i);else if(i<0)throw new Error(\"Corrupted zip: missing \"+Math.abs(i)+\" bytes.\")},prepareReader:function(t){this.reader=i(t)},load:function(t){this.prepareReader(t),this.readEndOfCentral(),this.readCentralDir(),this.readLocalFiles()}},e.exports=h},{\"./reader/readerFor\":22,\"./signature\":23,\"./support\":30,\"./utf8\":31,\"./utils\":32,\"./zipEntry\":34}],34:[function(t,e,r){\"use strict\";var i=t(\"./reader/readerFor\"),s=t(\"./utils\"),n=t(\"./compressedObject\"),a=t(\"./crc32\"),o=t(\"./utf8\"),h=t(\"./compressions\"),u=t(\"./support\");function l(t,e){this.options=t,this.loadOptions=e}l.prototype={isEncrypted:function(){return 1==(1&this.bitFlag)},useUTF8:function(){return 2048==(2048&this.bitFlag)},readLocalPart:function(t){var e,r;if(t.skip(22),this.fileNameLength=t.readInt(2),r=t.readInt(2),this.fileName=t.readData(this.fileNameLength),t.skip(r),-1===this.compressedSize||-1===this.uncompressedSize)throw new Error(\"Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)\");if(null===(e=function(t){for(var e in h)if(h.hasOwnProperty(e)&&h[e].magic===t)return h[e];return null}(this.compressionMethod)))throw new Error(\"Corrupted zip : compression \"+s.pretty(this.compressionMethod)+\" unknown (inner file : \"+s.transformTo(\"string\",this.fileName)+\")\");this.decompressed=new n(this.compressedSize,this.uncompressedSize,this.crc32,e,t.readData(this.compressedSize))},readCentralPart:function(t){this.versionMadeBy=t.readInt(2),t.skip(2),this.bitFlag=t.readInt(2),this.compressionMethod=t.readString(2),this.date=t.readDate(),this.crc32=t.readInt(4),this.compressedSize=t.readInt(4),this.uncompressedSize=t.readInt(4);var e=t.readInt(2);if(this.extraFieldsLength=t.readInt(2),this.fileCommentLength=t.readInt(2),this.diskNumberStart=t.readInt(2),this.internalFileAttributes=t.readInt(2),this.externalFileAttributes=t.readInt(4),this.localHeaderOffset=t.readInt(4),this.isEncrypted())throw new Error(\"Encrypted zip are not supported\");t.skip(e),this.readExtraFields(t),this.parseZIP64ExtraField(t),this.fileComment=t.readData(this.fileCommentLength)},processAttributes:function(){this.unixPermissions=null,this.dosPermissions=null;var t=this.versionMadeBy>>8;this.dir=!!(16&this.externalFileAttributes),0==t&&(this.dosPermissions=63&this.externalFileAttributes),3==t&&(this.unixPermissions=this.externalFileAttributes>>16&65535),this.dir||\"/\"!==this.fileNameStr.slice(-1)||(this.dir=!0)},parseZIP64ExtraField:function(t){if(this.extraFields[1]){var e=i(this.extraFields[1].value);this.uncompressedSize===s.MAX_VALUE_32BITS&&(this.uncompressedSize=e.readInt(8)),this.compressedSize===s.MAX_VALUE_32BITS&&(this.compressedSize=e.readInt(8)),this.localHeaderOffset===s.MAX_VALUE_32BITS&&(this.localHeaderOffset=e.readInt(8)),this.diskNumberStart===s.MAX_VALUE_32BITS&&(this.diskNumberStart=e.readInt(4))}},readExtraFields:function(t){var e,r,i,n=t.index+this.extraFieldsLength;for(this.extraFields||(this.extraFields={});t.index+4<n;)e=t.readInt(2),r=t.readInt(2),i=t.readData(r),this.extraFields[e]={id:e,length:r,value:i};t.setIndex(n)},handleUTF8:function(){var t=u.uint8array?\"uint8array\":\"array\";if(this.useUTF8())this.fileNameStr=o.utf8decode(this.fileName),this.fileCommentStr=o.utf8decode(this.fileComment);else{var e=this.findExtraFieldUnicodePath();if(null!==e)this.fileNameStr=e;else{var r=s.transformTo(t,this.fileName);this.fileNameStr=this.loadOptions.decodeFileName(r)}var i=this.findExtraFieldUnicodeComment();if(null!==i)this.fileCommentStr=i;else{var n=s.transformTo(t,this.fileComment);this.fileCommentStr=this.loadOptions.decodeFileName(n)}}},findExtraFieldUnicodePath:function(){var t=this.extraFields[28789];if(t){var e=i(t.value);return 1!==e.readInt(1)?null:a(this.fileName)!==e.readInt(4)?null:o.utf8decode(e.readData(t.length-5))}return null},findExtraFieldUnicodeComment:function(){var t=this.extraFields[25461];if(t){var e=i(t.value);return 1!==e.readInt(1)?null:a(this.fileComment)!==e.readInt(4)?null:o.utf8decode(e.readData(t.length-5))}return null}},e.exports=l},{\"./compressedObject\":2,\"./compressions\":3,\"./crc32\":4,\"./reader/readerFor\":22,\"./support\":30,\"./utf8\":31,\"./utils\":32}],35:[function(t,e,r){\"use strict\";function i(t,e,r){this.name=t,this.dir=r.dir,this.date=r.date,this.comment=r.comment,this.unixPermissions=r.unixPermissions,this.dosPermissions=r.dosPermissions,this._data=e,this._dataBinary=r.binary,this.options={compression:r.compression,compressionOptions:r.compressionOptions}}var s=t(\"./stream/StreamHelper\"),n=t(\"./stream/DataWorker\"),a=t(\"./utf8\"),o=t(\"./compressedObject\"),h=t(\"./stream/GenericWorker\");i.prototype={internalStream:function(t){var e=null,r=\"string\";try{if(!t)throw new Error(\"No output type specified.\");var i=\"string\"===(r=t.toLowerCase())||\"text\"===r;\"binarystring\"!==r&&\"text\"!==r||(r=\"string\"),e=this._decompressWorker();var n=!this._dataBinary;n&&!i&&(e=e.pipe(new a.Utf8EncodeWorker)),!n&&i&&(e=e.pipe(new a.Utf8DecodeWorker))}catch(t){(e=new h(\"error\")).error(t)}return new s(e,r,\"\")},async:function(t,e){return this.internalStream(t).accumulate(e)},nodeStream:function(t,e){return this.internalStream(t||\"nodebuffer\").toNodejsStream(e)},_compressWorker:function(t,e){if(this._data instanceof o&&this._data.compression.magic===t.magic)return this._data.getCompressedWorker();var r=this._decompressWorker();return this._dataBinary||(r=r.pipe(new a.Utf8EncodeWorker)),o.createWorkerFrom(r,t,e)},_decompressWorker:function(){return this._data instanceof o?this._data.getContentWorker():this._data instanceof h?this._data:new n(this._data)}};for(var u=[\"asText\",\"asBinary\",\"asNodeBuffer\",\"asUint8Array\",\"asArrayBuffer\"],l=function(){throw new Error(\"This method has been removed in JSZip 3.0, please check the upgrade guide.\")},f=0;f<u.length;f++)i.prototype[u[f]]=l;e.exports=i},{\"./compressedObject\":2,\"./stream/DataWorker\":27,\"./stream/GenericWorker\":28,\"./stream/StreamHelper\":29,\"./utf8\":31}],36:[function(t,l,e){(function(e){\"use strict\";var r,i,t=e.MutationObserver||e.WebKitMutationObserver;if(t){var n=0,s=new t(u),a=e.document.createTextNode(\"\");s.observe(a,{characterData:!0}),r=function(){a.data=n=++n%2}}else if(e.setImmediate||void 0===e.MessageChannel)r=\"document\"in e&&\"onreadystatechange\"in e.document.createElement(\"script\")?function(){var t=e.document.createElement(\"script\");t.onreadystatechange=function(){u(),t.onreadystatechange=null,t.parentNode.removeChild(t),t=null},e.document.documentElement.appendChild(t)}:function(){setTimeout(u,0)};else{var o=new e.MessageChannel;o.port1.onmessage=u,r=function(){o.port2.postMessage(0)}}var h=[];function u(){var t,e;i=!0;for(var r=h.length;r;){for(e=h,h=[],t=-1;++t<r;)e[t]();r=h.length}i=!1}l.exports=function(t){1!==h.push(t)||i||r()}}).call(this,\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{})},{}],37:[function(t,e,r){\"use strict\";var n=t(\"immediate\");function u(){}var l={},s=[\"REJECTED\"],a=[\"FULFILLED\"],i=[\"PENDING\"];function o(t){if(\"function\"!=typeof t)throw new TypeError(\"resolver must be a function\");this.state=i,this.queue=[],this.outcome=void 0,t!==u&&c(this,t)}function h(t,e,r){this.promise=t,\"function\"==typeof e&&(this.onFulfilled=e,this.callFulfilled=this.otherCallFulfilled),\"function\"==typeof r&&(this.onRejected=r,this.callRejected=this.otherCallRejected)}function f(e,r,i){n(function(){var t;try{t=r(i)}catch(t){return l.reject(e,t)}t===e?l.reject(e,new TypeError(\"Cannot resolve promise with itself\")):l.resolve(e,t)})}function d(t){var e=t&&t.then;if(t&&(\"object\"==typeof t||\"function\"==typeof t)&&\"function\"==typeof e)return function(){e.apply(t,arguments)}}function c(e,t){var r=!1;function i(t){r||(r=!0,l.reject(e,t))}function n(t){r||(r=!0,l.resolve(e,t))}var s=p(function(){t(n,i)});\"error\"===s.status&&i(s.value)}function p(t,e){var r={};try{r.value=t(e),r.status=\"success\"}catch(t){r.status=\"error\",r.value=t}return r}(e.exports=o).prototype.finally=function(e){if(\"function\"!=typeof e)return this;var r=this.constructor;return this.then(function(t){return r.resolve(e()).then(function(){return t})},function(t){return r.resolve(e()).then(function(){throw t})})},o.prototype.catch=function(t){return this.then(null,t)},o.prototype.then=function(t,e){if(\"function\"!=typeof t&&this.state===a||\"function\"!=typeof e&&this.state===s)return this;var r=new this.constructor(u);this.state!==i?f(r,this.state===a?t:e,this.outcome):this.queue.push(new h(r,t,e));return r},h.prototype.callFulfilled=function(t){l.resolve(this.promise,t)},h.prototype.otherCallFulfilled=function(t){f(this.promise,this.onFulfilled,t)},h.prototype.callRejected=function(t){l.reject(this.promise,t)},h.prototype.otherCallRejected=function(t){f(this.promise,this.onRejected,t)},l.resolve=function(t,e){var r=p(d,e);if(\"error\"===r.status)return l.reject(t,r.value);var i=r.value;if(i)c(t,i);else{t.state=a,t.outcome=e;for(var n=-1,s=t.queue.length;++n<s;)t.queue[n].callFulfilled(e)}return t},l.reject=function(t,e){t.state=s,t.outcome=e;for(var r=-1,i=t.queue.length;++r<i;)t.queue[r].callRejected(e);return t},o.resolve=function(t){if(t instanceof this)return t;return l.resolve(new this(u),t)},o.reject=function(t){var e=new this(u);return l.reject(e,t)},o.all=function(t){var r=this;if(\"[object Array]\"!==Object.prototype.toString.call(t))return this.reject(new TypeError(\"must be an array\"));var i=t.length,n=!1;if(!i)return this.resolve([]);var s=new Array(i),a=0,e=-1,o=new this(u);for(;++e<i;)h(t[e],e);return o;function h(t,e){r.resolve(t).then(function(t){s[e]=t,++a!==i||n||(n=!0,l.resolve(o,s))},function(t){n||(n=!0,l.reject(o,t))})}},o.race=function(t){var e=this;if(\"[object Array]\"!==Object.prototype.toString.call(t))return this.reject(new TypeError(\"must be an array\"));var r=t.length,i=!1;if(!r)return this.resolve([]);var n=-1,s=new this(u);for(;++n<r;)a=t[n],e.resolve(a).then(function(t){i||(i=!0,l.resolve(s,t))},function(t){i||(i=!0,l.reject(s,t))});var a;return s}},{immediate:36}],38:[function(t,e,r){\"use strict\";var i={};(0,t(\"./lib/utils/common\").assign)(i,t(\"./lib/deflate\"),t(\"./lib/inflate\"),t(\"./lib/zlib/constants\")),e.exports=i},{\"./lib/deflate\":39,\"./lib/inflate\":40,\"./lib/utils/common\":41,\"./lib/zlib/constants\":44}],39:[function(t,e,r){\"use strict\";var a=t(\"./zlib/deflate\"),o=t(\"./utils/common\"),h=t(\"./utils/strings\"),n=t(\"./zlib/messages\"),s=t(\"./zlib/zstream\"),u=Object.prototype.toString,l=0,f=-1,d=0,c=8;function p(t){if(!(this instanceof p))return new p(t);this.options=o.assign({level:f,method:c,chunkSize:16384,windowBits:15,memLevel:8,strategy:d,to:\"\"},t||{});var e=this.options;e.raw&&0<e.windowBits?e.windowBits=-e.windowBits:e.gzip&&0<e.windowBits&&e.windowBits<16&&(e.windowBits+=16),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new s,this.strm.avail_out=0;var r=a.deflateInit2(this.strm,e.level,e.method,e.windowBits,e.memLevel,e.strategy);if(r!==l)throw new Error(n[r]);if(e.header&&a.deflateSetHeader(this.strm,e.header),e.dictionary){var i;if(i=\"string\"==typeof e.dictionary?h.string2buf(e.dictionary):\"[object ArrayBuffer]\"===u.call(e.dictionary)?new Uint8Array(e.dictionary):e.dictionary,(r=a.deflateSetDictionary(this.strm,i))!==l)throw new Error(n[r]);this._dict_set=!0}}function i(t,e){var r=new p(e);if(r.push(t,!0),r.err)throw r.msg||n[r.err];return r.result}p.prototype.push=function(t,e){var r,i,n=this.strm,s=this.options.chunkSize;if(this.ended)return!1;i=e===~~e?e:!0===e?4:0,\"string\"==typeof t?n.input=h.string2buf(t):\"[object ArrayBuffer]\"===u.call(t)?n.input=new Uint8Array(t):n.input=t,n.next_in=0,n.avail_in=n.input.length;do{if(0===n.avail_out&&(n.output=new o.Buf8(s),n.next_out=0,n.avail_out=s),1!==(r=a.deflate(n,i))&&r!==l)return this.onEnd(r),!(this.ended=!0);0!==n.avail_out&&(0!==n.avail_in||4!==i&&2!==i)||(\"string\"===this.options.to?this.onData(h.buf2binstring(o.shrinkBuf(n.output,n.next_out))):this.onData(o.shrinkBuf(n.output,n.next_out)))}while((0<n.avail_in||0===n.avail_out)&&1!==r);return 4===i?(r=a.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===l):2!==i||(this.onEnd(l),!(n.avail_out=0))},p.prototype.onData=function(t){this.chunks.push(t)},p.prototype.onEnd=function(t){t===l&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=o.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},r.Deflate=p,r.deflate=i,r.deflateRaw=function(t,e){return(e=e||{}).raw=!0,i(t,e)},r.gzip=function(t,e){return(e=e||{}).gzip=!0,i(t,e)}},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/deflate\":46,\"./zlib/messages\":51,\"./zlib/zstream\":53}],40:[function(t,e,r){\"use strict\";var d=t(\"./zlib/inflate\"),c=t(\"./utils/common\"),p=t(\"./utils/strings\"),m=t(\"./zlib/constants\"),i=t(\"./zlib/messages\"),n=t(\"./zlib/zstream\"),s=t(\"./zlib/gzheader\"),_=Object.prototype.toString;function a(t){if(!(this instanceof a))return new a(t);this.options=c.assign({chunkSize:16384,windowBits:0,to:\"\"},t||{});var e=this.options;e.raw&&0<=e.windowBits&&e.windowBits<16&&(e.windowBits=-e.windowBits,0===e.windowBits&&(e.windowBits=-15)),!(0<=e.windowBits&&e.windowBits<16)||t&&t.windowBits||(e.windowBits+=32),15<e.windowBits&&e.windowBits<48&&0==(15&e.windowBits)&&(e.windowBits|=15),this.err=0,this.msg=\"\",this.ended=!1,this.chunks=[],this.strm=new n,this.strm.avail_out=0;var r=d.inflateInit2(this.strm,e.windowBits);if(r!==m.Z_OK)throw new Error(i[r]);this.header=new s,d.inflateGetHeader(this.strm,this.header)}function o(t,e){var r=new a(e);if(r.push(t,!0),r.err)throw r.msg||i[r.err];return r.result}a.prototype.push=function(t,e){var r,i,n,s,a,o,h=this.strm,u=this.options.chunkSize,l=this.options.dictionary,f=!1;if(this.ended)return!1;i=e===~~e?e:!0===e?m.Z_FINISH:m.Z_NO_FLUSH,\"string\"==typeof t?h.input=p.binstring2buf(t):\"[object ArrayBuffer]\"===_.call(t)?h.input=new Uint8Array(t):h.input=t,h.next_in=0,h.avail_in=h.input.length;do{if(0===h.avail_out&&(h.output=new c.Buf8(u),h.next_out=0,h.avail_out=u),(r=d.inflate(h,m.Z_NO_FLUSH))===m.Z_NEED_DICT&&l&&(o=\"string\"==typeof l?p.string2buf(l):\"[object ArrayBuffer]\"===_.call(l)?new Uint8Array(l):l,r=d.inflateSetDictionary(this.strm,o)),r===m.Z_BUF_ERROR&&!0===f&&(r=m.Z_OK,f=!1),r!==m.Z_STREAM_END&&r!==m.Z_OK)return this.onEnd(r),!(this.ended=!0);h.next_out&&(0!==h.avail_out&&r!==m.Z_STREAM_END&&(0!==h.avail_in||i!==m.Z_FINISH&&i!==m.Z_SYNC_FLUSH)||(\"string\"===this.options.to?(n=p.utf8border(h.output,h.next_out),s=h.next_out-n,a=p.buf2string(h.output,n),h.next_out=s,h.avail_out=u-s,s&&c.arraySet(h.output,h.output,n,s,0),this.onData(a)):this.onData(c.shrinkBuf(h.output,h.next_out)))),0===h.avail_in&&0===h.avail_out&&(f=!0)}while((0<h.avail_in||0===h.avail_out)&&r!==m.Z_STREAM_END);return r===m.Z_STREAM_END&&(i=m.Z_FINISH),i===m.Z_FINISH?(r=d.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===m.Z_OK):i!==m.Z_SYNC_FLUSH||(this.onEnd(m.Z_OK),!(h.avail_out=0))},a.prototype.onData=function(t){this.chunks.push(t)},a.prototype.onEnd=function(t){t===m.Z_OK&&(\"string\"===this.options.to?this.result=this.chunks.join(\"\"):this.result=c.flattenChunks(this.chunks)),this.chunks=[],this.err=t,this.msg=this.strm.msg},r.Inflate=a,r.inflate=o,r.inflateRaw=function(t,e){return(e=e||{}).raw=!0,o(t,e)},r.ungzip=o},{\"./utils/common\":41,\"./utils/strings\":42,\"./zlib/constants\":44,\"./zlib/gzheader\":47,\"./zlib/inflate\":49,\"./zlib/messages\":51,\"./zlib/zstream\":53}],41:[function(t,e,r){\"use strict\";var i=\"undefined\"!=typeof Uint8Array&&\"undefined\"!=typeof Uint16Array&&\"undefined\"!=typeof Int32Array;r.assign=function(t){for(var e=Array.prototype.slice.call(arguments,1);e.length;){var r=e.shift();if(r){if(\"object\"!=typeof r)throw new TypeError(r+\"must be non-object\");for(var i in r)r.hasOwnProperty(i)&&(t[i]=r[i])}}return t},r.shrinkBuf=function(t,e){return t.length===e?t:t.subarray?t.subarray(0,e):(t.length=e,t)};var n={arraySet:function(t,e,r,i,n){if(e.subarray&&t.subarray)t.set(e.subarray(r,r+i),n);else for(var s=0;s<i;s++)t[n+s]=e[r+s]},flattenChunks:function(t){var e,r,i,n,s,a;for(e=i=0,r=t.length;e<r;e++)i+=t[e].length;for(a=new Uint8Array(i),e=n=0,r=t.length;e<r;e++)s=t[e],a.set(s,n),n+=s.length;return a}},s={arraySet:function(t,e,r,i,n){for(var s=0;s<i;s++)t[n+s]=e[r+s]},flattenChunks:function(t){return[].concat.apply([],t)}};r.setTyped=function(t){t?(r.Buf8=Uint8Array,r.Buf16=Uint16Array,r.Buf32=Int32Array,r.assign(r,n)):(r.Buf8=Array,r.Buf16=Array,r.Buf32=Array,r.assign(r,s))},r.setTyped(i)},{}],42:[function(t,e,r){\"use strict\";var h=t(\"./common\"),n=!0,s=!0;try{String.fromCharCode.apply(null,[0])}catch(t){n=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(t){s=!1}for(var u=new h.Buf8(256),i=0;i<256;i++)u[i]=252<=i?6:248<=i?5:240<=i?4:224<=i?3:192<=i?2:1;function l(t,e){if(e<65537&&(t.subarray&&s||!t.subarray&&n))return String.fromCharCode.apply(null,h.shrinkBuf(t,e));for(var r=\"\",i=0;i<e;i++)r+=String.fromCharCode(t[i]);return r}u[254]=u[254]=1,r.string2buf=function(t){var e,r,i,n,s,a=t.length,o=0;for(n=0;n<a;n++)55296==(64512&(r=t.charCodeAt(n)))&&n+1<a&&56320==(64512&(i=t.charCodeAt(n+1)))&&(r=65536+(r-55296<<10)+(i-56320),n++),o+=r<128?1:r<2048?2:r<65536?3:4;for(e=new h.Buf8(o),n=s=0;s<o;n++)55296==(64512&(r=t.charCodeAt(n)))&&n+1<a&&56320==(64512&(i=t.charCodeAt(n+1)))&&(r=65536+(r-55296<<10)+(i-56320),n++),r<128?e[s++]=r:(r<2048?e[s++]=192|r>>>6:(r<65536?e[s++]=224|r>>>12:(e[s++]=240|r>>>18,e[s++]=128|r>>>12&63),e[s++]=128|r>>>6&63),e[s++]=128|63&r);return e},r.buf2binstring=function(t){return l(t,t.length)},r.binstring2buf=function(t){for(var e=new h.Buf8(t.length),r=0,i=e.length;r<i;r++)e[r]=t.charCodeAt(r);return e},r.buf2string=function(t,e){var r,i,n,s,a=e||t.length,o=new Array(2*a);for(r=i=0;r<a;)if((n=t[r++])<128)o[i++]=n;else if(4<(s=u[n]))o[i++]=65533,r+=s-1;else{for(n&=2===s?31:3===s?15:7;1<s&&r<a;)n=n<<6|63&t[r++],s--;1<s?o[i++]=65533:n<65536?o[i++]=n:(n-=65536,o[i++]=55296|n>>10&1023,o[i++]=56320|1023&n)}return l(o,i)},r.utf8border=function(t,e){var r;for((e=e||t.length)>t.length&&(e=t.length),r=e-1;0<=r&&128==(192&t[r]);)r--;return r<0?e:0===r?e:r+u[t[r]]>e?r:e}},{\"./common\":41}],43:[function(t,e,r){\"use strict\";e.exports=function(t,e,r,i){for(var n=65535&t|0,s=t>>>16&65535|0,a=0;0!==r;){for(r-=a=2e3<r?2e3:r;s=s+(n=n+e[i++]|0)|0,--a;);n%=65521,s%=65521}return n|s<<16|0}},{}],44:[function(t,e,r){\"use strict\";e.exports={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8}},{}],45:[function(t,e,r){\"use strict\";var o=function(){for(var t,e=[],r=0;r<256;r++){t=r;for(var i=0;i<8;i++)t=1&t?3988292384^t>>>1:t>>>1;e[r]=t}return e}();e.exports=function(t,e,r,i){var n=o,s=i+r;t^=-1;for(var a=i;a<s;a++)t=t>>>8^n[255&(t^e[a])];return-1^t}},{}],46:[function(t,e,r){\"use strict\";var h,d=t(\"../utils/common\"),u=t(\"./trees\"),c=t(\"./adler32\"),p=t(\"./crc32\"),i=t(\"./messages\"),l=0,f=4,m=0,_=-2,g=-1,b=4,n=2,v=8,y=9,s=286,a=30,o=19,w=2*s+1,k=15,x=3,S=258,z=S+x+1,C=42,E=113,A=1,I=2,O=3,B=4;function R(t,e){return t.msg=i[e],e}function T(t){return(t<<1)-(4<t?9:0)}function D(t){for(var e=t.length;0<=--e;)t[e]=0}function F(t){var e=t.state,r=e.pending;r>t.avail_out&&(r=t.avail_out),0!==r&&(d.arraySet(t.output,e.pending_buf,e.pending_out,r,t.next_out),t.next_out+=r,e.pending_out+=r,t.total_out+=r,t.avail_out-=r,e.pending-=r,0===e.pending&&(e.pending_out=0))}function N(t,e){u._tr_flush_block(t,0<=t.block_start?t.block_start:-1,t.strstart-t.block_start,e),t.block_start=t.strstart,F(t.strm)}function U(t,e){t.pending_buf[t.pending++]=e}function P(t,e){t.pending_buf[t.pending++]=e>>>8&255,t.pending_buf[t.pending++]=255&e}function L(t,e){var r,i,n=t.max_chain_length,s=t.strstart,a=t.prev_length,o=t.nice_match,h=t.strstart>t.w_size-z?t.strstart-(t.w_size-z):0,u=t.window,l=t.w_mask,f=t.prev,d=t.strstart+S,c=u[s+a-1],p=u[s+a];t.prev_length>=t.good_match&&(n>>=2),o>t.lookahead&&(o=t.lookahead);do{if(u[(r=e)+a]===p&&u[r+a-1]===c&&u[r]===u[s]&&u[++r]===u[s+1]){s+=2,r++;do{}while(u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&u[++s]===u[++r]&&s<d);if(i=S-(d-s),s=d-S,a<i){if(t.match_start=e,o<=(a=i))break;c=u[s+a-1],p=u[s+a]}}}while((e=f[e&l])>h&&0!=--n);return a<=t.lookahead?a:t.lookahead}function j(t){var e,r,i,n,s,a,o,h,u,l,f=t.w_size;do{if(n=t.window_size-t.lookahead-t.strstart,t.strstart>=f+(f-z)){for(d.arraySet(t.window,t.window,f,f,0),t.match_start-=f,t.strstart-=f,t.block_start-=f,e=r=t.hash_size;i=t.head[--e],t.head[e]=f<=i?i-f:0,--r;);for(e=r=f;i=t.prev[--e],t.prev[e]=f<=i?i-f:0,--r;);n+=f}if(0===t.strm.avail_in)break;if(a=t.strm,o=t.window,h=t.strstart+t.lookahead,u=n,l=void 0,l=a.avail_in,u<l&&(l=u),r=0===l?0:(a.avail_in-=l,d.arraySet(o,a.input,a.next_in,l,h),1===a.state.wrap?a.adler=c(a.adler,o,l,h):2===a.state.wrap&&(a.adler=p(a.adler,o,l,h)),a.next_in+=l,a.total_in+=l,l),t.lookahead+=r,t.lookahead+t.insert>=x)for(s=t.strstart-t.insert,t.ins_h=t.window[s],t.ins_h=(t.ins_h<<t.hash_shift^t.window[s+1])&t.hash_mask;t.insert&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[s+x-1])&t.hash_mask,t.prev[s&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=s,s++,t.insert--,!(t.lookahead+t.insert<x)););}while(t.lookahead<z&&0!==t.strm.avail_in)}function Z(t,e){for(var r,i;;){if(t.lookahead<z){if(j(t),t.lookahead<z&&e===l)return A;if(0===t.lookahead)break}if(r=0,t.lookahead>=x&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!==r&&t.strstart-r<=t.w_size-z&&(t.match_length=L(t,r)),t.match_length>=x)if(i=u._tr_tally(t,t.strstart-t.match_start,t.match_length-x),t.lookahead-=t.match_length,t.match_length<=t.max_lazy_match&&t.lookahead>=x){for(t.match_length--;t.strstart++,t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart,0!=--t.match_length;);t.strstart++}else t.strstart+=t.match_length,t.match_length=0,t.ins_h=t.window[t.strstart],t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+1])&t.hash_mask;else i=u._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++;if(i&&(N(t,!1),0===t.strm.avail_out))return A}return t.insert=t.strstart<x-1?t.strstart:x-1,e===f?(N(t,!0),0===t.strm.avail_out?O:B):t.last_lit&&(N(t,!1),0===t.strm.avail_out)?A:I}function W(t,e){for(var r,i,n;;){if(t.lookahead<z){if(j(t),t.lookahead<z&&e===l)return A;if(0===t.lookahead)break}if(r=0,t.lookahead>=x&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),t.prev_length=t.match_length,t.prev_match=t.match_start,t.match_length=x-1,0!==r&&t.prev_length<t.max_lazy_match&&t.strstart-r<=t.w_size-z&&(t.match_length=L(t,r),t.match_length<=5&&(1===t.strategy||t.match_length===x&&4096<t.strstart-t.match_start)&&(t.match_length=x-1)),t.prev_length>=x&&t.match_length<=t.prev_length){for(n=t.strstart+t.lookahead-x,i=u._tr_tally(t,t.strstart-1-t.prev_match,t.prev_length-x),t.lookahead-=t.prev_length-1,t.prev_length-=2;++t.strstart<=n&&(t.ins_h=(t.ins_h<<t.hash_shift^t.window[t.strstart+x-1])&t.hash_mask,r=t.prev[t.strstart&t.w_mask]=t.head[t.ins_h],t.head[t.ins_h]=t.strstart),0!=--t.prev_length;);if(t.match_available=0,t.match_length=x-1,t.strstart++,i&&(N(t,!1),0===t.strm.avail_out))return A}else if(t.match_available){if((i=u._tr_tally(t,0,t.window[t.strstart-1]))&&N(t,!1),t.strstart++,t.lookahead--,0===t.strm.avail_out)return A}else t.match_available=1,t.strstart++,t.lookahead--}return t.match_available&&(i=u._tr_tally(t,0,t.window[t.strstart-1]),t.match_available=0),t.insert=t.strstart<x-1?t.strstart:x-1,e===f?(N(t,!0),0===t.strm.avail_out?O:B):t.last_lit&&(N(t,!1),0===t.strm.avail_out)?A:I}function M(t,e,r,i,n){this.good_length=t,this.max_lazy=e,this.nice_length=r,this.max_chain=i,this.func=n}function H(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=v,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new d.Buf16(2*w),this.dyn_dtree=new d.Buf16(2*(2*a+1)),this.bl_tree=new d.Buf16(2*(2*o+1)),D(this.dyn_ltree),D(this.dyn_dtree),D(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new d.Buf16(k+1),this.heap=new d.Buf16(2*s+1),D(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new d.Buf16(2*s+1),D(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function G(t){var e;return t&&t.state?(t.total_in=t.total_out=0,t.data_type=n,(e=t.state).pending=0,e.pending_out=0,e.wrap<0&&(e.wrap=-e.wrap),e.status=e.wrap?C:E,t.adler=2===e.wrap?0:1,e.last_flush=l,u._tr_init(e),m):R(t,_)}function K(t){var e=G(t);return e===m&&function(t){t.window_size=2*t.w_size,D(t.head),t.max_lazy_match=h[t.level].max_lazy,t.good_match=h[t.level].good_length,t.nice_match=h[t.level].nice_length,t.max_chain_length=h[t.level].max_chain,t.strstart=0,t.block_start=0,t.lookahead=0,t.insert=0,t.match_length=t.prev_length=x-1,t.match_available=0,t.ins_h=0}(t.state),e}function Y(t,e,r,i,n,s){if(!t)return _;var a=1;if(e===g&&(e=6),i<0?(a=0,i=-i):15<i&&(a=2,i-=16),n<1||y<n||r!==v||i<8||15<i||e<0||9<e||s<0||b<s)return R(t,_);8===i&&(i=9);var o=new H;return(t.state=o).strm=t,o.wrap=a,o.gzhead=null,o.w_bits=i,o.w_size=1<<o.w_bits,o.w_mask=o.w_size-1,o.hash_bits=n+7,o.hash_size=1<<o.hash_bits,o.hash_mask=o.hash_size-1,o.hash_shift=~~((o.hash_bits+x-1)/x),o.window=new d.Buf8(2*o.w_size),o.head=new d.Buf16(o.hash_size),o.prev=new d.Buf16(o.w_size),o.lit_bufsize=1<<n+6,o.pending_buf_size=4*o.lit_bufsize,o.pending_buf=new d.Buf8(o.pending_buf_size),o.d_buf=1*o.lit_bufsize,o.l_buf=3*o.lit_bufsize,o.level=e,o.strategy=s,o.method=r,K(t)}h=[new M(0,0,0,0,function(t,e){var r=65535;for(r>t.pending_buf_size-5&&(r=t.pending_buf_size-5);;){if(t.lookahead<=1){if(j(t),0===t.lookahead&&e===l)return A;if(0===t.lookahead)break}t.strstart+=t.lookahead,t.lookahead=0;var i=t.block_start+r;if((0===t.strstart||t.strstart>=i)&&(t.lookahead=t.strstart-i,t.strstart=i,N(t,!1),0===t.strm.avail_out))return A;if(t.strstart-t.block_start>=t.w_size-z&&(N(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(N(t,!0),0===t.strm.avail_out?O:B):(t.strstart>t.block_start&&(N(t,!1),t.strm.avail_out),A)}),new M(4,4,8,4,Z),new M(4,5,16,8,Z),new M(4,6,32,32,Z),new M(4,4,16,16,W),new M(8,16,32,32,W),new M(8,16,128,128,W),new M(8,32,128,256,W),new M(32,128,258,1024,W),new M(32,258,258,4096,W)],r.deflateInit=function(t,e){return Y(t,e,v,15,8,0)},r.deflateInit2=Y,r.deflateReset=K,r.deflateResetKeep=G,r.deflateSetHeader=function(t,e){return t&&t.state?2!==t.state.wrap?_:(t.state.gzhead=e,m):_},r.deflate=function(t,e){var r,i,n,s;if(!t||!t.state||5<e||e<0)return t?R(t,_):_;if(i=t.state,!t.output||!t.input&&0!==t.avail_in||666===i.status&&e!==f)return R(t,0===t.avail_out?-5:_);if(i.strm=t,r=i.last_flush,i.last_flush=e,i.status===C)if(2===i.wrap)t.adler=0,U(i,31),U(i,139),U(i,8),i.gzhead?(U(i,(i.gzhead.text?1:0)+(i.gzhead.hcrc?2:0)+(i.gzhead.extra?4:0)+(i.gzhead.name?8:0)+(i.gzhead.comment?16:0)),U(i,255&i.gzhead.time),U(i,i.gzhead.time>>8&255),U(i,i.gzhead.time>>16&255),U(i,i.gzhead.time>>24&255),U(i,9===i.level?2:2<=i.strategy||i.level<2?4:0),U(i,255&i.gzhead.os),i.gzhead.extra&&i.gzhead.extra.length&&(U(i,255&i.gzhead.extra.length),U(i,i.gzhead.extra.length>>8&255)),i.gzhead.hcrc&&(t.adler=p(t.adler,i.pending_buf,i.pending,0)),i.gzindex=0,i.status=69):(U(i,0),U(i,0),U(i,0),U(i,0),U(i,0),U(i,9===i.level?2:2<=i.strategy||i.level<2?4:0),U(i,3),i.status=E);else{var a=v+(i.w_bits-8<<4)<<8;a|=(2<=i.strategy||i.level<2?0:i.level<6?1:6===i.level?2:3)<<6,0!==i.strstart&&(a|=32),a+=31-a%31,i.status=E,P(i,a),0!==i.strstart&&(P(i,t.adler>>>16),P(i,65535&t.adler)),t.adler=1}if(69===i.status)if(i.gzhead.extra){for(n=i.pending;i.gzindex<(65535&i.gzhead.extra.length)&&(i.pending!==i.pending_buf_size||(i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),F(t),n=i.pending,i.pending!==i.pending_buf_size));)U(i,255&i.gzhead.extra[i.gzindex]),i.gzindex++;i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),i.gzindex===i.gzhead.extra.length&&(i.gzindex=0,i.status=73)}else i.status=73;if(73===i.status)if(i.gzhead.name){n=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),F(t),n=i.pending,i.pending===i.pending_buf_size)){s=1;break}s=i.gzindex<i.gzhead.name.length?255&i.gzhead.name.charCodeAt(i.gzindex++):0,U(i,s)}while(0!==s);i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),0===s&&(i.gzindex=0,i.status=91)}else i.status=91;if(91===i.status)if(i.gzhead.comment){n=i.pending;do{if(i.pending===i.pending_buf_size&&(i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),F(t),n=i.pending,i.pending===i.pending_buf_size)){s=1;break}s=i.gzindex<i.gzhead.comment.length?255&i.gzhead.comment.charCodeAt(i.gzindex++):0,U(i,s)}while(0!==s);i.gzhead.hcrc&&i.pending>n&&(t.adler=p(t.adler,i.pending_buf,i.pending-n,n)),0===s&&(i.status=103)}else i.status=103;if(103===i.status&&(i.gzhead.hcrc?(i.pending+2>i.pending_buf_size&&F(t),i.pending+2<=i.pending_buf_size&&(U(i,255&t.adler),U(i,t.adler>>8&255),t.adler=0,i.status=E)):i.status=E),0!==i.pending){if(F(t),0===t.avail_out)return i.last_flush=-1,m}else if(0===t.avail_in&&T(e)<=T(r)&&e!==f)return R(t,-5);if(666===i.status&&0!==t.avail_in)return R(t,-5);if(0!==t.avail_in||0!==i.lookahead||e!==l&&666!==i.status){var o=2===i.strategy?function(t,e){for(var r;;){if(0===t.lookahead&&(j(t),0===t.lookahead)){if(e===l)return A;break}if(t.match_length=0,r=u._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++,r&&(N(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(N(t,!0),0===t.strm.avail_out?O:B):t.last_lit&&(N(t,!1),0===t.strm.avail_out)?A:I}(i,e):3===i.strategy?function(t,e){for(var r,i,n,s,a=t.window;;){if(t.lookahead<=S){if(j(t),t.lookahead<=S&&e===l)return A;if(0===t.lookahead)break}if(t.match_length=0,t.lookahead>=x&&0<t.strstart&&(i=a[n=t.strstart-1])===a[++n]&&i===a[++n]&&i===a[++n]){s=t.strstart+S;do{}while(i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&i===a[++n]&&n<s);t.match_length=S-(s-n),t.match_length>t.lookahead&&(t.match_length=t.lookahead)}if(t.match_length>=x?(r=u._tr_tally(t,1,t.match_length-x),t.lookahead-=t.match_length,t.strstart+=t.match_length,t.match_length=0):(r=u._tr_tally(t,0,t.window[t.strstart]),t.lookahead--,t.strstart++),r&&(N(t,!1),0===t.strm.avail_out))return A}return t.insert=0,e===f?(N(t,!0),0===t.strm.avail_out?O:B):t.last_lit&&(N(t,!1),0===t.strm.avail_out)?A:I}(i,e):h[i.level].func(i,e);if(o!==O&&o!==B||(i.status=666),o===A||o===O)return 0===t.avail_out&&(i.last_flush=-1),m;if(o===I&&(1===e?u._tr_align(i):5!==e&&(u._tr_stored_block(i,0,0,!1),3===e&&(D(i.head),0===i.lookahead&&(i.strstart=0,i.block_start=0,i.insert=0))),F(t),0===t.avail_out))return i.last_flush=-1,m}return e!==f?m:i.wrap<=0?1:(2===i.wrap?(U(i,255&t.adler),U(i,t.adler>>8&255),U(i,t.adler>>16&255),U(i,t.adler>>24&255),U(i,255&t.total_in),U(i,t.total_in>>8&255),U(i,t.total_in>>16&255),U(i,t.total_in>>24&255)):(P(i,t.adler>>>16),P(i,65535&t.adler)),F(t),0<i.wrap&&(i.wrap=-i.wrap),0!==i.pending?m:1)},r.deflateEnd=function(t){var e;return t&&t.state?(e=t.state.status)!==C&&69!==e&&73!==e&&91!==e&&103!==e&&e!==E&&666!==e?R(t,_):(t.state=null,e===E?R(t,-3):m):_},r.deflateSetDictionary=function(t,e){var r,i,n,s,a,o,h,u,l=e.length;if(!t||!t.state)return _;if(2===(s=(r=t.state).wrap)||1===s&&r.status!==C||r.lookahead)return _;for(1===s&&(t.adler=c(t.adler,e,l,0)),r.wrap=0,l>=r.w_size&&(0===s&&(D(r.head),r.strstart=0,r.block_start=0,r.insert=0),u=new d.Buf8(r.w_size),d.arraySet(u,e,l-r.w_size,r.w_size,0),e=u,l=r.w_size),a=t.avail_in,o=t.next_in,h=t.input,t.avail_in=l,t.next_in=0,t.input=e,j(r);r.lookahead>=x;){for(i=r.strstart,n=r.lookahead-(x-1);r.ins_h=(r.ins_h<<r.hash_shift^r.window[i+x-1])&r.hash_mask,r.prev[i&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=i,i++,--n;);r.strstart=i,r.lookahead=x-1,j(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=x-1,r.match_available=0,t.next_in=o,t.input=h,t.avail_in=a,r.wrap=s,m},r.deflateInfo=\"pako deflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./messages\":51,\"./trees\":52}],47:[function(t,e,r){\"use strict\";e.exports=function(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name=\"\",this.comment=\"\",this.hcrc=0,this.done=!1}},{}],48:[function(t,e,r){\"use strict\";e.exports=function(t,e){var r,i,n,s,a,o,h,u,l,f,d,c,p,m,_,g,b,v,y,w,k,x,S,z,C;r=t.state,i=t.next_in,z=t.input,n=i+(t.avail_in-5),s=t.next_out,C=t.output,a=s-(e-t.avail_out),o=s+(t.avail_out-257),h=r.dmax,u=r.wsize,l=r.whave,f=r.wnext,d=r.window,c=r.hold,p=r.bits,m=r.lencode,_=r.distcode,g=(1<<r.lenbits)-1,b=(1<<r.distbits)-1;t:do{p<15&&(c+=z[i++]<<p,p+=8,c+=z[i++]<<p,p+=8),v=m[c&g];e:for(;;){if(c>>>=y=v>>>24,p-=y,0===(y=v>>>16&255))C[s++]=65535&v;else{if(!(16&y)){if(0==(64&y)){v=m[(65535&v)+(c&(1<<y)-1)];continue e}if(32&y){r.mode=12;break t}t.msg=\"invalid literal/length code\",r.mode=30;break t}w=65535&v,(y&=15)&&(p<y&&(c+=z[i++]<<p,p+=8),w+=c&(1<<y)-1,c>>>=y,p-=y),p<15&&(c+=z[i++]<<p,p+=8,c+=z[i++]<<p,p+=8),v=_[c&b];r:for(;;){if(c>>>=y=v>>>24,p-=y,!(16&(y=v>>>16&255))){if(0==(64&y)){v=_[(65535&v)+(c&(1<<y)-1)];continue r}t.msg=\"invalid distance code\",r.mode=30;break t}if(k=65535&v,p<(y&=15)&&(c+=z[i++]<<p,(p+=8)<y&&(c+=z[i++]<<p,p+=8)),h<(k+=c&(1<<y)-1)){t.msg=\"invalid distance too far back\",r.mode=30;break t}if(c>>>=y,p-=y,(y=s-a)<k){if(l<(y=k-y)&&r.sane){t.msg=\"invalid distance too far back\",r.mode=30;break t}if(S=d,(x=0)===f){if(x+=u-y,y<w){for(w-=y;C[s++]=d[x++],--y;);x=s-k,S=C}}else if(f<y){if(x+=u+f-y,(y-=f)<w){for(w-=y;C[s++]=d[x++],--y;);if(x=0,f<w){for(w-=y=f;C[s++]=d[x++],--y;);x=s-k,S=C}}}else if(x+=f-y,y<w){for(w-=y;C[s++]=d[x++],--y;);x=s-k,S=C}for(;2<w;)C[s++]=S[x++],C[s++]=S[x++],C[s++]=S[x++],w-=3;w&&(C[s++]=S[x++],1<w&&(C[s++]=S[x++]))}else{for(x=s-k;C[s++]=C[x++],C[s++]=C[x++],C[s++]=C[x++],2<(w-=3););w&&(C[s++]=C[x++],1<w&&(C[s++]=C[x++]))}break}}break}}while(i<n&&s<o);i-=w=p>>3,c&=(1<<(p-=w<<3))-1,t.next_in=i,t.next_out=s,t.avail_in=i<n?n-i+5:5-(i-n),t.avail_out=s<o?o-s+257:257-(s-o),r.hold=c,r.bits=p}},{}],49:[function(t,e,r){\"use strict\";var I=t(\"../utils/common\"),O=t(\"./adler32\"),B=t(\"./crc32\"),R=t(\"./inffast\"),T=t(\"./inftrees\"),D=1,F=2,N=0,U=-2,P=1,i=852,n=592;function L(t){return(t>>>24&255)+(t>>>8&65280)+((65280&t)<<8)+((255&t)<<24)}function s(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new I.Buf16(320),this.work=new I.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function a(t){var e;return t&&t.state?(e=t.state,t.total_in=t.total_out=e.total=0,t.msg=\"\",e.wrap&&(t.adler=1&e.wrap),e.mode=P,e.last=0,e.havedict=0,e.dmax=32768,e.head=null,e.hold=0,e.bits=0,e.lencode=e.lendyn=new I.Buf32(i),e.distcode=e.distdyn=new I.Buf32(n),e.sane=1,e.back=-1,N):U}function o(t){var e;return t&&t.state?((e=t.state).wsize=0,e.whave=0,e.wnext=0,a(t)):U}function h(t,e){var r,i;return t&&t.state?(i=t.state,e<0?(r=0,e=-e):(r=1+(e>>4),e<48&&(e&=15)),e&&(e<8||15<e)?U:(null!==i.window&&i.wbits!==e&&(i.window=null),i.wrap=r,i.wbits=e,o(t))):U}function u(t,e){var r,i;return t?(i=new s,(t.state=i).window=null,(r=h(t,e))!==N&&(t.state=null),r):U}var l,f,d=!0;function j(t){if(d){var e;for(l=new I.Buf32(512),f=new I.Buf32(32),e=0;e<144;)t.lens[e++]=8;for(;e<256;)t.lens[e++]=9;for(;e<280;)t.lens[e++]=7;for(;e<288;)t.lens[e++]=8;for(T(D,t.lens,0,288,l,0,t.work,{bits:9}),e=0;e<32;)t.lens[e++]=5;T(F,t.lens,0,32,f,0,t.work,{bits:5}),d=!1}t.lencode=l,t.lenbits=9,t.distcode=f,t.distbits=5}function Z(t,e,r,i){var n,s=t.state;return null===s.window&&(s.wsize=1<<s.wbits,s.wnext=0,s.whave=0,s.window=new I.Buf8(s.wsize)),i>=s.wsize?(I.arraySet(s.window,e,r-s.wsize,s.wsize,0),s.wnext=0,s.whave=s.wsize):(i<(n=s.wsize-s.wnext)&&(n=i),I.arraySet(s.window,e,r-i,n,s.wnext),(i-=n)?(I.arraySet(s.window,e,r-i,i,0),s.wnext=i,s.whave=s.wsize):(s.wnext+=n,s.wnext===s.wsize&&(s.wnext=0),s.whave<s.wsize&&(s.whave+=n))),0}r.inflateReset=o,r.inflateReset2=h,r.inflateResetKeep=a,r.inflateInit=function(t){return u(t,15)},r.inflateInit2=u,r.inflate=function(t,e){var r,i,n,s,a,o,h,u,l,f,d,c,p,m,_,g,b,v,y,w,k,x,S,z,C=0,E=new I.Buf8(4),A=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!t||!t.state||!t.output||!t.input&&0!==t.avail_in)return U;12===(r=t.state).mode&&(r.mode=13),a=t.next_out,n=t.output,h=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,u=r.hold,l=r.bits,f=o,d=h,x=N;t:for(;;)switch(r.mode){case P:if(0===r.wrap){r.mode=13;break}for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(2&r.wrap&&35615===u){E[r.check=0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0),l=u=0,r.mode=2;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&u)<<8)+(u>>8))%31){t.msg=\"incorrect header check\",r.mode=30;break}if(8!=(15&u)){t.msg=\"unknown compression method\",r.mode=30;break}if(l-=4,k=8+(15&(u>>>=4)),0===r.wbits)r.wbits=k;else if(k>r.wbits){t.msg=\"invalid window size\",r.mode=30;break}r.dmax=1<<k,t.adler=r.check=1,r.mode=512&u?10:12,l=u=0;break;case 2:for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(r.flags=u,8!=(255&r.flags)){t.msg=\"unknown compression method\",r.mode=30;break}if(57344&r.flags){t.msg=\"unknown header flags set\",r.mode=30;break}r.head&&(r.head.text=u>>8&1),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=3;case 3:for(;l<32;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.head&&(r.head.time=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,E[2]=u>>>16&255,E[3]=u>>>24&255,r.check=B(r.check,E,4,0)),l=u=0,r.mode=4;case 4:for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.head&&(r.head.xflags=255&u,r.head.os=u>>8),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0,r.mode=5;case 5:if(1024&r.flags){for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.length=u,r.head&&(r.head.extra_len=u),512&r.flags&&(E[0]=255&u,E[1]=u>>>8&255,r.check=B(r.check,E,2,0)),l=u=0}else r.head&&(r.head.extra=null);r.mode=6;case 6:if(1024&r.flags&&(o<(c=r.length)&&(c=o),c&&(r.head&&(k=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),I.arraySet(r.head.extra,i,s,c,k)),512&r.flags&&(r.check=B(r.check,i,c,s)),o-=c,s+=c,r.length-=c),r.length))break t;r.length=0,r.mode=7;case 7:if(2048&r.flags){if(0===o)break t;for(c=0;k=i[s+c++],r.head&&k&&r.length<65536&&(r.head.name+=String.fromCharCode(k)),k&&c<o;);if(512&r.flags&&(r.check=B(r.check,i,c,s)),o-=c,s+=c,k)break t}else r.head&&(r.head.name=null);r.length=0,r.mode=8;case 8:if(4096&r.flags){if(0===o)break t;for(c=0;k=i[s+c++],r.head&&k&&r.length<65536&&(r.head.comment+=String.fromCharCode(k)),k&&c<o;);if(512&r.flags&&(r.check=B(r.check,i,c,s)),o-=c,s+=c,k)break t}else r.head&&(r.head.comment=null);r.mode=9;case 9:if(512&r.flags){for(;l<16;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(u!==(65535&r.check)){t.msg=\"header crc mismatch\",r.mode=30;break}l=u=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),t.adler=r.check=0,r.mode=12;break;case 10:for(;l<32;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}t.adler=r.check=L(u),l=u=0,r.mode=11;case 11:if(0===r.havedict)return t.next_out=a,t.avail_out=h,t.next_in=s,t.avail_in=o,r.hold=u,r.bits=l,2;t.adler=r.check=1,r.mode=12;case 12:if(5===e||6===e)break t;case 13:if(r.last){u>>>=7&l,l-=7&l,r.mode=27;break}for(;l<3;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}switch(r.last=1&u,l-=1,3&(u>>>=1)){case 0:r.mode=14;break;case 1:if(j(r),r.mode=20,6!==e)break;u>>>=2,l-=2;break t;case 2:r.mode=17;break;case 3:t.msg=\"invalid block type\",r.mode=30}u>>>=2,l-=2;break;case 14:for(u>>>=7&l,l-=7&l;l<32;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if((65535&u)!=(u>>>16^65535)){t.msg=\"invalid stored block lengths\",r.mode=30;break}if(r.length=65535&u,l=u=0,r.mode=15,6===e)break t;case 15:r.mode=16;case 16:if(c=r.length){if(o<c&&(c=o),h<c&&(c=h),0===c)break t;I.arraySet(n,i,s,c,a),o-=c,s+=c,h-=c,a+=c,r.length-=c;break}r.mode=12;break;case 17:for(;l<14;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(r.nlen=257+(31&u),u>>>=5,l-=5,r.ndist=1+(31&u),u>>>=5,l-=5,r.ncode=4+(15&u),u>>>=4,l-=4,286<r.nlen||30<r.ndist){t.msg=\"too many length or distance symbols\",r.mode=30;break}r.have=0,r.mode=18;case 18:for(;r.have<r.ncode;){for(;l<3;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.lens[A[r.have++]]=7&u,u>>>=3,l-=3}for(;r.have<19;)r.lens[A[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,S={bits:r.lenbits},x=T(0,r.lens,0,19,r.lencode,0,r.work,S),r.lenbits=S.bits,x){t.msg=\"invalid code lengths set\",r.mode=30;break}r.have=0,r.mode=19;case 19:for(;r.have<r.nlen+r.ndist;){for(;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(b<16)u>>>=_,l-=_,r.lens[r.have++]=b;else{if(16===b){for(z=_+2;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(u>>>=_,l-=_,0===r.have){t.msg=\"invalid bit length repeat\",r.mode=30;break}k=r.lens[r.have-1],c=3+(3&u),u>>>=2,l-=2}else if(17===b){for(z=_+3;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}l-=_,k=0,c=3+(7&(u>>>=_)),u>>>=3,l-=3}else{for(z=_+7;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}l-=_,k=0,c=11+(127&(u>>>=_)),u>>>=7,l-=7}if(r.have+c>r.nlen+r.ndist){t.msg=\"invalid bit length repeat\",r.mode=30;break}for(;c--;)r.lens[r.have++]=k}}if(30===r.mode)break;if(0===r.lens[256]){t.msg=\"invalid code -- missing end-of-block\",r.mode=30;break}if(r.lenbits=9,S={bits:r.lenbits},x=T(D,r.lens,0,r.nlen,r.lencode,0,r.work,S),r.lenbits=S.bits,x){t.msg=\"invalid literal/lengths set\",r.mode=30;break}if(r.distbits=6,r.distcode=r.distdyn,S={bits:r.distbits},x=T(F,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,S),r.distbits=S.bits,x){t.msg=\"invalid distances set\",r.mode=30;break}if(r.mode=20,6===e)break t;case 20:r.mode=21;case 21:if(6<=o&&258<=h){t.next_out=a,t.avail_out=h,t.next_in=s,t.avail_in=o,r.hold=u,r.bits=l,R(t,d),a=t.next_out,n=t.output,h=t.avail_out,s=t.next_in,i=t.input,o=t.avail_in,u=r.hold,l=r.bits,12===r.mode&&(r.back=-1);break}for(r.back=0;g=(C=r.lencode[u&(1<<r.lenbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(g&&0==(240&g)){for(v=_,y=g,w=b;g=(C=r.lencode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,r.length=b,0===g){r.mode=26;break}if(32&g){r.back=-1,r.mode=12;break}if(64&g){t.msg=\"invalid literal/length code\",r.mode=30;break}r.extra=15&g,r.mode=22;case 22:if(r.extra){for(z=r.extra;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.length+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=23;case 23:for(;g=(C=r.distcode[u&(1<<r.distbits)-1])>>>16&255,b=65535&C,!((_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(0==(240&g)){for(v=_,y=g,w=b;g=(C=r.distcode[w+((u&(1<<v+y)-1)>>v)])>>>16&255,b=65535&C,!(v+(_=C>>>24)<=l);){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}u>>>=v,l-=v,r.back+=v}if(u>>>=_,l-=_,r.back+=_,64&g){t.msg=\"invalid distance code\",r.mode=30;break}r.offset=b,r.extra=15&g,r.mode=24;case 24:if(r.extra){for(z=r.extra;l<z;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}r.offset+=u&(1<<r.extra)-1,u>>>=r.extra,l-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){t.msg=\"invalid distance too far back\",r.mode=30;break}r.mode=25;case 25:if(0===h)break t;if(c=d-h,r.offset>c){if((c=r.offset-c)>r.whave&&r.sane){t.msg=\"invalid distance too far back\",r.mode=30;break}p=c>r.wnext?(c-=r.wnext,r.wsize-c):r.wnext-c,c>r.length&&(c=r.length),m=r.window}else m=n,p=a-r.offset,c=r.length;for(h<c&&(c=h),h-=c,r.length-=c;n[a++]=m[p++],--c;);0===r.length&&(r.mode=21);break;case 26:if(0===h)break t;n[a++]=r.length,h--,r.mode=21;break;case 27:if(r.wrap){for(;l<32;){if(0===o)break t;o--,u|=i[s++]<<l,l+=8}if(d-=h,t.total_out+=d,r.total+=d,d&&(t.adler=r.check=r.flags?B(r.check,n,d,a-d):O(r.check,n,d,a-d)),d=h,(r.flags?u:L(u))!==r.check){t.msg=\"incorrect data check\",r.mode=30;break}l=u=0}r.mode=28;case 28:if(r.wrap&&r.flags){for(;l<32;){if(0===o)break t;o--,u+=i[s++]<<l,l+=8}if(u!==(4294967295&r.total)){t.msg=\"incorrect length check\",r.mode=30;break}l=u=0}r.mode=29;case 29:x=1;break t;case 30:x=-3;break t;case 31:return-4;case 32:default:return U}return t.next_out=a,t.avail_out=h,t.next_in=s,t.avail_in=o,r.hold=u,r.bits=l,(r.wsize||d!==t.avail_out&&r.mode<30&&(r.mode<27||4!==e))&&Z(t,t.output,t.next_out,d-t.avail_out)?(r.mode=31,-4):(f-=t.avail_in,d-=t.avail_out,t.total_in+=f,t.total_out+=d,r.total+=d,r.wrap&&d&&(t.adler=r.check=r.flags?B(r.check,n,d,t.next_out-d):O(r.check,n,d,t.next_out-d)),t.data_type=r.bits+(r.last?64:0)+(12===r.mode?128:0)+(20===r.mode||15===r.mode?256:0),(0==f&&0===d||4===e)&&x===N&&(x=-5),x)},r.inflateEnd=function(t){if(!t||!t.state)return U;var e=t.state;return e.window&&(e.window=null),t.state=null,N},r.inflateGetHeader=function(t,e){var r;return t&&t.state?0==(2&(r=t.state).wrap)?U:((r.head=e).done=!1,N):U},r.inflateSetDictionary=function(t,e){var r,i=e.length;return t&&t.state?0!==(r=t.state).wrap&&11!==r.mode?U:11===r.mode&&O(1,e,i,0)!==r.check?-3:Z(t,e,i,i)?(r.mode=31,-4):(r.havedict=1,N):U},r.inflateInfo=\"pako inflate (from Nodeca project)\"},{\"../utils/common\":41,\"./adler32\":43,\"./crc32\":45,\"./inffast\":48,\"./inftrees\":50}],50:[function(t,e,r){\"use strict\";var D=t(\"../utils/common\"),F=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],N=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],U=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],P=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64];e.exports=function(t,e,r,i,n,s,a,o){var h,u,l,f,d,c,p,m,_,g=o.bits,b=0,v=0,y=0,w=0,k=0,x=0,S=0,z=0,C=0,E=0,A=null,I=0,O=new D.Buf16(16),B=new D.Buf16(16),R=null,T=0;for(b=0;b<=15;b++)O[b]=0;for(v=0;v<i;v++)O[e[r+v]]++;for(k=g,w=15;1<=w&&0===O[w];w--);if(w<k&&(k=w),0===w)return n[s++]=20971520,n[s++]=20971520,o.bits=1,0;for(y=1;y<w&&0===O[y];y++);for(k<y&&(k=y),b=z=1;b<=15;b++)if(z<<=1,(z-=O[b])<0)return-1;if(0<z&&(0===t||1!==w))return-1;for(B[1]=0,b=1;b<15;b++)B[b+1]=B[b]+O[b];for(v=0;v<i;v++)0!==e[r+v]&&(a[B[e[r+v]]++]=v);if(c=0===t?(A=R=a,19):1===t?(A=F,I-=257,R=N,T-=257,256):(A=U,R=P,-1),b=y,d=s,S=v=E=0,l=-1,f=(C=1<<(x=k))-1,1===t&&852<C||2===t&&592<C)return 1;for(;;){for(p=b-S,_=a[v]<c?(m=0,a[v]):a[v]>c?(m=R[T+a[v]],A[I+a[v]]):(m=96,0),h=1<<b-S,y=u=1<<x;n[d+(E>>S)+(u-=h)]=p<<24|m<<16|_|0,0!==u;);for(h=1<<b-1;E&h;)h>>=1;if(0!==h?(E&=h-1,E+=h):E=0,v++,0==--O[b]){if(b===w)break;b=e[r+a[v]]}if(k<b&&(E&f)!==l){for(0===S&&(S=k),d+=y,z=1<<(x=b-S);x+S<w&&!((z-=O[x+S])<=0);)x++,z<<=1;if(C+=1<<x,1===t&&852<C||2===t&&592<C)return 1;n[l=E&f]=k<<24|x<<16|d-s|0}}return 0!==E&&(n[d+E]=b-S<<24|64<<16|0),o.bits=k,0}},{\"../utils/common\":41}],51:[function(t,e,r){\"use strict\";e.exports={2:\"need dictionary\",1:\"stream end\",0:\"\",\"-1\":\"file error\",\"-2\":\"stream error\",\"-3\":\"data error\",\"-4\":\"insufficient memory\",\"-5\":\"buffer error\",\"-6\":\"incompatible version\"}},{}],52:[function(t,e,r){\"use strict\";var n=t(\"../utils/common\"),o=0,h=1;function i(t){for(var e=t.length;0<=--e;)t[e]=0}var s=0,a=29,u=256,l=u+1+a,f=30,d=19,_=2*l+1,g=15,c=16,p=7,m=256,b=16,v=17,y=18,w=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],k=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],x=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],S=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],z=new Array(2*(l+2));i(z);var C=new Array(2*f);i(C);var E=new Array(512);i(E);var A=new Array(256);i(A);var I=new Array(a);i(I);var O,B,R,T=new Array(f);function D(t,e,r,i,n){this.static_tree=t,this.extra_bits=e,this.extra_base=r,this.elems=i,this.max_length=n,this.has_stree=t&&t.length}function F(t,e){this.dyn_tree=t,this.max_code=0,this.stat_desc=e}function N(t){return t<256?E[t]:E[256+(t>>>7)]}function U(t,e){t.pending_buf[t.pending++]=255&e,t.pending_buf[t.pending++]=e>>>8&255}function P(t,e,r){t.bi_valid>c-r?(t.bi_buf|=e<<t.bi_valid&65535,U(t,t.bi_buf),t.bi_buf=e>>c-t.bi_valid,t.bi_valid+=r-c):(t.bi_buf|=e<<t.bi_valid&65535,t.bi_valid+=r)}function L(t,e,r){P(t,r[2*e],r[2*e+1])}function j(t,e){for(var r=0;r|=1&t,t>>>=1,r<<=1,0<--e;);return r>>>1}function Z(t,e,r){var i,n,s=new Array(g+1),a=0;for(i=1;i<=g;i++)s[i]=a=a+r[i-1]<<1;for(n=0;n<=e;n++){var o=t[2*n+1];0!==o&&(t[2*n]=j(s[o]++,o))}}function W(t){var e;for(e=0;e<l;e++)t.dyn_ltree[2*e]=0;for(e=0;e<f;e++)t.dyn_dtree[2*e]=0;for(e=0;e<d;e++)t.bl_tree[2*e]=0;t.dyn_ltree[2*m]=1,t.opt_len=t.static_len=0,t.last_lit=t.matches=0}function M(t){8<t.bi_valid?U(t,t.bi_buf):0<t.bi_valid&&(t.pending_buf[t.pending++]=t.bi_buf),t.bi_buf=0,t.bi_valid=0}function H(t,e,r,i){var n=2*e,s=2*r;return t[n]<t[s]||t[n]===t[s]&&i[e]<=i[r]}function G(t,e,r){for(var i=t.heap[r],n=r<<1;n<=t.heap_len&&(n<t.heap_len&&H(e,t.heap[n+1],t.heap[n],t.depth)&&n++,!H(e,i,t.heap[n],t.depth));)t.heap[r]=t.heap[n],r=n,n<<=1;t.heap[r]=i}function K(t,e,r){var i,n,s,a,o=0;if(0!==t.last_lit)for(;i=t.pending_buf[t.d_buf+2*o]<<8|t.pending_buf[t.d_buf+2*o+1],n=t.pending_buf[t.l_buf+o],o++,0===i?L(t,n,e):(L(t,(s=A[n])+u+1,e),0!==(a=w[s])&&P(t,n-=I[s],a),L(t,s=N(--i),r),0!==(a=k[s])&&P(t,i-=T[s],a)),o<t.last_lit;);L(t,m,e)}function Y(t,e){var r,i,n,s=e.dyn_tree,a=e.stat_desc.static_tree,o=e.stat_desc.has_stree,h=e.stat_desc.elems,u=-1;for(t.heap_len=0,t.heap_max=_,r=0;r<h;r++)0!==s[2*r]?(t.heap[++t.heap_len]=u=r,t.depth[r]=0):s[2*r+1]=0;for(;t.heap_len<2;)s[2*(n=t.heap[++t.heap_len]=u<2?++u:0)]=1,t.depth[n]=0,t.opt_len--,o&&(t.static_len-=a[2*n+1]);for(e.max_code=u,r=t.heap_len>>1;1<=r;r--)G(t,s,r);for(n=h;r=t.heap[1],t.heap[1]=t.heap[t.heap_len--],G(t,s,1),i=t.heap[1],t.heap[--t.heap_max]=r,t.heap[--t.heap_max]=i,s[2*n]=s[2*r]+s[2*i],t.depth[n]=(t.depth[r]>=t.depth[i]?t.depth[r]:t.depth[i])+1,s[2*r+1]=s[2*i+1]=n,t.heap[1]=n++,G(t,s,1),2<=t.heap_len;);t.heap[--t.heap_max]=t.heap[1],function(t,e){var r,i,n,s,a,o,h=e.dyn_tree,u=e.max_code,l=e.stat_desc.static_tree,f=e.stat_desc.has_stree,d=e.stat_desc.extra_bits,c=e.stat_desc.extra_base,p=e.stat_desc.max_length,m=0;for(s=0;s<=g;s++)t.bl_count[s]=0;for(h[2*t.heap[t.heap_max]+1]=0,r=t.heap_max+1;r<_;r++)p<(s=h[2*h[2*(i=t.heap[r])+1]+1]+1)&&(s=p,m++),h[2*i+1]=s,u<i||(t.bl_count[s]++,a=0,c<=i&&(a=d[i-c]),o=h[2*i],t.opt_len+=o*(s+a),f&&(t.static_len+=o*(l[2*i+1]+a)));if(0!==m){do{for(s=p-1;0===t.bl_count[s];)s--;t.bl_count[s]--,t.bl_count[s+1]+=2,t.bl_count[p]--,m-=2}while(0<m);for(s=p;0!==s;s--)for(i=t.bl_count[s];0!==i;)u<(n=t.heap[--r])||(h[2*n+1]!==s&&(t.opt_len+=(s-h[2*n+1])*h[2*n],h[2*n+1]=s),i--)}}(t,e),Z(s,u,t.bl_count)}function X(t,e,r){var i,n,s=-1,a=e[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),e[2*(r+1)+1]=65535,i=0;i<=r;i++)n=a,a=e[2*(i+1)+1],++o<h&&n===a||(o<u?t.bl_tree[2*n]+=o:0!==n?(n!==s&&t.bl_tree[2*n]++,t.bl_tree[2*b]++):o<=10?t.bl_tree[2*v]++:t.bl_tree[2*y]++,s=n,u=(o=0)===a?(h=138,3):n===a?(h=6,3):(h=7,4))}function V(t,e,r){var i,n,s=-1,a=e[1],o=0,h=7,u=4;for(0===a&&(h=138,u=3),i=0;i<=r;i++)if(n=a,a=e[2*(i+1)+1],!(++o<h&&n===a)){if(o<u)for(;L(t,n,t.bl_tree),0!=--o;);else 0!==n?(n!==s&&(L(t,n,t.bl_tree),o--),L(t,b,t.bl_tree),P(t,o-3,2)):o<=10?(L(t,v,t.bl_tree),P(t,o-3,3)):(L(t,y,t.bl_tree),P(t,o-11,7));s=n,u=(o=0)===a?(h=138,3):n===a?(h=6,3):(h=7,4)}}i(T);var q=!1;function J(t,e,r,i){P(t,(s<<1)+(i?1:0),3),function(t,e,r,i){M(t),i&&(U(t,r),U(t,~r)),n.arraySet(t.pending_buf,t.window,e,r,t.pending),t.pending+=r}(t,e,r,!0)}r._tr_init=function(t){q||(function(){var t,e,r,i,n,s=new Array(g+1);for(i=r=0;i<a-1;i++)for(I[i]=r,t=0;t<1<<w[i];t++)A[r++]=i;for(A[r-1]=i,i=n=0;i<16;i++)for(T[i]=n,t=0;t<1<<k[i];t++)E[n++]=i;for(n>>=7;i<f;i++)for(T[i]=n<<7,t=0;t<1<<k[i]-7;t++)E[256+n++]=i;for(e=0;e<=g;e++)s[e]=0;for(t=0;t<=143;)z[2*t+1]=8,t++,s[8]++;for(;t<=255;)z[2*t+1]=9,t++,s[9]++;for(;t<=279;)z[2*t+1]=7,t++,s[7]++;for(;t<=287;)z[2*t+1]=8,t++,s[8]++;for(Z(z,l+1,s),t=0;t<f;t++)C[2*t+1]=5,C[2*t]=j(t,5);O=new D(z,w,u+1,l,g),B=new D(C,k,0,f,g),R=new D(new Array(0),x,0,d,p)}(),q=!0),t.l_desc=new F(t.dyn_ltree,O),t.d_desc=new F(t.dyn_dtree,B),t.bl_desc=new F(t.bl_tree,R),t.bi_buf=0,t.bi_valid=0,W(t)},r._tr_stored_block=J,r._tr_flush_block=function(t,e,r,i){var n,s,a=0;0<t.level?(2===t.strm.data_type&&(t.strm.data_type=function(t){var e,r=4093624447;for(e=0;e<=31;e++,r>>>=1)if(1&r&&0!==t.dyn_ltree[2*e])return o;if(0!==t.dyn_ltree[18]||0!==t.dyn_ltree[20]||0!==t.dyn_ltree[26])return h;for(e=32;e<u;e++)if(0!==t.dyn_ltree[2*e])return h;return o}(t)),Y(t,t.l_desc),Y(t,t.d_desc),a=function(t){var e;for(X(t,t.dyn_ltree,t.l_desc.max_code),X(t,t.dyn_dtree,t.d_desc.max_code),Y(t,t.bl_desc),e=d-1;3<=e&&0===t.bl_tree[2*S[e]+1];e--);return t.opt_len+=3*(e+1)+5+5+4,e}(t),n=t.opt_len+3+7>>>3,(s=t.static_len+3+7>>>3)<=n&&(n=s)):n=s=r+5,r+4<=n&&-1!==e?J(t,e,r,i):4===t.strategy||s===n?(P(t,2+(i?1:0),3),K(t,z,C)):(P(t,4+(i?1:0),3),function(t,e,r,i){var n;for(P(t,e-257,5),P(t,r-1,5),P(t,i-4,4),n=0;n<i;n++)P(t,t.bl_tree[2*S[n]+1],3);V(t,t.dyn_ltree,e-1),V(t,t.dyn_dtree,r-1)}(t,t.l_desc.max_code+1,t.d_desc.max_code+1,a+1),K(t,t.dyn_ltree,t.dyn_dtree)),W(t),i&&M(t)},r._tr_tally=function(t,e,r){return t.pending_buf[t.d_buf+2*t.last_lit]=e>>>8&255,t.pending_buf[t.d_buf+2*t.last_lit+1]=255&e,t.pending_buf[t.l_buf+t.last_lit]=255&r,t.last_lit++,0===e?t.dyn_ltree[2*r]++:(t.matches++,e--,t.dyn_ltree[2*(A[r]+u+1)]++,t.dyn_dtree[2*N(e)]++),t.last_lit===t.lit_bufsize-1},r._tr_align=function(t){P(t,2,3),L(t,m,z),function(t){16===t.bi_valid?(U(t,t.bi_buf),t.bi_buf=0,t.bi_valid=0):8<=t.bi_valid&&(t.pending_buf[t.pending++]=255&t.bi_buf,t.bi_buf>>=8,t.bi_valid-=8)}(t)}},{\"../utils/common\":41}],53:[function(t,e,r){\"use strict\";e.exports=function(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg=\"\",this.state=null,this.data_type=2,this.adler=0}},{}],54:[function(t,e,r){\"use strict\";e.exports=\"function\"==typeof setImmediate?setImmediate:function(){var t=[].slice.apply(arguments);t.splice(1,0,0),setTimeout.apply(null,t)}},{}]},{},[10])(10)});","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","\n// We are modularizing this manually because the current modularize setting in Emscripten has some issues:\n// https://github.com/kripken/emscripten/issues/5820\n// In addition, When you use emcc's modularization, it still expects to export a global object called `Module`,\n// which is able to be used/called before the WASM is loaded.\n// The modularization below exports a promise that loads and resolves to the actual sql.js module.\n// That way, this module can't be used before the WASM is finished loading.\n\n// We are going to define a function that a user will call to start loading initializing our Sql.js library\n// However, that function might be called multiple times, and on subsequent calls, we don't actually want it to instantiate a new instance of the Module\n// Instead, we want to return the previously loaded module\n\n// TODO: Make this not declare a global if used in the browser\nvar initSqlJsPromise = undefined;\n\nvar initSqlJs = function (moduleConfig) {\n\n    if (initSqlJsPromise){\n      return initSqlJsPromise;\n    }\n    // If we're here, we've never called this function before\n    initSqlJsPromise = new Promise(function (resolveModule, reject) {\n\n        // We are modularizing this manually because the current modularize setting in Emscripten has some issues:\n        // https://github.com/kripken/emscripten/issues/5820\n\n        // The way to affect the loading of emcc compiled modules is to create a variable called `Module` and add\n        // properties to it, like `preRun`, `postRun`, etc\n        // We are using that to get notified when the WASM has finished loading.\n        // Only then will we return our promise\n\n        // If they passed in a moduleConfig object, use that\n        // Otherwise, initialize Module to the empty object\n        var Module = typeof moduleConfig !== 'undefined' ? moduleConfig : {};\n\n        // EMCC only allows for a single onAbort function (not an array of functions)\n        // So if the user defined their own onAbort function, we remember it and call it\n        var originalOnAbortFunction = Module['onAbort'];\n        Module['onAbort'] = function (errorThatCausedAbort) {\n            reject(new Error(errorThatCausedAbort));\n            if (originalOnAbortFunction){\n              originalOnAbortFunction(errorThatCausedAbort);\n            }\n        };\n\n        Module['postRun'] = Module['postRun'] || [];\n        Module['postRun'].push(function () {\n            // When Emscripted calls postRun, this promise resolves with the built Module\n            resolveModule(Module);\n        });\n\n        // There is a section of code in the emcc-generated code below that looks like this:\n        // (Note that this is lowercase `module`)\n        // if (typeof module !== 'undefined') {\n        //     module['exports'] = Module;\n        // }\n        // When that runs, it's going to overwrite our own modularization export efforts in shell-post.js!\n        // The only way to tell emcc not to emit it is to pass the MODULARIZE=1 or MODULARIZE_INSTANCE=1 flags,\n        // but that carries with it additional unnecessary baggage/bugs we don't want either.\n        // So, we have three options:\n        // 1) We undefine `module`\n        // 2) We remember what `module['exports']` was at the beginning of this function and we restore it later\n        // 3) We write a script to remove those lines of code as part of the Make process.\n        //\n        // Since those are the only lines of code that care about module, we will undefine it. It's the most straightforward\n        // of the options, and has the side effect of reducing emcc's efforts to modify the module if its output were to change in the future.\n        // That's a nice side effect since we're handling the modularization efforts ourselves\n        module = undefined;\n\n        // The emcc-generated code and shell-post.js code goes below,\n        // meaning that all of it runs inside of this promise. If anything throws an exception, our promise will abort\n\nvar e;e||(e=typeof Module !== 'undefined' ? Module : {});null;\ne.onRuntimeInitialized=function(){function a(h,l){this.Qa=h;this.db=l;this.Oa=1;this.kb=[]}function b(h,l){this.db=l;l=aa(h)+1;this.cb=da(l);if(null===this.cb)throw Error(\"Unable to allocate memory for the SQL string\");k(h,n,this.cb,l);this.ib=this.cb;this.Za=this.ob=null}function c(h){this.filename=\"dbfile_\"+(4294967295*Math.random()>>>0);if(null!=h){var l=this.filename,q=l?r(\"//\"+l):\"/\";l=ea(!0,!0);q=fa(q,(void 0!==l?l:438)&4095|32768,0);if(h){if(\"string\"===typeof h){for(var p=Array(h.length),z=\n0,N=h.length;z<N;++z)p[z]=h.charCodeAt(z);h=p}ha(q,l|146);p=ia(q,577);ka(p,h,0,h.length,0,void 0);la(p);ha(q,l)}}this.handleError(g(this.filename,d));this.db=v(d,\"i32\");hc(this.db);this.eb={};this.Wa={}}var d=x(4),f=e.cwrap,g=f(\"sqlite3_open\",\"number\",[\"string\",\"number\"]),m=f(\"sqlite3_close_v2\",\"number\",[\"number\"]),t=f(\"sqlite3_exec\",\"number\",[\"number\",\"string\",\"number\",\"number\",\"number\"]),w=f(\"sqlite3_changes\",\"number\",[\"number\"]),u=f(\"sqlite3_prepare_v2\",\"number\",[\"number\",\"string\",\"number\",\"number\",\n\"number\"]),C=f(\"sqlite3_sql\",\"string\",[\"number\"]),I=f(\"sqlite3_normalized_sql\",\"string\",[\"number\"]),ba=f(\"sqlite3_prepare_v2\",\"number\",[\"number\",\"number\",\"number\",\"number\",\"number\"]),ic=f(\"sqlite3_bind_text\",\"number\",[\"number\",\"number\",\"number\",\"number\",\"number\"]),qb=f(\"sqlite3_bind_blob\",\"number\",[\"number\",\"number\",\"number\",\"number\",\"number\"]),jc=f(\"sqlite3_bind_double\",\"number\",[\"number\",\"number\",\"number\"]),kc=f(\"sqlite3_bind_int\",\"number\",[\"number\",\"number\",\"number\"]),lc=f(\"sqlite3_bind_parameter_index\",\n\"number\",[\"number\",\"string\"]),mc=f(\"sqlite3_step\",\"number\",[\"number\"]),nc=f(\"sqlite3_errmsg\",\"string\",[\"number\"]),oc=f(\"sqlite3_column_count\",\"number\",[\"number\"]),pc=f(\"sqlite3_data_count\",\"number\",[\"number\"]),qc=f(\"sqlite3_column_double\",\"number\",[\"number\",\"number\"]),rb=f(\"sqlite3_column_text\",\"string\",[\"number\",\"number\"]),rc=f(\"sqlite3_column_blob\",\"number\",[\"number\",\"number\"]),sc=f(\"sqlite3_column_bytes\",\"number\",[\"number\",\"number\"]),tc=f(\"sqlite3_column_type\",\"number\",[\"number\",\"number\"]),uc=\nf(\"sqlite3_column_name\",\"string\",[\"number\",\"number\"]),vc=f(\"sqlite3_reset\",\"number\",[\"number\"]),wc=f(\"sqlite3_clear_bindings\",\"number\",[\"number\"]),xc=f(\"sqlite3_finalize\",\"number\",[\"number\"]),yc=f(\"sqlite3_create_function_v2\",\"number\",\"number string number number number number number number number\".split(\" \")),zc=f(\"sqlite3_value_type\",\"number\",[\"number\"]),Ac=f(\"sqlite3_value_bytes\",\"number\",[\"number\"]),Bc=f(\"sqlite3_value_text\",\"string\",[\"number\"]),Cc=f(\"sqlite3_value_blob\",\"number\",[\"number\"]),\nDc=f(\"sqlite3_value_double\",\"number\",[\"number\"]),Ec=f(\"sqlite3_result_double\",\"\",[\"number\",\"number\"]),sb=f(\"sqlite3_result_null\",\"\",[\"number\"]),Fc=f(\"sqlite3_result_text\",\"\",[\"number\",\"string\",\"number\",\"number\"]),Gc=f(\"sqlite3_result_blob\",\"\",[\"number\",\"number\",\"number\",\"number\"]),Hc=f(\"sqlite3_result_int\",\"\",[\"number\",\"number\"]),tb=f(\"sqlite3_result_error\",\"\",[\"number\",\"string\",\"number\"]),hc=f(\"RegisterExtensionFunctions\",\"number\",[\"number\"]);a.prototype.bind=function(h){if(!this.Qa)throw\"Statement closed\";\nthis.reset();return Array.isArray(h)?this.Cb(h):null!=h&&\"object\"===typeof h?this.Db(h):!0};a.prototype.step=function(){if(!this.Qa)throw\"Statement closed\";this.Oa=1;var h=mc(this.Qa);switch(h){case 100:return!0;case 101:return!1;default:throw this.db.handleError(h);}};a.prototype.yb=function(h){null==h&&(h=this.Oa,this.Oa+=1);return qc(this.Qa,h)};a.prototype.Gb=function(h){null==h&&(h=this.Oa,this.Oa+=1);h=rb(this.Qa,h);if(\"function\"!==typeof BigInt)throw Error(\"BigInt is not supported\");return BigInt(h)};\na.prototype.Hb=function(h){null==h&&(h=this.Oa,this.Oa+=1);return rb(this.Qa,h)};a.prototype.getBlob=function(h){null==h&&(h=this.Oa,this.Oa+=1);var l=sc(this.Qa,h);h=rc(this.Qa,h);for(var q=new Uint8Array(l),p=0;p<l;p+=1)q[p]=y[h+p];return q};a.prototype.get=function(h,l){l=l||{};null!=h&&this.bind(h)&&this.step();h=[];for(var q=pc(this.Qa),p=0;p<q;p+=1)switch(tc(this.Qa,p)){case 1:var z=l.useBigInt?this.Gb(p):this.yb(p);h.push(z);break;case 2:h.push(this.yb(p));break;case 3:h.push(this.Hb(p));break;\ncase 4:h.push(this.getBlob(p));break;default:h.push(null)}return h};a.prototype.getColumnNames=function(){for(var h=[],l=oc(this.Qa),q=0;q<l;q+=1)h.push(uc(this.Qa,q));return h};a.prototype.getAsObject=function(h,l){h=this.get(h,l);l=this.getColumnNames();for(var q={},p=0;p<l.length;p+=1)q[l[p]]=h[p];return q};a.prototype.getSQL=function(){return C(this.Qa)};a.prototype.getNormalizedSQL=function(){return I(this.Qa)};a.prototype.run=function(h){null!=h&&this.bind(h);this.step();return this.reset()};\na.prototype.tb=function(h,l){null==l&&(l=this.Oa,this.Oa+=1);h=ma(h);var q=na(h);this.kb.push(q);this.db.handleError(ic(this.Qa,l,q,h.length-1,0))};a.prototype.Bb=function(h,l){null==l&&(l=this.Oa,this.Oa+=1);var q=na(h);this.kb.push(q);this.db.handleError(qb(this.Qa,l,q,h.length,0))};a.prototype.sb=function(h,l){null==l&&(l=this.Oa,this.Oa+=1);this.db.handleError((h===(h|0)?kc:jc)(this.Qa,l,h))};a.prototype.Eb=function(h){null==h&&(h=this.Oa,this.Oa+=1);qb(this.Qa,h,0,0,0)};a.prototype.ub=function(h,\nl){null==l&&(l=this.Oa,this.Oa+=1);switch(typeof h){case \"string\":this.tb(h,l);return;case \"number\":this.sb(h,l);return;case \"bigint\":this.tb(h.toString(),l);return;case \"boolean\":this.sb(h+0,l);return;case \"object\":if(null===h){this.Eb(l);return}if(null!=h.length){this.Bb(h,l);return}}throw\"Wrong API use : tried to bind a value of an unknown type (\"+h+\").\";};a.prototype.Db=function(h){var l=this;Object.keys(h).forEach(function(q){var p=lc(l.Qa,q);0!==p&&l.ub(h[q],p)});return!0};a.prototype.Cb=function(h){for(var l=\n0;l<h.length;l+=1)this.ub(h[l],l+1);return!0};a.prototype.reset=function(){this.freemem();return 0===wc(this.Qa)&&0===vc(this.Qa)};a.prototype.freemem=function(){for(var h;void 0!==(h=this.kb.pop());)oa(h)};a.prototype.free=function(){this.freemem();var h=0===xc(this.Qa);delete this.db.eb[this.Qa];this.Qa=0;return h};b.prototype.next=function(){if(null===this.cb)return{done:!0};null!==this.Za&&(this.Za.free(),this.Za=null);if(!this.db.db)throw this.mb(),Error(\"Database closed\");var h=pa(),l=x(4);\nqa(d);qa(l);try{this.db.handleError(ba(this.db.db,this.ib,-1,d,l));this.ib=v(l,\"i32\");var q=v(d,\"i32\");if(0===q)return this.mb(),{done:!0};this.Za=new a(q,this.db);this.db.eb[q]=this.Za;return{value:this.Za,done:!1}}catch(p){throw this.ob=A(this.ib),this.mb(),p;}finally{ra(h)}};b.prototype.mb=function(){oa(this.cb);this.cb=null};b.prototype.getRemainingSQL=function(){return null!==this.ob?this.ob:A(this.ib)};\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator&&(b.prototype[Symbol.iterator]=\nfunction(){return this});c.prototype.run=function(h,l){if(!this.db)throw\"Database closed\";if(l){h=this.prepare(h,l);try{h.step()}finally{h.free()}}else this.handleError(t(this.db,h,0,0,d));return this};c.prototype.exec=function(h,l,q){if(!this.db)throw\"Database closed\";var p=pa(),z=null;try{var N=aa(h)+1,G=x(N);k(h,y,G,N);var ja=G;var ca=x(4);for(h=[];0!==v(ja,\"i8\");){qa(d);qa(ca);this.handleError(ba(this.db,ja,-1,d,ca));var D=v(d,\"i32\");ja=v(ca,\"i32\");if(0!==D){N=null;z=new a(D,this);for(null!=l&&\nz.bind(l);z.step();)null===N&&(N={columns:z.getColumnNames(),values:[]},h.push(N)),N.values.push(z.get(null,q));z.free()}}return h}catch(O){throw z&&z.free(),O;}finally{ra(p)}};c.prototype.each=function(h,l,q,p,z){\"function\"===typeof l&&(p=q,q=l,l=void 0);h=this.prepare(h,l);try{for(;h.step();)q(h.getAsObject(null,z))}finally{h.free()}if(\"function\"===typeof p)return p()};c.prototype.prepare=function(h,l){qa(d);this.handleError(u(this.db,h,-1,d,0));h=v(d,\"i32\");if(0===h)throw\"Nothing to prepare\";var q=\nnew a(h,this);null!=l&&q.bind(l);return this.eb[h]=q};c.prototype.iterateStatements=function(h){return new b(h,this)};c.prototype[\"export\"]=function(){Object.values(this.eb).forEach(function(l){l.free()});Object.values(this.Wa).forEach(sa);this.Wa={};this.handleError(m(this.db));var h=ta(this.filename);this.handleError(g(this.filename,d));this.db=v(d,\"i32\");return h};c.prototype.close=function(){null!==this.db&&(Object.values(this.eb).forEach(function(h){h.free()}),Object.values(this.Wa).forEach(sa),\nthis.Wa={},this.handleError(m(this.db)),ua(\"/\"+this.filename),this.db=null)};c.prototype.handleError=function(h){if(0===h)return null;h=nc(this.db);throw Error(h);};c.prototype.getRowsModified=function(){return w(this.db)};c.prototype.create_function=function(h,l){Object.prototype.hasOwnProperty.call(this.Wa,h)&&(sa(this.Wa[h]),delete this.Wa[h]);var q=va(function(p,z,N){for(var G,ja=[],ca=0;ca<z;ca+=1){var D=v(N+4*ca,\"i32\"),O=zc(D);if(1===O||2===O)D=Dc(D);else if(3===O)D=Bc(D);else if(4===O){O=D;\nD=Ac(O);O=Cc(O);for(var wb=new Uint8Array(D),Aa=0;Aa<D;Aa+=1)wb[Aa]=y[O+Aa];D=wb}else D=null;ja.push(D)}try{G=l.apply(null,ja)}catch(Kc){tb(p,Kc,-1);return}switch(typeof G){case \"boolean\":Hc(p,G?1:0);break;case \"number\":Ec(p,G);break;case \"string\":Fc(p,G,-1,-1);break;case \"object\":null===G?sb(p):null!=G.length?(z=na(G),Gc(p,z,G.length,-1),oa(z)):tb(p,\"Wrong API use : tried to return a value of an unknown type (\"+G+\").\",-1);break;default:sb(p)}});this.Wa[h]=q;this.handleError(yc(this.db,h,l.length,\n1,0,q,0,0,0));return this};e.Database=c};var wa={},B;for(B in e)e.hasOwnProperty(B)&&(wa[B]=e[B]);var xa=\"./this.program\",ya=\"object\"===typeof window,za=\"function\"===typeof importScripts,Ba=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node,E=\"\",Ca,Da,Ea,Fa,Ga;\nif(Ba)E=za?require(\"path\").dirname(E)+\"/\":__dirname+\"/\",Ca=function(a,b){Fa||(Fa=require(\"fs\"));Ga||(Ga=require(\"path\"));a=Ga.normalize(a);return Fa.readFileSync(a,b?null:\"utf8\")},Ea=function(a){a=Ca(a,!0);a.buffer||(a=new Uint8Array(a));a.buffer||F(\"Assertion failed: undefined\");return a},Da=function(a,b,c){Fa||(Fa=require(\"fs\"));Ga||(Ga=require(\"path\"));a=Ga.normalize(a);Fa.readFile(a,function(d,f){d?c(d):b(f.buffer)})},1<process.argv.length&&(xa=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),\n\"undefined\"!==typeof module&&(module.exports=e),e.inspect=function(){return\"[Emscripten Module object]\"};else if(ya||za)za?E=self.location.href:\"undefined\"!==typeof document&&document.currentScript&&(E=document.currentScript.src),E=0!==E.indexOf(\"blob:\")?E.substr(0,E.lastIndexOf(\"/\")+1):\"\",Ca=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},za&&(Ea=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)}),\nDa=function(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a,!0);d.responseType=\"arraybuffer\";d.onload=function(){200==d.status||0==d.status&&d.response?b(d.response):c()};d.onerror=c;d.send(null)};var Ha=e.print||console.log.bind(console),H=e.printErr||console.warn.bind(console);for(B in wa)wa.hasOwnProperty(B)&&(e[B]=wa[B]);wa=null;e.thisProgram&&(xa=e.thisProgram);var Ia=[],Ja;function sa(a){Ja.delete(J.get(a));Ia.push(a)}\nfunction va(a){if(!Ja){Ja=new WeakMap;for(var b=0;b<J.length;b++){var c=J.get(b);c&&Ja.set(c,b)}}if(Ja.has(a))a=Ja.get(a);else{if(Ia.length)b=Ia.pop();else{try{J.grow(1)}catch(g){if(!(g instanceof RangeError))throw g;throw\"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\";}b=J.length-1}try{J.set(b,a)}catch(g){if(!(g instanceof TypeError))throw g;if(\"function\"===typeof WebAssembly.Function){var d={i:\"i32\",j:\"i64\",f:\"f32\",d:\"f64\"},f={parameters:[],results:[]};for(c=1;4>c;++c)f.parameters.push(d[\"viii\"[c]]);\nc=new WebAssembly.Function(f,a)}else{d=[1,0,1,96];f={i:127,j:126,f:125,d:124};d.push(3);for(c=0;3>c;++c)d.push(f[\"iii\"[c]]);d.push(0);d[1]=d.length-2;c=new Uint8Array([0,97,115,109,1,0,0,0].concat(d,[2,7,1,1,101,1,102,0,0,7,5,1,1,102,0,0]));c=new WebAssembly.Module(c);c=(new WebAssembly.Instance(c,{e:{f:a}})).exports.f}J.set(b,c)}Ja.set(a,b);a=b}return a}var Ka;e.wasmBinary&&(Ka=e.wasmBinary);var noExitRuntime=e.noExitRuntime||!0;\"object\"!==typeof WebAssembly&&F(\"no native wasm support detected\");\nfunction qa(a){var b=\"i32\";\"*\"===b.charAt(b.length-1)&&(b=\"i32\");switch(b){case \"i1\":y[a>>0]=0;break;case \"i8\":y[a>>0]=0;break;case \"i16\":La[a>>1]=0;break;case \"i32\":K[a>>2]=0;break;case \"i64\":L=[0,(M=0,1<=+Math.abs(M)?0<M?(Math.min(+Math.floor(M/4294967296),4294967295)|0)>>>0:~~+Math.ceil((M-+(~~M>>>0))/4294967296)>>>0:0)];K[a>>2]=L[0];K[a+4>>2]=L[1];break;case \"float\":Ma[a>>2]=0;break;case \"double\":Na[a>>3]=0;break;default:F(\"invalid type for setValue: \"+b)}}\nfunction v(a,b){b=b||\"i8\";\"*\"===b.charAt(b.length-1)&&(b=\"i32\");switch(b){case \"i1\":return y[a>>0];case \"i8\":return y[a>>0];case \"i16\":return La[a>>1];case \"i32\":return K[a>>2];case \"i64\":return K[a>>2];case \"float\":return Ma[a>>2];case \"double\":return Na[a>>3];default:F(\"invalid type for getValue: \"+b)}return null}var Oa,Pa=!1;function Qa(a){var b=e[\"_\"+a];b||F(\"Assertion failed: Cannot call unknown function \"+(a+\", make sure it is exported\"));return b}\nfunction Ra(a,b,c,d){var f={string:function(u){var C=0;if(null!==u&&void 0!==u&&0!==u){var I=(u.length<<2)+1;C=x(I);k(u,n,C,I)}return C},array:function(u){var C=x(u.length);y.set(u,C);return C}};a=Qa(a);var g=[],m=0;if(d)for(var t=0;t<d.length;t++){var w=f[c[t]];w?(0===m&&(m=pa()),g[t]=w(d[t])):g[t]=d[t]}c=a.apply(null,g);return c=function(u){0!==m&&ra(m);return\"string\"===b?A(u):\"boolean\"===b?!!u:u}(c)}var Sa=0,Ta=1;\nfunction na(a){var b=Sa==Ta?x(a.length):da(a.length);a.subarray||a.slice?n.set(a,b):n.set(new Uint8Array(a),b);return b}var Ua=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction Va(a,b,c){var d=b+c;for(c=b;a[c]&&!(c>=d);)++c;if(16<c-b&&a.subarray&&Ua)return Ua.decode(a.subarray(b,c));for(d=\"\";b<c;){var f=a[b++];if(f&128){var g=a[b++]&63;if(192==(f&224))d+=String.fromCharCode((f&31)<<6|g);else{var m=a[b++]&63;f=224==(f&240)?(f&15)<<12|g<<6|m:(f&7)<<18|g<<12|m<<6|a[b++]&63;65536>f?d+=String.fromCharCode(f):(f-=65536,d+=String.fromCharCode(55296|f>>10,56320|f&1023))}}else d+=String.fromCharCode(f)}return d}function A(a,b){return a?Va(n,a,b):\"\"}\nfunction k(a,b,c,d){if(!(0<d))return 0;var f=c;d=c+d-1;for(var g=0;g<a.length;++g){var m=a.charCodeAt(g);if(55296<=m&&57343>=m){var t=a.charCodeAt(++g);m=65536+((m&1023)<<10)|t&1023}if(127>=m){if(c>=d)break;b[c++]=m}else{if(2047>=m){if(c+1>=d)break;b[c++]=192|m>>6}else{if(65535>=m){if(c+2>=d)break;b[c++]=224|m>>12}else{if(c+3>=d)break;b[c++]=240|m>>18;b[c++]=128|m>>12&63}b[c++]=128|m>>6&63}b[c++]=128|m&63}}b[c]=0;return c-f}\nfunction aa(a){for(var b=0,c=0;c<a.length;++c){var d=a.charCodeAt(c);55296<=d&&57343>=d&&(d=65536+((d&1023)<<10)|a.charCodeAt(++c)&1023);127>=d?++b:b=2047>=d?b+2:65535>=d?b+3:b+4}return b}function Wa(a){var b=aa(a)+1,c=da(b);c&&k(a,y,c,b);return c}var Xa,y,n,La,K,Ma,Na;\nfunction Ya(){var a=Oa.buffer;Xa=a;e.HEAP8=y=new Int8Array(a);e.HEAP16=La=new Int16Array(a);e.HEAP32=K=new Int32Array(a);e.HEAPU8=n=new Uint8Array(a);e.HEAPU16=new Uint16Array(a);e.HEAPU32=new Uint32Array(a);e.HEAPF32=Ma=new Float32Array(a);e.HEAPF64=Na=new Float64Array(a)}var J,Za=[],$a=[],ab=[];function bb(){var a=e.preRun.shift();Za.unshift(a)}var cb=0,db=null,eb=null;e.preloadedImages={};e.preloadedAudios={};\nfunction F(a){if(e.onAbort)e.onAbort(a);H(a);Pa=!0;throw new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");}function fb(){return P.startsWith(\"data:application/octet-stream;base64,\")}var P;P=\"sql-wasm.wasm\";if(!fb()){var gb=P;P=e.locateFile?e.locateFile(gb,E):E+gb}function hb(){var a=P;try{if(a==P&&Ka)return new Uint8Array(Ka);if(Ea)return Ea(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){F(b)}}\nfunction ib(){if(!Ka&&(ya||za)){if(\"function\"===typeof fetch&&!P.startsWith(\"file://\"))return fetch(P,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+P+\"'\";return a.arrayBuffer()}).catch(function(){return hb()});if(Da)return new Promise(function(a,b){Da(P,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return hb()})}var M,L;\nfunction jb(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(e);else{var c=b.Qb;\"number\"===typeof c?void 0===b.lb?J.get(c)():J.get(c)(b.lb):c(void 0===b.lb?null:b.lb)}}}function kb(a){return a.replace(/\\b_Z[\\w\\d_]+/g,function(b){return b===b?b:b+\" [\"+b+\"]\"})}\nfunction lb(){function a(m){return(m=m.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?m[1]:\"GMT\"}var b=(new Date).getFullYear(),c=new Date(b,0,1),d=new Date(b,6,1);b=c.getTimezoneOffset();var f=d.getTimezoneOffset(),g=Math.max(b,f);K[mb()>>2]=60*g;K[nb()>>2]=Number(b!=f);c=a(c);d=a(d);c=Wa(c);d=Wa(d);f<b?(K[ob()>>2]=c,K[ob()+4>>2]=d):(K[ob()>>2]=d,K[ob()+4>>2]=c)}var pb;\nfunction ub(a,b){for(var c=0,d=a.length-1;0<=d;d--){var f=a[d];\".\"===f?a.splice(d,1):\"..\"===f?(a.splice(d,1),c++):c&&(a.splice(d,1),c--)}if(b)for(;c;c--)a.unshift(\"..\");return a}function r(a){var b=\"/\"===a.charAt(0),c=\"/\"===a.substr(-1);(a=ub(a.split(\"/\").filter(function(d){return!!d}),!b).join(\"/\"))||b||(a=\".\");a&&c&&(a+=\"/\");return(b?\"/\":\"\")+a}\nfunction vb(a){var b=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/.exec(a).slice(1);a=b[0];b=b[1];if(!a&&!b)return\".\";b&&(b=b.substr(0,b.length-1));return a+b}function xb(a){if(\"/\"===a)return\"/\";a=r(a);a=a.replace(/\\/$/,\"\");var b=a.lastIndexOf(\"/\");return-1===b?a:a.substr(b+1)}\nfunction yb(){if(\"object\"===typeof crypto&&\"function\"===typeof crypto.getRandomValues){var a=new Uint8Array(1);return function(){crypto.getRandomValues(a);return a[0]}}if(Ba)try{var b=require(\"crypto\");return function(){return b.randomBytes(1)[0]}}catch(c){}return function(){F(\"randomDevice\")}}\nfunction zb(){for(var a=\"\",b=!1,c=arguments.length-1;-1<=c&&!b;c--){b=0<=c?arguments[c]:\"/\";if(\"string\"!==typeof b)throw new TypeError(\"Arguments to path.resolve must be strings\");if(!b)return\"\";a=b+\"/\"+a;b=\"/\"===b.charAt(0)}a=ub(a.split(\"/\").filter(function(d){return!!d}),!b).join(\"/\");return(b?\"/\":\"\")+a||\".\"}var Ab=[];function Bb(a,b){Ab[a]={input:[],output:[],bb:b};Cb(a,Db)}\nvar Db={open:function(a){var b=Ab[a.node.rdev];if(!b)throw new Q(43);a.tty=b;a.seekable=!1},close:function(a){a.tty.bb.flush(a.tty)},flush:function(a){a.tty.bb.flush(a.tty)},read:function(a,b,c,d){if(!a.tty||!a.tty.bb.zb)throw new Q(60);for(var f=0,g=0;g<d;g++){try{var m=a.tty.bb.zb(a.tty)}catch(t){throw new Q(29);}if(void 0===m&&0===f)throw new Q(6);if(null===m||void 0===m)break;f++;b[c+g]=m}f&&(a.node.timestamp=Date.now());return f},write:function(a,b,c,d){if(!a.tty||!a.tty.bb.pb)throw new Q(60);\ntry{for(var f=0;f<d;f++)a.tty.bb.pb(a.tty,b[c+f])}catch(g){throw new Q(29);}d&&(a.node.timestamp=Date.now());return f}},Eb={zb:function(a){if(!a.input.length){var b=null;if(Ba){var c=Buffer.alloc(256),d=0;try{d=Fa.readSync(process.stdin.fd,c,0,256,null)}catch(f){if(f.toString().includes(\"EOF\"))d=0;else throw f;}0<d?b=c.slice(0,d).toString(\"utf-8\"):b=null}else\"undefined\"!=typeof window&&\"function\"==typeof window.prompt?(b=window.prompt(\"Input: \"),null!==b&&(b+=\"\\n\")):\"function\"==typeof readline&&(b=\nreadline(),null!==b&&(b+=\"\\n\"));if(!b)return null;a.input=ma(b,!0)}return a.input.shift()},pb:function(a,b){null===b||10===b?(Ha(Va(a.output,0)),a.output=[]):0!=b&&a.output.push(b)},flush:function(a){a.output&&0<a.output.length&&(Ha(Va(a.output,0)),a.output=[])}},Fb={pb:function(a,b){null===b||10===b?(H(Va(a.output,0)),a.output=[]):0!=b&&a.output.push(b)},flush:function(a){a.output&&0<a.output.length&&(H(Va(a.output,0)),a.output=[])}};\nfunction Gb(a){a=65536*Math.ceil(a/65536);var b=Hb(65536,a);if(!b)return 0;n.fill(0,b,b+a);return b}\nvar R={Ua:null,Va:function(){return R.createNode(null,\"/\",16895,0)},createNode:function(a,b,c,d){if(24576===(c&61440)||4096===(c&61440))throw new Q(63);R.Ua||(R.Ua={dir:{node:{Ta:R.La.Ta,Sa:R.La.Sa,lookup:R.La.lookup,fb:R.La.fb,rename:R.La.rename,unlink:R.La.unlink,rmdir:R.La.rmdir,readdir:R.La.readdir,symlink:R.La.symlink},stream:{Ya:R.Ma.Ya}},file:{node:{Ta:R.La.Ta,Sa:R.La.Sa},stream:{Ya:R.Ma.Ya,read:R.Ma.read,write:R.Ma.write,rb:R.Ma.rb,gb:R.Ma.gb,hb:R.Ma.hb}},link:{node:{Ta:R.La.Ta,Sa:R.La.Sa,\nreadlink:R.La.readlink},stream:{}},vb:{node:{Ta:R.La.Ta,Sa:R.La.Sa},stream:Ib}});c=Jb(a,b,c,d);S(c.mode)?(c.La=R.Ua.dir.node,c.Ma=R.Ua.dir.stream,c.Na={}):32768===(c.mode&61440)?(c.La=R.Ua.file.node,c.Ma=R.Ua.file.stream,c.Ra=0,c.Na=null):40960===(c.mode&61440)?(c.La=R.Ua.link.node,c.Ma=R.Ua.link.stream):8192===(c.mode&61440)&&(c.La=R.Ua.vb.node,c.Ma=R.Ua.vb.stream);c.timestamp=Date.now();a&&(a.Na[b]=c,a.timestamp=c.timestamp);return c},Rb:function(a){return a.Na?a.Na.subarray?a.Na.subarray(0,a.Ra):\nnew Uint8Array(a.Na):new Uint8Array(0)},wb:function(a,b){var c=a.Na?a.Na.length:0;c>=b||(b=Math.max(b,c*(1048576>c?2:1.125)>>>0),0!=c&&(b=Math.max(b,256)),c=a.Na,a.Na=new Uint8Array(b),0<a.Ra&&a.Na.set(c.subarray(0,a.Ra),0))},Nb:function(a,b){if(a.Ra!=b)if(0==b)a.Na=null,a.Ra=0;else{var c=a.Na;a.Na=new Uint8Array(b);c&&a.Na.set(c.subarray(0,Math.min(b,a.Ra)));a.Ra=b}},La:{Ta:function(a){var b={};b.dev=8192===(a.mode&61440)?a.id:1;b.ino=a.id;b.mode=a.mode;b.nlink=1;b.uid=0;b.gid=0;b.rdev=a.rdev;S(a.mode)?\nb.size=4096:32768===(a.mode&61440)?b.size=a.Ra:40960===(a.mode&61440)?b.size=a.link.length:b.size=0;b.atime=new Date(a.timestamp);b.mtime=new Date(a.timestamp);b.ctime=new Date(a.timestamp);b.Fb=4096;b.blocks=Math.ceil(b.size/b.Fb);return b},Sa:function(a,b){void 0!==b.mode&&(a.mode=b.mode);void 0!==b.timestamp&&(a.timestamp=b.timestamp);void 0!==b.size&&R.Nb(a,b.size)},lookup:function(){throw Kb[44];},fb:function(a,b,c,d){return R.createNode(a,b,c,d)},rename:function(a,b,c){if(S(a.mode)){try{var d=\nLb(b,c)}catch(g){}if(d)for(var f in d.Na)throw new Q(55);}delete a.parent.Na[a.name];a.parent.timestamp=Date.now();a.name=c;b.Na[c]=a;b.timestamp=a.parent.timestamp;a.parent=b},unlink:function(a,b){delete a.Na[b];a.timestamp=Date.now()},rmdir:function(a,b){var c=Lb(a,b),d;for(d in c.Na)throw new Q(55);delete a.Na[b];a.timestamp=Date.now()},readdir:function(a){var b=[\".\",\"..\"],c;for(c in a.Na)a.Na.hasOwnProperty(c)&&b.push(c);return b},symlink:function(a,b,c){a=R.createNode(a,b,41471,0);a.link=c;return a},\nreadlink:function(a){if(40960!==(a.mode&61440))throw new Q(28);return a.link}},Ma:{read:function(a,b,c,d,f){var g=a.node.Na;if(f>=a.node.Ra)return 0;a=Math.min(a.node.Ra-f,d);if(8<a&&g.subarray)b.set(g.subarray(f,f+a),c);else for(d=0;d<a;d++)b[c+d]=g[f+d];return a},write:function(a,b,c,d,f,g){b.buffer===y.buffer&&(g=!1);if(!d)return 0;a=a.node;a.timestamp=Date.now();if(b.subarray&&(!a.Na||a.Na.subarray)){if(g)return a.Na=b.subarray(c,c+d),a.Ra=d;if(0===a.Ra&&0===f)return a.Na=b.slice(c,c+d),a.Ra=\nd;if(f+d<=a.Ra)return a.Na.set(b.subarray(c,c+d),f),d}R.wb(a,f+d);if(a.Na.subarray&&b.subarray)a.Na.set(b.subarray(c,c+d),f);else for(g=0;g<d;g++)a.Na[f+g]=b[c+g];a.Ra=Math.max(a.Ra,f+d);return d},Ya:function(a,b,c){1===c?b+=a.position:2===c&&32768===(a.node.mode&61440)&&(b+=a.node.Ra);if(0>b)throw new Q(28);return b},rb:function(a,b,c){R.wb(a.node,b+c);a.node.Ra=Math.max(a.node.Ra,b+c)},gb:function(a,b,c,d,f,g){if(0!==b)throw new Q(28);if(32768!==(a.node.mode&61440))throw new Q(43);a=a.node.Na;if(g&\n2||a.buffer!==Xa){if(0<d||d+c<a.length)a.subarray?a=a.subarray(d,d+c):a=Array.prototype.slice.call(a,d,d+c);d=!0;c=Gb(c);if(!c)throw new Q(48);y.set(a,c)}else d=!1,c=a.byteOffset;return{Mb:c,jb:d}},hb:function(a,b,c,d,f){if(32768!==(a.node.mode&61440))throw new Q(43);if(f&2)return 0;R.Ma.write(a,b,0,d,c,!1);return 0}}},Mb=null,Nb={},T=[],Ob=1,U=null,Pb=!0,V={},Q=null,Kb={};\nfunction W(a,b){a=zb(\"/\",a);b=b||{};if(!a)return{path:\"\",node:null};var c={xb:!0,qb:0},d;for(d in c)void 0===b[d]&&(b[d]=c[d]);if(8<b.qb)throw new Q(32);a=ub(a.split(\"/\").filter(function(m){return!!m}),!1);var f=Mb;c=\"/\";for(d=0;d<a.length;d++){var g=d===a.length-1;if(g&&b.parent)break;f=Lb(f,a[d]);c=r(c+\"/\"+a[d]);f.$a&&(!g||g&&b.xb)&&(f=f.$a.root);if(!g||b.Xa)for(g=0;40960===(f.mode&61440);)if(f=Qb(c),c=zb(vb(c),f),f=W(c,{qb:b.qb}).node,40<g++)throw new Q(32);}return{path:c,node:f}}\nfunction Rb(a){for(var b;;){if(a===a.parent)return a=a.Va.Ab,b?\"/\"!==a[a.length-1]?a+\"/\"+b:a+b:a;b=b?a.name+\"/\"+b:a.name;a=a.parent}}function Sb(a,b){for(var c=0,d=0;d<b.length;d++)c=(c<<5)-c+b.charCodeAt(d)|0;return(a+c>>>0)%U.length}function Tb(a){var b=Sb(a.parent.id,a.name);if(U[b]===a)U[b]=a.ab;else for(b=U[b];b;){if(b.ab===a){b.ab=a.ab;break}b=b.ab}}\nfunction Lb(a,b){var c;if(c=(c=Ub(a,\"x\"))?c:a.La.lookup?0:2)throw new Q(c,a);for(c=U[Sb(a.id,b)];c;c=c.ab){var d=c.name;if(c.parent.id===a.id&&d===b)return c}return a.La.lookup(a,b)}function Jb(a,b,c,d){a=new Vb(a,b,c,d);b=Sb(a.parent.id,a.name);a.ab=U[b];return U[b]=a}function S(a){return 16384===(a&61440)}var Wb={r:0,\"r+\":2,w:577,\"w+\":578,a:1089,\"a+\":1090};function Xb(a){var b=[\"r\",\"w\",\"rw\"][a&3];a&512&&(b+=\"w\");return b}\nfunction Ub(a,b){if(Pb)return 0;if(!b.includes(\"r\")||a.mode&292){if(b.includes(\"w\")&&!(a.mode&146)||b.includes(\"x\")&&!(a.mode&73))return 2}else return 2;return 0}function Yb(a,b){try{return Lb(a,b),20}catch(c){}return Ub(a,\"wx\")}function Zb(a,b,c){try{var d=Lb(a,b)}catch(f){return f.Pa}if(a=Ub(a,\"wx\"))return a;if(c){if(!S(d.mode))return 54;if(d===d.parent||\"/\"===Rb(d))return 10}else if(S(d.mode))return 31;return 0}function $b(a){var b=4096;for(a=a||0;a<=b;a++)if(!T[a])return a;throw new Q(33);}\nfunction ac(a,b){bc||(bc=function(){},bc.prototype={});var c=new bc,d;for(d in a)c[d]=a[d];a=c;b=$b(b);a.fd=b;return T[b]=a}var Ib={open:function(a){a.Ma=Nb[a.node.rdev].Ma;a.Ma.open&&a.Ma.open(a)},Ya:function(){throw new Q(70);}};function Cb(a,b){Nb[a]={Ma:b}}\nfunction cc(a,b){var c=\"/\"===b,d=!b;if(c&&Mb)throw new Q(10);if(!c&&!d){var f=W(b,{xb:!1});b=f.path;f=f.node;if(f.$a)throw new Q(10);if(!S(f.mode))throw new Q(54);}b={type:a,Sb:{},Ab:b,Kb:[]};a=a.Va(b);a.Va=b;b.root=a;c?Mb=a:f&&(f.$a=b,f.Va&&f.Va.Kb.push(b))}function fa(a,b,c){var d=W(a,{parent:!0}).node;a=xb(a);if(!a||\".\"===a||\"..\"===a)throw new Q(28);var f=Yb(d,a);if(f)throw new Q(f);if(!d.La.fb)throw new Q(63);return d.La.fb(d,a,b,c)}\nfunction X(a,b){return fa(a,(void 0!==b?b:511)&1023|16384,0)}function dc(a,b,c){\"undefined\"===typeof c&&(c=b,b=438);fa(a,b|8192,c)}function ec(a,b){if(!zb(a))throw new Q(44);var c=W(b,{parent:!0}).node;if(!c)throw new Q(44);b=xb(b);var d=Yb(c,b);if(d)throw new Q(d);if(!c.La.symlink)throw new Q(63);c.La.symlink(c,b,a)}\nfunction ua(a){var b=W(a,{parent:!0}).node,c=xb(a),d=Lb(b,c),f=Zb(b,c,!1);if(f)throw new Q(f);if(!b.La.unlink)throw new Q(63);if(d.$a)throw new Q(10);try{V.willDeletePath&&V.willDeletePath(a)}catch(g){H(\"FS.trackingDelegate['willDeletePath']('\"+a+\"') threw an exception: \"+g.message)}b.La.unlink(b,c);Tb(d);try{if(V.onDeletePath)V.onDeletePath(a)}catch(g){H(\"FS.trackingDelegate['onDeletePath']('\"+a+\"') threw an exception: \"+g.message)}}\nfunction Qb(a){a=W(a).node;if(!a)throw new Q(44);if(!a.La.readlink)throw new Q(28);return zb(Rb(a.parent),a.La.readlink(a))}function fc(a,b){a=W(a,{Xa:!b}).node;if(!a)throw new Q(44);if(!a.La.Ta)throw new Q(63);return a.La.Ta(a)}function gc(a){return fc(a,!0)}function ha(a,b){a=\"string\"===typeof a?W(a,{Xa:!0}).node:a;if(!a.La.Sa)throw new Q(63);a.La.Sa(a,{mode:b&4095|a.mode&-4096,timestamp:Date.now()})}\nfunction Ic(a){a=\"string\"===typeof a?W(a,{Xa:!0}).node:a;if(!a.La.Sa)throw new Q(63);a.La.Sa(a,{timestamp:Date.now()})}function Jc(a,b){if(0>b)throw new Q(28);a=\"string\"===typeof a?W(a,{Xa:!0}).node:a;if(!a.La.Sa)throw new Q(63);if(S(a.mode))throw new Q(31);if(32768!==(a.mode&61440))throw new Q(28);var c=Ub(a,\"w\");if(c)throw new Q(c);a.La.Sa(a,{size:b,timestamp:Date.now()})}\nfunction ia(a,b,c,d){if(\"\"===a)throw new Q(44);if(\"string\"===typeof b){var f=Wb[b];if(\"undefined\"===typeof f)throw Error(\"Unknown file open mode: \"+b);b=f}c=b&64?(\"undefined\"===typeof c?438:c)&4095|32768:0;if(\"object\"===typeof a)var g=a;else{a=r(a);try{g=W(a,{Xa:!(b&131072)}).node}catch(m){}}f=!1;if(b&64)if(g){if(b&128)throw new Q(20);}else g=fa(a,c,0),f=!0;if(!g)throw new Q(44);8192===(g.mode&61440)&&(b&=-513);if(b&65536&&!S(g.mode))throw new Q(54);if(!f&&(c=g?40960===(g.mode&61440)?32:S(g.mode)&&\n(\"r\"!==Xb(b)||b&512)?31:Ub(g,Xb(b)):44))throw new Q(c);b&512&&Jc(g,0);b&=-131713;d=ac({node:g,path:Rb(g),flags:b,seekable:!0,position:0,Ma:g.Ma,Pb:[],error:!1},d);d.Ma.open&&d.Ma.open(d);!e.logReadFiles||b&1||(Lc||(Lc={}),a in Lc||(Lc[a]=1,H(\"FS.trackingDelegate error on read file: \"+a)));try{V.onOpenFile&&(g=0,1!==(b&2097155)&&(g|=1),0!==(b&2097155)&&(g|=2),V.onOpenFile(a,g))}catch(m){H(\"FS.trackingDelegate['onOpenFile']('\"+a+\"', flags) threw an exception: \"+m.message)}return d}\nfunction la(a){if(null===a.fd)throw new Q(8);a.nb&&(a.nb=null);try{a.Ma.close&&a.Ma.close(a)}catch(b){throw b;}finally{T[a.fd]=null}a.fd=null}function Mc(a,b,c){if(null===a.fd)throw new Q(8);if(!a.seekable||!a.Ma.Ya)throw new Q(70);if(0!=c&&1!=c&&2!=c)throw new Q(28);a.position=a.Ma.Ya(a,b,c);a.Pb=[]}\nfunction Nc(a,b,c,d,f){if(0>d||0>f)throw new Q(28);if(null===a.fd)throw new Q(8);if(1===(a.flags&2097155))throw new Q(8);if(S(a.node.mode))throw new Q(31);if(!a.Ma.read)throw new Q(28);var g=\"undefined\"!==typeof f;if(!g)f=a.position;else if(!a.seekable)throw new Q(70);b=a.Ma.read(a,b,c,d,f);g||(a.position+=b);return b}\nfunction ka(a,b,c,d,f,g){if(0>d||0>f)throw new Q(28);if(null===a.fd)throw new Q(8);if(0===(a.flags&2097155))throw new Q(8);if(S(a.node.mode))throw new Q(31);if(!a.Ma.write)throw new Q(28);a.seekable&&a.flags&1024&&Mc(a,0,2);var m=\"undefined\"!==typeof f;if(!m)f=a.position;else if(!a.seekable)throw new Q(70);b=a.Ma.write(a,b,c,d,f,g);m||(a.position+=b);try{if(a.path&&V.onWriteToFile)V.onWriteToFile(a.path)}catch(t){H(\"FS.trackingDelegate['onWriteToFile']('\"+a.path+\"') threw an exception: \"+t.message)}return b}\nfunction ta(a){var b={encoding:\"binary\"};b=b||{};b.flags=b.flags||0;b.encoding=b.encoding||\"binary\";if(\"utf8\"!==b.encoding&&\"binary\"!==b.encoding)throw Error('Invalid encoding type \"'+b.encoding+'\"');var c,d=ia(a,b.flags);a=fc(a).size;var f=new Uint8Array(a);Nc(d,f,0,a,0);\"utf8\"===b.encoding?c=Va(f,0):\"binary\"===b.encoding&&(c=f);la(d);return c}\nfunction Oc(){Q||(Q=function(a,b){this.node=b;this.Ob=function(c){this.Pa=c};this.Ob(a);this.message=\"FS error\"},Q.prototype=Error(),Q.prototype.constructor=Q,[44].forEach(function(a){Kb[a]=new Q(a);Kb[a].stack=\"<generic error, no stack>\"}))}var Pc;function ea(a,b){var c=0;a&&(c|=365);b&&(c|=146);return c}\nfunction Qc(a,b,c){a=r(\"/dev/\"+a);var d=ea(!!b,!!c);Rc||(Rc=64);var f=Rc++<<8|0;Cb(f,{open:function(g){g.seekable=!1},close:function(){c&&c.buffer&&c.buffer.length&&c(10)},read:function(g,m,t,w){for(var u=0,C=0;C<w;C++){try{var I=b()}catch(ba){throw new Q(29);}if(void 0===I&&0===u)throw new Q(6);if(null===I||void 0===I)break;u++;m[t+C]=I}u&&(g.node.timestamp=Date.now());return u},write:function(g,m,t,w){for(var u=0;u<w;u++)try{c(m[t+u])}catch(C){throw new Q(29);}w&&(g.node.timestamp=Date.now());return u}});\ndc(a,d,f)}var Rc,Y={},bc,Lc,Sc={};\nfunction Tc(a,b,c){try{var d=a(b)}catch(f){if(f&&f.node&&r(b)!==r(Rb(f.node)))return-54;throw f;}K[c>>2]=d.dev;K[c+4>>2]=0;K[c+8>>2]=d.ino;K[c+12>>2]=d.mode;K[c+16>>2]=d.nlink;K[c+20>>2]=d.uid;K[c+24>>2]=d.gid;K[c+28>>2]=d.rdev;K[c+32>>2]=0;L=[d.size>>>0,(M=d.size,1<=+Math.abs(M)?0<M?(Math.min(+Math.floor(M/4294967296),4294967295)|0)>>>0:~~+Math.ceil((M-+(~~M>>>0))/4294967296)>>>0:0)];K[c+40>>2]=L[0];K[c+44>>2]=L[1];K[c+48>>2]=4096;K[c+52>>2]=d.blocks;K[c+56>>2]=d.atime.getTime()/1E3|0;K[c+60>>2]=\n0;K[c+64>>2]=d.mtime.getTime()/1E3|0;K[c+68>>2]=0;K[c+72>>2]=d.ctime.getTime()/1E3|0;K[c+76>>2]=0;L=[d.ino>>>0,(M=d.ino,1<=+Math.abs(M)?0<M?(Math.min(+Math.floor(M/4294967296),4294967295)|0)>>>0:~~+Math.ceil((M-+(~~M>>>0))/4294967296)>>>0:0)];K[c+80>>2]=L[0];K[c+84>>2]=L[1];return 0}var Uc=void 0;function Vc(){Uc+=4;return K[Uc-4>>2]}function Z(a){a=T[a];if(!a)throw new Q(8);return a}var Wc;Wc=Ba?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:function(){return performance.now()};\nvar Xc={};function Yc(){if(!Zc){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:xa||\"./this.program\"},b;for(b in Xc)void 0===Xc[b]?delete a[b]:a[b]=Xc[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Zc=c}return Zc}var Zc;\nfunction Vb(a,b,c,d){a||(a=this);this.parent=a;this.Va=a.Va;this.$a=null;this.id=Ob++;this.name=b;this.mode=c;this.La={};this.Ma={};this.rdev=d}Object.defineProperties(Vb.prototype,{read:{get:function(){return 365===(this.mode&365)},set:function(a){a?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146===(this.mode&146)},set:function(a){a?this.mode|=146:this.mode&=-147}}});Oc();U=Array(4096);cc(R,\"/\");X(\"/tmp\");X(\"/home\");X(\"/home/web_user\");\n(function(){X(\"/dev\");Cb(259,{read:function(){return 0},write:function(b,c,d,f){return f}});dc(\"/dev/null\",259);Bb(1280,Eb);Bb(1536,Fb);dc(\"/dev/tty\",1280);dc(\"/dev/tty1\",1536);var a=yb();Qc(\"random\",a);Qc(\"urandom\",a);X(\"/dev/shm\");X(\"/dev/shm/tmp\")})();\n(function(){X(\"/proc\");var a=X(\"/proc/self\");X(\"/proc/self/fd\");cc({Va:function(){var b=Jb(a,\"fd\",16895,73);b.La={lookup:function(c,d){var f=T[+d];if(!f)throw new Q(8);c={parent:null,Va:{Ab:\"fake\"},La:{readlink:function(){return f.path}}};return c.parent=c}};return b}},\"/proc/self/fd\")})();function ma(a,b){var c=Array(aa(a)+1);a=k(a,c,0,c.length);b&&(c.length=a);return c}\nvar ad={a:function(a,b,c,d){F(\"Assertion failed: \"+A(a)+\", at: \"+[b?A(b):\"unknown filename\",c,d?A(d):\"unknown function\"])},s:function(a,b){pb||(pb=!0,lb());a=new Date(1E3*K[a>>2]);K[b>>2]=a.getSeconds();K[b+4>>2]=a.getMinutes();K[b+8>>2]=a.getHours();K[b+12>>2]=a.getDate();K[b+16>>2]=a.getMonth();K[b+20>>2]=a.getFullYear()-1900;K[b+24>>2]=a.getDay();var c=new Date(a.getFullYear(),0,1);K[b+28>>2]=(a.getTime()-c.getTime())/864E5|0;K[b+36>>2]=-(60*a.getTimezoneOffset());var d=(new Date(a.getFullYear(),\n6,1)).getTimezoneOffset();c=c.getTimezoneOffset();a=(d!=c&&a.getTimezoneOffset()==Math.min(c,d))|0;K[b+32>>2]=a;a=K[ob()+(a?4:0)>>2];K[b+40>>2]=a;return b},y:function(a,b){try{a=A(a);if(b&-8)var c=-28;else{var d;(d=W(a,{Xa:!0}).node)?(a=\"\",b&4&&(a+=\"r\"),b&2&&(a+=\"w\"),b&1&&(a+=\"x\"),c=a&&Ub(d,a)?-2:0):c=-44}return c}catch(f){return\"undefined\"!==typeof Y&&f instanceof Q||F(f),-f.Pa}},i:function(a,b){try{return a=A(a),ha(a,b),0}catch(c){return\"undefined\"!==typeof Y&&c instanceof Q||F(c),-c.Pa}},z:function(a){try{return a=\nA(a),Ic(a),0}catch(b){return\"undefined\"!==typeof Y&&b instanceof Q||F(b),-b.Pa}},j:function(a,b){try{var c=T[a];if(!c)throw new Q(8);ha(c.node,b);return 0}catch(d){return\"undefined\"!==typeof Y&&d instanceof Q||F(d),-d.Pa}},A:function(a){try{var b=T[a];if(!b)throw new Q(8);Ic(b.node);return 0}catch(c){return\"undefined\"!==typeof Y&&c instanceof Q||F(c),-c.Pa}},b:function(a,b,c){Uc=c;try{var d=Z(a);switch(b){case 0:var f=Vc();return 0>f?-28:ia(d.path,d.flags,0,f).fd;case 1:case 2:return 0;case 3:return d.flags;\ncase 4:return f=Vc(),d.flags|=f,0;case 12:return f=Vc(),La[f+0>>1]=2,0;case 13:case 14:return 0;case 16:case 8:return-28;case 9:return K[$c()>>2]=28,-1;default:return-28}}catch(g){return\"undefined\"!==typeof Y&&g instanceof Q||F(g),-g.Pa}},k:function(a,b){try{var c=Z(a);return Tc(fc,c.path,b)}catch(d){return\"undefined\"!==typeof Y&&d instanceof Q||F(d),-d.Pa}},E:function(a,b,c){try{var d=T[a];if(!d)throw new Q(8);if(0===(d.flags&2097155))throw new Q(28);Jc(d.node,c);return 0}catch(f){return\"undefined\"!==\ntypeof Y&&f instanceof Q||F(f),-f.Pa}},D:function(a,b){try{if(0===b)return-28;if(b<aa(\"/\")+1)return-68;k(\"/\",n,a,b);return a}catch(c){return\"undefined\"!==typeof Y&&c instanceof Q||F(c),-c.Pa}},v:function(){return 0},d:function(){return 42},h:function(a,b){try{return a=A(a),Tc(gc,a,b)}catch(c){return\"undefined\"!==typeof Y&&c instanceof Q||F(c),-c.Pa}},l:function(a,b){try{return a=A(a),a=r(a),\"/\"===a[a.length-1]&&(a=a.substr(0,a.length-1)),X(a,b),0}catch(c){return\"undefined\"!==typeof Y&&c instanceof\nQ||F(c),-c.Pa}},t:function(a,b,c,d,f,g){try{a:{g<<=12;var m=!1;if(0!==(d&16)&&0!==a%65536)var t=-28;else{if(0!==(d&32)){var w=Gb(b);if(!w){t=-48;break a}m=!0}else{var u=T[f];if(!u){t=-8;break a}var C=g;if(0!==(c&2)&&0===(d&2)&&2!==(u.flags&2097155))throw new Q(2);if(1===(u.flags&2097155))throw new Q(2);if(!u.Ma.gb)throw new Q(43);var I=u.Ma.gb(u,a,b,C,c,d);w=I.Mb;m=I.jb}Sc[w]={Jb:w,Ib:b,jb:m,fd:f,Lb:c,flags:d,offset:g};t=w}}return t}catch(ba){return\"undefined\"!==typeof Y&&ba instanceof Q||F(ba),-ba.Pa}},\nu:function(a,b){try{var c=Sc[a];if(0!==b&&c){if(b===c.Ib){var d=T[c.fd];if(d&&c.Lb&2){var f=c.flags,g=c.offset,m=n.slice(a,a+b);d&&d.Ma.hb&&d.Ma.hb(d,m,g,b,f)}Sc[a]=null;c.jb&&oa(c.Jb)}var t=0}else t=-28;return t}catch(w){return\"undefined\"!==typeof Y&&w instanceof Q||F(w),-w.Pa}},I:function(a,b,c){Uc=c;try{var d=A(a),f=c?Vc():0;return ia(d,b,f).fd}catch(g){return\"undefined\"!==typeof Y&&g instanceof Q||F(g),-g.Pa}},F:function(a,b,c){try{a=A(a);if(0>=c)var d=-28;else{var f=Qb(a),g=Math.min(c,aa(f)),\nm=y[b+g];k(f,n,b,c+1);y[b+g]=m;d=g}return d}catch(t){return\"undefined\"!==typeof Y&&t instanceof Q||F(t),-t.Pa}},H:function(a){try{a=A(a);var b=W(a,{parent:!0}).node,c=xb(a),d=Lb(b,c),f=Zb(b,c,!0);if(f)throw new Q(f);if(!b.La.rmdir)throw new Q(63);if(d.$a)throw new Q(10);try{V.willDeletePath&&V.willDeletePath(a)}catch(g){H(\"FS.trackingDelegate['willDeletePath']('\"+a+\"') threw an exception: \"+g.message)}b.La.rmdir(b,c);Tb(d);try{if(V.onDeletePath)V.onDeletePath(a)}catch(g){H(\"FS.trackingDelegate['onDeletePath']('\"+\na+\"') threw an exception: \"+g.message)}return 0}catch(g){return\"undefined\"!==typeof Y&&g instanceof Q||F(g),-g.Pa}},e:function(a,b){try{return a=A(a),Tc(fc,a,b)}catch(c){return\"undefined\"!==typeof Y&&c instanceof Q||F(c),-c.Pa}},x:function(a){try{return a=A(a),ua(a),0}catch(b){return\"undefined\"!==typeof Y&&b instanceof Q||F(b),-b.Pa}},J:function(){return 2147483648},n:function(a,b,c){n.copyWithin(a,b,b+c)},c:function(a){var b=n.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var d=b*\n(1+.2/c);d=Math.min(d,a+100663296);d=Math.max(a,d);0<d%65536&&(d+=65536-d%65536);a:{try{Oa.grow(Math.min(2147483648,d)-Xa.byteLength+65535>>>16);Ya();var f=1;break a}catch(g){}f=void 0}if(f)return!0}return!1},r:function(a){for(var b=Wc();Wc()-b<a;);},p:function(a,b){var c=0;Yc().forEach(function(d,f){var g=b+c;f=K[a+4*f>>2]=g;for(g=0;g<d.length;++g)y[f++>>0]=d.charCodeAt(g);y[f>>0]=0;c+=d.length+1});return 0},q:function(a,b){var c=Yc();K[a>>2]=c.length;var d=0;c.forEach(function(f){d+=f.length+1});\nK[b>>2]=d;return 0},f:function(a){try{var b=Z(a);la(b);return 0}catch(c){return\"undefined\"!==typeof Y&&c instanceof Q||F(c),c.Pa}},o:function(a,b){try{var c=Z(a);y[b>>0]=c.tty?2:S(c.mode)?3:40960===(c.mode&61440)?7:4;return 0}catch(d){return\"undefined\"!==typeof Y&&d instanceof Q||F(d),d.Pa}},w:function(a,b,c,d){try{a:{for(var f=Z(a),g=a=0;g<c;g++){var m=K[b+(8*g+4)>>2],t=Nc(f,y,K[b+8*g>>2],m,void 0);if(0>t){var w=-1;break a}a+=t;if(t<m)break}w=a}K[d>>2]=w;return 0}catch(u){return\"undefined\"!==typeof Y&&\nu instanceof Q||F(u),u.Pa}},m:function(a,b,c,d,f){try{var g=Z(a);a=4294967296*c+(b>>>0);if(-9007199254740992>=a||9007199254740992<=a)return-61;Mc(g,a,d);L=[g.position>>>0,(M=g.position,1<=+Math.abs(M)?0<M?(Math.min(+Math.floor(M/4294967296),4294967295)|0)>>>0:~~+Math.ceil((M-+(~~M>>>0))/4294967296)>>>0:0)];K[f>>2]=L[0];K[f+4>>2]=L[1];g.nb&&0===a&&0===d&&(g.nb=null);return 0}catch(m){return\"undefined\"!==typeof Y&&m instanceof Q||F(m),m.Pa}},G:function(a){try{var b=Z(a);return b.Ma&&b.Ma.fsync?-b.Ma.fsync(b):\n0}catch(c){return\"undefined\"!==typeof Y&&c instanceof Q||F(c),c.Pa}},B:function(a,b,c,d){try{a:{for(var f=Z(a),g=a=0;g<c;g++){var m=ka(f,y,K[b+8*g>>2],K[b+(8*g+4)>>2],void 0);if(0>m){var t=-1;break a}a+=m}t=a}K[d>>2]=t;return 0}catch(w){return\"undefined\"!==typeof Y&&w instanceof Q||F(w),w.Pa}},g:function(a){var b=Date.now();K[a>>2]=b/1E3|0;K[a+4>>2]=b%1E3*1E3|0;return 0},K:function(a){var b=Date.now()/1E3|0;a&&(K[a>>2]=b);return b},C:function(a,b){if(b){var c=b+8;b=1E3*K[c>>2];b+=K[c+4>>2]/1E3}else b=\nDate.now();a=A(a);try{var d=W(a,{Xa:!0}).node;d.La.Sa(d,{timestamp:Math.max(b,b)});var f=0}catch(g){if(!(g instanceof Q)){b:{f=Error();if(!f.stack){try{throw Error();}catch(m){f=m}if(!f.stack){f=\"(no stack trace available)\";break b}}f=f.stack.toString()}e.extraStackTrace&&(f+=\"\\n\"+e.extraStackTrace());f=kb(f);throw g+\" : \"+f;}f=g.Pa;K[$c()>>2]=f;f=-1}return f}};\n(function(){function a(f){e.asm=f.exports;Oa=e.asm.L;Ya();J=e.asm.Ca;$a.unshift(e.asm.M);cb--;e.monitorRunDependencies&&e.monitorRunDependencies(cb);0==cb&&(null!==db&&(clearInterval(db),db=null),eb&&(f=eb,eb=null,f()))}function b(f){a(f.instance)}function c(f){return ib().then(function(g){return WebAssembly.instantiate(g,d)}).then(function(g){return g}).then(f,function(g){H(\"failed to asynchronously prepare wasm: \"+g);F(g)})}var d={a:ad};cb++;e.monitorRunDependencies&&e.monitorRunDependencies(cb);\nif(e.instantiateWasm)try{return e.instantiateWasm(d,a)}catch(f){return H(\"Module.instantiateWasm callback failed with error: \"+f),!1}(function(){return Ka||\"function\"!==typeof WebAssembly.instantiateStreaming||fb()||P.startsWith(\"file://\")||\"function\"!==typeof fetch?c(b):fetch(P,{credentials:\"same-origin\"}).then(function(f){return WebAssembly.instantiateStreaming(f,d).then(b,function(g){H(\"wasm streaming compile failed: \"+g);H(\"falling back to ArrayBuffer instantiation\");return c(b)})})})();return{}})();\ne.___wasm_call_ctors=function(){return(e.___wasm_call_ctors=e.asm.M).apply(null,arguments)};e._sqlite3_free=function(){return(e._sqlite3_free=e.asm.N).apply(null,arguments)};var $c=e.___errno_location=function(){return($c=e.___errno_location=e.asm.O).apply(null,arguments)};e._sqlite3_step=function(){return(e._sqlite3_step=e.asm.P).apply(null,arguments)};e._sqlite3_finalize=function(){return(e._sqlite3_finalize=e.asm.Q).apply(null,arguments)};\ne._sqlite3_prepare_v2=function(){return(e._sqlite3_prepare_v2=e.asm.R).apply(null,arguments)};e._sqlite3_reset=function(){return(e._sqlite3_reset=e.asm.S).apply(null,arguments)};e._sqlite3_clear_bindings=function(){return(e._sqlite3_clear_bindings=e.asm.T).apply(null,arguments)};e._sqlite3_value_blob=function(){return(e._sqlite3_value_blob=e.asm.U).apply(null,arguments)};e._sqlite3_value_text=function(){return(e._sqlite3_value_text=e.asm.V).apply(null,arguments)};\ne._sqlite3_value_bytes=function(){return(e._sqlite3_value_bytes=e.asm.W).apply(null,arguments)};e._sqlite3_value_double=function(){return(e._sqlite3_value_double=e.asm.X).apply(null,arguments)};e._sqlite3_value_int=function(){return(e._sqlite3_value_int=e.asm.Y).apply(null,arguments)};e._sqlite3_value_type=function(){return(e._sqlite3_value_type=e.asm.Z).apply(null,arguments)};e._sqlite3_result_blob=function(){return(e._sqlite3_result_blob=e.asm._).apply(null,arguments)};\ne._sqlite3_result_double=function(){return(e._sqlite3_result_double=e.asm.$).apply(null,arguments)};e._sqlite3_result_error=function(){return(e._sqlite3_result_error=e.asm.aa).apply(null,arguments)};e._sqlite3_result_int=function(){return(e._sqlite3_result_int=e.asm.ba).apply(null,arguments)};e._sqlite3_result_int64=function(){return(e._sqlite3_result_int64=e.asm.ca).apply(null,arguments)};e._sqlite3_result_null=function(){return(e._sqlite3_result_null=e.asm.da).apply(null,arguments)};\ne._sqlite3_result_text=function(){return(e._sqlite3_result_text=e.asm.ea).apply(null,arguments)};e._sqlite3_column_count=function(){return(e._sqlite3_column_count=e.asm.fa).apply(null,arguments)};e._sqlite3_data_count=function(){return(e._sqlite3_data_count=e.asm.ga).apply(null,arguments)};e._sqlite3_column_blob=function(){return(e._sqlite3_column_blob=e.asm.ha).apply(null,arguments)};e._sqlite3_column_bytes=function(){return(e._sqlite3_column_bytes=e.asm.ia).apply(null,arguments)};\ne._sqlite3_column_double=function(){return(e._sqlite3_column_double=e.asm.ja).apply(null,arguments)};e._sqlite3_column_text=function(){return(e._sqlite3_column_text=e.asm.ka).apply(null,arguments)};e._sqlite3_column_type=function(){return(e._sqlite3_column_type=e.asm.la).apply(null,arguments)};e._sqlite3_column_name=function(){return(e._sqlite3_column_name=e.asm.ma).apply(null,arguments)};e._sqlite3_bind_blob=function(){return(e._sqlite3_bind_blob=e.asm.na).apply(null,arguments)};\ne._sqlite3_bind_double=function(){return(e._sqlite3_bind_double=e.asm.oa).apply(null,arguments)};e._sqlite3_bind_int=function(){return(e._sqlite3_bind_int=e.asm.pa).apply(null,arguments)};e._sqlite3_bind_text=function(){return(e._sqlite3_bind_text=e.asm.qa).apply(null,arguments)};e._sqlite3_bind_parameter_index=function(){return(e._sqlite3_bind_parameter_index=e.asm.ra).apply(null,arguments)};e._sqlite3_sql=function(){return(e._sqlite3_sql=e.asm.sa).apply(null,arguments)};\ne._sqlite3_normalized_sql=function(){return(e._sqlite3_normalized_sql=e.asm.ta).apply(null,arguments)};e._sqlite3_errmsg=function(){return(e._sqlite3_errmsg=e.asm.ua).apply(null,arguments)};e._sqlite3_exec=function(){return(e._sqlite3_exec=e.asm.va).apply(null,arguments)};e._sqlite3_changes=function(){return(e._sqlite3_changes=e.asm.wa).apply(null,arguments)};e._sqlite3_close_v2=function(){return(e._sqlite3_close_v2=e.asm.xa).apply(null,arguments)};\ne._sqlite3_create_function_v2=function(){return(e._sqlite3_create_function_v2=e.asm.ya).apply(null,arguments)};e._sqlite3_open=function(){return(e._sqlite3_open=e.asm.za).apply(null,arguments)};var da=e._malloc=function(){return(da=e._malloc=e.asm.Aa).apply(null,arguments)},oa=e._free=function(){return(oa=e._free=e.asm.Ba).apply(null,arguments)};e._RegisterExtensionFunctions=function(){return(e._RegisterExtensionFunctions=e.asm.Da).apply(null,arguments)};\nvar ob=e.__get_tzname=function(){return(ob=e.__get_tzname=e.asm.Ea).apply(null,arguments)},nb=e.__get_daylight=function(){return(nb=e.__get_daylight=e.asm.Fa).apply(null,arguments)},mb=e.__get_timezone=function(){return(mb=e.__get_timezone=e.asm.Ga).apply(null,arguments)},pa=e.stackSave=function(){return(pa=e.stackSave=e.asm.Ha).apply(null,arguments)},ra=e.stackRestore=function(){return(ra=e.stackRestore=e.asm.Ia).apply(null,arguments)},x=e.stackAlloc=function(){return(x=e.stackAlloc=e.asm.Ja).apply(null,\narguments)},Hb=e._memalign=function(){return(Hb=e._memalign=e.asm.Ka).apply(null,arguments)};e.cwrap=function(a,b,c,d){c=c||[];var f=c.every(function(g){return\"number\"===g});return\"string\"!==b&&f&&!d?Qa(a):function(){return Ra(a,b,c,arguments)}};e.UTF8ToString=A;e.stackSave=pa;e.stackRestore=ra;e.stackAlloc=x;var bd;eb=function cd(){bd||dd();bd||(eb=cd)};\nfunction dd(){function a(){if(!bd&&(bd=!0,e.calledRun=!0,!Pa)){e.noFSInit||Pc||(Pc=!0,Oc(),e.stdin=e.stdin,e.stdout=e.stdout,e.stderr=e.stderr,e.stdin?Qc(\"stdin\",e.stdin):ec(\"/dev/tty\",\"/dev/stdin\"),e.stdout?Qc(\"stdout\",null,e.stdout):ec(\"/dev/tty\",\"/dev/stdout\"),e.stderr?Qc(\"stderr\",null,e.stderr):ec(\"/dev/tty1\",\"/dev/stderr\"),ia(\"/dev/stdin\",0),ia(\"/dev/stdout\",1),ia(\"/dev/stderr\",1));Pb=!1;jb($a);if(e.onRuntimeInitialized)e.onRuntimeInitialized();if(e.postRun)for(\"function\"==typeof e.postRun&&\n(e.postRun=[e.postRun]);e.postRun.length;){var b=e.postRun.shift();ab.unshift(b)}jb(ab)}}if(!(0<cb)){if(e.preRun)for(\"function\"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)bb();jb(Za);0<cb||(e.setStatus?(e.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){e.setStatus(\"\")},1);a()},1)):a())}}e.run=dd;if(e.preInit)for(\"function\"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();dd();\n\n\n        // The shell-pre.js and emcc-generated code goes above\n        return Module;\n    }); // The end of the promise being returned\n\n  return initSqlJsPromise;\n} // The end of our initSqlJs function\n\n// This bit below is copied almost exactly from what you get when you use the MODULARIZE=1 flag with emcc\n// However, we don't want to use the emcc modularization. See shell-pre.js\nif (typeof exports === 'object' && typeof module === 'object'){\n    module.exports = initSqlJs;\n    // This will allow the module to be used in ES6 or CommonJS\n    module.exports.default = initSqlJs;\n}\nelse if (typeof define === 'function' && define['amd']) {\n    define([], function() { return initSqlJs; });\n}\nelse if (typeof exports === 'object'){\n    exports[\"Module\"] = initSqlJs;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { __read, __spreadArray, __values } from \"tslib\";\nimport { hash, shorten } from \"../util/StringUtils\";\n/**\n * Common driver utility functions.\n */\nvar DriverUtils = /** @class */ (function () {\n    function DriverUtils() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Normalizes and builds a new driver options.\n     * Extracts settings from connection url and sets to a new options object.\n     */\n    DriverUtils.buildDriverOptions = function (options, buildOptions) {\n        var e_1, _a;\n        if (options.url) {\n            var urlDriverOptions = this.parseConnectionUrl(options.url);\n            if (buildOptions && buildOptions.useSid && urlDriverOptions.database) {\n                urlDriverOptions.sid = urlDriverOptions.database;\n            }\n            try {\n                for (var _b = __values(Object.keys(urlDriverOptions)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var key = _c.value;\n                    if (typeof urlDriverOptions[key] === \"undefined\") {\n                        delete urlDriverOptions[key];\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return Object.assign({}, options, urlDriverOptions);\n        }\n        return Object.assign({}, options);\n    };\n    /**\n     * buildDriverOptions for MongodDB only to support replica set\n     */\n    DriverUtils.buildMongoDBDriverOptions = function (options, buildOptions) {\n        var e_2, _a;\n        if (options.url) {\n            var urlDriverOptions = this.parseMongoDBConnectionUrl(options.url);\n            if (buildOptions && buildOptions.useSid && urlDriverOptions.database) {\n                urlDriverOptions.sid = urlDriverOptions.database;\n            }\n            try {\n                for (var _b = __values(Object.keys(urlDriverOptions)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var key = _c.value;\n                    if (typeof urlDriverOptions[key] === \"undefined\") {\n                        delete urlDriverOptions[key];\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            return Object.assign({}, options, urlDriverOptions);\n        }\n        return Object.assign({}, options);\n    };\n    /**\n     * Joins and shortens alias if needed.\n     *\n     * If the alias length is greater than the limit allowed by the current\n     * driver, replaces it with a shortend string, if the shortend string\n     * is still too long, it will then hash the alias.\n     *\n     * @param driver Current `Driver`.\n     * @param buildOptions Optional settings.\n     * @param alias Alias parts.\n     *\n     * @return An alias that is no longer than the divers max alias length.\n     */\n    DriverUtils.buildAlias = function (_a, buildOptions) {\n        var maxAliasLength = _a.maxAliasLength;\n        var alias = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            alias[_i - 2] = arguments[_i];\n        }\n        if (typeof buildOptions === \"string\") {\n            alias.unshift(buildOptions);\n            buildOptions = { shorten: false, joiner: \"_\" };\n        }\n        else {\n            buildOptions = Object.assign({ shorten: false, joiner: \"_\" }, buildOptions);\n        }\n        var newAlias = alias.length === 1 ? alias[0] : alias.join(buildOptions.joiner);\n        if (maxAliasLength && maxAliasLength > 0 && newAlias.length > maxAliasLength) {\n            if (buildOptions.shorten === true) {\n                var shortenedAlias = shorten(newAlias);\n                if (shortenedAlias.length < maxAliasLength) {\n                    return shortenedAlias;\n                }\n            }\n            return hash(newAlias, { length: maxAliasLength });\n        }\n        return newAlias;\n    };\n    /**\n     * @deprecated use `buildAlias` instead.\n     */\n    DriverUtils.buildColumnAlias = function (_a, buildOptions) {\n        var maxAliasLength = _a.maxAliasLength;\n        var alias = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            alias[_i - 2] = arguments[_i];\n        }\n        return this.buildAlias.apply(this, __spreadArray([{ maxAliasLength: maxAliasLength }, buildOptions], __read(alias), false));\n    };\n    // -------------------------------------------------------------------------\n    // Private Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Extracts connection data from the connection url.\n     */\n    DriverUtils.parseConnectionUrl = function (url) {\n        var type = url.split(\":\")[0];\n        var firstSlashes = url.indexOf(\"//\");\n        var preBase = url.substr(firstSlashes + 2);\n        var secondSlash = preBase.indexOf(\"/\");\n        var base = (secondSlash !== -1) ? preBase.substr(0, secondSlash) : preBase;\n        var afterBase = (secondSlash !== -1) ? preBase.substr(secondSlash + 1) : undefined;\n        // remove mongodb query params\n        if (afterBase && afterBase.indexOf(\"?\") !== -1) {\n            afterBase = afterBase.substr(0, afterBase.indexOf(\"?\"));\n        }\n        var lastAtSign = base.lastIndexOf(\"@\");\n        var usernameAndPassword = base.substr(0, lastAtSign);\n        var hostAndPort = base.substr(lastAtSign + 1);\n        var username = usernameAndPassword;\n        var password = \"\";\n        var firstColon = usernameAndPassword.indexOf(\":\");\n        if (firstColon !== -1) {\n            username = usernameAndPassword.substr(0, firstColon);\n            password = usernameAndPassword.substr(firstColon + 1);\n        }\n        var _a = __read(hostAndPort.split(\":\"), 2), host = _a[0], port = _a[1];\n        return {\n            type: type,\n            host: host,\n            username: decodeURIComponent(username),\n            password: decodeURIComponent(password),\n            port: port ? parseInt(port) : undefined,\n            database: afterBase || undefined\n        };\n    };\n    /**\n     * Extracts connection data from the connection url for MongoDB to support replica set.\n     */\n    DriverUtils.parseMongoDBConnectionUrl = function (url) {\n        var _a, e_3, _b;\n        var type = url.split(\":\")[0];\n        var firstSlashes = url.indexOf(\"//\");\n        var preBase = url.substr(firstSlashes + 2);\n        var secondSlash = preBase.indexOf(\"/\");\n        var base = (secondSlash !== -1) ? preBase.substr(0, secondSlash) : preBase;\n        var afterBase = (secondSlash !== -1) ? preBase.substr(secondSlash + 1) : undefined;\n        var afterQuestionMark = \"\";\n        var host = undefined;\n        var port = undefined;\n        var hostReplicaSet = undefined;\n        var replicaSet = undefined;\n        var optionsObject = {};\n        if (afterBase && afterBase.indexOf(\"?\") !== -1) {\n            // split params\n            afterQuestionMark = afterBase.substr((afterBase.indexOf(\"?\") + 1), afterBase.length);\n            var optionsList = afterQuestionMark.split(\"&\");\n            var optionKey_1;\n            var optionValue_1;\n            // create optionsObject for merge with connectionUrl object before return\n            optionsList.forEach(function (optionItem) {\n                optionKey_1 = optionItem.split(\"=\")[0];\n                optionValue_1 = optionItem.split(\"=\")[1];\n                optionsObject[optionKey_1] = optionValue_1;\n            });\n            // specific replicaSet value to set options about hostReplicaSet\n            replicaSet = optionsObject[\"replicaSet\"];\n            afterBase = afterBase.substr(0, afterBase.indexOf(\"?\"));\n        }\n        var lastAtSign = base.lastIndexOf(\"@\");\n        var usernameAndPassword = base.substr(0, lastAtSign);\n        var hostAndPort = base.substr(lastAtSign + 1);\n        var username = usernameAndPassword;\n        var password = \"\";\n        var firstColon = usernameAndPassword.indexOf(\":\");\n        if (firstColon !== -1) {\n            username = usernameAndPassword.substr(0, firstColon);\n            password = usernameAndPassword.substr(firstColon + 1);\n        }\n        // If replicaSet have value set It as hostlist, If not set like standalone host\n        if (replicaSet) {\n            hostReplicaSet = hostAndPort;\n        }\n        else {\n            _a = __read(hostAndPort.split(\":\"), 2), host = _a[0], port = _a[1];\n        }\n        var connectionUrl = {\n            type: type,\n            host: host,\n            hostReplicaSet: hostReplicaSet,\n            username: decodeURIComponent(username),\n            password: decodeURIComponent(password),\n            port: port ? parseInt(port) : undefined,\n            database: afterBase || undefined\n        };\n        try {\n            // Loop to set every options in connectionUrl to object\n            for (var _c = __values(Object.entries(optionsObject)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = __read(_d.value, 2), key = _e[0], value = _e[1];\n                connectionUrl[key] = value;\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return connectionUrl;\n    };\n    return DriverUtils;\n}());\nexport { DriverUtils };\n\n//# sourceMappingURL=DriverUtils.js.map\n","var ViewUtils = /** @class */ (function () {\n    function ViewUtils() {\n    }\n    /**\n     * Comparator for .sort() that will order views bases on dependencies in creation order\n     */\n    ViewUtils.viewMetadataCmp = function (metadataA, metadataB) {\n        if (!metadataA || !metadataB) {\n            return 0;\n        }\n        if (metadataA.dependsOn && (metadataA.dependsOn.has(metadataB.target) ||\n            metadataA.dependsOn.has(metadataB.name))) {\n            return 1;\n        }\n        if (metadataB.dependsOn && (metadataB.dependsOn.has(metadataA.target) ||\n            metadataB.dependsOn.has(metadataA.name))) {\n            return -1;\n        }\n        return 0;\n    };\n    return ViewUtils;\n}());\nexport { ViewUtils };\n\n//# sourceMappingURL=ViewUtils.js.map\n","import { __awaiter, __generator, __read, __values } from \"tslib\";\nimport { CockroachDriver } from \"../driver/cockroachdb/CockroachDriver\";\nimport { Table } from \"./table/Table\";\nimport { TableColumn } from \"./table/TableColumn\";\nimport { TableForeignKey } from \"./table/TableForeignKey\";\nimport { TableIndex } from \"./table/TableIndex\";\nimport { TableUtils } from \"./util/TableUtils\";\nimport { PostgresDriver } from \"../driver/postgres/PostgresDriver\";\nimport { MysqlDriver } from \"../driver/mysql/MysqlDriver\";\nimport { TableUnique } from \"./table/TableUnique\";\nimport { TableCheck } from \"./table/TableCheck\";\nimport { TableExclusion } from \"./table/TableExclusion\";\nimport { View } from \"./view/View\";\nimport { ViewUtils } from \"./util/ViewUtils\";\nimport { AuroraDataApiDriver } from \"../driver/aurora-data-api/AuroraDataApiDriver\";\n/**\n * Creates complete tables schemas in the database based on the entity metadatas.\n *\n * Steps how schema is being built:\n * 1. load list of all tables with complete column and keys information from the db\n * 2. drop all (old) foreign keys that exist in the table, but does not exist in the metadata\n * 3. create new tables that does not exist in the db, but exist in the metadata\n * 4. drop all columns exist (left old) in the db table, but does not exist in the metadata\n * 5. add columns from metadata which does not exist in the table\n * 6. update all exist columns which metadata has changed\n * 7. update primary keys - update old and create new primary key from changed columns\n * 8. create foreign keys which does not exist in the table yet\n * 9. create indices which are missing in db yet, and drops indices which exist in the db, but does not exist in the metadata anymore\n */\nvar RdbmsSchemaBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RdbmsSchemaBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates complete schemas for the given entity metadatas.\n     */\n    RdbmsSchemaBuilder.prototype.build = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var isUsingTransactions, tablePaths, error_1, rollbackError_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.queryRunner = this.connection.createQueryRunner();\n                        // this.connection.driver.database || this.currentDatabase;\n                        this.currentDatabase = this.connection.driver.database;\n                        this.currentSchema = this.connection.driver.schema;\n                        isUsingTransactions = (!(this.connection.driver instanceof CockroachDriver) &&\n                            this.connection.options.migrationsTransactionMode !== \"none\");\n                        if (!isUsingTransactions) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.queryRunner.startTransaction()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 12, 18, 20]);\n                        if (!(this.viewEntityToSyncMetadatas.length > 0)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.createTypeormMetadataTable()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4:\n                        tablePaths = this.entityToSyncMetadatas.map(function (metadata) { return _this.getTablePath(metadata); });\n                        return [4 /*yield*/, this.queryRunner.getTables(tablePaths)];\n                    case 5:\n                        _a.sent();\n                        return [4 /*yield*/, this.queryRunner.getViews([])];\n                    case 6:\n                        _a.sent();\n                        return [4 /*yield*/, this.executeSchemaSyncOperationsInProperOrder()];\n                    case 7:\n                        _a.sent();\n                        if (!this.connection.queryResultCache) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.connection.queryResultCache.synchronize(this.queryRunner)];\n                    case 8:\n                        _a.sent();\n                        _a.label = 9;\n                    case 9:\n                        if (!isUsingTransactions) return [3 /*break*/, 11];\n                        return [4 /*yield*/, this.queryRunner.commitTransaction()];\n                    case 10:\n                        _a.sent();\n                        _a.label = 11;\n                    case 11: return [3 /*break*/, 20];\n                    case 12:\n                        error_1 = _a.sent();\n                        _a.label = 13;\n                    case 13:\n                        _a.trys.push([13, 16, , 17]);\n                        if (!isUsingTransactions) return [3 /*break*/, 15];\n                        return [4 /*yield*/, this.queryRunner.rollbackTransaction()];\n                    case 14:\n                        _a.sent();\n                        _a.label = 15;\n                    case 15: return [3 /*break*/, 17];\n                    case 16:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 17];\n                    case 17: throw error_1;\n                    case 18: return [4 /*yield*/, this.queryRunner.release()];\n                    case 19:\n                        _a.sent();\n                        return [7 /*endfinally*/];\n                    case 20: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Returns sql queries to be executed by schema builder.\n     */\n    RdbmsSchemaBuilder.prototype.log = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var tablePaths;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.queryRunner = this.connection.createQueryRunner();\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 9, 11]);\n                        if (!(this.viewEntityToSyncMetadatas.length > 0)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.createTypeormMetadataTable()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        tablePaths = this.entityToSyncMetadatas.map(function (metadata) { return _this.getTablePath(metadata); });\n                        return [4 /*yield*/, this.queryRunner.getTables(tablePaths)];\n                    case 4:\n                        _a.sent();\n                        return [4 /*yield*/, this.queryRunner.getViews([])];\n                    case 5:\n                        _a.sent();\n                        this.queryRunner.enableSqlMemory();\n                        return [4 /*yield*/, this.executeSchemaSyncOperationsInProperOrder()];\n                    case 6:\n                        _a.sent();\n                        if (!this.connection.queryResultCache) return [3 /*break*/, 8];\n                        return [4 /*yield*/, this.connection.queryResultCache.synchronize(this.queryRunner)];\n                    case 7:\n                        _a.sent();\n                        _a.label = 8;\n                    case 8: return [2 /*return*/, this.queryRunner.getMemorySql()];\n                    case 9:\n                        // its important to disable this mode despite the fact we are release query builder\n                        // because there exist drivers which reuse same query runner. Also its important to disable\n                        // sql memory after call of getMemorySql() method because last one flushes sql memory.\n                        this.queryRunner.disableSqlMemory();\n                        return [4 /*yield*/, this.queryRunner.release()];\n                    case 10:\n                        _a.sent();\n                        return [7 /*endfinally*/];\n                    case 11: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Object.defineProperty(RdbmsSchemaBuilder.prototype, \"entityToSyncMetadatas\", {\n        // -------------------------------------------------------------------------\n        // Protected Methods\n        // -------------------------------------------------------------------------\n        /**\n         * Returns only entities that should be synced in the database.\n         */\n        get: function () {\n            return this.connection.entityMetadatas.filter(function (metadata) { return metadata.synchronize && metadata.tableType !== \"entity-child\" && metadata.tableType !== \"view\"; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RdbmsSchemaBuilder.prototype, \"viewEntityToSyncMetadatas\", {\n        /**\n         * Returns only entities that should be synced in the database.\n         */\n        get: function () {\n            return this.connection.entityMetadatas\n                .filter(function (metadata) { return metadata.tableType === \"view\" && metadata.synchronize; })\n                // sort views in creation order by dependencies\n                .sort(ViewUtils.viewMetadataCmp);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Executes schema sync operations in a proper order.\n     * Order of operations matter here.\n     */\n    RdbmsSchemaBuilder.prototype.executeSchemaSyncOperationsInProperOrder = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.dropOldViews()];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.dropOldForeignKeys()];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.dropOldIndices()];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, this.dropOldChecks()];\n                    case 4:\n                        _a.sent();\n                        return [4 /*yield*/, this.dropOldExclusions()];\n                    case 5:\n                        _a.sent();\n                        return [4 /*yield*/, this.dropCompositeUniqueConstraints()];\n                    case 6:\n                        _a.sent();\n                        // await this.renameTables();\n                        return [4 /*yield*/, this.renameColumns()];\n                    case 7:\n                        // await this.renameTables();\n                        _a.sent();\n                        return [4 /*yield*/, this.createNewTables()];\n                    case 8:\n                        _a.sent();\n                        return [4 /*yield*/, this.dropRemovedColumns()];\n                    case 9:\n                        _a.sent();\n                        return [4 /*yield*/, this.addNewColumns()];\n                    case 10:\n                        _a.sent();\n                        return [4 /*yield*/, this.updatePrimaryKeys()];\n                    case 11:\n                        _a.sent();\n                        return [4 /*yield*/, this.updateExistColumns()];\n                    case 12:\n                        _a.sent();\n                        return [4 /*yield*/, this.createNewIndices()];\n                    case 13:\n                        _a.sent();\n                        return [4 /*yield*/, this.createNewChecks()];\n                    case 14:\n                        _a.sent();\n                        return [4 /*yield*/, this.createNewExclusions()];\n                    case 15:\n                        _a.sent();\n                        return [4 /*yield*/, this.createCompositeUniqueConstraints()];\n                    case 16:\n                        _a.sent();\n                        return [4 /*yield*/, this.createForeignKeys()];\n                    case 17:\n                        _a.sent();\n                        return [4 /*yield*/, this.createViews()];\n                    case 18:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RdbmsSchemaBuilder.prototype.getTablePath = function (target) {\n        var parsed = this.connection.driver.parseTableName(target);\n        return this.connection.driver.buildTableName(parsed.tableName, parsed.schema || this.currentSchema, parsed.database || this.currentDatabase);\n    };\n    /**\n     * Drops all (old) foreign keys that exist in the tables, but do not exist in the entity metadata.\n     */\n    RdbmsSchemaBuilder.prototype.dropOldForeignKeys = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_1, this_1, _a, _b, metadata, e_1_1;\n            var e_1, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _loop_1 = function (metadata) {\n                            var table, tableForeignKeysToDrop;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        table = this_1.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        tableForeignKeysToDrop = table.foreignKeys.filter(function (tableForeignKey) {\n                                            var metadataFK = metadata.foreignKeys.find(function (metadataForeignKey) { return ((tableForeignKey.name === metadataForeignKey.name) &&\n                                                (_this.getTablePath(tableForeignKey) === _this.getTablePath(metadataForeignKey.referencedEntityMetadata))); });\n                                            return !metadataFK\n                                                || (metadataFK.onDelete && metadataFK.onDelete !== tableForeignKey.onDelete)\n                                                || (metadataFK.onUpdate && metadataFK.onUpdate !== tableForeignKey.onUpdate);\n                                        });\n                                        if (tableForeignKeysToDrop.length === 0)\n                                            return [2 /*return*/, \"continue\"];\n                                        this_1.connection.logger.logSchemaBuild(\"dropping old foreign keys of \" + table.name + \": \" + tableForeignKeysToDrop.map(function (dbForeignKey) { return dbForeignKey.name; }).join(\", \"));\n                                        // drop foreign keys from the database\n                                        return [4 /*yield*/, this_1.queryRunner.dropForeignKeys(table, tableForeignKeysToDrop)];\n                                    case 1:\n                                        // drop foreign keys from the database\n                                        _e.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_1 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_1(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_1_1 = _d.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Rename tables\n     */\n    RdbmsSchemaBuilder.prototype.renameTables = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Renames columns.\n     * Works if only one column per table was changed.\n     * Changes only column name. If something besides name was changed, these changes will be ignored.\n     */\n    RdbmsSchemaBuilder.prototype.renameColumns = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_2, this_2, _a, _b, metadata, e_2_1;\n            var e_2, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _loop_2 = function (metadata) {\n                            var table, renamedMetadataColumns, renamedTableColumns, renamedColumn;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        table = this_2.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        if (metadata.columns.length !== table.columns.length)\n                                            return [2 /*return*/, \"continue\"];\n                                        renamedMetadataColumns = metadata.columns.filter(function (column) {\n                                            return !table.columns.find(function (tableColumn) {\n                                                return tableColumn.name === column.databaseName\n                                                    && tableColumn.type === _this.connection.driver.normalizeType(column)\n                                                    && tableColumn.isNullable === column.isNullable\n                                                    && tableColumn.isUnique === _this.connection.driver.normalizeIsUnique(column);\n                                            });\n                                        });\n                                        if (renamedMetadataColumns.length === 0 || renamedMetadataColumns.length > 1)\n                                            return [2 /*return*/, \"continue\"];\n                                        renamedTableColumns = table.columns.filter(function (tableColumn) {\n                                            return !metadata.columns.find(function (column) {\n                                                return column.databaseName === tableColumn.name\n                                                    && _this.connection.driver.normalizeType(column) === tableColumn.type\n                                                    && column.isNullable === tableColumn.isNullable\n                                                    && _this.connection.driver.normalizeIsUnique(column) === tableColumn.isUnique;\n                                            });\n                                        });\n                                        if (renamedTableColumns.length === 0 || renamedTableColumns.length > 1)\n                                            return [2 /*return*/, \"continue\"];\n                                        renamedColumn = renamedTableColumns[0].clone();\n                                        renamedColumn.name = renamedMetadataColumns[0].databaseName;\n                                        this_2.connection.logger.logSchemaBuild(\"renaming column \\\"\" + renamedTableColumns[0].name + \"\\\" in to \\\"\" + renamedColumn.name + \"\\\"\");\n                                        return [4 /*yield*/, this_2.queryRunner.renameColumn(table, renamedTableColumns[0], renamedColumn)];\n                                    case 1:\n                                        _e.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_2 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_2(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_2_1 = _d.sent();\n                        e_2 = { error: e_2_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RdbmsSchemaBuilder.prototype.dropOldIndices = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_3, this_3, _a, _b, metadata, e_3_1;\n            var e_3, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _loop_3 = function (metadata) {\n                            var table, dropQueries;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        table = this_3.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        dropQueries = table.indices\n                                            .filter(function (tableIndex) {\n                                            var indexMetadata = metadata.indices.find(function (index) { return index.name === tableIndex.name; });\n                                            if (indexMetadata) {\n                                                if (indexMetadata.synchronize === false)\n                                                    return false;\n                                                if (indexMetadata.isUnique !== tableIndex.isUnique)\n                                                    return true;\n                                                if (indexMetadata.isSpatial !== tableIndex.isSpatial)\n                                                    return true;\n                                                if (_this.connection.driver.isFullTextColumnTypeSupported() && indexMetadata.isFulltext !== tableIndex.isFulltext)\n                                                    return true;\n                                                if (indexMetadata.columns.length !== tableIndex.columnNames.length)\n                                                    return true;\n                                                return !indexMetadata.columns.every(function (column) { return tableIndex.columnNames.indexOf(column.databaseName) !== -1; });\n                                            }\n                                            return true;\n                                        })\n                                            .map(function (tableIndex) { return __awaiter(_this, void 0, void 0, function () {\n                                            return __generator(this, function (_a) {\n                                                switch (_a.label) {\n                                                    case 0:\n                                                        this.connection.logger.logSchemaBuild(\"dropping an index: \\\"\" + tableIndex.name + \"\\\" from table \" + table.name);\n                                                        return [4 /*yield*/, this.queryRunner.dropIndex(table, tableIndex)];\n                                                    case 1:\n                                                        _a.sent();\n                                                        return [2 /*return*/];\n                                                }\n                                            });\n                                        }); });\n                                        return [4 /*yield*/, Promise.all(dropQueries)];\n                                    case 1:\n                                        _e.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_3 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_3(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_3_1 = _d.sent();\n                        e_3 = { error: e_3_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_3) throw e_3.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RdbmsSchemaBuilder.prototype.dropOldChecks = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_4, this_4, _a, _b, metadata, e_4_1;\n            var e_4, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        // Mysql does not support check constraints\n                        if (this.connection.driver instanceof MysqlDriver || this.connection.driver instanceof AuroraDataApiDriver)\n                            return [2 /*return*/];\n                        _loop_4 = function (metadata) {\n                            var table, oldChecks;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        table = this_4.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        oldChecks = table.checks.filter(function (tableCheck) {\n                                            return !metadata.checks.find(function (checkMetadata) { return checkMetadata.name === tableCheck.name; });\n                                        });\n                                        if (oldChecks.length === 0)\n                                            return [2 /*return*/, \"continue\"];\n                                        this_4.connection.logger.logSchemaBuild(\"dropping old check constraint: \" + oldChecks.map(function (check) { return \"\\\"\" + check.name + \"\\\"\"; }).join(\", \") + \" from table \\\"\" + table.name + \"\\\"\");\n                                        return [4 /*yield*/, this_4.queryRunner.dropCheckConstraints(table, oldChecks)];\n                                    case 1:\n                                        _e.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_4 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_4(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_4_1 = _d.sent();\n                        e_4 = { error: e_4_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_4) throw e_4.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RdbmsSchemaBuilder.prototype.dropCompositeUniqueConstraints = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_5, this_5, _a, _b, metadata, e_5_1;\n            var e_5, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _loop_5 = function (metadata) {\n                            var table, compositeUniques;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        table = this_5.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        compositeUniques = table.uniques.filter(function (tableUnique) {\n                                            return tableUnique.columnNames.length > 1 && !metadata.uniques.find(function (uniqueMetadata) { return uniqueMetadata.name === tableUnique.name; });\n                                        });\n                                        if (compositeUniques.length === 0)\n                                            return [2 /*return*/, \"continue\"];\n                                        this_5.connection.logger.logSchemaBuild(\"dropping old unique constraint: \" + compositeUniques.map(function (unique) { return \"\\\"\" + unique.name + \"\\\"\"; }).join(\", \") + \" from table \\\"\" + table.name + \"\\\"\");\n                                        return [4 /*yield*/, this_5.queryRunner.dropUniqueConstraints(table, compositeUniques)];\n                                    case 1:\n                                        _e.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_5 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_5(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_5_1 = _d.sent();\n                        e_5 = { error: e_5_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_5) throw e_5.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RdbmsSchemaBuilder.prototype.dropOldExclusions = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_6, this_6, _a, _b, metadata, e_6_1;\n            var e_6, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        // Only PostgreSQL supports exclusion constraints\n                        if (!(this.connection.driver instanceof PostgresDriver))\n                            return [2 /*return*/];\n                        _loop_6 = function (metadata) {\n                            var table, oldExclusions;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        table = this_6.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        oldExclusions = table.exclusions.filter(function (tableExclusion) {\n                                            return !metadata.exclusions.find(function (exclusionMetadata) { return exclusionMetadata.name === tableExclusion.name; });\n                                        });\n                                        if (oldExclusions.length === 0)\n                                            return [2 /*return*/, \"continue\"];\n                                        this_6.connection.logger.logSchemaBuild(\"dropping old exclusion constraint: \" + oldExclusions.map(function (exclusion) { return \"\\\"\" + exclusion.name + \"\\\"\"; }).join(\", \") + \" from table \\\"\" + table.name + \"\\\"\");\n                                        return [4 /*yield*/, this_6.queryRunner.dropExclusionConstraints(table, oldExclusions)];\n                                    case 1:\n                                        _e.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_6 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_6(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_6_1 = _d.sent();\n                        e_6 = { error: e_6_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_6) throw e_6.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates tables that do not exist in the database yet.\n     * New tables are created without foreign and primary keys.\n     * Primary key only can be created in conclusion with auto generated column.\n     */\n    RdbmsSchemaBuilder.prototype.createNewTables = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_7, this_7, _a, _b, metadata, e_7_1;\n            var e_7, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _loop_7 = function (metadata) {\n                            var existTable, table;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        existTable = this_7.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (existTable)\n                                            return [2 /*return*/, \"continue\"];\n                                        this_7.connection.logger.logSchemaBuild(\"creating a new table: \" + this_7.getTablePath(metadata));\n                                        table = Table.create(metadata, this_7.connection.driver);\n                                        return [4 /*yield*/, this_7.queryRunner.createTable(table, false, false)];\n                                    case 1:\n                                        _e.sent();\n                                        this_7.queryRunner.loadedTables.push(table);\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_7 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_7(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_7_1 = _d.sent();\n                        e_7 = { error: e_7_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_7) throw e_7.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RdbmsSchemaBuilder.prototype.createViews = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_8, this_8, _a, _b, metadata, e_8_1;\n            var e_8, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _loop_8 = function (metadata) {\n                            var existView, view;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        existView = this_8.queryRunner.loadedViews.find(function (view) {\n                                            var viewExpression = typeof view.expression === \"string\" ? view.expression.trim() : view.expression(_this.connection).getQuery();\n                                            var metadataExpression = typeof metadata.expression === \"string\" ? metadata.expression.trim() : metadata.expression(_this.connection).getQuery();\n                                            return _this.getTablePath(view) === _this.getTablePath(metadata) && viewExpression === metadataExpression;\n                                        });\n                                        if (existView)\n                                            return [2 /*return*/, \"continue\"];\n                                        this_8.connection.logger.logSchemaBuild(\"creating a new view: \" + this_8.getTablePath(metadata));\n                                        view = View.create(metadata, this_8.connection.driver);\n                                        return [4 /*yield*/, this_8.queryRunner.createView(view)];\n                                    case 1:\n                                        _e.sent();\n                                        this_8.queryRunner.loadedViews.push(view);\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_8 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.viewEntityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_8(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_8_1 = _d.sent();\n                        e_8 = { error: e_8_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_8) throw e_8.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RdbmsSchemaBuilder.prototype.dropOldViews = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var droppedViews, viewEntityToSyncMetadatas, viewToMetadata, _loop_9, _a, _b, view, _c, _d, view, viewMetadata, viewExpression, metadataExpression, viewDependencyChain, droppedViewsWithDependencies, droppedViewsWithDependencies_1, droppedViewsWithDependencies_1_1, view, e_9_1;\n            var e_10, _e, e_11, _f, e_9, _g;\n            var _this = this;\n            return __generator(this, function (_h) {\n                switch (_h.label) {\n                    case 0:\n                        droppedViews = [];\n                        viewEntityToSyncMetadatas = this.viewEntityToSyncMetadatas;\n                        viewToMetadata = new Map();\n                        _loop_9 = function (view) {\n                            var viewMetadata = viewEntityToSyncMetadatas.find(function (metadata) {\n                                return _this.getTablePath(view) === _this.getTablePath(metadata);\n                            });\n                            if (viewMetadata) {\n                                viewToMetadata.set(view, viewMetadata);\n                            }\n                        };\n                        try {\n                            for (_a = __values(this.queryRunner.loadedViews), _b = _a.next(); !_b.done; _b = _a.next()) {\n                                view = _b.value;\n                                _loop_9(view);\n                            }\n                        }\n                        catch (e_10_1) { e_10 = { error: e_10_1 }; }\n                        finally {\n                            try {\n                                if (_b && !_b.done && (_e = _a.return)) _e.call(_a);\n                            }\n                            finally { if (e_10) throw e_10.error; }\n                        }\n                        try {\n                            // Gather all changed view, that need a drop\n                            for (_c = __values(this.queryRunner.loadedViews), _d = _c.next(); !_d.done; _d = _c.next()) {\n                                view = _d.value;\n                                viewMetadata = viewToMetadata.get(view);\n                                if (!viewMetadata) {\n                                    continue;\n                                }\n                                viewExpression = typeof view.expression === \"string\" ? view.expression.trim() : view.expression(this.connection).getQuery();\n                                metadataExpression = typeof viewMetadata.expression === \"string\" ? viewMetadata.expression.trim() : viewMetadata.expression(this.connection).getQuery();\n                                if (viewExpression === metadataExpression)\n                                    continue;\n                                this.connection.logger.logSchemaBuild(\"dropping an old view: \" + view.name);\n                                // Collect view to be dropped\n                                droppedViews.push(view);\n                            }\n                        }\n                        catch (e_11_1) { e_11 = { error: e_11_1 }; }\n                        finally {\n                            try {\n                                if (_d && !_d.done && (_f = _c.return)) _f.call(_c);\n                            }\n                            finally { if (e_11) throw e_11.error; }\n                        }\n                        viewDependencyChain = function (view) {\n                            var e_12, _a;\n                            // Get the view metadata\n                            var viewMetadata = viewToMetadata.get(view);\n                            var viewWithDependencies = [view];\n                            // If no metadata is known for the view, simply return the view itself\n                            if (!viewMetadata) {\n                                return viewWithDependencies;\n                            }\n                            try {\n                                // Iterate over all known views\n                                for (var _b = __values(viewToMetadata.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                                    var _d = __read(_c.value, 2), currentView = _d[0], currentMetadata = _d[1];\n                                    // Ignore self reference\n                                    if (currentView === view) {\n                                        continue;\n                                    }\n                                    // If the currently iterated view depends on the passed in view\n                                    if (currentMetadata.dependsOn && (currentMetadata.dependsOn.has(viewMetadata.target) ||\n                                        currentMetadata.dependsOn.has(viewMetadata.name))) {\n                                        // Recursively add currently iterate view and its dependents\n                                        viewWithDependencies = viewWithDependencies.concat(viewDependencyChain(currentView));\n                                    }\n                                }\n                            }\n                            catch (e_12_1) { e_12 = { error: e_12_1 }; }\n                            finally {\n                                try {\n                                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                                }\n                                finally { if (e_12) throw e_12.error; }\n                            }\n                            // Return all collected views\n                            return viewWithDependencies;\n                        };\n                        droppedViewsWithDependencies = new Set(\n                        // Collect all dropped views, and their dependencies\n                        droppedViews.map(function (view) { return viewDependencyChain(view); })\n                            // Flattened to single Array ( can be replaced with flatMap, once supported)\n                            .reduce(function (all, segment) {\n                            return all.concat(segment);\n                        }, [])\n                            // Sort the views to be dropped in creation order\n                            .sort(function (a, b) {\n                            return ViewUtils.viewMetadataCmp(viewToMetadata.get(a), viewToMetadata.get(b));\n                        })\n                            // reverse order to get drop order\n                            .reverse());\n                        _h.label = 1;\n                    case 1:\n                        _h.trys.push([1, 6, 7, 8]);\n                        droppedViewsWithDependencies_1 = __values(droppedViewsWithDependencies), droppedViewsWithDependencies_1_1 = droppedViewsWithDependencies_1.next();\n                        _h.label = 2;\n                    case 2:\n                        if (!!droppedViewsWithDependencies_1_1.done) return [3 /*break*/, 5];\n                        view = droppedViewsWithDependencies_1_1.value;\n                        return [4 /*yield*/, this.queryRunner.dropView(view)];\n                    case 3:\n                        _h.sent();\n                        _h.label = 4;\n                    case 4:\n                        droppedViewsWithDependencies_1_1 = droppedViewsWithDependencies_1.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_9_1 = _h.sent();\n                        e_9 = { error: e_9_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (droppedViewsWithDependencies_1_1 && !droppedViewsWithDependencies_1_1.done && (_g = droppedViewsWithDependencies_1.return)) _g.call(droppedViewsWithDependencies_1);\n                        }\n                        finally { if (e_9) throw e_9.error; }\n                        return [7 /*endfinally*/];\n                    case 8:\n                        this.queryRunner.loadedViews = this.queryRunner.loadedViews.filter(function (view) { return !droppedViewsWithDependencies.has(view); });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops all columns that exist in the table, but does not exist in the metadata (left old).\n     * We drop their keys too, since it should be safe.\n     */\n    RdbmsSchemaBuilder.prototype.dropRemovedColumns = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_10, this_9, _a, _b, metadata, e_13_1;\n            var e_13, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _loop_10 = function (metadata) {\n                            var table, droppedTableColumns;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        table = this_9.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        droppedTableColumns = table.columns.filter(function (tableColumn) {\n                                            return !metadata.columns.find(function (columnMetadata) { return columnMetadata.databaseName === tableColumn.name; });\n                                        });\n                                        if (droppedTableColumns.length === 0)\n                                            return [2 /*return*/, \"continue\"];\n                                        this_9.connection.logger.logSchemaBuild(\"columns dropped in \" + table.name + \": \" + droppedTableColumns.map(function (column) { return column.name; }).join(\", \"));\n                                        // drop columns from the database\n                                        return [4 /*yield*/, this_9.queryRunner.dropColumns(table, droppedTableColumns)];\n                                    case 1:\n                                        // drop columns from the database\n                                        _e.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_9 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_10(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_13_1 = _d.sent();\n                        e_13 = { error: e_13_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_13) throw e_13.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Adds columns from metadata which does not exist in the table.\n     * Columns are created without keys.\n     */\n    RdbmsSchemaBuilder.prototype.addNewColumns = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_11, this_10, _a, _b, metadata, e_14_1;\n            var e_14, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _loop_11 = function (metadata) {\n                            var table, newColumnMetadatas, newTableColumnOptions, newTableColumns;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        table = this_10.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        newColumnMetadatas = metadata.columns.filter(function (columnMetadata) {\n                                            return !table.columns.find(function (tableColumn) { return tableColumn.name === columnMetadata.databaseName; });\n                                        });\n                                        if (newColumnMetadatas.length === 0)\n                                            return [2 /*return*/, \"continue\"];\n                                        newTableColumnOptions = this_10.metadataColumnsToTableColumnOptions(newColumnMetadatas);\n                                        newTableColumns = newTableColumnOptions.map(function (option) { return new TableColumn(option); });\n                                        if (newTableColumns.length === 0)\n                                            return [2 /*return*/, \"continue\"];\n                                        this_10.connection.logger.logSchemaBuild(\"new columns added: \" + newColumnMetadatas.map(function (column) { return column.databaseName; }).join(\", \"));\n                                        return [4 /*yield*/, this_10.queryRunner.addColumns(table, newTableColumns)];\n                                    case 1:\n                                        _e.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_10 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_11(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_14_1 = _d.sent();\n                        e_14 = { error: e_14_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_14) throw e_14.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates composite primary keys.\n     */\n    RdbmsSchemaBuilder.prototype.updatePrimaryKeys = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_12, this_11, _a, _b, metadata, e_15_1;\n            var e_15, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _loop_12 = function (metadata) {\n                            var table, primaryMetadataColumns, primaryTableColumns, changedPrimaryColumns;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        table = this_11.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        primaryMetadataColumns = metadata.columns.filter(function (column) { return column.isPrimary; });\n                                        primaryTableColumns = table.columns.filter(function (column) { return column.isPrimary; });\n                                        if (!(primaryTableColumns.length !== primaryMetadataColumns.length && primaryMetadataColumns.length > 1)) return [3 /*break*/, 2];\n                                        changedPrimaryColumns = primaryMetadataColumns.map(function (primaryMetadataColumn) {\n                                            return new TableColumn(TableUtils.createTableColumnOptions(primaryMetadataColumn, _this.connection.driver));\n                                        });\n                                        return [4 /*yield*/, this_11.queryRunner.updatePrimaryKeys(table, changedPrimaryColumns)];\n                                    case 1:\n                                        _e.sent();\n                                        _e.label = 2;\n                                    case 2: return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_11 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_12(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_15_1 = _d.sent();\n                        e_15 = { error: e_15_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_15) throw e_15.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Update all exist columns which metadata has changed.\n     * Still don't create keys. Also we don't touch foreign keys of the changed columns.\n     */\n    RdbmsSchemaBuilder.prototype.updateExistColumns = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_13, this_12, _a, _b, metadata, e_16_1;\n            var e_16, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _loop_13 = function (metadata) {\n                            var table, changedColumns, changedColumns_1, changedColumns_1_1, changedColumn, e_17_1, changedColumns_2, changedColumns_2_1, changedColumn, e_18_1, changedColumns_3, changedColumns_3_1, changedColumn, e_19_1, newAndOldTableColumns;\n                            var e_17, _e, e_18, _f, e_19, _g;\n                            return __generator(this, function (_h) {\n                                switch (_h.label) {\n                                    case 0:\n                                        table = this_12.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        changedColumns = this_12.connection.driver.findChangedColumns(table.columns, metadata.columns);\n                                        if (changedColumns.length === 0)\n                                            return [2 /*return*/, \"continue\"];\n                                        _h.label = 1;\n                                    case 1:\n                                        _h.trys.push([1, 6, 7, 8]);\n                                        changedColumns_1 = (e_17 = void 0, __values(changedColumns)), changedColumns_1_1 = changedColumns_1.next();\n                                        _h.label = 2;\n                                    case 2:\n                                        if (!!changedColumns_1_1.done) return [3 /*break*/, 5];\n                                        changedColumn = changedColumns_1_1.value;\n                                        return [4 /*yield*/, this_12.dropColumnReferencedForeignKeys(this_12.getTablePath(metadata), changedColumn.databaseName)];\n                                    case 3:\n                                        _h.sent();\n                                        _h.label = 4;\n                                    case 4:\n                                        changedColumns_1_1 = changedColumns_1.next();\n                                        return [3 /*break*/, 2];\n                                    case 5: return [3 /*break*/, 8];\n                                    case 6:\n                                        e_17_1 = _h.sent();\n                                        e_17 = { error: e_17_1 };\n                                        return [3 /*break*/, 8];\n                                    case 7:\n                                        try {\n                                            if (changedColumns_1_1 && !changedColumns_1_1.done && (_e = changedColumns_1.return)) _e.call(changedColumns_1);\n                                        }\n                                        finally { if (e_17) throw e_17.error; }\n                                        return [7 /*endfinally*/];\n                                    case 8:\n                                        _h.trys.push([8, 13, 14, 15]);\n                                        changedColumns_2 = (e_18 = void 0, __values(changedColumns)), changedColumns_2_1 = changedColumns_2.next();\n                                        _h.label = 9;\n                                    case 9:\n                                        if (!!changedColumns_2_1.done) return [3 /*break*/, 12];\n                                        changedColumn = changedColumns_2_1.value;\n                                        return [4 /*yield*/, this_12.dropColumnCompositeIndices(this_12.getTablePath(metadata), changedColumn.databaseName)];\n                                    case 10:\n                                        _h.sent();\n                                        _h.label = 11;\n                                    case 11:\n                                        changedColumns_2_1 = changedColumns_2.next();\n                                        return [3 /*break*/, 9];\n                                    case 12: return [3 /*break*/, 15];\n                                    case 13:\n                                        e_18_1 = _h.sent();\n                                        e_18 = { error: e_18_1 };\n                                        return [3 /*break*/, 15];\n                                    case 14:\n                                        try {\n                                            if (changedColumns_2_1 && !changedColumns_2_1.done && (_f = changedColumns_2.return)) _f.call(changedColumns_2);\n                                        }\n                                        finally { if (e_18) throw e_18.error; }\n                                        return [7 /*endfinally*/];\n                                    case 15:\n                                        if (!!(this_12.connection.driver instanceof MysqlDriver || this_12.connection.driver instanceof AuroraDataApiDriver)) return [3 /*break*/, 23];\n                                        _h.label = 16;\n                                    case 16:\n                                        _h.trys.push([16, 21, 22, 23]);\n                                        changedColumns_3 = (e_19 = void 0, __values(changedColumns)), changedColumns_3_1 = changedColumns_3.next();\n                                        _h.label = 17;\n                                    case 17:\n                                        if (!!changedColumns_3_1.done) return [3 /*break*/, 20];\n                                        changedColumn = changedColumns_3_1.value;\n                                        return [4 /*yield*/, this_12.dropColumnCompositeUniques(this_12.getTablePath(metadata), changedColumn.databaseName)];\n                                    case 18:\n                                        _h.sent();\n                                        _h.label = 19;\n                                    case 19:\n                                        changedColumns_3_1 = changedColumns_3.next();\n                                        return [3 /*break*/, 17];\n                                    case 20: return [3 /*break*/, 23];\n                                    case 21:\n                                        e_19_1 = _h.sent();\n                                        e_19 = { error: e_19_1 };\n                                        return [3 /*break*/, 23];\n                                    case 22:\n                                        try {\n                                            if (changedColumns_3_1 && !changedColumns_3_1.done && (_g = changedColumns_3.return)) _g.call(changedColumns_3);\n                                        }\n                                        finally { if (e_19) throw e_19.error; }\n                                        return [7 /*endfinally*/];\n                                    case 23:\n                                        newAndOldTableColumns = changedColumns.map(function (changedColumn) {\n                                            var oldTableColumn = table.columns.find(function (column) { return column.name === changedColumn.databaseName; });\n                                            var newTableColumnOptions = TableUtils.createTableColumnOptions(changedColumn, _this.connection.driver);\n                                            var newTableColumn = new TableColumn(newTableColumnOptions);\n                                            return {\n                                                oldColumn: oldTableColumn,\n                                                newColumn: newTableColumn\n                                            };\n                                        });\n                                        if (newAndOldTableColumns.length === 0)\n                                            return [2 /*return*/, \"continue\"];\n                                        this_12.connection.logger.logSchemaBuild(\"columns changed in \\\"\" + table.name + \"\\\". updating: \" + changedColumns.map(function (column) { return column.databaseName; }).join(\", \"));\n                                        return [4 /*yield*/, this_12.queryRunner.changeColumns(table, newAndOldTableColumns)];\n                                    case 24:\n                                        _h.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_12 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_13(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_16_1 = _d.sent();\n                        e_16 = { error: e_16_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_16) throw e_16.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates composite indices which are missing in db yet.\n     */\n    RdbmsSchemaBuilder.prototype.createNewIndices = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_14, this_13, _a, _b, metadata, e_20_1;\n            var e_20, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _loop_14 = function (metadata) {\n                            var table, newIndices;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        table = this_13.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        newIndices = metadata.indices\n                                            .filter(function (indexMetadata) { return !table.indices.find(function (tableIndex) { return tableIndex.name === indexMetadata.name; }) && indexMetadata.synchronize === true; })\n                                            .map(function (indexMetadata) { return TableIndex.create(indexMetadata); });\n                                        if (newIndices.length === 0)\n                                            return [2 /*return*/, \"continue\"];\n                                        this_13.connection.logger.logSchemaBuild(\"adding new indices \" + newIndices.map(function (index) { return \"\\\"\" + index.name + \"\\\"\"; }).join(\", \") + \" in table \\\"\" + table.name + \"\\\"\");\n                                        return [4 /*yield*/, this_13.queryRunner.createIndices(table, newIndices)];\n                                    case 1:\n                                        _e.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_13 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_14(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_20_1 = _d.sent();\n                        e_20 = { error: e_20_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_20) throw e_20.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RdbmsSchemaBuilder.prototype.createNewChecks = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_15, this_14, _a, _b, metadata, e_21_1;\n            var e_21, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        // Mysql does not support check constraints\n                        if (this.connection.driver instanceof MysqlDriver || this.connection.driver instanceof AuroraDataApiDriver)\n                            return [2 /*return*/];\n                        _loop_15 = function (metadata) {\n                            var table, newChecks;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        table = this_14.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        newChecks = metadata.checks\n                                            .filter(function (checkMetadata) { return !table.checks.find(function (tableCheck) { return tableCheck.name === checkMetadata.name; }); })\n                                            .map(function (checkMetadata) { return TableCheck.create(checkMetadata); });\n                                        if (newChecks.length === 0)\n                                            return [2 /*return*/, \"continue\"];\n                                        this_14.connection.logger.logSchemaBuild(\"adding new check constraints: \" + newChecks.map(function (index) { return \"\\\"\" + index.name + \"\\\"\"; }).join(\", \") + \" in table \\\"\" + table.name + \"\\\"\");\n                                        return [4 /*yield*/, this_14.queryRunner.createCheckConstraints(table, newChecks)];\n                                    case 1:\n                                        _e.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_14 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_15(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_21_1 = _d.sent();\n                        e_21 = { error: e_21_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_21) throw e_21.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates composite uniques which are missing in db yet.\n     */\n    RdbmsSchemaBuilder.prototype.createCompositeUniqueConstraints = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_16, this_15, _a, _b, metadata, e_22_1;\n            var e_22, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _loop_16 = function (metadata) {\n                            var table, compositeUniques;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        table = this_15.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        compositeUniques = metadata.uniques\n                                            .filter(function (uniqueMetadata) { return uniqueMetadata.columns.length > 1 && !table.uniques.find(function (tableUnique) { return tableUnique.name === uniqueMetadata.name; }); })\n                                            .map(function (uniqueMetadata) { return TableUnique.create(uniqueMetadata); });\n                                        if (compositeUniques.length === 0)\n                                            return [2 /*return*/, \"continue\"];\n                                        this_15.connection.logger.logSchemaBuild(\"adding new unique constraints: \" + compositeUniques.map(function (unique) { return \"\\\"\" + unique.name + \"\\\"\"; }).join(\", \") + \" in table \\\"\" + table.name + \"\\\"\");\n                                        return [4 /*yield*/, this_15.queryRunner.createUniqueConstraints(table, compositeUniques)];\n                                    case 1:\n                                        _e.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_15 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_16(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_22_1 = _d.sent();\n                        e_22 = { error: e_22_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_22) throw e_22.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates exclusions which are missing in db yet.\n     */\n    RdbmsSchemaBuilder.prototype.createNewExclusions = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_17, this_16, _a, _b, metadata, e_23_1;\n            var e_23, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        // Only PostgreSQL supports exclusion constraints\n                        if (!(this.connection.driver instanceof PostgresDriver))\n                            return [2 /*return*/];\n                        _loop_17 = function (metadata) {\n                            var table, newExclusions;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        table = this_16.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        newExclusions = metadata.exclusions\n                                            .filter(function (exclusionMetadata) { return !table.exclusions.find(function (tableExclusion) { return tableExclusion.name === exclusionMetadata.name; }); })\n                                            .map(function (exclusionMetadata) { return TableExclusion.create(exclusionMetadata); });\n                                        if (newExclusions.length === 0)\n                                            return [2 /*return*/, \"continue\"];\n                                        this_16.connection.logger.logSchemaBuild(\"adding new exclusion constraints: \" + newExclusions.map(function (exclusion) { return \"\\\"\" + exclusion.name + \"\\\"\"; }).join(\", \") + \" in table \\\"\" + table.name + \"\\\"\");\n                                        return [4 /*yield*/, this_16.queryRunner.createExclusionConstraints(table, newExclusions)];\n                                    case 1:\n                                        _e.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_16 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_17(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_23_1 = _d.sent();\n                        e_23 = { error: e_23_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_23) throw e_23.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates foreign keys which does not exist in the table yet.\n     */\n    RdbmsSchemaBuilder.prototype.createForeignKeys = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _loop_18, this_17, _a, _b, metadata, e_24_1;\n            var e_24, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _loop_18 = function (metadata) {\n                            var table, newKeys, dbForeignKeys;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        table = this_17.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n                                        if (!table)\n                                            return [2 /*return*/, \"continue\"];\n                                        newKeys = metadata.foreignKeys\n                                            .filter(function (foreignKey) {\n                                            return !table.foreignKeys.find(function (dbForeignKey) { return ((dbForeignKey.name === foreignKey.name) &&\n                                                (_this.getTablePath(dbForeignKey) === _this.getTablePath(foreignKey.referencedEntityMetadata))); });\n                                        });\n                                        if (newKeys.length === 0)\n                                            return [2 /*return*/, \"continue\"];\n                                        dbForeignKeys = newKeys.map(function (foreignKeyMetadata) { return TableForeignKey.create(foreignKeyMetadata, _this.connection.driver); });\n                                        this_17.connection.logger.logSchemaBuild(\"creating a foreign keys: \" + newKeys.map(function (key) { return key.name; }).join(\", \") + \" on table \\\"\" + table.name + \"\\\"\");\n                                        return [4 /*yield*/, this_17.queryRunner.createForeignKeys(table, dbForeignKeys)];\n                                    case 1:\n                                        _e.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_17 = this;\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 6, 7, 8]);\n                        _a = __values(this.entityToSyncMetadatas), _b = _a.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!_b.done) return [3 /*break*/, 5];\n                        metadata = _b.value;\n                        return [5 /*yield**/, _loop_18(metadata)];\n                    case 3:\n                        _d.sent();\n                        _d.label = 4;\n                    case 4:\n                        _b = _a.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_24_1 = _d.sent();\n                        e_24 = { error: e_24_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                        }\n                        finally { if (e_24) throw e_24.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops all foreign keys where given column of the given table is being used.\n     */\n    RdbmsSchemaBuilder.prototype.dropColumnReferencedForeignKeys = function (tablePath, columnName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, tablesWithFK, columnForeignKey, clonedTable, _loop_19, _a, _b, loadedTable, tablesWithFK_1, tablesWithFK_1_1, tableWithFK, e_25_1;\n            var e_26, _c, e_25, _d;\n            var _this = this;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        table = this.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === tablePath; });\n                        if (!table)\n                            return [2 /*return*/];\n                        tablesWithFK = [];\n                        columnForeignKey = table.foreignKeys.find(function (foreignKey) { return foreignKey.columnNames.indexOf(columnName) !== -1; });\n                        if (columnForeignKey) {\n                            clonedTable = table.clone();\n                            clonedTable.foreignKeys = [columnForeignKey];\n                            tablesWithFK.push(clonedTable);\n                            table.removeForeignKey(columnForeignKey);\n                        }\n                        _loop_19 = function (loadedTable) {\n                            var dependForeignKeys = loadedTable.foreignKeys.filter(function (foreignKey) {\n                                return _this.getTablePath(foreignKey) === tablePath && foreignKey.referencedColumnNames.indexOf(columnName) !== -1;\n                            });\n                            if (dependForeignKeys.length > 0) {\n                                var clonedTable = loadedTable.clone();\n                                clonedTable.foreignKeys = dependForeignKeys;\n                                tablesWithFK.push(clonedTable);\n                                dependForeignKeys.forEach(function (dependForeignKey) { return loadedTable.removeForeignKey(dependForeignKey); });\n                            }\n                        };\n                        try {\n                            for (_a = __values(this.queryRunner.loadedTables), _b = _a.next(); !_b.done; _b = _a.next()) {\n                                loadedTable = _b.value;\n                                _loop_19(loadedTable);\n                            }\n                        }\n                        catch (e_26_1) { e_26 = { error: e_26_1 }; }\n                        finally {\n                            try {\n                                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                            }\n                            finally { if (e_26) throw e_26.error; }\n                        }\n                        if (!(tablesWithFK.length > 0)) return [3 /*break*/, 8];\n                        _e.label = 1;\n                    case 1:\n                        _e.trys.push([1, 6, 7, 8]);\n                        tablesWithFK_1 = __values(tablesWithFK), tablesWithFK_1_1 = tablesWithFK_1.next();\n                        _e.label = 2;\n                    case 2:\n                        if (!!tablesWithFK_1_1.done) return [3 /*break*/, 5];\n                        tableWithFK = tablesWithFK_1_1.value;\n                        this.connection.logger.logSchemaBuild(\"dropping related foreign keys of \" + tableWithFK.name + \": \" + tableWithFK.foreignKeys.map(function (foreignKey) { return foreignKey.name; }).join(\", \"));\n                        return [4 /*yield*/, this.queryRunner.dropForeignKeys(tableWithFK, tableWithFK.foreignKeys)];\n                    case 3:\n                        _e.sent();\n                        _e.label = 4;\n                    case 4:\n                        tablesWithFK_1_1 = tablesWithFK_1.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_25_1 = _e.sent();\n                        e_25 = { error: e_25_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (tablesWithFK_1_1 && !tablesWithFK_1_1.done && (_d = tablesWithFK_1.return)) _d.call(tablesWithFK_1);\n                        }\n                        finally { if (e_25) throw e_25.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops all composite indices, related to given column.\n     */\n    RdbmsSchemaBuilder.prototype.dropColumnCompositeIndices = function (tablePath, columnName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, relatedIndices;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        table = this.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === tablePath; });\n                        if (!table)\n                            return [2 /*return*/];\n                        relatedIndices = table.indices.filter(function (index) { return index.columnNames.length > 1 && index.columnNames.indexOf(columnName) !== -1; });\n                        if (relatedIndices.length === 0)\n                            return [2 /*return*/];\n                        this.connection.logger.logSchemaBuild(\"dropping related indices of \\\"\" + tablePath + \"\\\".\\\"\" + columnName + \"\\\": \" + relatedIndices.map(function (index) { return index.name; }).join(\", \"));\n                        return [4 /*yield*/, this.queryRunner.dropIndices(table, relatedIndices)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops all composite uniques, related to given column.\n     */\n    RdbmsSchemaBuilder.prototype.dropColumnCompositeUniques = function (tablePath, columnName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, relatedUniques;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        table = this.queryRunner.loadedTables.find(function (table) { return _this.getTablePath(table) === tablePath; });\n                        if (!table)\n                            return [2 /*return*/];\n                        relatedUniques = table.uniques.filter(function (unique) { return unique.columnNames.length > 1 && unique.columnNames.indexOf(columnName) !== -1; });\n                        if (relatedUniques.length === 0)\n                            return [2 /*return*/];\n                        this.connection.logger.logSchemaBuild(\"dropping related unique constraints of \\\"\" + tablePath + \"\\\".\\\"\" + columnName + \"\\\": \" + relatedUniques.map(function (unique) { return unique.name; }).join(\", \"));\n                        return [4 /*yield*/, this.queryRunner.dropUniqueConstraints(table, relatedUniques)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new columns from the given column metadatas.\n     */\n    RdbmsSchemaBuilder.prototype.metadataColumnsToTableColumnOptions = function (columns) {\n        var _this = this;\n        return columns.map(function (columnMetadata) { return TableUtils.createTableColumnOptions(columnMetadata, _this.connection.driver); });\n    };\n    /**\n     * Creates typeorm service table for storing user defined Views.\n     */\n    RdbmsSchemaBuilder.prototype.createTypeormMetadataTable = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var schema, database, typeormMetadataTable;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        schema = this.currentSchema;\n                        database = this.currentDatabase;\n                        typeormMetadataTable = this.connection.driver.buildTableName(\"typeorm_metadata\", schema, database);\n                        return [4 /*yield*/, this.queryRunner.createTable(new Table({\n                                database: database,\n                                schema: schema,\n                                name: typeormMetadataTable,\n                                columns: [\n                                    {\n                                        name: \"type\",\n                                        type: this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.metadataType }),\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"database\",\n                                        type: this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.metadataDatabase }),\n                                        isNullable: true\n                                    },\n                                    {\n                                        name: \"schema\",\n                                        type: this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.metadataSchema }),\n                                        isNullable: true\n                                    },\n                                    {\n                                        name: \"table\",\n                                        type: this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.metadataTable }),\n                                        isNullable: true\n                                    },\n                                    {\n                                        name: \"name\",\n                                        type: this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.metadataName }),\n                                        isNullable: true\n                                    },\n                                    {\n                                        name: \"value\",\n                                        type: this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.metadataValue }),\n                                        isNullable: true\n                                    },\n                                ]\n                            }), true)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return RdbmsSchemaBuilder;\n}());\nexport { RdbmsSchemaBuilder };\n\n//# sourceMappingURL=RdbmsSchemaBuilder.js.map\n","import { __awaiter, __generator } from \"tslib\";\nimport { DateUtils } from \"../../util/DateUtils\";\nimport { RdbmsSchemaBuilder } from \"../../schema-builder/RdbmsSchemaBuilder\";\nimport { EntityMetadata } from \"../../metadata/EntityMetadata\";\nimport { OrmUtils } from \"../../util/OrmUtils\";\nimport { ApplyValueTransformers } from \"../../util/ApplyValueTransformers\";\nimport { DriverUtils } from \"../DriverUtils\";\nimport { TypeORMError } from \"../../error\";\nimport { Table } from \"../../schema-builder/table/Table\";\nimport { View } from \"../../schema-builder/view/View\";\nimport { TableForeignKey } from \"../../schema-builder/table/TableForeignKey\";\n/**\n * Organizes communication with sqlite DBMS.\n */\nvar AbstractSqliteDriver = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function AbstractSqliteDriver(connection) {\n        /**\n         * Indicates if replication is enabled.\n         */\n        this.isReplicated = false;\n        /**\n         * Indicates if tree tables are supported by this driver.\n         */\n        this.treeSupport = true;\n        /**\n         * Gets list of supported column data types by a driver.\n         *\n         * @see https://www.tutorialspoint.com/sqlite/sqlite_data_types.htm\n         * @see https://sqlite.org/datatype3.html\n         */\n        this.supportedDataTypes = [\n            \"int\",\n            \"integer\",\n            \"tinyint\",\n            \"smallint\",\n            \"mediumint\",\n            \"bigint\",\n            \"unsigned big int\",\n            \"int2\",\n            \"int8\",\n            \"integer\",\n            \"character\",\n            \"varchar\",\n            \"varying character\",\n            \"nchar\",\n            \"native character\",\n            \"nvarchar\",\n            \"text\",\n            \"clob\",\n            \"text\",\n            \"blob\",\n            \"real\",\n            \"double\",\n            \"double precision\",\n            \"float\",\n            \"real\",\n            \"numeric\",\n            \"decimal\",\n            \"boolean\",\n            \"date\",\n            \"time\",\n            \"datetime\"\n        ];\n        /**\n         * Returns type of upsert supported by driver if any\n         */\n        this.supportedUpsertType = \"on-conflict-do-update\";\n        /**\n         * Gets list of column data types that support length by a driver.\n         */\n        this.withLengthColumnTypes = [\n            \"character\",\n            \"varchar\",\n            \"varying character\",\n            \"nchar\",\n            \"native character\",\n            \"nvarchar\",\n            \"text\",\n            \"blob\",\n            \"clob\"\n        ];\n        /**\n         * Gets list of spatial column data types.\n         */\n        this.spatialTypes = [];\n        /**\n         * Gets list of column data types that support precision by a driver.\n         */\n        this.withPrecisionColumnTypes = [\n            \"real\",\n            \"double\",\n            \"double precision\",\n            \"float\",\n            \"real\",\n            \"numeric\",\n            \"decimal\",\n            \"date\",\n            \"time\",\n            \"datetime\"\n        ];\n        /**\n         * Gets list of column data types that support scale by a driver.\n         */\n        this.withScaleColumnTypes = [\n            \"real\",\n            \"double\",\n            \"double precision\",\n            \"float\",\n            \"real\",\n            \"numeric\",\n            \"decimal\",\n        ];\n        /**\n         * Orm has special columns and we need to know what database column types should be for those types.\n         * Column types are driver dependant.\n         */\n        this.mappedDataTypes = {\n            createDate: \"datetime\",\n            createDateDefault: \"datetime('now')\",\n            updateDate: \"datetime\",\n            updateDateDefault: \"datetime('now')\",\n            deleteDate: \"datetime\",\n            deleteDateNullable: true,\n            version: \"integer\",\n            treeLevel: \"integer\",\n            migrationId: \"integer\",\n            migrationName: \"varchar\",\n            migrationTimestamp: \"bigint\",\n            cacheId: \"int\",\n            cacheIdentifier: \"varchar\",\n            cacheTime: \"bigint\",\n            cacheDuration: \"int\",\n            cacheQuery: \"text\",\n            cacheResult: \"text\",\n            metadataType: \"varchar\",\n            metadataDatabase: \"varchar\",\n            metadataSchema: \"varchar\",\n            metadataTable: \"varchar\",\n            metadataName: \"varchar\",\n            metadataValue: \"text\",\n        };\n        this.connection = connection;\n        this.options = connection.options;\n        this.database = DriverUtils.buildDriverOptions(this.options).database;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     */\n    AbstractSqliteDriver.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, this.createDatabaseConnection()];\n                    case 1:\n                        _a.databaseConnection = _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Makes any action after connection (e.g. create extensions in Postgres driver).\n     */\n    AbstractSqliteDriver.prototype.afterConnect = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Closes connection with database.\n     */\n    AbstractSqliteDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.queryRunner = undefined;\n                        _this.databaseConnection.close(function (err) { return err ? fail(err) : ok(); });\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a schema builder used to build and sync a schema.\n     */\n    AbstractSqliteDriver.prototype.createSchemaBuilder = function () {\n        return new RdbmsSchemaBuilder(this.connection);\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type and metadata.\n     */\n    AbstractSqliteDriver.prototype.preparePersistentValue = function (value, columnMetadata) {\n        if (columnMetadata.transformer)\n            value = ApplyValueTransformers.transformTo(columnMetadata.transformer, value);\n        if (value === null || value === undefined)\n            return value;\n        if (columnMetadata.type === Boolean || columnMetadata.type === \"boolean\") {\n            return value === true ? 1 : 0;\n        }\n        else if (columnMetadata.type === \"date\") {\n            return DateUtils.mixedDateToDateString(value);\n        }\n        else if (columnMetadata.type === \"time\") {\n            return DateUtils.mixedDateToTimeString(value);\n        }\n        else if (columnMetadata.type === \"datetime\" || columnMetadata.type === Date) {\n            // to string conversation needs because SQLite stores date as integer number, when date came as Object\n            // TODO: think about `toUTC` conversion\n            return DateUtils.mixedDateToUtcDatetimeString(value);\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            return DateUtils.simpleArrayToString(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            return DateUtils.simpleJsonToString(value);\n        }\n        else if (columnMetadata.type === \"simple-enum\") {\n            return DateUtils.simpleEnumToString(value);\n        }\n        return value;\n    };\n    /**\n     * Prepares given value to a value to be hydrated, based on its column type or metadata.\n     */\n    AbstractSqliteDriver.prototype.prepareHydratedValue = function (value, columnMetadata) {\n        if (value === null || value === undefined)\n            return columnMetadata.transformer ? ApplyValueTransformers.transformFrom(columnMetadata.transformer, value) : value;\n        if (columnMetadata.type === Boolean || columnMetadata.type === \"boolean\") {\n            value = value ? true : false;\n        }\n        else if (columnMetadata.type === \"datetime\" || columnMetadata.type === Date) {\n            /**\n             * Fix date conversion issue\n             *\n             * If the format of the date string is \"2018-03-14 02:33:33.906\", Safari (and iOS WKWebView) will convert it to an invalid date object.\n             * We need to modify the date string to \"2018-03-14T02:33:33.906Z\" and Safari will convert it correctly.\n             *\n             * ISO 8601\n             * https://www.w3.org/TR/NOTE-datetime\n             */\n            if (value && typeof value === \"string\") {\n                // There are various valid time string formats a sqlite time string might have:\n                // https://www.sqlite.org/lang_datefunc.html\n                // There are two separate fixes we may need to do:\n                //   1) Add 'T' separator if space is used instead\n                //   2) Add 'Z' UTC suffix if no timezone or offset specified\n                if (/^\\d\\d\\d\\d-\\d\\d-\\d\\d \\d\\d:\\d\\d/.test(value)) {\n                    value = value.replace(\" \", \"T\");\n                }\n                if (/^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d(:\\d\\d(\\.\\d\\d\\d)?)?$/.test(value)) {\n                    value += \"Z\";\n                }\n            }\n            value = DateUtils.normalizeHydratedDate(value);\n        }\n        else if (columnMetadata.type === \"date\") {\n            value = DateUtils.mixedDateToDateString(value);\n        }\n        else if (columnMetadata.type === \"time\") {\n            value = DateUtils.mixedTimeToString(value);\n        }\n        else if (columnMetadata.type === \"simple-array\") {\n            value = DateUtils.stringToSimpleArray(value);\n        }\n        else if (columnMetadata.type === \"simple-json\") {\n            value = DateUtils.stringToSimpleJson(value);\n        }\n        else if (columnMetadata.type === \"simple-enum\") {\n            value = DateUtils.stringToSimpleEnum(value, columnMetadata);\n        }\n        if (columnMetadata.transformer)\n            value = ApplyValueTransformers.transformFrom(columnMetadata.transformer, value);\n        return value;\n    };\n    /**\n     * Replaces parameters in the given sql with special escaping character\n     * and an array of parameter names to be passed to a query.\n     */\n    AbstractSqliteDriver.prototype.escapeQueryWithParameters = function (sql, parameters, nativeParameters) {\n        var _this = this;\n        var escapedParameters = Object.keys(nativeParameters).map(function (key) {\n            // Mapping boolean values to their numeric representation\n            if (typeof nativeParameters[key] === \"boolean\") {\n                return nativeParameters[key] === true ? 1 : 0;\n            }\n            return nativeParameters[key];\n        });\n        if (!parameters || !Object.keys(parameters).length)\n            return [sql, escapedParameters];\n        sql = sql.replace(/:(\\.\\.\\.)?([A-Za-z0-9_.]+)/g, function (full, isArray, key) {\n            if (!parameters.hasOwnProperty(key)) {\n                return full;\n            }\n            var value = parameters[key];\n            if (isArray) {\n                return value.map(function (v) {\n                    escapedParameters.push(v);\n                    return _this.createParameter(key, escapedParameters.length - 1);\n                }).join(\", \");\n            }\n            if (value instanceof Function) {\n                return value();\n            }\n            escapedParameters.push(value);\n            return _this.createParameter(key, escapedParameters.length - 1);\n        }); // todo: make replace only in value statements, otherwise problems\n        return [sql, escapedParameters];\n    };\n    /**\n     * Escapes a column name.\n     */\n    AbstractSqliteDriver.prototype.escape = function (columnName) {\n        return \"\\\"\" + columnName + \"\\\"\";\n    };\n    /**\n     * Build full table name with database name, schema name and table name.\n     * E.g. myDB.mySchema.myTable\n     *\n     * Returns only simple table name because all inherited drivers does not supports schema and database.\n     */\n    AbstractSqliteDriver.prototype.buildTableName = function (tableName, schema, database) {\n        return tableName;\n    };\n    /**\n     * Parse a target table name or other types and return a normalized table definition.\n     */\n    AbstractSqliteDriver.prototype.parseTableName = function (target) {\n        var driverDatabase = this.database;\n        var driverSchema = undefined;\n        if (target instanceof Table || target instanceof View) {\n            var parsed = this.parseTableName(target.name);\n            return {\n                database: target.database || parsed.database || driverDatabase,\n                schema: target.schema || parsed.schema || driverSchema,\n                tableName: parsed.tableName,\n            };\n        }\n        if (target instanceof TableForeignKey) {\n            var parsed = this.parseTableName(target.referencedTableName);\n            return {\n                database: target.referencedDatabase || parsed.database || driverDatabase,\n                schema: target.referencedSchema || parsed.schema || driverSchema,\n                tableName: parsed.tableName\n            };\n        }\n        if (target instanceof EntityMetadata) {\n            // EntityMetadata tableName is never a path\n            return {\n                database: target.database || driverDatabase,\n                schema: target.schema || driverSchema,\n                tableName: target.tableName\n            };\n        }\n        var parts = target.split(\".\");\n        if (parts.length === 3) {\n            return {\n                database: parts[0] || driverDatabase,\n                schema: parts[1] || driverSchema,\n                tableName: parts[2]\n            };\n        }\n        else if (parts.length === 2) {\n            return {\n                database: driverDatabase,\n                schema: parts[0],\n                tableName: parts[1]\n            };\n        }\n        else {\n            return {\n                database: driverDatabase,\n                schema: driverSchema,\n                tableName: target\n            };\n        }\n    };\n    /**\n     * Creates a database type from a given column metadata.\n     */\n    AbstractSqliteDriver.prototype.normalizeType = function (column) {\n        if (column.type === Number || column.type === \"int\") {\n            return \"integer\";\n        }\n        else if (column.type === String) {\n            return \"varchar\";\n        }\n        else if (column.type === Date) {\n            return \"datetime\";\n        }\n        else if (column.type === Boolean) {\n            return \"boolean\";\n        }\n        else if (column.type === \"uuid\") {\n            return \"varchar\";\n        }\n        else if (column.type === \"simple-array\") {\n            return \"text\";\n        }\n        else if (column.type === \"simple-json\") {\n            return \"text\";\n        }\n        else if (column.type === \"simple-enum\") {\n            return \"varchar\";\n        }\n        else {\n            return column.type || \"\";\n        }\n    };\n    /**\n     * Normalizes \"default\" value of the column.\n     */\n    AbstractSqliteDriver.prototype.normalizeDefault = function (columnMetadata) {\n        var defaultValue = columnMetadata.default;\n        if (typeof defaultValue === \"number\") {\n            return \"\" + defaultValue;\n        }\n        if (typeof defaultValue === \"boolean\") {\n            return defaultValue ? \"1\" : \"0\";\n        }\n        if (typeof defaultValue === \"function\") {\n            return defaultValue();\n        }\n        if (typeof defaultValue === \"string\") {\n            return \"'\" + defaultValue + \"'\";\n        }\n        if (defaultValue === null || defaultValue === undefined) {\n            return undefined;\n        }\n        return \"\" + defaultValue;\n    };\n    /**\n     * Normalizes \"isUnique\" value of the column.\n     */\n    AbstractSqliteDriver.prototype.normalizeIsUnique = function (column) {\n        return column.entityMetadata.uniques.some(function (uq) { return uq.columns.length === 1 && uq.columns[0] === column; });\n    };\n    /**\n     * Calculates column length taking into account the default length values.\n     */\n    AbstractSqliteDriver.prototype.getColumnLength = function (column) {\n        return column.length ? column.length.toString() : \"\";\n    };\n    /**\n     * Normalizes \"default\" value of the column.\n     */\n    AbstractSqliteDriver.prototype.createFullType = function (column) {\n        var type = column.type;\n        if (column.enum) {\n            return \"varchar\";\n        }\n        if (column.length) {\n            type += \"(\" + column.length + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined && column.scale !== null && column.scale !== undefined) {\n            type += \"(\" + column.precision + \",\" + column.scale + \")\";\n        }\n        else if (column.precision !== null && column.precision !== undefined) {\n            type += \"(\" + column.precision + \")\";\n        }\n        if (column.isArray)\n            type += \" array\";\n        return type;\n    };\n    /**\n     * Obtains a new database connection to a master server.\n     * Used for replication.\n     * If replication is not setup then returns default connection's database connection.\n     */\n    AbstractSqliteDriver.prototype.obtainMasterConnection = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Obtains a new database connection to a slave server.\n     * Used for replication.\n     * If replication is not setup then returns master (default) connection's database connection.\n     */\n    AbstractSqliteDriver.prototype.obtainSlaveConnection = function () {\n        return Promise.resolve();\n    };\n    /**\n     * Creates generated map of values generated or returned by database after INSERT query.\n     */\n    AbstractSqliteDriver.prototype.createGeneratedMap = function (metadata, insertResult, entityIndex, entityNum) {\n        var generatedMap = metadata.generatedColumns.reduce(function (map, generatedColumn) {\n            var value;\n            if (generatedColumn.generationStrategy === \"increment\" && insertResult) {\n                // NOTE: When INSERT statement is successfully completed, the last inserted row ID is returned.\n                // see also: SqliteQueryRunner.query()\n                value = insertResult - entityNum + entityIndex + 1;\n                // } else if (generatedColumn.generationStrategy === \"uuid\") {\n                //     value = insertValue[generatedColumn.databaseName];\n            }\n            if (!value)\n                return map;\n            return OrmUtils.mergeDeep(map, generatedColumn.createValueMap(value));\n        }, {});\n        return Object.keys(generatedMap).length > 0 ? generatedMap : undefined;\n    };\n    /**\n     * Differentiate columns of this table and columns from the given column metadatas columns\n     * and returns only changed.\n     */\n    AbstractSqliteDriver.prototype.findChangedColumns = function (tableColumns, columnMetadatas) {\n        var _this = this;\n        return columnMetadatas.filter(function (columnMetadata) {\n            var tableColumn = tableColumns.find(function (c) { return c.name === columnMetadata.databaseName; });\n            if (!tableColumn)\n                return false; // we don't need new columns, we only need exist and changed\n            // console.log(\"table:\", columnMetadata.entityMetadata.tableName);\n            // console.log(\"name:\", tableColumn.name, columnMetadata.databaseName);\n            // console.log(\"type:\", tableColumn.type, this.normalizeType(columnMetadata));\n            // console.log(\"length:\", tableColumn.length, columnMetadata.length);\n            // console.log(\"precision:\", tableColumn.precision, columnMetadata.precision);\n            // console.log(\"scale:\", tableColumn.scale, columnMetadata.scale);\n            // console.log(\"comment:\", tableColumn.comment, columnMetadata.comment);\n            // console.log(\"default:\", this.normalizeDefault(columnMetadata), columnMetadata.default);\n            // console.log(\"isPrimary:\", tableColumn.isPrimary, columnMetadata.isPrimary);\n            // console.log(\"isNullable:\", tableColumn.isNullable, columnMetadata.isNullable);\n            // console.log(\"isUnique:\", tableColumn.isUnique, this.normalizeIsUnique(columnMetadata));\n            // console.log(\"isGenerated:\", tableColumn.isGenerated, columnMetadata.isGenerated);\n            // console.log(\"==========================================\");\n            return tableColumn.name !== columnMetadata.databaseName\n                || tableColumn.type !== _this.normalizeType(columnMetadata)\n                || tableColumn.length !== columnMetadata.length\n                || tableColumn.precision !== columnMetadata.precision\n                || tableColumn.scale !== columnMetadata.scale\n                //  || tableColumn.comment !== columnMetadata.comment || // todo\n                || _this.normalizeDefault(columnMetadata) !== tableColumn.default\n                || tableColumn.isPrimary !== columnMetadata.isPrimary\n                || tableColumn.isNullable !== columnMetadata.isNullable\n                || tableColumn.isUnique !== _this.normalizeIsUnique(columnMetadata)\n                || (columnMetadata.generationStrategy !== \"uuid\" && tableColumn.isGenerated !== columnMetadata.isGenerated);\n        });\n    };\n    /**\n     * Returns true if driver supports RETURNING / OUTPUT statement.\n     */\n    AbstractSqliteDriver.prototype.isReturningSqlSupported = function () {\n        return false;\n    };\n    /**\n     * Returns true if driver supports uuid values generation on its own.\n     */\n    AbstractSqliteDriver.prototype.isUUIDGenerationSupported = function () {\n        return false;\n    };\n    /**\n     * Returns true if driver supports fulltext indices.\n     */\n    AbstractSqliteDriver.prototype.isFullTextColumnTypeSupported = function () {\n        return false;\n    };\n    /**\n     * Creates an escaped parameter.\n     */\n    AbstractSqliteDriver.prototype.createParameter = function (parameterName, index) {\n        // return \"$\" + (index + 1);\n        return \"?\";\n        // return \"$\" + parameterName;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    AbstractSqliteDriver.prototype.createDatabaseConnection = function () {\n        throw new TypeORMError(\"Do not use AbstractSqlite directly, it has to be used with one of the sqlite drivers\");\n    };\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    AbstractSqliteDriver.prototype.loadDependencies = function () {\n        // dependencies have to be loaded in the specific driver\n    };\n    return AbstractSqliteDriver;\n}());\nexport { AbstractSqliteDriver };\n\n//# sourceMappingURL=AbstractSqliteDriver.js.map\n","/**\n * Interface for entity metadata mappings stored inside \"schemas\" instead of models decorated by decorators.\n */\nvar EntitySchema = /** @class */ (function () {\n    function EntitySchema(options) {\n        this.options = options;\n    }\n    return EntitySchema;\n}());\nexport { EntitySchema };\n\n//# sourceMappingURL=EntitySchema.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when consumer tries to recreate connection with the same name, but previous connection was not closed yet.\n */\nvar AlreadyHasActiveConnectionError = /** @class */ (function (_super) {\n    __extends(AlreadyHasActiveConnectionError, _super);\n    function AlreadyHasActiveConnectionError(connectionName) {\n        return _super.call(this, \"Cannot create a new connection named \\\"\" + connectionName + \"\\\", because connection with such name \" +\n            \"already exist and it now has an active connection session.\") || this;\n    }\n    return AlreadyHasActiveConnectionError;\n}(TypeORMError));\nexport { AlreadyHasActiveConnectionError };\n\n//# sourceMappingURL=AlreadyHasActiveConnectionError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when user saves tree children entity but its parent is not saved yet.\n*/\nvar CannotAttachTreeChildrenEntityError = /** @class */ (function (_super) {\n    __extends(CannotAttachTreeChildrenEntityError, _super);\n    function CannotAttachTreeChildrenEntityError(entityName) {\n        return _super.call(this, \"Cannot attach entity \\\"\" + entityName + \"\\\" to its parent. Please make sure parent \" +\n            \"is saved in the database before saving children nodes.\") || this;\n    }\n    return CannotAttachTreeChildrenEntityError;\n}(TypeORMError));\nexport { CannotAttachTreeChildrenEntityError };\n\n//# sourceMappingURL=CannotAttachTreeChildrenEntityError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when consumer tries to connect when he already connected.\n */\nvar CannotConnectAlreadyConnectedError = /** @class */ (function (_super) {\n    __extends(CannotConnectAlreadyConnectedError, _super);\n    function CannotConnectAlreadyConnectedError(connectionName) {\n        return _super.call(this, \"Cannot create a \\\"\" + connectionName + \"\\\" connection because connection to the database already established.\") || this;\n    }\n    return CannotConnectAlreadyConnectedError;\n}(TypeORMError));\nexport { CannotConnectAlreadyConnectedError };\n\n//# sourceMappingURL=CannotConnectAlreadyConnectedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when user tries to create entity id map from the mixed id value,\n * but id value is a single value when entity requires multiple values.\n */\nvar CannotCreateEntityIdMapError = /** @class */ (function (_super) {\n    __extends(CannotCreateEntityIdMapError, _super);\n    function CannotCreateEntityIdMapError(metadata, id) {\n        var _this = _super.call(this) || this;\n        var objectExample = metadata.primaryColumns.reduce(function (object, column, index) {\n            column.setEntityValue(object, index + 1);\n            return object;\n        }, {});\n        _this.message = \"Cannot use given entity id \\\"\" + id + \"\\\" because \\\"\" + metadata.targetName + \"\\\" contains multiple primary columns, you must provide object in following form: \" + JSON.stringify(objectExample) + \" as an id.\";\n        return _this;\n    }\n    return CannotCreateEntityIdMapError;\n}(TypeORMError));\nexport { CannotCreateEntityIdMapError };\n\n//# sourceMappingURL=CannotCreateEntityIdMapError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when user tries to save/remove/etc. constructor-less object (object literal) instead of entity.\n */\nvar CannotDetermineEntityError = /** @class */ (function (_super) {\n    __extends(CannotDetermineEntityError, _super);\n    function CannotDetermineEntityError(operation) {\n        return _super.call(this, \"Cannot \" + operation + \", given value must be instance of entity class, \" +\n            \"instead object literal is given. Or you must specify an entity target to method call.\") || this;\n    }\n    return CannotDetermineEntityError;\n}(TypeORMError));\nexport { CannotDetermineEntityError };\n\n//# sourceMappingURL=CannotDetermineEntityError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when consumer tries to execute operation allowed only if connection is opened.\n */\nvar CannotExecuteNotConnectedError = /** @class */ (function (_super) {\n    __extends(CannotExecuteNotConnectedError, _super);\n    function CannotExecuteNotConnectedError(connectionName) {\n        return _super.call(this, \"Cannot execute operation on \\\"\" + connectionName + \"\\\" connection because connection is not yet established.\") || this;\n    }\n    return CannotExecuteNotConnectedError;\n}(TypeORMError));\nexport { CannotExecuteNotConnectedError };\n\n//# sourceMappingURL=CannotExecuteNotConnectedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when ORM cannot get method parameter's type.\n * Basically, when reflect-metadata is not available or tsconfig is not properly setup.\n */\nvar CannotReflectMethodParameterTypeError = /** @class */ (function (_super) {\n    __extends(CannotReflectMethodParameterTypeError, _super);\n    function CannotReflectMethodParameterTypeError(target, methodName) {\n        return _super.call(this, \"Cannot get reflected type for a \\\"\" + methodName + \"\\\" method's parameter of \\\"\" + target.name + \"\\\" class. \" +\n            \"Make sure you have turned on an \\\"emitDecoratorMetadata\\\": true option in tsconfig.json. \" +\n            \"Also make sure you have imported \\\"reflect-metadata\\\" on top of the main entry file in your application.\") || this;\n    }\n    return CannotReflectMethodParameterTypeError;\n}(TypeORMError));\nexport { CannotReflectMethodParameterTypeError };\n\n//# sourceMappingURL=CannotReflectMethodParameterTypeError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when circular relations detected with nullable set to false.\n */\nvar CircularRelationsError = /** @class */ (function (_super) {\n    __extends(CircularRelationsError, _super);\n    function CircularRelationsError(path) {\n        return _super.call(this, \"Circular relations detected: \" + path + \". To resolve this issue you need to \" +\n            \"set nullable: true somewhere in this dependency structure.\") || this;\n    }\n    return CircularRelationsError;\n}(TypeORMError));\nexport { CircularRelationsError };\n\n//# sourceMappingURL=CircularRelationsError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when ORM cannot get column's type automatically.\n * Basically, when reflect-metadata is not available or tsconfig is not properly setup.\n */\nvar ColumnTypeUndefinedError = /** @class */ (function (_super) {\n    __extends(ColumnTypeUndefinedError, _super);\n    function ColumnTypeUndefinedError(object, propertyName) {\n        return _super.call(this, \"Column type for \" + object.constructor.name + \"#\" + propertyName + \" is not defined and cannot be guessed. \" +\n            \"Make sure you have turned on an \\\"emitDecoratorMetadata\\\": true option in tsconfig.json. \" +\n            \"Also make sure you have imported \\\"reflect-metadata\\\" on top of the main entry file in your application (before any entity imported).\" +\n            \"If you are using JavaScript instead of TypeScript you must explicitly provide a column type.\") || this;\n    }\n    return ColumnTypeUndefinedError;\n}(TypeORMError));\nexport { ColumnTypeUndefinedError };\n\n//# sourceMappingURL=ColumnTypeUndefinedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when consumer tries to get connection that does not exist.\n */\nvar ConnectionNotFoundError = /** @class */ (function (_super) {\n    __extends(ConnectionNotFoundError, _super);\n    function ConnectionNotFoundError(name) {\n        return _super.call(this, \"Connection \\\"\" + name + \"\\\" was not found.\") || this;\n    }\n    return ConnectionNotFoundError;\n}(TypeORMError));\nexport { ConnectionNotFoundError };\n\n//# sourceMappingURL=ConnectionNotFoundError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown if custom repository inherits Repository class however entity is not set in @EntityRepository decorator.\n */\nvar CustomRepositoryCannotInheritRepositoryError = /** @class */ (function (_super) {\n    __extends(CustomRepositoryCannotInheritRepositoryError, _super);\n    function CustomRepositoryCannotInheritRepositoryError(repository) {\n        return _super.call(this, \"Custom entity repository \" + (repository instanceof Function ? repository.name : repository.constructor.name) + \" \" +\n            \" cannot inherit Repository class without entity being set in the @EntityRepository decorator.\") || this;\n    }\n    return CustomRepositoryCannotInheritRepositoryError;\n}(TypeORMError));\nexport { CustomRepositoryCannotInheritRepositoryError };\n\n//# sourceMappingURL=CustomRepositoryCannotInheritRepositoryError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown if custom repositories that extend AbstractRepository classes does not have managed entity.\n */\nvar CustomRepositoryDoesNotHaveEntityError = /** @class */ (function (_super) {\n    __extends(CustomRepositoryDoesNotHaveEntityError, _super);\n    function CustomRepositoryDoesNotHaveEntityError(repository) {\n        return _super.call(this, \"Custom repository \" + (repository instanceof Function ? repository.name : repository.constructor.name) + \" does not have managed entity. \" +\n            \"Did you forget to specify entity for it @EntityRepository(MyEntity)? \") || this;\n    }\n    return CustomRepositoryDoesNotHaveEntityError;\n}(TypeORMError));\nexport { CustomRepositoryDoesNotHaveEntityError };\n\n//# sourceMappingURL=CustomRepositoryDoesNotHaveEntityError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown if custom repository was not found.\n */\nvar CustomRepositoryNotFoundError = /** @class */ (function (_super) {\n    __extends(CustomRepositoryNotFoundError, _super);\n    function CustomRepositoryNotFoundError(repository) {\n        return _super.call(this, \"Custom repository \" + (repository instanceof Function ? repository.name : repository.constructor.name) + \" was not found. \" +\n            \"Did you forgot to put @EntityRepository decorator on it?\") || this;\n    }\n    return CustomRepositoryNotFoundError;\n}(TypeORMError));\nexport { CustomRepositoryNotFoundError };\n\n//# sourceMappingURL=CustomRepositoryNotFoundError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar DataTypeNotSupportedError = /** @class */ (function (_super) {\n    __extends(DataTypeNotSupportedError, _super);\n    function DataTypeNotSupportedError(column, dataType, database) {\n        var _this = _super.call(this) || this;\n        var type = typeof dataType === \"string\" ? dataType : dataType.name;\n        _this.message = \"Data type \\\"\" + type + \"\\\" in \\\"\" + column.entityMetadata.targetName + \".\" + column.propertyName + \"\\\" is not supported by \\\"\" + database + \"\\\" database.\";\n        return _this;\n    }\n    return DataTypeNotSupportedError;\n}(TypeORMError));\nexport { DataTypeNotSupportedError };\n\n//# sourceMappingURL=DataTypeNotSupportedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown if some required driver's option is not set.\n */\nvar DriverOptionNotSetError = /** @class */ (function (_super) {\n    __extends(DriverOptionNotSetError, _super);\n    function DriverOptionNotSetError(optionName) {\n        return _super.call(this, \"Driver option (\" + optionName + \") is not set. \" +\n            \"Please set it to perform connection to the database.\") || this;\n    }\n    return DriverOptionNotSetError;\n}(TypeORMError));\nexport { DriverOptionNotSetError };\n\n//# sourceMappingURL=DriverOptionNotSetError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when required driver's package is not installed.\n */\nvar DriverPackageNotInstalledError = /** @class */ (function (_super) {\n    __extends(DriverPackageNotInstalledError, _super);\n    function DriverPackageNotInstalledError(driverName, packageName) {\n        return _super.call(this, driverName + \" package has not been found installed. \" +\n            (\"Try to install it: npm install \" + packageName + \" --save\")) || this;\n    }\n    return DriverPackageNotInstalledError;\n}(TypeORMError));\nexport { DriverPackageNotInstalledError };\n\n//# sourceMappingURL=DriverPackageNotInstalledError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar EntityColumnNotFound = /** @class */ (function (_super) {\n    __extends(EntityColumnNotFound, _super);\n    function EntityColumnNotFound(propertyPath) {\n        return _super.call(this, \"No entity column \\\"\" + propertyPath + \"\\\" was found.\") || this;\n    }\n    return EntityColumnNotFound;\n}(TypeORMError));\nexport { EntityColumnNotFound };\n\n//# sourceMappingURL=EntityColumnNotFound.js.map\n","import { __extends } from \"tslib\";\nimport { EntitySchema } from \"../entity-schema/EntitySchema\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar EntityMetadataNotFoundError = /** @class */ (function (_super) {\n    __extends(EntityMetadataNotFoundError, _super);\n    function EntityMetadataNotFoundError(target) {\n        var _this = _super.call(this) || this;\n        _this.message = \"No metadata for \\\"\" + _this.stringifyTarget(target) + \"\\\" was found.\";\n        return _this;\n    }\n    EntityMetadataNotFoundError.prototype.stringifyTarget = function (target) {\n        if (target instanceof EntitySchema) {\n            return target.options.name;\n        }\n        else if (typeof target === \"function\") {\n            return target.name;\n        }\n        else if (typeof target === \"object\" && \"name\" in target) {\n            return target.name;\n        }\n        else {\n            return target;\n        }\n    };\n    return EntityMetadataNotFoundError;\n}(TypeORMError));\nexport { EntityMetadataNotFoundError };\n\n//# sourceMappingURL=EntityMetadataNotFoundError.js.map\n","import { __extends } from \"tslib\";\nimport { EntitySchema } from \"../entity-schema/EntitySchema\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when no result could be found in methods which are not allowed to return undefined or an empty set.\n */\nvar EntityNotFoundError = /** @class */ (function (_super) {\n    __extends(EntityNotFoundError, _super);\n    function EntityNotFoundError(entityClass, criteria) {\n        var _this = _super.call(this) || this;\n        _this.message = \"Could not find any entity of type \\\"\" + _this.stringifyTarget(entityClass) + \"\\\" \" +\n            (\"matching: \" + _this.stringifyCriteria(criteria));\n        return _this;\n    }\n    EntityNotFoundError.prototype.stringifyTarget = function (target) {\n        if (target instanceof EntitySchema) {\n            return target.options.name;\n        }\n        else if (typeof target === \"function\") {\n            return target.name;\n        }\n        else if (typeof target === \"object\" && \"name\" in target) {\n            return target.name;\n        }\n        else {\n            return target;\n        }\n    };\n    EntityNotFoundError.prototype.stringifyCriteria = function (criteria) {\n        try {\n            return JSON.stringify(criteria, null, 4);\n        }\n        catch (e) { }\n        return \"\" + criteria;\n    };\n    return EntityNotFoundError;\n}(TypeORMError));\nexport { EntityNotFoundError };\n\n//# sourceMappingURL=EntityNotFoundError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when relations specified in the find options were not found in the entities.\n*/\nvar FindRelationsNotFoundError = /** @class */ (function (_super) {\n    __extends(FindRelationsNotFoundError, _super);\n    function FindRelationsNotFoundError(notFoundRelations) {\n        var _this = _super.call(this) || this;\n        if (notFoundRelations.length === 1) {\n            _this.message = \"Relation \\\"\" + notFoundRelations[0] + \"\\\" was not found; please check if it is correct and really exists in your entity.\";\n        }\n        else {\n            _this.message = \"Relations \" + notFoundRelations.map(function (relation) { return \"\\\"\" + relation + \"\\\"\"; }).join(\", \") + \" were not found; please check if relations are correct and they exist in your entities.\";\n        }\n        return _this;\n    }\n    return FindRelationsNotFoundError;\n}(TypeORMError));\nexport { FindRelationsNotFoundError };\n\n//# sourceMappingURL=FindRelationsNotFoundError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when relation has array initialized which is forbidden my ORM.\n *\n * @see https://github.com/typeorm/typeorm/issues/1319\n * @see http://typeorm.io/#/relations-faq/avoid-relation-property-initializers\n */\nvar InitializedRelationError = /** @class */ (function (_super) {\n    __extends(InitializedRelationError, _super);\n    function InitializedRelationError(relation) {\n        return _super.call(this, \"Array initializations are not allowed in entity relations. \" +\n            (\"Please remove array initialization (= []) from \\\"\" + relation.entityMetadata.targetName + \"#\" + relation.propertyPath + \"\\\". \") +\n            \"This is ORM requirement to make relations to work properly. Refer docs for more information.\") || this;\n    }\n    return InitializedRelationError;\n}(TypeORMError));\nexport { InitializedRelationError };\n\n//# sourceMappingURL=InitializedRelationError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when user tries to insert using QueryBuilder but do not specify what to insert.\n */\nvar InsertValuesMissingError = /** @class */ (function (_super) {\n    __extends(InsertValuesMissingError, _super);\n    function InsertValuesMissingError() {\n        return _super.call(this, \"Cannot perform insert query because values are not defined. \" +\n            \"Call \\\"qb.values(...)\\\" method to specify inserted values.\") || this;\n    }\n    return InsertValuesMissingError;\n}(TypeORMError));\nexport { InsertValuesMissingError };\n\n//# sourceMappingURL=InsertValuesMissingError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when user tries to build an UPDATE query with LIMIT but the database does not support it.\n*/\nvar LimitOnUpdateNotSupportedError = /** @class */ (function (_super) {\n    __extends(LimitOnUpdateNotSupportedError, _super);\n    function LimitOnUpdateNotSupportedError() {\n        return _super.call(this, \"Your database does not support LIMIT on UPDATE statements.\") || this;\n    }\n    return LimitOnUpdateNotSupportedError;\n}(TypeORMError));\nexport { LimitOnUpdateNotSupportedError };\n\n//# sourceMappingURL=LimitOnUpdateNotSupportedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when selected sql driver does not supports locking.\n */\nvar LockNotSupportedOnGivenDriverError = /** @class */ (function (_super) {\n    __extends(LockNotSupportedOnGivenDriverError, _super);\n    function LockNotSupportedOnGivenDriverError() {\n        return _super.call(this, \"Locking not supported on given driver.\") || this;\n    }\n    return LockNotSupportedOnGivenDriverError;\n}(TypeORMError));\nexport { LockNotSupportedOnGivenDriverError };\n\n//# sourceMappingURL=LockNotSupportedOnGivenDriverError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar MissingDeleteDateColumnError = /** @class */ (function (_super) {\n    __extends(MissingDeleteDateColumnError, _super);\n    function MissingDeleteDateColumnError(entityMetadata) {\n        return _super.call(this, \"Entity \\\"\" + entityMetadata.name + \"\\\" does not have delete date columns.\") || this;\n    }\n    return MissingDeleteDateColumnError;\n}(TypeORMError));\nexport { MissingDeleteDateColumnError };\n\n//# sourceMappingURL=MissingDeleteDateColumnError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when consumer specifies driver type that does not exist or supported.\n */\nvar MissingDriverError = /** @class */ (function (_super) {\n    __extends(MissingDriverError, _super);\n    function MissingDriverError(driverType, availableDrivers) {\n        if (availableDrivers === void 0) { availableDrivers = []; }\n        return _super.call(this, \"Wrong driver: \\\"\" + driverType + \"\\\" given. Supported drivers are: \" +\n            (availableDrivers.map(function (d) { return \"\\\"\" + d + \"\\\"\"; }).join(\", \") + \".\")) || this;\n    }\n    return MissingDriverError;\n}(TypeORMError));\nexport { MissingDriverError };\n\n//# sourceMappingURL=MissingDriverError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar MissingPrimaryColumnError = /** @class */ (function (_super) {\n    __extends(MissingPrimaryColumnError, _super);\n    function MissingPrimaryColumnError(entityMetadata) {\n        return _super.call(this, \"Entity \\\"\" + entityMetadata.name + \"\\\" does not have a primary column. Primary column is required to \" +\n            \"have in all your entities. Use @PrimaryColumn decorator to add a primary column to your entity.\") || this;\n    }\n    return MissingPrimaryColumnError;\n}(TypeORMError));\nexport { MissingPrimaryColumnError };\n\n//# sourceMappingURL=MissingPrimaryColumnError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when method expects entity but instead something else is given.\n */\nvar MustBeEntityError = /** @class */ (function (_super) {\n    __extends(MustBeEntityError, _super);\n    function MustBeEntityError(operation, wrongValue) {\n        return _super.call(this, \"Cannot \" + operation + \", given value must be an entity, instead \\\"\" + wrongValue + \"\\\" is given.\") || this;\n    }\n    return MustBeEntityError;\n}(TypeORMError));\nexport { MustBeEntityError };\n\n//# sourceMappingURL=MustBeEntityError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when some option is not set in the connection options.\n */\nvar NoConnectionOptionError = /** @class */ (function (_super) {\n    __extends(NoConnectionOptionError, _super);\n    function NoConnectionOptionError(optionName) {\n        return _super.call(this, \"Option \\\"\" + optionName + \"\\\" is not set in your connection options, please \" +\n            (\"define \\\"\" + optionName + \"\\\" option in your connection options or ormconfig.json\")) || this;\n    }\n    return NoConnectionOptionError;\n}(TypeORMError));\nexport { NoConnectionOptionError };\n\n//# sourceMappingURL=NoConnectionOptionError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when consumer tries to release entity manager that does not use single database connection.\n */\nvar NoNeedToReleaseEntityManagerError = /** @class */ (function (_super) {\n    __extends(NoNeedToReleaseEntityManagerError, _super);\n    function NoNeedToReleaseEntityManagerError() {\n        return _super.call(this, \"Entity manager is not using single database connection and cannot be released. \" +\n            \"Only entity managers created by connection#createEntityManagerWithSingleDatabaseConnection \" +\n            \"methods have a single database connection and they should be released.\") || this;\n    }\n    return NoNeedToReleaseEntityManagerError;\n}(TypeORMError));\nexport { NoNeedToReleaseEntityManagerError };\n\n//# sourceMappingURL=NoNeedToReleaseEntityManagerError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when an entity does not have no version and no update date column.\n */\nvar NoVersionOrUpdateDateColumnError = /** @class */ (function (_super) {\n    __extends(NoVersionOrUpdateDateColumnError, _super);\n    function NoVersionOrUpdateDateColumnError(entity) {\n        return _super.call(this, \"Entity \" + entity + \" does not have version or update date columns.\") || this;\n    }\n    return NoVersionOrUpdateDateColumnError;\n}(TypeORMError));\nexport { NoVersionOrUpdateDateColumnError };\n\n//# sourceMappingURL=NoVersionOrUpdateDateColumnError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when user tries to build SELECT query using OFFSET without LIMIT applied but database does not support it.\n*/\nvar OffsetWithoutLimitNotSupportedError = /** @class */ (function (_super) {\n    __extends(OffsetWithoutLimitNotSupportedError, _super);\n    function OffsetWithoutLimitNotSupportedError() {\n        return _super.call(this, \"RDBMS does not support OFFSET without LIMIT in SELECT statements. You must use limit in \" +\n            \"conjunction with offset function (or take in conjunction with skip function if you are \" +\n            \"using pagination).\") || this;\n    }\n    return OffsetWithoutLimitNotSupportedError;\n}(TypeORMError));\nexport { OffsetWithoutLimitNotSupportedError };\n\n//# sourceMappingURL=OffsetWithoutLimitNotSupportedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when an optimistic lock cannot be used in query builder.\n */\nvar OptimisticLockCanNotBeUsedError = /** @class */ (function (_super) {\n    __extends(OptimisticLockCanNotBeUsedError, _super);\n    function OptimisticLockCanNotBeUsedError() {\n        return _super.call(this, \"The optimistic lock can be used only with getOne() method.\") || this;\n    }\n    return OptimisticLockCanNotBeUsedError;\n}(TypeORMError));\nexport { OptimisticLockCanNotBeUsedError };\n\n//# sourceMappingURL=OptimisticLockCanNotBeUsedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when a version check on an object that uses optimistic locking through a version field fails.\n */\nvar OptimisticLockVersionMismatchError = /** @class */ (function (_super) {\n    __extends(OptimisticLockVersionMismatchError, _super);\n    function OptimisticLockVersionMismatchError(entity, expectedVersion, actualVersion) {\n        return _super.call(this, \"The optimistic lock on entity \" + entity + \" failed, version \" + expectedVersion + \" was expected, but is actually \" + actualVersion + \".\") || this;\n    }\n    return OptimisticLockVersionMismatchError;\n}(TypeORMError));\nexport { OptimisticLockVersionMismatchError };\n\n//# sourceMappingURL=OptimisticLockVersionMismatchError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when a transaction is required for the current operation, but there is none open.\n */\nvar PessimisticLockTransactionRequiredError = /** @class */ (function (_super) {\n    __extends(PessimisticLockTransactionRequiredError, _super);\n    function PessimisticLockTransactionRequiredError() {\n        return _super.call(this, \"An open transaction is required for pessimistic lock.\") || this;\n    }\n    return PessimisticLockTransactionRequiredError;\n}(TypeORMError));\nexport { PessimisticLockTransactionRequiredError };\n\n//# sourceMappingURL=PessimisticLockTransactionRequiredError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar PrimaryColumnCannotBeNullableError = /** @class */ (function (_super) {\n    __extends(PrimaryColumnCannotBeNullableError, _super);\n    function PrimaryColumnCannotBeNullableError(object, propertyName) {\n        return _super.call(this, \"Primary column \" + object.constructor.name + \"#\" + propertyName + \" cannot be nullable. \" +\n            \"Its not allowed for primary keys. Try to remove nullable option.\") || this;\n    }\n    return PrimaryColumnCannotBeNullableError;\n}(TypeORMError));\nexport { PrimaryColumnCannotBeNullableError };\n\n//# sourceMappingURL=PrimaryColumnCannotBeNullableError.js.map\n","import { __assign, __extends, __rest } from \"tslib\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when query execution has failed.\n*/\nvar QueryFailedError = /** @class */ (function (_super) {\n    __extends(QueryFailedError, _super);\n    function QueryFailedError(query, parameters, driverError) {\n        var _this = _super.call(this, driverError.toString()\n            .replace(/^error: /, \"\")\n            .replace(/^Error: /, \"\")\n            .replace(/^Request/, \"\")) || this;\n        _this.query = query;\n        _this.parameters = parameters;\n        _this.driverError = driverError;\n        if (driverError) {\n            var _ = driverError.name, // eslint-disable-line\n            otherProperties = __rest(driverError, [\"name\"]);\n            ObjectUtils.assign(_this, __assign({}, otherProperties));\n        }\n        return _this;\n    }\n    return QueryFailedError;\n}(TypeORMError));\nexport { QueryFailedError };\n\n//# sourceMappingURL=QueryFailedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar QueryRunnerAlreadyReleasedError = /** @class */ (function (_super) {\n    __extends(QueryRunnerAlreadyReleasedError, _super);\n    function QueryRunnerAlreadyReleasedError() {\n        return _super.call(this, \"Query runner already released. Cannot run queries anymore.\") || this;\n    }\n    return QueryRunnerAlreadyReleasedError;\n}(TypeORMError));\nexport { QueryRunnerAlreadyReleasedError };\n\n//# sourceMappingURL=QueryRunnerAlreadyReleasedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when consumer tries to use query runner from query runner provider after it was released.\n */\nvar QueryRunnerProviderAlreadyReleasedError = /** @class */ (function (_super) {\n    __extends(QueryRunnerProviderAlreadyReleasedError, _super);\n    function QueryRunnerProviderAlreadyReleasedError() {\n        return _super.call(this, \"Database connection provided by a query runner was already \" +\n            \"released, cannot continue to use its querying methods anymore.\") || this;\n    }\n    return QueryRunnerProviderAlreadyReleasedError;\n}(TypeORMError));\nexport { QueryRunnerProviderAlreadyReleasedError };\n\n//# sourceMappingURL=QueryRunnerProviderAlreadyReleasedError.js.map\n","import { __extends } from \"tslib\";\nimport { EntitySchema } from \"../entity-schema/EntitySchema\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when repository for the given class is not found.\n */\nvar RepositoryNotFoundError = /** @class */ (function (_super) {\n    __extends(RepositoryNotFoundError, _super);\n    function RepositoryNotFoundError(connectionName, entityClass) {\n        var _this = _super.call(this) || this;\n        var targetName;\n        if (entityClass instanceof EntitySchema) {\n            targetName = entityClass.options.name;\n        }\n        else if (typeof entityClass === \"function\") {\n            targetName = entityClass.name;\n        }\n        else if (typeof entityClass === \"object\" && \"name\" in entityClass) {\n            targetName = entityClass.name;\n        }\n        else {\n            targetName = entityClass;\n        }\n        _this.message = \"No repository for \\\"\" + targetName + \"\\\" was found. Looks like this entity is not registered in \" +\n            (\"current \\\"\" + connectionName + \"\\\" connection?\");\n        return _this;\n    }\n    return RepositoryNotFoundError;\n}(TypeORMError));\nexport { RepositoryNotFoundError };\n\n//# sourceMappingURL=RepositoryNotFoundError.js.map\n","import { __extends } from \"tslib\";\nimport { EntitySchema } from \"../entity-schema/EntitySchema\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when repository for the given class is not found.\n */\nvar RepositoryNotTreeError = /** @class */ (function (_super) {\n    __extends(RepositoryNotTreeError, _super);\n    function RepositoryNotTreeError(entityClass) {\n        var _this = _super.call(this) || this;\n        var targetName;\n        if (entityClass instanceof EntitySchema) {\n            targetName = entityClass.options.name;\n        }\n        else if (typeof entityClass === \"function\") {\n            targetName = entityClass.name;\n        }\n        else if (typeof entityClass === \"object\" && \"name\" in entityClass) {\n            targetName = entityClass.name;\n        }\n        else {\n            targetName = entityClass;\n        }\n        _this.message = \"Repository of the \\\"\" + targetName + \"\\\" class is not a TreeRepository. Try to apply @Tree decorator on your entity.\";\n        return _this;\n    }\n    return RepositoryNotTreeError;\n}(TypeORMError));\nexport { RepositoryNotTreeError };\n\n//# sourceMappingURL=RepositoryNotTreeError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when user tries to build a query with RETURNING / OUTPUT statement,\n * but used database does not support it.\n */\nvar ReturningStatementNotSupportedError = /** @class */ (function (_super) {\n    __extends(ReturningStatementNotSupportedError, _super);\n    function ReturningStatementNotSupportedError() {\n        return _super.call(this, \"OUTPUT or RETURNING clause only supported by Microsoft SQL Server or PostgreSQL databases.\") || this;\n    }\n    return ReturningStatementNotSupportedError;\n}(TypeORMError));\nexport { ReturningStatementNotSupportedError };\n\n//# sourceMappingURL=ReturningStatementNotSupportedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when same object is scheduled for remove and updation at the same time.\n */\nvar SubjectRemovedAndUpdatedError = /** @class */ (function (_super) {\n    __extends(SubjectRemovedAndUpdatedError, _super);\n    function SubjectRemovedAndUpdatedError(subject) {\n        return _super.call(this, \"Removed entity \\\"\" + subject.metadata.name + \"\\\" is also scheduled for update operation. \" +\n            \"Make sure you are not updating and removing same object (note that update or remove may be executed by cascade operations).\") || this;\n    }\n    return SubjectRemovedAndUpdatedError;\n}(TypeORMError));\nexport { SubjectRemovedAndUpdatedError };\n\n//# sourceMappingURL=SubjectRemovedAndUpdatedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when operation is going to be executed on a subject without identifier.\n * This error should never be thrown, however it still presents to prevent user from updation or removing the whole table.\n * If this error occurs still, it most probably is an ORM internal problem which must be reported and fixed.\n */\nvar SubjectWithoutIdentifierError = /** @class */ (function (_super) {\n    __extends(SubjectWithoutIdentifierError, _super);\n    function SubjectWithoutIdentifierError(subject) {\n        return _super.call(this, \"Internal error. Subject \" + subject.metadata.targetName + \" must have an identifier to perform operation.\") || this;\n    }\n    return SubjectWithoutIdentifierError;\n}(TypeORMError));\nexport { SubjectWithoutIdentifierError };\n\n//# sourceMappingURL=SubjectWithoutIdentifierError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when transaction is already started and user tries to run it again.\n */\nvar TransactionAlreadyStartedError = /** @class */ (function (_super) {\n    __extends(TransactionAlreadyStartedError, _super);\n    function TransactionAlreadyStartedError() {\n        return _super.call(this, \"Transaction already started for the given connection, commit current transaction before starting a new one.\") || this;\n    }\n    return TransactionAlreadyStartedError;\n}(TypeORMError));\nexport { TransactionAlreadyStartedError };\n\n//# sourceMappingURL=TransactionAlreadyStartedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when transaction is not started yet and user tries to run commit or rollback.\n */\nvar TransactionNotStartedError = /** @class */ (function (_super) {\n    __extends(TransactionNotStartedError, _super);\n    function TransactionNotStartedError() {\n        return _super.call(this, \"Transaction is not started yet, start transaction before committing or rolling it back.\") || this;\n    }\n    return TransactionNotStartedError;\n}(TypeORMError));\nexport { TransactionNotStartedError };\n\n//# sourceMappingURL=TransactionNotStartedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar TreeRepositoryNotSupportedError = /** @class */ (function (_super) {\n    __extends(TreeRepositoryNotSupportedError, _super);\n    function TreeRepositoryNotSupportedError(driver) {\n        return _super.call(this, \"Tree repositories are not supported in \" + driver.options.type + \" driver.\") || this;\n    }\n    return TreeRepositoryNotSupportedError;\n}(TypeORMError));\nexport { TreeRepositoryNotSupportedError };\n\n//# sourceMappingURL=TreeRepositoryNotSupportedError.js.map\n","import { __extends } from \"tslib\";\nvar TypeORMError = /** @class */ (function (_super) {\n    __extends(TypeORMError, _super);\n    function TypeORMError(message) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message) || this;\n        // restore prototype chain because the base `Error` type\n        // will break the prototype chain a little\n        if (Object.setPrototypeOf) {\n            Object.setPrototypeOf(_this, _newTarget.prototype);\n        }\n        else {\n            _this.__proto__ = _newTarget.prototype;\n        }\n        return _this;\n    }\n    Object.defineProperty(TypeORMError.prototype, \"name\", {\n        get: function () {\n            return this.constructor.name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return TypeORMError;\n}(Error));\nexport { TypeORMError };\n\n//# sourceMappingURL=TypeORMError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar UpdateValuesMissingError = /** @class */ (function (_super) {\n    __extends(UpdateValuesMissingError, _super);\n    function UpdateValuesMissingError() {\n        return _super.call(this, \"Cannot perform update query because update values are not defined. Call \\\"qb.set(...)\\\" method to specify updated values.\") || this;\n    }\n    return UpdateValuesMissingError;\n}(TypeORMError));\nexport { UpdateValuesMissingError };\n\n//# sourceMappingURL=UpdateValuesMissingError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when user tries to execute operation that requires connection to be established.\n */\nvar ConnectionIsNotSetError = /** @class */ (function (_super) {\n    __extends(ConnectionIsNotSetError, _super);\n    function ConnectionIsNotSetError(dbType) {\n        return _super.call(this, \"Connection with \" + dbType + \" database is not established. Check connection configuration.\") || this;\n    }\n    return ConnectionIsNotSetError;\n}(TypeORMError));\nexport { ConnectionIsNotSetError };\n\n//# sourceMappingURL=ConnectionIsNotSetError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar MetadataAlreadyExistsError = /** @class */ (function (_super) {\n    __extends(MetadataAlreadyExistsError, _super);\n    function MetadataAlreadyExistsError(metadataType, constructor, propertyName) {\n        return _super.call(this, metadataType + \" metadata already exists for the class constructor \" + JSON.stringify(constructor) +\n            (propertyName ? \" on property \" + propertyName : \". If you previously renamed or moved entity class, make sure\" +\n                \" that compiled version of old entity class source wasn't left in the compiler output directory.\")) || this;\n    }\n    return MetadataAlreadyExistsError;\n}(TypeORMError));\nexport { MetadataAlreadyExistsError };\n\n//# sourceMappingURL=MetadataAlreadyExistsError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when consumer tries to access repository before connection is established.\n */\nvar NoConnectionForRepositoryError = /** @class */ (function (_super) {\n    __extends(NoConnectionForRepositoryError, _super);\n    function NoConnectionForRepositoryError(connectionName) {\n        return _super.call(this, \"Cannot get a Repository for \\\"\" + connectionName + \" connection, because connection with the database \" +\n            \"is not established yet. Call connection#connect method to establish connection.\") || this;\n    }\n    return NoConnectionForRepositoryError;\n}(TypeORMError));\nexport { NoConnectionForRepositoryError };\n\n//# sourceMappingURL=NoConnectionForRepositoryError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar UsingJoinTableIsNotAllowedError = /** @class */ (function (_super) {\n    __extends(UsingJoinTableIsNotAllowedError, _super);\n    function UsingJoinTableIsNotAllowedError(entityMetadata, relation) {\n        return _super.call(this, \"Using JoinTable on \" + entityMetadata.name + \"#\" + relation.propertyName + \" is wrong. \" +\n            (entityMetadata.name + \"#\" + relation.propertyName + \" has \" + relation.relationType + \" relation, \") +\n            \"however you can use JoinTable only on many-to-many relations.\") || this;\n    }\n    return UsingJoinTableIsNotAllowedError;\n}(TypeORMError));\nexport { UsingJoinTableIsNotAllowedError };\n\n//# sourceMappingURL=UsingJoinTableIsNotAllowedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar MissingJoinColumnError = /** @class */ (function (_super) {\n    __extends(MissingJoinColumnError, _super);\n    function MissingJoinColumnError(entityMetadata, relation) {\n        var _this = _super.call(this) || this;\n        if (relation.inverseRelation) {\n            _this.message = \"JoinColumn is missing on both sides of \" + entityMetadata.name + \"#\" + relation.propertyName + \" and \" +\n                (relation.inverseEntityMetadata.name + \"#\" + relation.inverseRelation.propertyName + \" one-to-one relationship. \") +\n                \"You need to put JoinColumn decorator on one of the sides.\";\n        }\n        else {\n            _this.message = \"JoinColumn is missing on \" + entityMetadata.name + \"#\" + relation.propertyName + \" one-to-one relationship. \" +\n                \"You need to put JoinColumn decorator on it.\";\n        }\n        return _this;\n    }\n    return MissingJoinColumnError;\n}(TypeORMError));\nexport { MissingJoinColumnError };\n\n//# sourceMappingURL=MissingJoinColumnError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when consumer tries to access entity manager before connection is established.\n */\nvar CannotGetEntityManagerNotConnectedError = /** @class */ (function (_super) {\n    __extends(CannotGetEntityManagerNotConnectedError, _super);\n    function CannotGetEntityManagerNotConnectedError(connectionName) {\n        return _super.call(this, \"Cannot get entity manager for \\\"\" + connectionName + \"\\\" connection because connection is not yet established.\") || this;\n    }\n    return CannotGetEntityManagerNotConnectedError;\n}(TypeORMError));\nexport { CannotGetEntityManagerNotConnectedError };\n\n//# sourceMappingURL=CannotGetEntityManagerNotConnectedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar MetadataWithSuchNameAlreadyExistsError = /** @class */ (function (_super) {\n    __extends(MetadataWithSuchNameAlreadyExistsError, _super);\n    function MetadataWithSuchNameAlreadyExistsError(metadataType, name) {\n        return _super.call(this, metadataType + \" metadata with such name \" + name + \" already exists. \" +\n            \"Do you apply decorator twice? Or maybe try to change a name?\") || this;\n    }\n    return MetadataWithSuchNameAlreadyExistsError;\n}(TypeORMError));\nexport { MetadataWithSuchNameAlreadyExistsError };\n\n//# sourceMappingURL=MetadataWithSuchNameAlreadyExistsError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown when consumer tries to use naming strategy that does not exist.\n */\nvar NamingStrategyNotFoundError = /** @class */ (function (_super) {\n    __extends(NamingStrategyNotFoundError, _super);\n    function NamingStrategyNotFoundError(strategyName, connectionName) {\n        var _this = _super.call(this) || this;\n        var name = strategyName instanceof Function ? strategyName.name : strategyName;\n        _this.message = \"Naming strategy \\\"\" + name + \"\\\" was not found. Looks like this naming strategy does not \" +\n            (\"exist or it was not registered in current \\\"\" + connectionName + \"\\\" connection?\");\n        return _this;\n    }\n    return NamingStrategyNotFoundError;\n}(TypeORMError));\nexport { NamingStrategyNotFoundError };\n\n//# sourceMappingURL=NamingStrategyNotFoundError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar MissingJoinTableError = /** @class */ (function (_super) {\n    __extends(MissingJoinTableError, _super);\n    function MissingJoinTableError(entityMetadata, relation) {\n        var _this = _super.call(this) || this;\n        if (relation.inverseRelation) {\n            _this.message = \"JoinTable is missing on both sides of \" + entityMetadata.name + \"#\" + relation.propertyName + \" and \" +\n                (relation.inverseEntityMetadata.name + \"#\" + relation.inverseRelation.propertyName + \" many-to-many relationship. \") +\n                \"You need to put decorator decorator on one of the sides.\";\n        }\n        else {\n            _this.message = \"JoinTable is missing on \" + entityMetadata.name + \"#\" + relation.propertyName + \" many-to-many relationship. \" +\n                \"You need to put JoinTable decorator on it.\";\n        }\n        return _this;\n    }\n    return MissingJoinTableError;\n}(TypeORMError));\nexport { MissingJoinTableError };\n\n//# sourceMappingURL=MissingJoinTableError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar UsingJoinColumnOnlyOnOneSideAllowedError = /** @class */ (function (_super) {\n    __extends(UsingJoinColumnOnlyOnOneSideAllowedError, _super);\n    function UsingJoinColumnOnlyOnOneSideAllowedError(entityMetadata, relation) {\n        return _super.call(this, \"Using JoinColumn is allowed only on one side of the one-to-one relationship. \" +\n            (\"Both \" + entityMetadata.name + \"#\" + relation.propertyName + \" and \" + relation.inverseEntityMetadata.name + \"#\" + relation.inverseRelation.propertyName + \" \") +\n            \"has JoinTable decorators. Choose one of them and left JoinTable decorator only on it.\") || this;\n    }\n    return UsingJoinColumnOnlyOnOneSideAllowedError;\n}(TypeORMError));\nexport { UsingJoinColumnOnlyOnOneSideAllowedError };\n\n//# sourceMappingURL=UsingJoinColumnOnlyOnOneSideAllowedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar UsingJoinTableOnlyOnOneSideAllowedError = /** @class */ (function (_super) {\n    __extends(UsingJoinTableOnlyOnOneSideAllowedError, _super);\n    function UsingJoinTableOnlyOnOneSideAllowedError(entityMetadata, relation) {\n        return _super.call(this, \"Using JoinTable is allowed only on one side of the many-to-many relationship. \" +\n            (\"Both \" + entityMetadata.name + \"#\" + relation.propertyName + \" and \" + relation.inverseEntityMetadata.name + \"#\" + relation.inverseRelation.propertyName + \" \") +\n            \"has JoinTable decorators. Choose one of them and left JoinColumn decorator only on it.\") || this;\n    }\n    return UsingJoinTableOnlyOnOneSideAllowedError;\n}(TypeORMError));\nexport { UsingJoinTableOnlyOnOneSideAllowedError };\n\n//# sourceMappingURL=UsingJoinTableOnlyOnOneSideAllowedError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\n/**\n * Thrown . Theoretically can't be thrown.\n */\nvar PersistedEntityNotFoundError = /** @class */ (function (_super) {\n    __extends(PersistedEntityNotFoundError, _super);\n    function PersistedEntityNotFoundError() {\n        return _super.call(this, \"Internal error. Persisted entity was not found in the list of prepared operated entities.\") || this;\n    }\n    return PersistedEntityNotFoundError;\n}(TypeORMError));\nexport { PersistedEntityNotFoundError };\n\n//# sourceMappingURL=PersistedEntityNotFoundError.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar UsingJoinColumnIsNotAllowedError = /** @class */ (function (_super) {\n    __extends(UsingJoinColumnIsNotAllowedError, _super);\n    function UsingJoinColumnIsNotAllowedError(entityMetadata, relation) {\n        return _super.call(this, \"Using JoinColumn on \" + entityMetadata.name + \"#\" + relation.propertyName + \" is wrong. \" +\n            \"You can use JoinColumn only on one-to-one and many-to-one relations.\") || this;\n    }\n    return UsingJoinColumnIsNotAllowedError;\n}(TypeORMError));\nexport { UsingJoinColumnIsNotAllowedError };\n\n//# sourceMappingURL=UsingJoinColumnIsNotAllowedError.js.map\n","/**\n * Find Operator used in Find Conditions.\n */\nvar FindOperator = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function FindOperator(type, value, useParameter, multipleParameters, getSql, objectLiteralParameters) {\n        if (useParameter === void 0) { useParameter = true; }\n        if (multipleParameters === void 0) { multipleParameters = false; }\n        this._type = type;\n        this._value = value;\n        this._useParameter = useParameter;\n        this._multipleParameters = multipleParameters;\n        this._getSql = getSql;\n        this._objectLiteralParameters = objectLiteralParameters;\n    }\n    Object.defineProperty(FindOperator.prototype, \"useParameter\", {\n        // -------------------------------------------------------------------------\n        // Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Indicates if parameter is used or not for this operator.\n         * Extracts final value if value is another find operator.\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value.useParameter;\n            return this._useParameter;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FindOperator.prototype, \"multipleParameters\", {\n        /**\n         * Indicates if multiple parameters must be used for this operator.\n         * Extracts final value if value is another find operator.\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value.multipleParameters;\n            return this._multipleParameters;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FindOperator.prototype, \"type\", {\n        /**\n         * Gets the Type of this FindOperator\n         */\n        get: function () {\n            return this._type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FindOperator.prototype, \"value\", {\n        /**\n         * Gets the final value needs to be used as parameter value.\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value.value;\n            return this._value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FindOperator.prototype, \"objectLiteralParameters\", {\n        /**\n         * Gets ObjectLiteral parameters.\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value.objectLiteralParameters;\n            return this._objectLiteralParameters;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FindOperator.prototype, \"child\", {\n        /**\n         * Gets the child FindOperator if it exists\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value;\n            return undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FindOperator.prototype, \"getSql\", {\n        /**\n         * Gets the SQL generator\n         */\n        get: function () {\n            if (this._value instanceof FindOperator)\n                return this._value.getSql;\n            return this._getSql;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return FindOperator;\n}());\nexport { FindOperator };\n\n//# sourceMappingURL=FindOperator.js.map\n","import { FindOperator } from \"../FindOperator\";\n/**\n * Find Options Operator.\n * Example: { someField: In([...]) }\n */\nexport function In(value) {\n    return new FindOperator(\"in\", value, true, true);\n}\n\n//# sourceMappingURL=In.js.map\n","/**\n * Metadata args utility functions.\n */\nvar MetadataUtils = /** @class */ (function () {\n    function MetadataUtils() {\n    }\n    /**\n     * Gets given's entity all inherited classes.\n     * Gives in order from parents to children.\n     * For example Post extends ContentModel which extends Unit it will give\n     * [Unit, ContentModel, Post]\n     */\n    MetadataUtils.getInheritanceTree = function (entity) {\n        var tree = [entity];\n        var getPrototypeOf = function (object) {\n            var proto = Object.getPrototypeOf(object);\n            if (proto && proto.name) {\n                tree.push(proto);\n                getPrototypeOf(proto);\n            }\n        };\n        getPrototypeOf(entity);\n        return tree;\n    };\n    /**\n     * Checks if this table is inherited from another table.\n     */\n    MetadataUtils.isInherited = function (target1, target2) {\n        return target1.prototype instanceof target2;\n    };\n    /**\n     * Filters given array of targets by a given classes.\n     * If classes are not given, then it returns array itself.\n     */\n    MetadataUtils.filterByTarget = function (array, classes) {\n        if (!classes)\n            return array;\n        return array.filter(function (item) { return item.target && classes.indexOf(item.target) !== -1; });\n    };\n    return MetadataUtils;\n}());\nexport { MetadataUtils };\n\n//# sourceMappingURL=MetadataUtils.js.map\n","import { MetadataUtils } from \"../metadata-builder/MetadataUtils\";\n/**\n * Storage all metadatas args of all available types: tables, columns, subscribers, relations, etc.\n * Each metadata args represents some specifications of what it represents.\n * MetadataArgs used to create a real Metadata objects.\n */\nvar MetadataArgsStorage = /** @class */ (function () {\n    function MetadataArgsStorage() {\n        // -------------------------------------------------------------------------\n        // Properties\n        // -------------------------------------------------------------------------\n        this.tables = [];\n        this.trees = [];\n        this.entityRepositories = [];\n        this.transactionEntityManagers = [];\n        this.transactionRepositories = [];\n        this.namingStrategies = [];\n        this.entitySubscribers = [];\n        this.indices = [];\n        this.uniques = [];\n        this.checks = [];\n        this.exclusions = [];\n        this.columns = [];\n        this.generations = [];\n        this.relations = [];\n        this.joinColumns = [];\n        this.joinTables = [];\n        this.entityListeners = [];\n        this.relationCounts = [];\n        this.relationIds = [];\n        this.embeddeds = [];\n        this.inheritances = [];\n        this.discriminatorValues = [];\n    }\n    MetadataArgsStorage.prototype.filterTables = function (target) {\n        return this.filterByTarget(this.tables, target);\n    };\n    MetadataArgsStorage.prototype.filterColumns = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.columns, target);\n    };\n    MetadataArgsStorage.prototype.findGenerated = function (target, propertyName) {\n        return this.generations.find(function (generated) {\n            return (Array.isArray(target) ? target.indexOf(generated.target) !== -1 : generated.target === target) && generated.propertyName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.findTree = function (target) {\n        return this.trees.find(function (tree) {\n            return (Array.isArray(target) ? target.indexOf(tree.target) !== -1 : tree.target === target);\n        });\n    };\n    MetadataArgsStorage.prototype.filterRelations = function (target) {\n        return this.filterByTargetAndWithoutDuplicateRelationProperties(this.relations, target);\n    };\n    MetadataArgsStorage.prototype.filterRelationIds = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.relationIds, target);\n    };\n    MetadataArgsStorage.prototype.filterRelationCounts = function (target) {\n        return this.filterByTargetAndWithoutDuplicateProperties(this.relationCounts, target);\n    };\n    MetadataArgsStorage.prototype.filterIndices = function (target) {\n        // todo: implement parent-entity overrides?\n        return this.indices.filter(function (index) {\n            return Array.isArray(target) ? target.indexOf(index.target) !== -1 : index.target === target;\n        });\n    };\n    MetadataArgsStorage.prototype.filterUniques = function (target) {\n        return this.uniques.filter(function (unique) {\n            return Array.isArray(target) ? target.indexOf(unique.target) !== -1 : unique.target === target;\n        });\n    };\n    MetadataArgsStorage.prototype.filterChecks = function (target) {\n        return this.checks.filter(function (check) {\n            return Array.isArray(target) ? target.indexOf(check.target) !== -1 : check.target === target;\n        });\n    };\n    MetadataArgsStorage.prototype.filterExclusions = function (target) {\n        return this.exclusions.filter(function (exclusion) {\n            return Array.isArray(target) ? target.indexOf(exclusion.target) !== -1 : exclusion.target === target;\n        });\n    };\n    MetadataArgsStorage.prototype.filterListeners = function (target) {\n        return this.filterByTarget(this.entityListeners, target);\n    };\n    MetadataArgsStorage.prototype.filterEmbeddeds = function (target) {\n        return this.filterByTargetAndWithoutDuplicateEmbeddedProperties(this.embeddeds, target);\n    };\n    MetadataArgsStorage.prototype.findJoinTable = function (target, propertyName) {\n        return this.joinTables.find(function (joinTable) {\n            return joinTable.target === target && joinTable.propertyName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterJoinColumns = function (target, propertyName) {\n        // todo: implement parent-entity overrides?\n        return this.joinColumns.filter(function (joinColumn) {\n            return joinColumn.target === target && joinColumn.propertyName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterSubscribers = function (target) {\n        return this.filterByTarget(this.entitySubscribers, target);\n    };\n    MetadataArgsStorage.prototype.filterNamingStrategies = function (target) {\n        return this.filterByTarget(this.namingStrategies, target);\n    };\n    MetadataArgsStorage.prototype.filterTransactionEntityManagers = function (target, propertyName) {\n        return this.transactionEntityManagers.filter(function (transactionEm) {\n            return (Array.isArray(target) ? target.indexOf(transactionEm.target) !== -1 : transactionEm.target === target) && transactionEm.methodName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterTransactionRepository = function (target, propertyName) {\n        return this.transactionRepositories.filter(function (transactionEm) {\n            return (Array.isArray(target) ? target.indexOf(transactionEm.target) !== -1 : transactionEm.target === target) && transactionEm.methodName === propertyName;\n        });\n    };\n    MetadataArgsStorage.prototype.filterSingleTableChildren = function (target) {\n        return this.tables.filter(function (table) {\n            return table.target instanceof Function\n                && target instanceof Function\n                && MetadataUtils.isInherited(table.target, target)\n                && table.type === \"entity-child\";\n        });\n    };\n    MetadataArgsStorage.prototype.findInheritanceType = function (target) {\n        return this.inheritances.find(function (inheritance) { return inheritance.target === target; });\n    };\n    MetadataArgsStorage.prototype.findDiscriminatorValue = function (target) {\n        return this.discriminatorValues.find(function (discriminatorValue) { return discriminatorValue.target === target; });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Filters given array by a given target or targets.\n     */\n    MetadataArgsStorage.prototype.filterByTarget = function (array, target) {\n        return array.filter(function (table) {\n            return Array.isArray(target) ? target.indexOf(table.target) !== -1 : table.target === target;\n        });\n    };\n    /**\n     * Filters given array by a given target or targets and prevents duplicate property names.\n     */\n    MetadataArgsStorage.prototype.filterByTargetAndWithoutDuplicateProperties = function (array, target) {\n        var newArray = [];\n        array.forEach(function (item) {\n            var sameTarget = Array.isArray(target) ? target.indexOf(item.target) !== -1 : item.target === target;\n            if (sameTarget) {\n                if (!newArray.find(function (newItem) { return newItem.propertyName === item.propertyName; }))\n                    newArray.push(item);\n            }\n        });\n        return newArray;\n    };\n    /**\n     * Filters given array by a given target or targets and prevents duplicate relation property names.\n     */\n    MetadataArgsStorage.prototype.filterByTargetAndWithoutDuplicateRelationProperties = function (array, target) {\n        var newArray = [];\n        array.forEach(function (item) {\n            var sameTarget = target instanceof Array ? target.indexOf(item.target) !== -1 : item.target === target;\n            if (sameTarget) {\n                var existingIndex = newArray.findIndex(function (newItem) { return newItem.propertyName === item.propertyName; });\n                if (target instanceof Array && existingIndex !== -1 && target.indexOf(item.target) < target.indexOf(newArray[existingIndex].target)) {\n                    var clone = Object.create(newArray[existingIndex]);\n                    clone.type = item.type;\n                    newArray[existingIndex] = clone;\n                }\n                else if (existingIndex === -1) {\n                    newArray.push(item);\n                }\n            }\n        });\n        return newArray;\n    };\n    /**\n     * Filters given array by a given target or targets and prevents duplicate embedded property names.\n     */\n    MetadataArgsStorage.prototype.filterByTargetAndWithoutDuplicateEmbeddedProperties = function (array, target) {\n        var newArray = [];\n        array.forEach(function (item) {\n            var sameTarget = Array.isArray(target) ? target.indexOf(item.target) !== -1 : item.target === target;\n            if (sameTarget) {\n                var isDuplicateEmbeddedProperty = newArray.find(function (newItem) {\n                    return newItem.prefix === item.prefix && newItem.propertyName === item.propertyName;\n                });\n                if (!isDuplicateEmbeddedProperty)\n                    newArray.push(item);\n            }\n        });\n        return newArray;\n    };\n    return MetadataArgsStorage;\n}());\nexport { MetadataArgsStorage };\n\n//# sourceMappingURL=MetadataArgsStorage.js.map\n","/**\n * Browser's implementation of the platform-specific tools.\n *\n * This file gonna replace PlatformTools for browser environment.\n * For node.js environment this class is not getting packaged.\n * Don't use methods of this class in the code, use PlatformTools methods instead.\n */\nvar PlatformTools = /** @class */ (function () {\n    function PlatformTools() {\n    }\n    /**\n     * Gets global variable where global stuff can be stored.\n     */\n    PlatformTools.getGlobalVariable = function () {\n        if (typeof window !== \"undefined\") {\n            return window;\n        }\n        else {\n            // NativeScript uses global, not window\n            return global;\n        }\n    };\n    /**\n     * Loads (\"require\"-s) given file or package.\n     * This operation only supports on node platform\n     */\n    PlatformTools.load = function (name) {\n        if (this.type === \"browser\")\n            throw new Error(\"This option/function is not supported in the browser environment. Failed operation: require(\\\"\" + name + \"\\\").\");\n        return \"\";\n    };\n    /**\n     * Normalizes given path. Does \"path.normalize\".\n     */\n    PlatformTools.pathNormalize = function (pathStr) {\n        if (this.type === \"browser\")\n            throw new Error(\"This option/function is not supported in the browser environment. Failed operation: path.normalize(\\\"\" + pathStr + \"\\\").\");\n        return \"\";\n    };\n    /**\n     * Gets file extension. Does \"path.extname\".\n     */\n    PlatformTools.pathExtname = function (pathStr) {\n        if (this.type === \"browser\")\n            throw new Error(\"This option/function is not supported in the browser environment. Failed operation: path.extname(\\\"\" + pathStr + \"\\\").\");\n        return \"\";\n    };\n    /**\n     * Resolved given path. Does \"path.resolve\".\n     */\n    PlatformTools.pathResolve = function (pathStr) {\n        if (this.type === \"browser\")\n            throw new Error(\"This option/function is not supported in the browser environment. Failed operation: path.resolve(\\\"\" + pathStr + \"\\\").\");\n        return \"\";\n    };\n    /**\n     * Synchronously checks if file exist. Does \"fs.existsSync\".\n     */\n    PlatformTools.fileExist = function (pathStr) {\n        if (this.type === \"browser\")\n            throw new Error(\"This option/function is not supported in the browser environment. Failed operation: fs.existsSync(\\\"\" + pathStr + \"\\\").\");\n        return false;\n    };\n    PlatformTools.dotenv = function (pathStr) {\n        if (this.type === \"browser\")\n            throw new Error(\"This option/function is not supported in the browser environment. Failed operation: dotenv.config({ path: \\\"\" + pathStr + \"\\\" }).\");\n    };\n    /**\n     * Gets environment variable.\n     */\n    PlatformTools.getEnvVariable = function (name) {\n        // if (this.type === \"browser\")\n        //     throw new Error(`This option/function is not supported in the browser environment. Failed operation: process.env[\"${name}\"].`);\n        return undefined;\n    };\n    PlatformTools.readFileSync = function (filename) {\n        if (this.type === \"browser\")\n            throw new Error(\"This option/function is not supported in the browser environment. Failed operation: fs.readFileSync(\\\"\" + filename + \"\\\").\");\n        return null;\n    };\n    PlatformTools.appendFileSync = function (filename, data) {\n        if (this.type === \"browser\")\n            throw new Error(\"This option/function is not supported in the browser environment. Failed operation: fs.appendFileSync(\\\"\" + filename + \"\\\").\");\n    };\n    PlatformTools.writeFile = function (path, data) {\n        if (this.type === \"browser\")\n            throw new Error(\"This option/function is not supported in the browser environment. Failed operation: fs.writeFile(\\\"\" + path + \"\\\").\");\n        return Promise.reject(null);\n    };\n    /**\n     * Highlights sql string to be print in the console.\n     */\n    PlatformTools.highlightSql = function (sql) {\n        return sql;\n    };\n    /**\n     * Highlights json string to be print in the console.\n     */\n    PlatformTools.highlightJson = function (json) {\n        return json;\n    };\n    /**\n     * Logging functions needed by AdvancedConsoleLogger (but here without chalk)\n     */\n    PlatformTools.logInfo = function (prefix, info) {\n        console.info(prefix + \" \", info);\n    };\n    PlatformTools.logError = function (prefix, error) {\n        console.error(prefix + \" \", error);\n    };\n    PlatformTools.logWarn = function (prefix, warning) {\n        console.warn(prefix + \" \", warning);\n    };\n    PlatformTools.log = function (message) {\n        console.log(message);\n    };\n    PlatformTools.warn = function (message) {\n        return message;\n    };\n    /**\n     * Type of the currently running platform.\n     */\n    PlatformTools.type = \"browser\";\n    return PlatformTools;\n}());\nexport { PlatformTools };\n/**\n * These classes are needed for stream operations or\n * in the mongodb driver. Both aren't supported in the browser.\n */\nvar EventEmitter = /** @class */ (function () {\n    function EventEmitter() {\n    }\n    return EventEmitter;\n}());\nexport { EventEmitter };\nvar Readable = /** @class */ (function () {\n    function Readable() {\n    }\n    return Readable;\n}());\nexport { Readable };\nvar Writable = /** @class */ (function () {\n    function Writable() {\n    }\n    return Writable;\n}());\nexport { Writable };\nif (typeof window !== \"undefined\") {\n    window.Buffer = require(\"buffer/\").Buffer;\n}\n// NativeScript uses global, not window\nif (typeof global !== \"undefined\") {\n    global.Buffer = require(\"buffer/\").Buffer;\n}\n\n//# sourceMappingURL=BrowserPlatformTools.js.map\n","import { __awaiter, __generator } from \"tslib\";\n/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\nvar ConnectionOptionsEnvReader = /** @class */ (function () {\n    function ConnectionOptionsEnvReader() {\n    }\n    ConnectionOptionsEnvReader.prototype.read = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Cannot read connection options in a browser context.\");\n            });\n        });\n    };\n    return ConnectionOptionsEnvReader;\n}());\nexport { ConnectionOptionsEnvReader };\n/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\nvar ConnectionOptionsXmlReader = /** @class */ (function () {\n    function ConnectionOptionsXmlReader() {\n    }\n    ConnectionOptionsXmlReader.prototype.read = function (path) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Cannot read connection options in a browser context.\");\n            });\n        });\n    };\n    return ConnectionOptionsXmlReader;\n}());\nexport { ConnectionOptionsXmlReader };\n/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\nvar ConnectionOptionsYmlReader = /** @class */ (function () {\n    function ConnectionOptionsYmlReader() {\n    }\n    ConnectionOptionsYmlReader.prototype.read = function (path) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Cannot read connection options in a browser context.\");\n            });\n        });\n    };\n    return ConnectionOptionsYmlReader;\n}());\nexport { ConnectionOptionsYmlReader };\n/**\n * Dummy class for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\nvar ConnectionOptionsReader = /** @class */ (function () {\n    function ConnectionOptionsReader() {\n    }\n    ConnectionOptionsReader.prototype.all = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Cannot read connection options in a browser context.\");\n            });\n        });\n    };\n    ConnectionOptionsReader.prototype.get = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Cannot read connection options in a browser context.\");\n            });\n        });\n    };\n    ConnectionOptionsReader.prototype.has = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new Error(\"Cannot read connection options in a browser context.\");\n            });\n        });\n    };\n    return ConnectionOptionsReader;\n}());\nexport { ConnectionOptionsReader };\n\n//# sourceMappingURL=BrowserConnectionOptionsReaderDummy.js.map\n","import { __read, __spreadArray } from \"tslib\";\nimport { RandomGenerator } from \"../util/RandomGenerator\";\nimport { camelCase, snakeCase, titleCase } from \"../util/StringUtils\";\nimport { Table } from \"../schema-builder/table/Table\";\n/**\n * Naming strategy that is used by default.\n */\nvar DefaultNamingStrategy = /** @class */ (function () {\n    function DefaultNamingStrategy() {\n        this.nestedSetColumnNames = { left: \"nsleft\", right: \"nsright\" };\n        this.materializedPathColumnName = \"mpath\";\n    }\n    DefaultNamingStrategy.prototype.getTableName = function (tableOrName) {\n        if (tableOrName instanceof Table) {\n            tableOrName = tableOrName.name;\n        }\n        return tableOrName.split(\".\").pop();\n    };\n    /**\n     * Normalizes table name.\n     *\n     * @param targetName Name of the target entity that can be used to generate a table name.\n     * @param userSpecifiedName For example if user specified a table name in a decorator, e.g. @Entity(\"name\")\n     */\n    DefaultNamingStrategy.prototype.tableName = function (targetName, userSpecifiedName) {\n        return userSpecifiedName ? userSpecifiedName : snakeCase(targetName);\n    };\n    /**\n     * Creates a table name for a junction table of a closure table.\n     *\n     * @param originalClosureTableName Name of the closure table which owns this junction table.\n     */\n    DefaultNamingStrategy.prototype.closureJunctionTableName = function (originalClosureTableName) {\n        return originalClosureTableName + \"_closure\";\n    };\n    DefaultNamingStrategy.prototype.columnName = function (propertyName, customName, embeddedPrefixes) {\n        var name = customName || propertyName;\n        if (embeddedPrefixes.length)\n            return camelCase(embeddedPrefixes.join(\"_\")) + titleCase(name);\n        return name;\n    };\n    DefaultNamingStrategy.prototype.relationName = function (propertyName) {\n        return propertyName;\n    };\n    DefaultNamingStrategy.prototype.primaryKeyName = function (tableOrName, columnNames) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = __spreadArray([], __read(columnNames), false);\n        clonedColumnNames.sort();\n        var tableName = this.getTableName(tableOrName);\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        return \"PK_\" + RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.uniqueConstraintName = function (tableOrName, columnNames) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = __spreadArray([], __read(columnNames), false);\n        clonedColumnNames.sort();\n        var tableName = this.getTableName(tableOrName);\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        return \"UQ_\" + RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.relationConstraintName = function (tableOrName, columnNames, where) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = __spreadArray([], __read(columnNames), false);\n        clonedColumnNames.sort();\n        var tableName = this.getTableName(tableOrName);\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        if (where)\n            key += \"_\" + where;\n        return \"REL_\" + RandomGenerator.sha1(key).substr(0, 26);\n    };\n    DefaultNamingStrategy.prototype.defaultConstraintName = function (tableOrName, columnName) {\n        var tableName = this.getTableName(tableOrName);\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + columnName;\n        return \"DF_\" + RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.foreignKeyName = function (tableOrName, columnNames, _referencedTablePath, _referencedColumnNames) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = __spreadArray([], __read(columnNames), false);\n        clonedColumnNames.sort();\n        var tableName = this.getTableName(tableOrName);\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        return \"FK_\" + RandomGenerator.sha1(key).substr(0, 27);\n    };\n    DefaultNamingStrategy.prototype.indexName = function (tableOrName, columnNames, where) {\n        // sort incoming column names to avoid issue when [\"id\", \"name\"] and [\"name\", \"id\"] arrays\n        var clonedColumnNames = __spreadArray([], __read(columnNames), false);\n        clonedColumnNames.sort();\n        var tableName = this.getTableName(tableOrName);\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + clonedColumnNames.join(\"_\");\n        if (where)\n            key += \"_\" + where;\n        return \"IDX_\" + RandomGenerator.sha1(key).substr(0, 26);\n    };\n    DefaultNamingStrategy.prototype.checkConstraintName = function (tableOrName, expression, isEnum) {\n        var tableName = this.getTableName(tableOrName);\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + expression;\n        var name = \"CHK_\" + RandomGenerator.sha1(key).substr(0, 26);\n        return isEnum ? name + \"_ENUM\" : name;\n    };\n    DefaultNamingStrategy.prototype.exclusionConstraintName = function (tableOrName, expression) {\n        var tableName = this.getTableName(tableOrName);\n        var replacedTableName = tableName.replace(\".\", \"_\");\n        var key = replacedTableName + \"_\" + expression;\n        return \"XCL_\" + RandomGenerator.sha1(key).substr(0, 26);\n    };\n    DefaultNamingStrategy.prototype.joinColumnName = function (relationName, referencedColumnName) {\n        return camelCase(relationName + \"_\" + referencedColumnName);\n    };\n    DefaultNamingStrategy.prototype.joinTableName = function (firstTableName, secondTableName, firstPropertyName, secondPropertyName) {\n        return snakeCase(firstTableName + \"_\" + firstPropertyName.replace(/\\./gi, \"_\") + \"_\" + secondTableName);\n    };\n    DefaultNamingStrategy.prototype.joinTableColumnDuplicationPrefix = function (columnName, index) {\n        return columnName + \"_\" + index;\n    };\n    DefaultNamingStrategy.prototype.joinTableColumnName = function (tableName, propertyName, columnName) {\n        return camelCase(tableName + \"_\" + (columnName ? columnName : propertyName));\n    };\n    DefaultNamingStrategy.prototype.joinTableInverseColumnName = function (tableName, propertyName, columnName) {\n        return this.joinTableColumnName(tableName, propertyName, columnName);\n    };\n    /**\n     * Adds globally set prefix to the table name.\n     * This method is executed no matter if prefix was set or not.\n     * Table name is either user's given table name, either name generated from entity target.\n     * Note that table name comes here already normalized by #tableName method.\n     */\n    DefaultNamingStrategy.prototype.prefixTableName = function (prefix, tableName) {\n        return prefix + tableName;\n    };\n    DefaultNamingStrategy.prototype.eagerJoinRelationAlias = function (alias, propertyPath) {\n        return alias + \"_\" + propertyPath.replace(\".\", \"_\");\n    };\n    return DefaultNamingStrategy;\n}());\nexport { DefaultNamingStrategy };\n\n//# sourceMappingURL=DefaultNamingStrategy.js.map\n","/**\n * Represents entity of the migration in the database.\n */\nvar Migration = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function Migration(id, timestamp, name, instance) {\n        this.id = id;\n        this.timestamp = timestamp;\n        this.name = name;\n        this.instance = instance;\n    }\n    return Migration;\n}());\nexport { Migration };\n\n//# sourceMappingURL=Migration.js.map\n","/**\n * Sql server driver requires parameter types to be specified fo input parameters used in the query.\n *\n * @see https://github.com/patriksimek/node-mssql#data-types\n */\nvar MssqlParameter = /** @class */ (function () {\n    function MssqlParameter(value, type) {\n        var params = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            params[_i - 2] = arguments[_i];\n        }\n        this.value = value;\n        this.type = type;\n        // -------------------------------------------------------------------------\n        // Public Properties\n        // -------------------------------------------------------------------------\n        this.params = [];\n        this.params = params || [];\n    }\n    return MssqlParameter;\n}());\nexport { MssqlParameter };\n\n//# sourceMappingURL=MssqlParameter.js.map\n","import { __awaiter, __generator, __values } from \"tslib\";\nimport { Table } from \"../schema-builder/table/Table\";\nimport { Migration } from \"./Migration\";\nimport { SqlServerDriver } from \"../driver/sqlserver/SqlServerDriver\";\nimport { MssqlParameter } from \"../driver/sqlserver/MssqlParameter\";\nimport { MongoDriver } from \"../driver/mongodb/MongoDriver\";\nimport { TypeORMError } from \"../error\";\n/**\n * Executes migrations: runs pending and reverts previously executed migrations.\n */\nvar MigrationExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function MigrationExecutor(connection, queryRunner) {\n        this.connection = connection;\n        this.queryRunner = queryRunner;\n        // -------------------------------------------------------------------------\n        // Public Properties\n        // -------------------------------------------------------------------------\n        /**\n         * Indicates how migrations should be run in transactions.\n         *   all: all migrations are run in a single transaction\n         *   none: all migrations are run without a transaction\n         *   each: each migration is run in a separate transaction\n         */\n        this.transaction = \"all\";\n        var schema = this.connection.driver.options.schema;\n        var database = this.connection.driver.database;\n        this.migrationsDatabase = database;\n        this.migrationsSchema = schema;\n        this.migrationsTableName = connection.options.migrationsTableName || \"migrations\";\n        this.migrationsTable = this.connection.driver.buildTableName(this.migrationsTableName, schema, database);\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Tries to execute a single migration given.\n     */\n    MigrationExecutor.prototype.executeMigration = function (migration) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.withQueryRunner(function (queryRunner) { return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4 /*yield*/, this.createMigrationsTableIfNotExist(queryRunner)];\n                                case 1:\n                                    _a.sent();\n                                    return [4 /*yield*/, migration.instance.up(queryRunner)];\n                                case 2:\n                                    _a.sent();\n                                    return [4 /*yield*/, this.insertExecutedMigration(queryRunner, migration)];\n                                case 3:\n                                    _a.sent();\n                                    return [2 /*return*/, migration];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    /**\n     * Returns an array of all migrations.\n     */\n    MigrationExecutor.prototype.getAllMigrations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve(this.getMigrations())];\n            });\n        });\n    };\n    /**\n     * Returns an array of all executed migrations.\n     */\n    MigrationExecutor.prototype.getExecutedMigrations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.withQueryRunner(function (queryRunner) { return __awaiter(_this, void 0, void 0, function () {\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4 /*yield*/, this.createMigrationsTableIfNotExist(queryRunner)];\n                                case 1:\n                                    _a.sent();\n                                    return [4 /*yield*/, this.loadExecutedMigrations(queryRunner)];\n                                case 2: return [2 /*return*/, _a.sent()];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    /**\n     * Returns an array of all pending migrations.\n     */\n    MigrationExecutor.prototype.getPendingMigrations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var allMigrations, executedMigrations;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getAllMigrations()];\n                    case 1:\n                        allMigrations = _a.sent();\n                        return [4 /*yield*/, this.getExecutedMigrations()];\n                    case 2:\n                        executedMigrations = _a.sent();\n                        return [2 /*return*/, allMigrations.filter(function (migration) {\n                                return !executedMigrations.find(function (executedMigration) {\n                                    return executedMigration.name === migration.name;\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * Inserts an executed migration.\n     */\n    MigrationExecutor.prototype.insertMigration = function (migration) {\n        var _this = this;\n        return this.withQueryRunner(function (q) { return _this.insertExecutedMigration(q, migration); });\n    };\n    /**\n     * Deletes an executed migration.\n     */\n    MigrationExecutor.prototype.deleteMigration = function (migration) {\n        var _this = this;\n        return this.withQueryRunner(function (q) { return _this.deleteExecutedMigration(q, migration); });\n    };\n    /**\n     * Lists all migrations and whether they have been executed or not\n     * returns true if there are unapplied migrations\n     */\n    MigrationExecutor.prototype.showMigrations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var hasUnappliedMigrations, queryRunner, executedMigrations, allMigrations, _loop_1, this_1, allMigrations_1, allMigrations_1_1, migration;\n            var e_1, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        hasUnappliedMigrations = false;\n                        queryRunner = this.queryRunner || this.connection.createQueryRunner();\n                        // create migrations table if its not created yet\n                        return [4 /*yield*/, this.createMigrationsTableIfNotExist(queryRunner)];\n                    case 1:\n                        // create migrations table if its not created yet\n                        _b.sent();\n                        return [4 /*yield*/, this.loadExecutedMigrations(queryRunner)];\n                    case 2:\n                        executedMigrations = _b.sent();\n                        allMigrations = this.getMigrations();\n                        _loop_1 = function (migration) {\n                            var executedMigration = executedMigrations.find(function (executedMigration) { return executedMigration.name === migration.name; });\n                            if (executedMigration) {\n                                this_1.connection.logger.logSchemaBuild(\" [X] \" + migration.name);\n                            }\n                            else {\n                                hasUnappliedMigrations = true;\n                                this_1.connection.logger.logSchemaBuild(\" [ ] \" + migration.name);\n                            }\n                        };\n                        this_1 = this;\n                        try {\n                            for (allMigrations_1 = __values(allMigrations), allMigrations_1_1 = allMigrations_1.next(); !allMigrations_1_1.done; allMigrations_1_1 = allMigrations_1.next()) {\n                                migration = allMigrations_1_1.value;\n                                _loop_1(migration);\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (allMigrations_1_1 && !allMigrations_1_1.done && (_a = allMigrations_1.return)) _a.call(allMigrations_1);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                        if (!!this.queryRunner) return [3 /*break*/, 4];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 3:\n                        _b.sent();\n                        _b.label = 4;\n                    case 4: return [2 /*return*/, hasUnappliedMigrations];\n                }\n            });\n        });\n    };\n    /**\n     * Executes all pending migrations. Pending migrations are migrations that are not yet executed,\n     * thus not saved in the database.\n     */\n    MigrationExecutor.prototype.executePendingMigrations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, executedMigrations, lastTimeExecutedMigration, allMigrations, successMigrations, pendingMigrations, transactionStartedByUs, _loop_2, this_2, pendingMigrations_1, pendingMigrations_1_1, migration, e_2_1, err_1, rollbackError_1;\n            var e_2, _a;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        queryRunner = this.queryRunner || this.connection.createQueryRunner();\n                        // create migrations table if its not created yet\n                        return [4 /*yield*/, this.createMigrationsTableIfNotExist(queryRunner)];\n                    case 1:\n                        // create migrations table if its not created yet\n                        _b.sent();\n                        return [4 /*yield*/, this.loadExecutedMigrations(queryRunner)];\n                    case 2:\n                        executedMigrations = _b.sent();\n                        lastTimeExecutedMigration = this.getLatestTimestampMigration(executedMigrations);\n                        allMigrations = this.getMigrations();\n                        successMigrations = [];\n                        pendingMigrations = allMigrations.filter(function (migration) {\n                            // check if we already have executed migration\n                            var executedMigration = executedMigrations.find(function (executedMigration) { return executedMigration.name === migration.name; });\n                            if (executedMigration)\n                                return false;\n                            // migration is new and not executed. now check if its timestamp is correct\n                            // if (lastTimeExecutedMigration && migration.timestamp < lastTimeExecutedMigration.timestamp)\n                            //     throw new TypeORMError(`New migration found: ${migration.name}, however this migration's timestamp is not valid. Migration's timestamp should not be older then migrations already executed in the database.`);\n                            // every check is passed means that migration was not run yet and we need to run it\n                            return true;\n                        });\n                        if (!!pendingMigrations.length) return [3 /*break*/, 5];\n                        this.connection.logger.logSchemaBuild(\"No migrations are pending\");\n                        if (!!this.queryRunner) return [3 /*break*/, 4];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 3:\n                        _b.sent();\n                        _b.label = 4;\n                    case 4: return [2 /*return*/, []];\n                    case 5:\n                        // log information about migration execution\n                        this.connection.logger.logSchemaBuild(executedMigrations.length + \" migrations are already loaded in the database.\");\n                        this.connection.logger.logSchemaBuild(allMigrations.length + \" migrations were found in the source code.\");\n                        if (lastTimeExecutedMigration)\n                            this.connection.logger.logSchemaBuild(lastTimeExecutedMigration.name + \" is the last executed migration. It was executed on \" + new Date(lastTimeExecutedMigration.timestamp).toString() + \".\");\n                        this.connection.logger.logSchemaBuild(pendingMigrations.length + \" migrations are new migrations that needs to be executed.\");\n                        transactionStartedByUs = false;\n                        if (!(this.transaction === \"all\" && !queryRunner.isTransactionActive)) return [3 /*break*/, 7];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 6:\n                        _b.sent();\n                        transactionStartedByUs = true;\n                        _b.label = 7;\n                    case 7:\n                        _b.trys.push([7, 18, 23, 26]);\n                        _loop_2 = function (migration) {\n                            return __generator(this, function (_c) {\n                                switch (_c.label) {\n                                    case 0:\n                                        if (!(this_2.transaction === \"each\" && !queryRunner.isTransactionActive)) return [3 /*break*/, 2];\n                                        return [4 /*yield*/, queryRunner.startTransaction()];\n                                    case 1:\n                                        _c.sent();\n                                        transactionStartedByUs = true;\n                                        _c.label = 2;\n                                    case 2: return [4 /*yield*/, migration.instance.up(queryRunner)\n                                            .catch(function (error) {\n                                            _this.connection.logger.logMigration(\"Migration \\\"\" + migration.name + \"\\\" has been failed, error: \" + (error === null || error === void 0 ? void 0 : error.message));\n                                            throw error;\n                                        })\n                                            .then(function () { return __awaiter(_this, void 0, void 0, function () {\n                                            return __generator(this, function (_a) {\n                                                switch (_a.label) {\n                                                    case 0: // now when migration is executed we need to insert record about it into the database\n                                                    return [4 /*yield*/, this.insertExecutedMigration(queryRunner, migration)];\n                                                    case 1:\n                                                        _a.sent();\n                                                        if (!(this.transaction === \"each\" && transactionStartedByUs)) return [3 /*break*/, 3];\n                                                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                                                    case 2:\n                                                        _a.sent();\n                                                        _a.label = 3;\n                                                    case 3: return [2 /*return*/];\n                                                }\n                                            });\n                                        }); })\n                                            .then(function () {\n                                            successMigrations.push(migration);\n                                            _this.connection.logger.logSchemaBuild(\"Migration \" + migration.name + \" has been executed successfully.\");\n                                        })];\n                                    case 3:\n                                        _c.sent();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_2 = this;\n                        _b.label = 8;\n                    case 8:\n                        _b.trys.push([8, 13, 14, 15]);\n                        pendingMigrations_1 = __values(pendingMigrations), pendingMigrations_1_1 = pendingMigrations_1.next();\n                        _b.label = 9;\n                    case 9:\n                        if (!!pendingMigrations_1_1.done) return [3 /*break*/, 12];\n                        migration = pendingMigrations_1_1.value;\n                        return [5 /*yield**/, _loop_2(migration)];\n                    case 10:\n                        _b.sent();\n                        _b.label = 11;\n                    case 11:\n                        pendingMigrations_1_1 = pendingMigrations_1.next();\n                        return [3 /*break*/, 9];\n                    case 12: return [3 /*break*/, 15];\n                    case 13:\n                        e_2_1 = _b.sent();\n                        e_2 = { error: e_2_1 };\n                        return [3 /*break*/, 15];\n                    case 14:\n                        try {\n                            if (pendingMigrations_1_1 && !pendingMigrations_1_1.done && (_a = pendingMigrations_1.return)) _a.call(pendingMigrations_1);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                        return [7 /*endfinally*/];\n                    case 15:\n                        if (!(this.transaction === \"all\" && transactionStartedByUs)) return [3 /*break*/, 17];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 16:\n                        _b.sent();\n                        _b.label = 17;\n                    case 17: return [3 /*break*/, 26];\n                    case 18:\n                        err_1 = _b.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 22];\n                        _b.label = 19;\n                    case 19:\n                        _b.trys.push([19, 21, , 22]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 20:\n                        _b.sent();\n                        return [3 /*break*/, 22];\n                    case 21:\n                        rollbackError_1 = _b.sent();\n                        return [3 /*break*/, 22];\n                    case 22: throw err_1;\n                    case 23:\n                        if (!!this.queryRunner) return [3 /*break*/, 25];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 24:\n                        _b.sent();\n                        _b.label = 25;\n                    case 25: return [7 /*endfinally*/];\n                    case 26: return [2 /*return*/, successMigrations];\n                }\n            });\n        });\n    };\n    /**\n     * Reverts last migration that were run.\n     */\n    MigrationExecutor.prototype.undoLastMigration = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, executedMigrations, lastTimeExecutedMigration, allMigrations, migrationToRevert, transactionStartedByUs, err_2, rollbackError_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.queryRunner || this.connection.createQueryRunner();\n                        // create migrations table if its not created yet\n                        return [4 /*yield*/, this.createMigrationsTableIfNotExist(queryRunner)];\n                    case 1:\n                        // create migrations table if its not created yet\n                        _a.sent();\n                        return [4 /*yield*/, this.loadExecutedMigrations(queryRunner)];\n                    case 2:\n                        executedMigrations = _a.sent();\n                        lastTimeExecutedMigration = this.getLatestExecutedMigration(executedMigrations);\n                        // if no migrations found in the database then nothing to revert\n                        if (!lastTimeExecutedMigration) {\n                            this.connection.logger.logSchemaBuild(\"No migrations was found in the database. Nothing to revert!\");\n                            return [2 /*return*/];\n                        }\n                        allMigrations = this.getMigrations();\n                        migrationToRevert = allMigrations.find(function (migration) { return migration.name === lastTimeExecutedMigration.name; });\n                        // if no migrations found in the database then nothing to revert\n                        if (!migrationToRevert)\n                            throw new TypeORMError(\"No migration \" + lastTimeExecutedMigration.name + \" was found in the source code. Make sure you have this migration in your codebase and its included in the connection options.\");\n                        // log information about migration execution\n                        this.connection.logger.logSchemaBuild(executedMigrations.length + \" migrations are already loaded in the database.\");\n                        this.connection.logger.logSchemaBuild(lastTimeExecutedMigration.name + \" is the last executed migration. It was executed on \" + new Date(lastTimeExecutedMigration.timestamp).toString() + \".\");\n                        this.connection.logger.logSchemaBuild(\"Now reverting it...\");\n                        transactionStartedByUs = false;\n                        if (!((this.transaction !== \"none\") && !queryRunner.isTransactionActive)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 3:\n                        _a.sent();\n                        transactionStartedByUs = true;\n                        _a.label = 4;\n                    case 4:\n                        _a.trys.push([4, 9, 14, 17]);\n                        return [4 /*yield*/, migrationToRevert.instance.down(queryRunner)];\n                    case 5:\n                        _a.sent();\n                        return [4 /*yield*/, this.deleteExecutedMigration(queryRunner, migrationToRevert)];\n                    case 6:\n                        _a.sent();\n                        this.connection.logger.logSchemaBuild(\"Migration \" + migrationToRevert.name + \" has been reverted successfully.\");\n                        if (!transactionStartedByUs) return [3 /*break*/, 8];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 7:\n                        _a.sent();\n                        _a.label = 8;\n                    case 8: return [3 /*break*/, 17];\n                    case 9:\n                        err_2 = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 13];\n                        _a.label = 10;\n                    case 10:\n                        _a.trys.push([10, 12, , 13]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 11:\n                        _a.sent();\n                        return [3 /*break*/, 13];\n                    case 12:\n                        rollbackError_2 = _a.sent();\n                        return [3 /*break*/, 13];\n                    case 13: throw err_2;\n                    case 14:\n                        if (!!this.queryRunner) return [3 /*break*/, 16];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 15:\n                        _a.sent();\n                        _a.label = 16;\n                    case 16: return [7 /*endfinally*/];\n                    case 17: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates table \"migrations\" that will store information about executed migrations.\n     */\n    MigrationExecutor.prototype.createMigrationsTableIfNotExist = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tableExist;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // If driver is mongo no need to create\n                        if (this.connection.driver instanceof MongoDriver) {\n                            return [2 /*return*/];\n                        }\n                        return [4 /*yield*/, queryRunner.hasTable(this.migrationsTable)];\n                    case 1:\n                        tableExist = _a.sent();\n                        if (!!tableExist) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.createTable(new Table({\n                                database: this.migrationsDatabase,\n                                schema: this.migrationsSchema,\n                                name: this.migrationsTable,\n                                columns: [\n                                    {\n                                        name: \"id\",\n                                        type: this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.migrationId }),\n                                        isGenerated: true,\n                                        generationStrategy: \"increment\",\n                                        isPrimary: true,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"timestamp\",\n                                        type: this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.migrationTimestamp }),\n                                        isPrimary: false,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"name\",\n                                        type: this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.migrationName }),\n                                        isNullable: false\n                                    },\n                                ]\n                            }))];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Loads all migrations that were executed and saved into the database (sorts by id).\n     */\n    MigrationExecutor.prototype.loadExecutedMigrations = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var mongoRunner, migrationsRaw;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.connection.driver instanceof MongoDriver)) return [3 /*break*/, 2];\n                        mongoRunner = queryRunner;\n                        return [4 /*yield*/, mongoRunner.databaseConnection\n                                .db(this.connection.driver.database)\n                                .collection(this.migrationsTableName)\n                                .find()\n                                .sort({ \"_id\": -1 })\n                                .toArray()];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2: return [4 /*yield*/, this.connection.manager\n                            .createQueryBuilder(queryRunner)\n                            .select()\n                            .orderBy(this.connection.driver.escape(\"id\"), \"DESC\")\n                            .from(this.migrationsTable, this.migrationsTableName)\n                            .getRawMany()];\n                    case 3:\n                        migrationsRaw = _a.sent();\n                        return [2 /*return*/, migrationsRaw.map(function (migrationRaw) {\n                                return new Migration(parseInt(migrationRaw[\"id\"]), parseInt(migrationRaw[\"timestamp\"]), migrationRaw[\"name\"]);\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * Gets all migrations that setup for this connection.\n     */\n    MigrationExecutor.prototype.getMigrations = function () {\n        var migrations = this.connection.migrations.map(function (migration) {\n            var migrationClassName = migration.name || migration.constructor.name;\n            var migrationTimestamp = parseInt(migrationClassName.substr(-13), 10);\n            if (!migrationTimestamp || isNaN(migrationTimestamp)) {\n                throw new TypeORMError(migrationClassName + \" migration name is wrong. Migration class name should have a JavaScript timestamp appended.\");\n            }\n            return new Migration(undefined, migrationTimestamp, migrationClassName, migration);\n        });\n        this.checkForDuplicateMigrations(migrations);\n        // sort them by timestamp\n        return migrations.sort(function (a, b) { return a.timestamp - b.timestamp; });\n    };\n    MigrationExecutor.prototype.checkForDuplicateMigrations = function (migrations) {\n        var migrationNames = migrations.map(function (migration) { return migration.name; });\n        var duplicates = Array.from(new Set(migrationNames.filter(function (migrationName, index) { return migrationNames.indexOf(migrationName) < index; })));\n        if (duplicates.length > 0) {\n            throw Error(\"Duplicate migrations: \" + duplicates.join(\", \"));\n        }\n    };\n    /**\n     * Finds the latest migration (sorts by timestamp) in the given array of migrations.\n     */\n    MigrationExecutor.prototype.getLatestTimestampMigration = function (migrations) {\n        var sortedMigrations = migrations.map(function (migration) { return migration; }).sort(function (a, b) { return (a.timestamp - b.timestamp) * -1; });\n        return sortedMigrations.length > 0 ? sortedMigrations[0] : undefined;\n    };\n    /**\n     * Finds the latest migration in the given array of migrations.\n     * PRE: Migration array must be sorted by descending id.\n     */\n    MigrationExecutor.prototype.getLatestExecutedMigration = function (sortedMigrations) {\n        return sortedMigrations.length > 0 ? sortedMigrations[0] : undefined;\n    };\n    /**\n     * Inserts new executed migration's data into migrations table.\n     */\n    MigrationExecutor.prototype.insertExecutedMigration = function (queryRunner, migration) {\n        return __awaiter(this, void 0, void 0, function () {\n            var values, mongoRunner, qb;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        values = {};\n                        if (this.connection.driver instanceof SqlServerDriver) {\n                            values[\"timestamp\"] = new MssqlParameter(migration.timestamp, this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.migrationTimestamp }));\n                            values[\"name\"] = new MssqlParameter(migration.name, this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.migrationName }));\n                        }\n                        else {\n                            values[\"timestamp\"] = migration.timestamp;\n                            values[\"name\"] = migration.name;\n                        }\n                        if (!(this.connection.driver instanceof MongoDriver)) return [3 /*break*/, 2];\n                        mongoRunner = queryRunner;\n                        return [4 /*yield*/, mongoRunner.databaseConnection.db(this.connection.driver.database).collection(this.migrationsTableName).insertOne(values)];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 2:\n                        qb = queryRunner.manager.createQueryBuilder();\n                        return [4 /*yield*/, qb.insert()\n                                .into(this.migrationsTable)\n                                .values(values)\n                                .execute()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Delete previously executed migration's data from the migrations table.\n     */\n    MigrationExecutor.prototype.deleteExecutedMigration = function (queryRunner, migration) {\n        return __awaiter(this, void 0, void 0, function () {\n            var conditions, mongoRunner, qb;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        conditions = {};\n                        if (this.connection.driver instanceof SqlServerDriver) {\n                            conditions[\"timestamp\"] = new MssqlParameter(migration.timestamp, this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.migrationTimestamp }));\n                            conditions[\"name\"] = new MssqlParameter(migration.name, this.connection.driver.normalizeType({ type: this.connection.driver.mappedDataTypes.migrationName }));\n                        }\n                        else {\n                            conditions[\"timestamp\"] = migration.timestamp;\n                            conditions[\"name\"] = migration.name;\n                        }\n                        if (!(this.connection.driver instanceof MongoDriver)) return [3 /*break*/, 2];\n                        mongoRunner = queryRunner;\n                        return [4 /*yield*/, mongoRunner.databaseConnection.db(this.connection.driver.database).collection(this.migrationsTableName).deleteOne(conditions)];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 2:\n                        qb = queryRunner.manager.createQueryBuilder();\n                        return [4 /*yield*/, qb.delete()\n                                .from(this.migrationsTable)\n                                .where(qb.escape(\"timestamp\") + \" = :timestamp\")\n                                .andWhere(qb.escape(\"name\") + \" = :name\")\n                                .setParameters(conditions)\n                                .execute()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MigrationExecutor.prototype.withQueryRunner = function (callback) {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.queryRunner || this.connection.createQueryRunner();\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 2, 5]);\n                        return [2 /*return*/, callback(queryRunner)];\n                    case 2:\n                        if (!!this.queryRunner) return [3 /*break*/, 4];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return MigrationExecutor;\n}());\nexport { MigrationExecutor };\n\n//# sourceMappingURL=MigrationExecutor.js.map\n","/**\n * This source code is from https://github.com/jriecken/dependency-graph\n * Just added \"any\" types here, wrapper everything into exported class.\n * We cant use a package itself because we want to package \"everything-in-it\" for the frontend users of TypeORM.\n */\n/**\n * A simple dependency graph\n */\nimport { TypeORMError } from \"../error\";\n/**\n * Helper for creating a Depth-First-Search on\n * a set of edges.\n *\n * Detects cycles and throws an Error if one is detected.\n *\n * @param edges The set of edges to DFS through\n * @param leavesOnly Whether to only return \"leaf\" nodes (ones who have no edges)\n * @param result An array in which the results will be populated\n */\nfunction createDFS(edges, leavesOnly, result) {\n    var currentPath = [];\n    var visited = {};\n    return function DFS(currentNode) {\n        visited[currentNode] = true;\n        currentPath.push(currentNode);\n        edges[currentNode].forEach(function (node) {\n            if (!visited[node]) {\n                DFS(node);\n            }\n            else if (currentPath.indexOf(node) >= 0) {\n                currentPath.push(node);\n                throw new TypeORMError(\"Dependency Cycle Found: \" + currentPath.join(\" -> \"));\n            }\n        });\n        currentPath.pop();\n        if ((!leavesOnly || edges[currentNode].length === 0) && result.indexOf(currentNode) === -1) {\n            result.push(currentNode);\n        }\n    };\n}\nvar DepGraph = /** @class */ (function () {\n    function DepGraph() {\n        this.nodes = {};\n        this.outgoingEdges = {}; // Node -> [Dependency Node]\n        this.incomingEdges = {}; // Node -> [Dependant Node]\n    }\n    /**\n     * Add a node to the dependency graph. If a node already exists, this method will do nothing.\n     */\n    DepGraph.prototype.addNode = function (node, data) {\n        if (!this.hasNode(node)) {\n            // Checking the arguments length allows the user to add a node with undefined data\n            if (arguments.length === 2) {\n                this.nodes[node] = data;\n            }\n            else {\n                this.nodes[node] = node;\n            }\n            this.outgoingEdges[node] = [];\n            this.incomingEdges[node] = [];\n        }\n    };\n    /**\n     * Remove a node from the dependency graph. If a node does not exist, this method will do nothing.\n     */\n    DepGraph.prototype.removeNode = function (node) {\n        if (this.hasNode(node)) {\n            delete this.nodes[node];\n            delete this.outgoingEdges[node];\n            delete this.incomingEdges[node];\n            [this.incomingEdges, this.outgoingEdges].forEach(function (edgeList) {\n                Object.keys(edgeList).forEach(function (key) {\n                    var idx = edgeList[key].indexOf(node);\n                    if (idx >= 0) {\n                        edgeList[key].splice(idx, 1);\n                    }\n                }, this);\n            });\n        }\n    };\n    /**\n     * Check if a node exists in the graph\n     */\n    DepGraph.prototype.hasNode = function (node) {\n        return this.nodes.hasOwnProperty(node);\n    };\n    /**\n     * Get the data associated with a node name\n     */\n    DepGraph.prototype.getNodeData = function (node) {\n        if (this.hasNode(node)) {\n            return this.nodes[node];\n        }\n        else {\n            throw new TypeORMError(\"Node does not exist: \" + node);\n        }\n    };\n    /**\n     * Set the associated data for a given node name. If the node does not exist, this method will throw an error\n     */\n    DepGraph.prototype.setNodeData = function (node, data) {\n        if (this.hasNode(node)) {\n            this.nodes[node] = data;\n        }\n        else {\n            throw new TypeORMError(\"Node does not exist: \" + node);\n        }\n    };\n    /**\n     * Add a dependency between two nodes. If either of the nodes does not exist,\n     * an Error will be thrown.\n     */\n    DepGraph.prototype.addDependency = function (from, to) {\n        if (!this.hasNode(from)) {\n            throw new TypeORMError(\"Node does not exist: \" + from);\n        }\n        if (!this.hasNode(to)) {\n            throw new TypeORMError(\"Node does not exist: \" + to);\n        }\n        if (this.outgoingEdges[from].indexOf(to) === -1) {\n            this.outgoingEdges[from].push(to);\n        }\n        if (this.incomingEdges[to].indexOf(from) === -1) {\n            this.incomingEdges[to].push(from);\n        }\n        return true;\n    };\n    /**\n     * Remove a dependency between two nodes.\n     */\n    DepGraph.prototype.removeDependency = function (from, to) {\n        var idx;\n        if (this.hasNode(from)) {\n            idx = this.outgoingEdges[from].indexOf(to);\n            if (idx >= 0) {\n                this.outgoingEdges[from].splice(idx, 1);\n            }\n        }\n        if (this.hasNode(to)) {\n            idx = this.incomingEdges[to].indexOf(from);\n            if (idx >= 0) {\n                this.incomingEdges[to].splice(idx, 1);\n            }\n        }\n    };\n    /**\n     * Get an array containing the nodes that the specified node depends on (transitively).\n     *\n     * Throws an Error if the graph has a cycle, or the specified node does not exist.\n     *\n     * If `leavesOnly` is true, only nodes that do not depend on any other nodes will be returned\n     * in the array.\n     */\n    DepGraph.prototype.dependenciesOf = function (node, leavesOnly) {\n        if (this.hasNode(node)) {\n            var result = [];\n            var DFS = createDFS(this.outgoingEdges, leavesOnly, result);\n            DFS(node);\n            var idx = result.indexOf(node);\n            if (idx >= 0) {\n                result.splice(idx, 1);\n            }\n            return result;\n        }\n        else {\n            throw new TypeORMError(\"Node does not exist: \" + node);\n        }\n    };\n    /**\n     * get an array containing the nodes that depend on the specified node (transitively).\n     *\n     * Throws an Error if the graph has a cycle, or the specified node does not exist.\n     *\n     * If `leavesOnly` is true, only nodes that do not have any dependants will be returned in the array.\n     */\n    DepGraph.prototype.dependantsOf = function (node, leavesOnly) {\n        if (this.hasNode(node)) {\n            var result = [];\n            var DFS = createDFS(this.incomingEdges, leavesOnly, result);\n            DFS(node);\n            var idx = result.indexOf(node);\n            if (idx >= 0) {\n                result.splice(idx, 1);\n            }\n            return result;\n        }\n        else {\n            throw new TypeORMError(\"Node does not exist: \" + node);\n        }\n    };\n    /**\n     * Construct the overall processing order for the dependency graph.\n     *\n     * Throws an Error if the graph has a cycle.\n     *\n     * If `leavesOnly` is true, only nodes that do not depend on any other nodes will be returned.\n     */\n    DepGraph.prototype.overallOrder = function (leavesOnly) {\n        var self = this;\n        var result = [];\n        var keys = Object.keys(this.nodes);\n        if (keys.length === 0) {\n            return result; // Empty graph\n        }\n        else {\n            // Look for cycles - we run the DFS starting at all the nodes in case there\n            // are several disconnected subgraphs inside this dependency graph.\n            var CycleDFS_1 = createDFS(this.outgoingEdges, false, []);\n            keys.forEach(function (n) {\n                CycleDFS_1(n);\n            });\n            var DFS_1 = createDFS(this.outgoingEdges, leavesOnly, result);\n            // Find all potential starting points (nodes with nothing depending on them) an\n            // run a DFS starting at these points to get the order\n            keys.filter(function (node) {\n                return self.incomingEdges[node].length === 0;\n            }).forEach(function (n) {\n                DFS_1(n);\n            });\n            return result;\n        }\n    };\n    return DepGraph;\n}());\nexport { DepGraph };\n\n//# sourceMappingURL=DepGraph.js.map\n","import { MissingPrimaryColumnError } from \"../error/MissingPrimaryColumnError\";\nimport { CircularRelationsError } from \"../error/CircularRelationsError\";\nimport { DepGraph } from \"../util/DepGraph\";\nimport { DataTypeNotSupportedError } from \"../error/DataTypeNotSupportedError\";\nimport { MongoDriver } from \"../driver/mongodb/MongoDriver\";\nimport { SqlServerDriver } from \"../driver/sqlserver/SqlServerDriver\";\nimport { MysqlDriver } from \"../driver/mysql/MysqlDriver\";\nimport { NoConnectionOptionError } from \"../error/NoConnectionOptionError\";\nimport { InitializedRelationError } from \"../error/InitializedRelationError\";\nimport { AuroraDataApiDriver } from \"../driver/aurora-data-api/AuroraDataApiDriver\";\nimport { TypeORMError } from \"../error\";\n/// todo: add check if there are multiple tables with the same name\n/// todo: add checks when generated column / table names are too long for the specific driver\n// todo: type in function validation, inverse side function validation\n// todo: check on build for duplicate names, since naming checking was removed from MetadataStorage\n// todo: duplicate name checking for: table, relation, column, index, naming strategy, join tables/columns?\n// todo: check if multiple tree parent metadatas in validator\n// todo: tree decorators can be used only on closure table (validation)\n// todo: throw error if parent tree metadata was not specified in a closure table\n// todo: MetadataArgsStorage: type in function validation, inverse side function validation\n// todo: MetadataArgsStorage: check on build for duplicate names, since naming checking was removed from MetadataStorage\n// todo: MetadataArgsStorage: duplicate name checking for: table, relation, column, index, naming strategy, join tables/columns?\n// todo: MetadataArgsStorage: check for duplicate targets too since this check has been removed too\n// todo: check if relation decorator contains primary: true and nullable: true\n// todo: check column length, precision. scale\n// todo: MySQL index can be unique or spatial or fulltext\n/**\n * Validates built entity metadatas.\n */\nvar EntityMetadataValidator = /** @class */ (function () {\n    function EntityMetadataValidator() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Validates all given entity metadatas.\n     */\n    EntityMetadataValidator.prototype.validateMany = function (entityMetadatas, driver) {\n        var _this = this;\n        entityMetadatas.forEach(function (entityMetadata) { return _this.validate(entityMetadata, entityMetadatas, driver); });\n        this.validateDependencies(entityMetadatas);\n        this.validateEagerRelations(entityMetadatas);\n    };\n    /**\n     * Validates given entity metadata.\n     */\n    EntityMetadataValidator.prototype.validate = function (entityMetadata, allEntityMetadatas, driver) {\n        // check if table metadata has an id\n        if (!entityMetadata.primaryColumns.length && !entityMetadata.isJunction)\n            throw new MissingPrimaryColumnError(entityMetadata);\n        // validate if table is using inheritance it has a discriminator\n        // also validate if discriminator values are not empty and not repeated\n        if (entityMetadata.inheritancePattern === \"STI\" || entityMetadata.tableType === \"entity-child\") {\n            if (!entityMetadata.discriminatorColumn)\n                throw new TypeORMError(\"Entity \" + entityMetadata.name + \" using single-table inheritance, it should also have a discriminator column. Did you forget to put discriminator column options?\");\n            if (typeof entityMetadata.discriminatorValue === \"undefined\")\n                throw new TypeORMError(\"Entity \" + entityMetadata.name + \" has an undefined discriminator value. Discriminator value should be defined.\");\n            var sameDiscriminatorValueEntityMetadata = allEntityMetadatas.find(function (metadata) {\n                return metadata !== entityMetadata\n                    && (metadata.inheritancePattern === \"STI\" || metadata.tableType === \"entity-child\")\n                    && metadata.discriminatorValue === entityMetadata.discriminatorValue\n                    && metadata.inheritanceTree.some(function (parent) { return entityMetadata.inheritanceTree.indexOf(parent) !== -1; });\n            });\n            if (sameDiscriminatorValueEntityMetadata)\n                throw new TypeORMError(\"Entities \" + entityMetadata.name + \" and \" + sameDiscriminatorValueEntityMetadata.name + \" have the same discriminator values. Make sure they are different while using the @ChildEntity decorator.\");\n        }\n        entityMetadata.relationCounts.forEach(function (relationCount) {\n            if (relationCount.relation.isManyToOne || relationCount.relation.isOneToOne)\n                throw new TypeORMError(\"Relation count can not be implemented on ManyToOne or OneToOne relations.\");\n        });\n        if (!(driver instanceof MongoDriver)) {\n            entityMetadata.columns.forEach(function (column) {\n                var normalizedColumn = driver.normalizeType(column);\n                if (driver.supportedDataTypes.indexOf(normalizedColumn) === -1)\n                    throw new DataTypeNotSupportedError(column, normalizedColumn, driver.options.type);\n                if (column.length && driver.withLengthColumnTypes.indexOf(normalizedColumn) === -1)\n                    throw new TypeORMError(\"Column \" + column.propertyName + \" of Entity \" + entityMetadata.name + \" does not support length property.\");\n                if (column.type === \"enum\" && !column.enum && !column.enumName)\n                    throw new TypeORMError(\"Column \\\"\" + column.propertyName + \"\\\" of Entity \\\"\" + entityMetadata.name + \"\\\" is defined as enum, but missing \\\"enum\\\" or \\\"enumName\\\" properties.\");\n            });\n        }\n        if (driver instanceof MysqlDriver || driver instanceof AuroraDataApiDriver) {\n            var generatedColumns = entityMetadata.columns.filter(function (column) { return column.isGenerated && column.generationStrategy !== \"uuid\"; });\n            if (generatedColumns.length > 1)\n                throw new TypeORMError(\"Error in \" + entityMetadata.name + \" entity. There can be only one auto-increment column in MySql table.\");\n        }\n        // for mysql we are able to not define a default selected database, instead all entities can have their database\n        // defined in their decorators. To make everything work either all entities must have database define and we\n        // can live without database set in the connection options, either database in the connection options must be set\n        if (driver instanceof MysqlDriver) {\n            var metadatasWithDatabase = allEntityMetadatas.filter(function (metadata) { return metadata.database; });\n            if (metadatasWithDatabase.length === 0 && !driver.database)\n                throw new NoConnectionOptionError(\"database\");\n        }\n        if (driver instanceof SqlServerDriver) {\n            var charsetColumns = entityMetadata.columns.filter(function (column) { return column.charset; });\n            if (charsetColumns.length > 1)\n                throw new TypeORMError(\"Character set specifying is not supported in Sql Server\");\n        }\n        // check if relations are all without initialized properties\n        var entityInstance = entityMetadata.create();\n        entityMetadata.relations.forEach(function (relation) {\n            if (relation.isManyToMany || relation.isOneToMany) {\n                // we skip relations for which persistence is disabled since initialization in them cannot harm somehow\n                if (relation.persistenceEnabled === false)\n                    return;\n                // get entity relation value and check if its an array\n                var relationInitializedValue = relation.getEntityValue(entityInstance);\n                if (Array.isArray(relationInitializedValue))\n                    throw new InitializedRelationError(relation);\n            }\n        });\n        // validate relations\n        entityMetadata.relations.forEach(function (relation) {\n            // check join tables:\n            // using JoinTable is possible only on one side of the many-to-many relation\n            // todo(dima): fix\n            // if (relation.joinTable) {\n            //     if (!relation.isManyToMany)\n            //         throw new UsingJoinTableIsNotAllowedError(entityMetadata, relation);\n            //     // if there is inverse side of the relation, then check if it does not have join table too\n            //     if (relation.hasInverseSide && relation.inverseRelation.joinTable)\n            //         throw new UsingJoinTableOnlyOnOneSideAllowedError(entityMetadata, relation);\n            // }\n            // check join columns:\n            // using JoinColumn is possible only on one side of the relation and on one-to-one, many-to-one relation types\n            // first check if relation is one-to-one or many-to-one\n            // todo(dima): fix\n            /*if (relation.joinColumn) {\n\n                // join column can be applied only on one-to-one and many-to-one relations\n                if (!relation.isOneToOne && !relation.isManyToOne)\n                    throw new UsingJoinColumnIsNotAllowedError(entityMetadata, relation);\n\n                // if there is inverse side of the relation, then check if it does not have join table too\n                if (relation.hasInverseSide && relation.inverseRelation.joinColumn && relation.isOneToOne)\n                    throw new UsingJoinColumnOnlyOnOneSideAllowedError(entityMetadata, relation);\n\n                // check if join column really has referenced column\n                if (relation.joinColumn && !relation.joinColumn.referencedColumn)\n                    throw new TypeORMError(`Join column does not have referenced column set`);\n\n            }\n\n            // if its a one-to-one relation and JoinColumn is missing on both sides of the relation\n            // or its one-side relation without JoinColumn we should give an error\n            if (!relation.joinColumn && relation.isOneToOne && (!relation.hasInverseSide || !relation.inverseRelation.joinColumn))\n                throw new MissingJoinColumnError(entityMetadata, relation);*/\n            // if its a many-to-many relation and JoinTable is missing on both sides of the relation\n            // or its one-side relation without JoinTable we should give an error\n            // todo(dima): fix it\n            // if (!relation.joinTable && relation.isManyToMany && (!relation.hasInverseSide || !relation.inverseRelation.joinTable))\n            //     throw new MissingJoinTableError(entityMetadata, relation);\n            // todo: validate if its one-to-one and side which does not have join column MUST have inverse side\n            // todo: validate if its many-to-many and side which does not have join table MUST have inverse side\n            // todo: if there is a relation, and inverse side is specified only on one side, shall we give error\n            // todo: with message like: \"Inverse side is specified only on one side of the relationship. Specify on other side too to prevent confusion\".\n            // todo: add validation if there two entities with the same target, and show error message with description of the problem (maybe file was renamed/moved but left in output directory)\n            // todo: check if there are multiple columns on the same column applied.\n            // todo: check column type if is missing in relational databases (throw new TypeORMError(`Column type of ${type} cannot be determined.`);)\n            // todo: include driver-specific checks. for example in mongodb empty prefixes are not allowed\n            // todo: if multiple columns with same name - throw exception, including cases when columns are in embeds with same prefixes or without prefix at all\n            // todo: if multiple primary key used, at least one of them must be unique or @Index decorator must be set on entity\n            // todo: check if entity with duplicate names, some decorators exist\n        });\n        // make sure cascade remove is not set for both sides of relationships (can be set in OneToOne decorators)\n        entityMetadata.relations.forEach(function (relation) {\n            var isCircularCascadeRemove = relation.isCascadeRemove && relation.inverseRelation && relation.inverseRelation.isCascadeRemove;\n            if (isCircularCascadeRemove)\n                throw new TypeORMError(\"Relation \" + entityMetadata.name + \"#\" + relation.propertyName + \" and \" + relation.inverseRelation.entityMetadata.name + \"#\" + relation.inverseRelation.propertyName + \" both has cascade remove set. \" +\n                    \"This may lead to unexpected circular removals. Please set cascade remove only from one side of relationship.\");\n        }); // todo: maybe better just deny removal from one to one relation without join column?\n        entityMetadata.eagerRelations.forEach(function (relation) {\n        });\n    };\n    /**\n     * Validates dependencies of the entity metadatas.\n     */\n    EntityMetadataValidator.prototype.validateDependencies = function (entityMetadatas) {\n        var graph = new DepGraph();\n        entityMetadatas.forEach(function (entityMetadata) {\n            graph.addNode(entityMetadata.name);\n        });\n        entityMetadatas.forEach(function (entityMetadata) {\n            entityMetadata.relationsWithJoinColumns\n                .filter(function (relation) { return !relation.isNullable; })\n                .forEach(function (relation) {\n                graph.addDependency(entityMetadata.name, relation.inverseEntityMetadata.name);\n            });\n        });\n        try {\n            graph.overallOrder();\n        }\n        catch (err) {\n            throw new CircularRelationsError(err.toString().replace(\"Error: Dependency Cycle Found: \", \"\"));\n        }\n    };\n    /**\n     * Validates eager relations to prevent circular dependency in them.\n     */\n    EntityMetadataValidator.prototype.validateEagerRelations = function (entityMetadatas) {\n        entityMetadatas.forEach(function (entityMetadata) {\n            entityMetadata.eagerRelations.forEach(function (relation) {\n                if (relation.inverseRelation && relation.inverseRelation.isEager)\n                    throw new TypeORMError(\"Circular eager relations are disallowed. \" +\n                        (entityMetadata.targetName + \"#\" + relation.propertyPath + \" contains \\\"eager: true\\\", and its inverse side \") +\n                        (relation.inverseEntityMetadata.targetName + \"#\" + relation.inverseRelation.propertyPath + \" contains \\\"eager: true\\\" as well.\") +\n                        \" Remove \\\"eager: true\\\" from one side of the relation.\");\n            });\n        });\n    };\n    return EntityMetadataValidator;\n}());\nexport { EntityMetadataValidator };\n\n//# sourceMappingURL=EntityMetadataValidator.js.map\n","import { __read, __spreadArray } from \"tslib\";\n/**\n * Repository is supposed to work with your entity objects. Find entities, insert, update, delete, etc.\n */\nvar Repository = /** @class */ (function () {\n    function Repository() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new query builder that can be used to build a sql query.\n     */\n    Repository.prototype.createQueryBuilder = function (alias, queryRunner) {\n        return this.manager.createQueryBuilder(this.metadata.target, alias || this.metadata.targetName, queryRunner || this.queryRunner);\n    };\n    Object.defineProperty(Repository.prototype, \"target\", {\n        /**\n         * Returns object that is managed by this repository.\n         * If this repository manages entity from schema,\n         * then it returns a name of that schema instead.\n         */\n        get: function () {\n            return this.metadata.target;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Checks if entity has an id.\n     * If entity composite compose ids, it will check them all.\n     */\n    Repository.prototype.hasId = function (entity) {\n        return this.manager.hasId(this.metadata.target, entity);\n    };\n    /**\n     * Gets entity mixed id.\n     */\n    Repository.prototype.getId = function (entity) {\n        return this.manager.getId(this.metadata.target, entity);\n    };\n    /**\n     * Creates a new entity instance or instances.\n     * Can copy properties from the given object into new entities.\n     */\n    Repository.prototype.create = function (plainEntityLikeOrPlainEntityLikes) {\n        return this.manager.create(this.metadata.target, plainEntityLikeOrPlainEntityLikes);\n    };\n    /**\n     * Merges multiple entities (or entity-like objects) into a given entity.\n     */\n    Repository.prototype.merge = function (mergeIntoEntity) {\n        var _a;\n        var entityLikes = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            entityLikes[_i - 1] = arguments[_i];\n        }\n        return (_a = this.manager).merge.apply(_a, __spreadArray([this.metadata.target, mergeIntoEntity], __read(entityLikes), false));\n    };\n    /**\n     * Creates a new entity from the given plain javascript object. If entity already exist in the database, then\n     * it loads it (and everything related to it), replaces all values with the new ones from the given object\n     * and returns this new entity. This new entity is actually a loaded from the db entity with all properties\n     * replaced from the new object.\n     *\n     * Note that given entity-like object must have an entity id / primary key to find entity by.\n     * Returns undefined if entity with given id was not found.\n     */\n    Repository.prototype.preload = function (entityLike) {\n        return this.manager.preload(this.metadata.target, entityLike);\n    };\n    /**\n     * Saves one or many given entities.\n     */\n    Repository.prototype.save = function (entityOrEntities, options) {\n        return this.manager.save(this.metadata.target, entityOrEntities, options);\n    };\n    /**\n     * Removes one or many given entities.\n     */\n    Repository.prototype.remove = function (entityOrEntities, options) {\n        return this.manager.remove(this.metadata.target, entityOrEntities, options);\n    };\n    /**\n     * Records the delete date of one or many given entities.\n     */\n    Repository.prototype.softRemove = function (entityOrEntities, options) {\n        return this.manager.softRemove(this.metadata.target, entityOrEntities, options);\n    };\n    /**\n     * Recovers one or many given entities.\n     */\n    Repository.prototype.recover = function (entityOrEntities, options) {\n        return this.manager.recover(this.metadata.target, entityOrEntities, options);\n    };\n    /**\n     * Inserts a given entity into the database.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient INSERT query.\n     * Does not check if entity exist in the database, so query will fail if duplicate entity is being inserted.\n     */\n    Repository.prototype.insert = function (entity) {\n        return this.manager.insert(this.metadata.target, entity);\n    };\n    /**\n     * Updates entity partially. Entity can be found by a given conditions.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient UPDATE query.\n     * Does not check if entity exist in the database.\n     */\n    Repository.prototype.update = function (criteria, partialEntity) {\n        return this.manager.update(this.metadata.target, criteria, partialEntity);\n    };\n    /**\n     * Inserts a given entity into the database, unless a unique constraint conflicts then updates the entity\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient INSERT ... ON CONFLICT DO UPDATE/ON DUPLICATE KEY UPDATE query.\n     */\n    Repository.prototype.upsert = function (entityOrEntities, conflictPathsOrOptions) {\n        return this.manager.upsert(this.metadata.target, entityOrEntities, conflictPathsOrOptions);\n    };\n    /**\n     * Deletes entities by a given criteria.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient DELETE query.\n     * Does not check if entity exist in the database.\n     */\n    Repository.prototype.delete = function (criteria) {\n        return this.manager.delete(this.metadata.target, criteria);\n    };\n    /**\n     * Records the delete date of entities by a given criteria.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient SOFT-DELETE query.\n     * Does not check if entity exist in the database.\n     */\n    Repository.prototype.softDelete = function (criteria) {\n        return this.manager.softDelete(this.metadata.target, criteria);\n    };\n    /**\n     * Restores entities by a given criteria.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient SOFT-DELETE query.\n     * Does not check if entity exist in the database.\n     */\n    Repository.prototype.restore = function (criteria) {\n        return this.manager.restore(this.metadata.target, criteria);\n    };\n    /**\n     * Counts entities that match given find options or conditions.\n     */\n    Repository.prototype.count = function (optionsOrConditions) {\n        return this.manager.count(this.metadata.target, optionsOrConditions);\n    };\n    /**\n     * Finds entities that match given find options or conditions.\n     */\n    Repository.prototype.find = function (optionsOrConditions) {\n        return this.manager.find(this.metadata.target, optionsOrConditions);\n    };\n    /**\n     * Finds entities that match given find options or conditions.\n     * Also counts all entities that match given conditions,\n     * but ignores pagination settings (from and take options).\n     */\n    Repository.prototype.findAndCount = function (optionsOrConditions) {\n        return this.manager.findAndCount(this.metadata.target, optionsOrConditions);\n    };\n    /**\n     * Finds entities by ids.\n     * Optionally find options can be applied.\n     */\n    Repository.prototype.findByIds = function (ids, optionsOrConditions) {\n        return this.manager.findByIds(this.metadata.target, ids, optionsOrConditions);\n    };\n    /**\n     * Finds first entity that matches given conditions.\n     */\n    Repository.prototype.findOne = function (optionsOrConditions, maybeOptions) {\n        return this.manager.findOne(this.metadata.target, optionsOrConditions, maybeOptions);\n    };\n    /**\n     * Finds first entity that matches given conditions.\n     */\n    Repository.prototype.findOneOrFail = function (optionsOrConditions, maybeOptions) {\n        return this.manager.findOneOrFail(this.metadata.target, optionsOrConditions, maybeOptions);\n    };\n    /**\n     * Executes a raw SQL query and returns a raw database results.\n     * Raw query execution is supported only by relational databases (MongoDB is not supported).\n     */\n    Repository.prototype.query = function (query, parameters) {\n        return this.manager.query(query, parameters);\n    };\n    /**\n     * Clears all the data from the given table/collection (truncates/drops it).\n     *\n     * Note: this method uses TRUNCATE and may not work as you expect in transactions on some platforms.\n     * @see https://stackoverflow.com/a/5972738/925151\n     */\n    Repository.prototype.clear = function () {\n        return this.manager.clear(this.metadata.target);\n    };\n    /**\n     * Increments some column by provided value of the entities matched given conditions.\n     */\n    Repository.prototype.increment = function (conditions, propertyPath, value) {\n        return this.manager.increment(this.metadata.target, conditions, propertyPath, value);\n    };\n    /**\n     * Decrements some column by provided value of the entities matched given conditions.\n     */\n    Repository.prototype.decrement = function (conditions, propertyPath, value) {\n        return this.manager.decrement(this.metadata.target, conditions, propertyPath, value);\n    };\n    return Repository;\n}());\nexport { Repository };\n\n//# sourceMappingURL=Repository.js.map\n","import { __read, __spreadArray, __values } from \"tslib\";\nimport { FindRelationsNotFoundError } from \"../error/FindRelationsNotFoundError\";\nimport { DriverUtils } from \"../driver/DriverUtils\";\nimport { TypeORMError } from \"../error\";\n/**\n * Utilities to work with FindOptions.\n */\nvar FindOptionsUtils = /** @class */ (function () {\n    function FindOptionsUtils() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Checks if given object is really instance of FindOneOptions interface.\n     */\n    FindOptionsUtils.isFindOneOptions = function (obj) {\n        var possibleOptions = obj;\n        return possibleOptions &&\n            (Array.isArray(possibleOptions.select) ||\n                possibleOptions.where instanceof Object ||\n                typeof possibleOptions.where === \"string\" ||\n                Array.isArray(possibleOptions.relations) ||\n                possibleOptions.join instanceof Object ||\n                possibleOptions.order instanceof Object ||\n                possibleOptions.cache instanceof Object ||\n                typeof possibleOptions.cache === \"boolean\" ||\n                typeof possibleOptions.cache === \"number\" ||\n                possibleOptions.lock instanceof Object ||\n                possibleOptions.loadRelationIds instanceof Object ||\n                typeof possibleOptions.loadRelationIds === \"boolean\" ||\n                typeof possibleOptions.loadEagerRelations === \"boolean\" ||\n                typeof possibleOptions.withDeleted === \"boolean\" ||\n                typeof possibleOptions.transaction === \"boolean\");\n    };\n    /**\n     * Checks if given object is really instance of FindManyOptions interface.\n     */\n    FindOptionsUtils.isFindManyOptions = function (obj) {\n        var possibleOptions = obj;\n        return possibleOptions && (this.isFindOneOptions(possibleOptions) ||\n            typeof possibleOptions.skip === \"number\" ||\n            typeof possibleOptions.take === \"number\" ||\n            typeof possibleOptions.skip === \"string\" ||\n            typeof possibleOptions.take === \"string\");\n    };\n    /**\n     * Checks if given object is really instance of FindOptions interface.\n     */\n    FindOptionsUtils.extractFindManyOptionsAlias = function (object) {\n        if (this.isFindManyOptions(object) && object.join)\n            return object.join.alias;\n        return undefined;\n    };\n    /**\n     * Applies give find many options to the given query builder.\n     */\n    FindOptionsUtils.applyFindManyOptionsOrConditionsToQueryBuilder = function (qb, options) {\n        if (this.isFindManyOptions(options))\n            return this.applyOptionsToQueryBuilder(qb, options);\n        if (options)\n            return qb.where(options);\n        return qb;\n    };\n    /**\n     * Applies give find options to the given query builder.\n     */\n    FindOptionsUtils.applyOptionsToQueryBuilder = function (qb, options) {\n        // if options are not set then simply return query builder. This is made for simplicity of usage.\n        if (!options || (!this.isFindOneOptions(options) && !this.isFindManyOptions(options)))\n            return qb;\n        if (options.transaction === true) {\n            qb.expressionMap.useTransaction = true;\n        }\n        if (!qb.expressionMap.mainAlias || !qb.expressionMap.mainAlias.hasMetadata)\n            return qb;\n        var metadata = qb.expressionMap.mainAlias.metadata;\n        // apply all options from FindOptions\n        if (options.withDeleted) {\n            qb.withDeleted();\n        }\n        if (options.select) {\n            qb.select([]);\n            options.select.forEach(function (select) {\n                var e_1, _a;\n                if (!metadata.hasColumnWithPropertyPath(\"\" + select))\n                    throw new TypeORMError(select + \" column was not found in the \" + metadata.name + \" entity.\");\n                var columns = metadata.findColumnsWithPropertyPath(\"\" + select);\n                try {\n                    for (var columns_1 = __values(columns), columns_1_1 = columns_1.next(); !columns_1_1.done; columns_1_1 = columns_1.next()) {\n                        var column = columns_1_1.value;\n                        qb.addSelect(qb.alias + \".\" + column.propertyPath);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (columns_1_1 && !columns_1_1.done && (_a = columns_1.return)) _a.call(columns_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            });\n        }\n        if (options.relations) {\n            // Copy because `applyRelationsRecursively` modifies it\n            var allRelations = __spreadArray([], __read(options.relations), false);\n            this.applyRelationsRecursively(qb, allRelations, qb.expressionMap.mainAlias.name, qb.expressionMap.mainAlias.metadata, \"\");\n            // recursive removes found relations from allRelations array\n            // if there are relations left in this array it means those relations were not found in the entity structure\n            // so, we give an exception about not found relations\n            if (allRelations.length > 0)\n                throw new FindRelationsNotFoundError(allRelations);\n        }\n        if (options.join) {\n            if (options.join.leftJoin)\n                Object.keys(options.join.leftJoin).forEach(function (key) {\n                    qb.leftJoin(options.join.leftJoin[key], key);\n                });\n            if (options.join.innerJoin)\n                Object.keys(options.join.innerJoin).forEach(function (key) {\n                    qb.innerJoin(options.join.innerJoin[key], key);\n                });\n            if (options.join.leftJoinAndSelect)\n                Object.keys(options.join.leftJoinAndSelect).forEach(function (key) {\n                    qb.leftJoinAndSelect(options.join.leftJoinAndSelect[key], key);\n                });\n            if (options.join.innerJoinAndSelect)\n                Object.keys(options.join.innerJoinAndSelect).forEach(function (key) {\n                    qb.innerJoinAndSelect(options.join.innerJoinAndSelect[key], key);\n                });\n        }\n        if (options.cache) {\n            if (options.cache instanceof Object) {\n                var cache = options.cache;\n                qb.cache(cache.id, cache.milliseconds);\n            }\n            else {\n                qb.cache(options.cache);\n            }\n        }\n        if (options.lock) {\n            if (options.lock.mode === \"optimistic\") {\n                qb.setLock(options.lock.mode, options.lock.version);\n            }\n            else if (options.lock.mode === \"pessimistic_read\" ||\n                options.lock.mode === \"pessimistic_write\" ||\n                options.lock.mode === \"dirty_read\" ||\n                options.lock.mode === \"pessimistic_partial_write\" ||\n                options.lock.mode === \"pessimistic_write_or_fail\" ||\n                options.lock.mode === \"for_no_key_update\") {\n                var tableNames = options.lock.tables ? options.lock.tables.map(function (table) {\n                    var tableAlias = qb.expressionMap.aliases.find(function (alias) {\n                        return alias.metadata.tableNameWithoutPrefix === table;\n                    });\n                    if (!tableAlias) {\n                        throw new TypeORMError(\"\\\"\" + table + \"\\\" is not part of this query\");\n                    }\n                    return qb.escape(tableAlias.name);\n                }) : undefined;\n                qb.setLock(options.lock.mode, undefined, tableNames);\n            }\n        }\n        if (options.loadRelationIds === true) {\n            qb.loadAllRelationIds();\n        }\n        else if (options.loadRelationIds instanceof Object) {\n            qb.loadAllRelationIds(options.loadRelationIds);\n        }\n        if (options.where)\n            qb.where(options.where);\n        if (options.skip)\n            qb.skip(options.skip);\n        if (options.take)\n            qb.take(options.take);\n        if (options.order)\n            Object.keys(options.order).forEach(function (key) {\n                var order = options.order[key];\n                if (!metadata.findColumnWithPropertyPath(key))\n                    throw new Error(key + \" column was not found in the \" + metadata.name + \" entity.\");\n                switch (order) {\n                    case 1:\n                        qb.addOrderBy(qb.alias + \".\" + key, \"ASC\");\n                        break;\n                    case -1:\n                        qb.addOrderBy(qb.alias + \".\" + key, \"DESC\");\n                        break;\n                    case \"ASC\":\n                        qb.addOrderBy(qb.alias + \".\" + key, \"ASC\");\n                        break;\n                    case \"DESC\":\n                        qb.addOrderBy(qb.alias + \".\" + key, \"DESC\");\n                        break;\n                }\n            });\n        return qb;\n    };\n    FindOptionsUtils.applyOptionsToTreeQueryBuilder = function (qb, options) {\n        if (options === null || options === void 0 ? void 0 : options.relations) {\n            // Copy because `applyRelationsRecursively` modifies it\n            var allRelations = __spreadArray([], __read(options.relations), false);\n            FindOptionsUtils.applyRelationsRecursively(qb, allRelations, qb.expressionMap.mainAlias.name, qb.expressionMap.mainAlias.metadata, \"\");\n            // recursive removes found relations from allRelations array\n            // if there are relations left in this array it means those relations were not found in the entity structure\n            // so, we give an exception about not found relations\n            if (allRelations.length > 0)\n                throw new FindRelationsNotFoundError(allRelations);\n        }\n        return qb;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Adds joins for all relations and sub-relations of the given relations provided in the find options.\n     */\n    FindOptionsUtils.applyRelationsRecursively = function (qb, allRelations, alias, metadata, prefix) {\n        var _this = this;\n        // find all relations that match given prefix\n        var matchedBaseRelations = [];\n        if (prefix) {\n            var regexp_1 = new RegExp(\"^\" + prefix.replace(\".\", \"\\\\.\") + \"\\\\.\");\n            matchedBaseRelations = allRelations\n                .filter(function (relation) { return relation.match(regexp_1); })\n                .map(function (relation) { return relation.replace(regexp_1, \"\"); })\n                .filter(function (relation) { return metadata.findRelationWithPropertyPath(relation); });\n        }\n        else {\n            matchedBaseRelations = allRelations.filter(function (relation) { return metadata.findRelationWithPropertyPath(relation); });\n        }\n        // go through all matched relations and add join for them\n        matchedBaseRelations.forEach(function (relation) {\n            // generate a relation alias\n            var relationAlias = DriverUtils.buildAlias(qb.connection.driver, { shorten: true, joiner: \"__\" }, alias, relation);\n            // add a join for the found relation\n            var selection = alias + \".\" + relation;\n            qb.leftJoinAndSelect(selection, relationAlias);\n            // remove added relations from the allRelations array, this is needed to find all not found relations at the end\n            allRelations.splice(allRelations.indexOf(prefix ? prefix + \".\" + relation : relation), 1);\n            // try to find sub-relations\n            var join = qb.expressionMap.joinAttributes.find(function (join) { return join.entityOrProperty === selection; });\n            _this.applyRelationsRecursively(qb, allRelations, join.alias.name, join.metadata, prefix ? prefix + \".\" + relation : relation);\n            // join the eager relations of the found relation\n            var relMetadata = metadata.relations.find(function (metadata) { return metadata.propertyName === relation; });\n            if (relMetadata) {\n                _this.joinEagerRelations(qb, relationAlias, relMetadata.inverseEntityMetadata);\n            }\n        });\n    };\n    FindOptionsUtils.joinEagerRelations = function (qb, alias, metadata) {\n        var _this = this;\n        metadata.eagerRelations.forEach(function (relation) {\n            var e_2, _a, e_3, _b;\n            // generate a relation alias\n            var relationAlias = DriverUtils.buildAlias(qb.connection.driver, { shorten: true }, qb.connection.namingStrategy.eagerJoinRelationAlias(alias, relation.propertyPath));\n            // add a join for the relation\n            // Checking whether the relation wasn't joined yet.\n            var addJoin = true;\n            try {\n                for (var _c = __values(qb.expressionMap.joinAttributes), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var join = _d.value;\n                    if (join.condition !== undefined ||\n                        join.mapToProperty !== undefined ||\n                        join.isMappingMany !== undefined ||\n                        join.direction !== \"LEFT\" ||\n                        join.entityOrProperty !== alias + \".\" + relation.propertyPath) {\n                        continue;\n                    }\n                    addJoin = false;\n                    relationAlias = join.alias.name;\n                    break;\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            if (addJoin) {\n                qb.leftJoin(alias + \".\" + relation.propertyPath, relationAlias);\n            }\n            // Checking whether the relation wasn't selected yet.\n            // This check shall be after the join check to detect relationAlias.\n            var addSelect = true;\n            try {\n                for (var _e = __values(qb.expressionMap.selects), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var select = _f.value;\n                    if (select.aliasName !== undefined || select.virtual !== undefined || select.selection !== relationAlias) {\n                        continue;\n                    }\n                    addSelect = false;\n                    break;\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            if (addSelect) {\n                qb.addSelect(relationAlias);\n            }\n            // (recursive) join the eager relations\n            _this.joinEagerRelations(qb, relationAlias, relation.inverseEntityMetadata);\n        });\n    };\n    return FindOptionsUtils;\n}());\nexport { FindOptionsUtils };\n\n//# sourceMappingURL=FindOptionsUtils.js.map\n","import { __assign, __awaiter, __extends, __generator } from \"tslib\";\nimport { Repository } from \"./Repository\";\nimport { AbstractSqliteDriver } from \"../driver/sqlite-abstract/AbstractSqliteDriver\";\nimport { TypeORMError } from \"../error/TypeORMError\";\nimport { FindOptionsUtils } from \"../find-options/FindOptionsUtils\";\n/**\n * Repository with additional functions to work with trees.\n *\n * @see Repository\n */\nvar TreeRepository = /** @class */ (function (_super) {\n    __extends(TreeRepository, _super);\n    function TreeRepository() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets complete trees for all roots in the table.\n     */\n    TreeRepository.prototype.findTrees = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var roots;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.findRoots(options)];\n                    case 1:\n                        roots = _a.sent();\n                        return [4 /*yield*/, Promise.all(roots.map(function (root) { return _this.findDescendantsTree(root, options); }))];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/, roots];\n                }\n            });\n        });\n    };\n    /**\n     * Roots are entities that have no ancestors. Finds them all.\n     */\n    TreeRepository.prototype.findRoots = function (options) {\n        var _this = this;\n        var escapeAlias = function (alias) { return _this.manager.connection.driver.escape(alias); };\n        var escapeColumn = function (column) { return _this.manager.connection.driver.escape(column); };\n        var parentPropertyName = this.manager.connection.namingStrategy.joinColumnName(this.metadata.treeParentRelation.propertyName, this.metadata.primaryColumns[0].propertyName);\n        var qb = this.createQueryBuilder(\"treeEntity\");\n        FindOptionsUtils.applyOptionsToTreeQueryBuilder(qb, options);\n        return qb\n            .where(escapeAlias(\"treeEntity\") + \".\" + escapeColumn(parentPropertyName) + \" IS NULL\")\n            .getMany();\n    };\n    /**\n     * Gets all children (descendants) of the given entity. Returns them all in a flat array.\n     */\n    TreeRepository.prototype.findDescendants = function (entity, options) {\n        var qb = this.createDescendantsQueryBuilder(\"treeEntity\", \"treeClosure\", entity);\n        FindOptionsUtils.applyOptionsToTreeQueryBuilder(qb, options);\n        return qb.getMany();\n    };\n    /**\n     * Gets all children (descendants) of the given entity. Returns them in a tree - nested into each other.\n     */\n    TreeRepository.prototype.findDescendantsTree = function (entity, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var qb, entities, relationMaps;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        qb = this.createDescendantsQueryBuilder(\"treeEntity\", \"treeClosure\", entity);\n                        FindOptionsUtils.applyOptionsToTreeQueryBuilder(qb, options);\n                        return [4 /*yield*/, qb.getRawAndEntities()];\n                    case 1:\n                        entities = _a.sent();\n                        relationMaps = this.createRelationMaps(\"treeEntity\", entities.raw);\n                        this.buildChildrenEntityTree(entity, entities.entities, relationMaps, __assign({ depth: -1 }, options));\n                        return [2 /*return*/, entity];\n                }\n            });\n        });\n    };\n    /**\n     * Gets number of descendants of the entity.\n     */\n    TreeRepository.prototype.countDescendants = function (entity) {\n        return this\n            .createDescendantsQueryBuilder(\"treeEntity\", \"treeClosure\", entity)\n            .getCount();\n    };\n    /**\n     * Creates a query builder used to get descendants of the entities in a tree.\n     */\n    TreeRepository.prototype.createDescendantsQueryBuilder = function (alias, closureTableAlias, entity) {\n        var _this = this;\n        // create shortcuts for better readability\n        var escape = function (alias) { return _this.manager.connection.driver.escape(alias); };\n        if (this.metadata.treeType === \"closure-table\") {\n            var joinCondition = this.metadata.closureJunctionTable.descendantColumns.map(function (column) {\n                return escape(closureTableAlias) + \".\" + escape(column.propertyPath) + \" = \" + escape(alias) + \".\" + escape(column.referencedColumn.propertyPath);\n            }).join(\" AND \");\n            var parameters_1 = {};\n            var whereCondition = this.metadata.closureJunctionTable.ancestorColumns.map(function (column) {\n                parameters_1[column.referencedColumn.propertyName] = column.referencedColumn.getEntityValue(entity);\n                return escape(closureTableAlias) + \".\" + escape(column.propertyPath) + \" = :\" + column.referencedColumn.propertyName;\n            }).join(\" AND \");\n            return this\n                .createQueryBuilder(alias)\n                .innerJoin(this.metadata.closureJunctionTable.tableName, closureTableAlias, joinCondition)\n                .where(whereCondition)\n                .setParameters(parameters_1);\n        }\n        else if (this.metadata.treeType === \"nested-set\") {\n            var whereCondition = alias + \".\" + this.metadata.nestedSetLeftColumn.propertyPath + \" BETWEEN \" +\n                \"joined.\" + this.metadata.nestedSetLeftColumn.propertyPath + \" AND joined.\" + this.metadata.nestedSetRightColumn.propertyPath;\n            var parameters_2 = {};\n            var joinCondition = this.metadata.treeParentRelation.joinColumns.map(function (joinColumn) {\n                var parameterName = joinColumn.referencedColumn.propertyPath.replace(\".\", \"_\");\n                parameters_2[parameterName] = joinColumn.referencedColumn.getEntityValue(entity);\n                return \"joined.\" + joinColumn.referencedColumn.propertyPath + \" = :\" + parameterName;\n            }).join(\" AND \");\n            return this\n                .createQueryBuilder(alias)\n                .innerJoin(this.metadata.targetName, \"joined\", whereCondition)\n                .where(joinCondition, parameters_2);\n        }\n        else if (this.metadata.treeType === \"materialized-path\") {\n            return this\n                .createQueryBuilder(alias)\n                .where(function (qb) {\n                var subQuery = qb.subQuery()\n                    .select(_this.metadata.targetName + \".\" + _this.metadata.materializedPathColumn.propertyPath, \"path\")\n                    .from(_this.metadata.target, _this.metadata.targetName)\n                    .whereInIds(_this.metadata.getEntityIdMap(entity));\n                if (_this.manager.connection.driver instanceof AbstractSqliteDriver) {\n                    return alias + \".\" + _this.metadata.materializedPathColumn.propertyPath + \" LIKE \" + subQuery.getQuery() + \" || '%'\";\n                }\n                else {\n                    return alias + \".\" + _this.metadata.materializedPathColumn.propertyPath + \" LIKE CONCAT(\" + subQuery.getQuery() + \", '%')\";\n                }\n            });\n        }\n        throw new TypeORMError(\"Supported only in tree entities\");\n    };\n    /**\n     * Gets all parents (ancestors) of the given entity. Returns them all in a flat array.\n     */\n    TreeRepository.prototype.findAncestors = function (entity, options) {\n        var qb = this.createAncestorsQueryBuilder(\"treeEntity\", \"treeClosure\", entity);\n        FindOptionsUtils.applyOptionsToTreeQueryBuilder(qb, options);\n        return qb.getMany();\n    };\n    /**\n     * Gets all parents (ancestors) of the given entity. Returns them in a tree - nested into each other.\n     */\n    TreeRepository.prototype.findAncestorsTree = function (entity, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var qb, entities, relationMaps;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        qb = this.createAncestorsQueryBuilder(\"treeEntity\", \"treeClosure\", entity);\n                        FindOptionsUtils.applyOptionsToTreeQueryBuilder(qb, options);\n                        return [4 /*yield*/, qb.getRawAndEntities()];\n                    case 1:\n                        entities = _a.sent();\n                        relationMaps = this.createRelationMaps(\"treeEntity\", entities.raw);\n                        this.buildParentEntityTree(entity, entities.entities, relationMaps);\n                        return [2 /*return*/, entity];\n                }\n            });\n        });\n    };\n    /**\n     * Gets number of ancestors of the entity.\n     */\n    TreeRepository.prototype.countAncestors = function (entity) {\n        return this\n            .createAncestorsQueryBuilder(\"treeEntity\", \"treeClosure\", entity)\n            .getCount();\n    };\n    /**\n     * Creates a query builder used to get ancestors of the entities in the tree.\n     */\n    TreeRepository.prototype.createAncestorsQueryBuilder = function (alias, closureTableAlias, entity) {\n        // create shortcuts for better readability\n        // const escape = (alias: string) => this.manager.connection.driver.escape(alias);\n        var _this = this;\n        if (this.metadata.treeType === \"closure-table\") {\n            var joinCondition = this.metadata.closureJunctionTable.ancestorColumns.map(function (column) {\n                return closureTableAlias + \".\" + column.propertyPath + \" = \" + alias + \".\" + column.referencedColumn.propertyPath;\n            }).join(\" AND \");\n            var parameters_3 = {};\n            var whereCondition = this.metadata.closureJunctionTable.descendantColumns.map(function (column) {\n                parameters_3[column.referencedColumn.propertyName] = column.referencedColumn.getEntityValue(entity);\n                return closureTableAlias + \".\" + column.propertyPath + \" = :\" + column.referencedColumn.propertyName;\n            }).join(\" AND \");\n            return this\n                .createQueryBuilder(alias)\n                .innerJoin(this.metadata.closureJunctionTable.tableName, closureTableAlias, joinCondition)\n                .where(whereCondition)\n                .setParameters(parameters_3);\n        }\n        else if (this.metadata.treeType === \"nested-set\") {\n            var joinCondition = \"joined.\" + this.metadata.nestedSetLeftColumn.propertyPath + \" BETWEEN \" +\n                alias + \".\" + this.metadata.nestedSetLeftColumn.propertyPath + \" AND \" + alias + \".\" + this.metadata.nestedSetRightColumn.propertyPath;\n            var parameters_4 = {};\n            var whereCondition = this.metadata.treeParentRelation.joinColumns.map(function (joinColumn) {\n                var parameterName = joinColumn.referencedColumn.propertyPath.replace(\".\", \"_\");\n                parameters_4[parameterName] = joinColumn.referencedColumn.getEntityValue(entity);\n                return \"joined.\" + joinColumn.referencedColumn.propertyPath + \" = :\" + parameterName;\n            }).join(\" AND \");\n            return this\n                .createQueryBuilder(alias)\n                .innerJoin(this.metadata.targetName, \"joined\", joinCondition)\n                .where(whereCondition, parameters_4);\n        }\n        else if (this.metadata.treeType === \"materialized-path\") {\n            // example: SELECT * FROM category category WHERE (SELECT mpath FROM `category` WHERE id = 2) LIKE CONCAT(category.mpath, '%');\n            return this\n                .createQueryBuilder(alias)\n                .where(function (qb) {\n                var subQuery = qb.subQuery()\n                    .select(_this.metadata.targetName + \".\" + _this.metadata.materializedPathColumn.propertyPath, \"path\")\n                    .from(_this.metadata.target, _this.metadata.targetName)\n                    .whereInIds(_this.metadata.getEntityIdMap(entity));\n                if (_this.manager.connection.driver instanceof AbstractSqliteDriver) {\n                    return subQuery.getQuery() + \" LIKE \" + alias + \".\" + _this.metadata.materializedPathColumn.propertyPath + \" || '%'\";\n                }\n                else {\n                    return subQuery.getQuery() + \" LIKE CONCAT(\" + alias + \".\" + _this.metadata.materializedPathColumn.propertyPath + \", '%')\";\n                }\n            });\n        }\n        throw new TypeORMError(\"Supported only in tree entities\");\n    };\n    /**\n     * Moves entity to the children of then given entity.\n     *\n    move(entity: Entity, to: Entity): Promise<void> {\n        return Promise.resolve();\n    } */\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    TreeRepository.prototype.createRelationMaps = function (alias, rawResults) {\n        var _this = this;\n        return rawResults.map(function (rawResult) {\n            var joinColumn = _this.metadata.treeParentRelation.joinColumns[0];\n            // fixes issue #2518, default to databaseName property when givenDatabaseName is not set\n            var joinColumnName = joinColumn.givenDatabaseName || joinColumn.databaseName;\n            var id = rawResult[alias + \"_\" + _this.metadata.primaryColumns[0].databaseName];\n            var parentId = rawResult[alias + \"_\" + joinColumnName];\n            return {\n                id: _this.manager.connection.driver.prepareHydratedValue(id, _this.metadata.primaryColumns[0]),\n                parentId: _this.manager.connection.driver.prepareHydratedValue(parentId, joinColumn),\n            };\n        });\n    };\n    TreeRepository.prototype.buildChildrenEntityTree = function (entity, entities, relationMaps, options) {\n        var _this = this;\n        var childProperty = this.metadata.treeChildrenRelation.propertyName;\n        if (options.depth === 0) {\n            entity[childProperty] = [];\n            return;\n        }\n        var parentEntityId = this.metadata.primaryColumns[0].getEntityValue(entity);\n        var childRelationMaps = relationMaps.filter(function (relationMap) { return relationMap.parentId === parentEntityId; });\n        var childIds = new Set(childRelationMaps.map(function (relationMap) { return relationMap.id; }));\n        entity[childProperty] = entities.filter(function (entity) { return childIds.has(_this.metadata.primaryColumns[0].getEntityValue(entity)); });\n        entity[childProperty].forEach(function (childEntity) {\n            _this.buildChildrenEntityTree(childEntity, entities, relationMaps, __assign(__assign({}, options), { depth: options.depth - 1 }));\n        });\n    };\n    TreeRepository.prototype.buildParentEntityTree = function (entity, entities, relationMaps) {\n        var _this = this;\n        var parentProperty = this.metadata.treeParentRelation.propertyName;\n        var entityId = this.metadata.primaryColumns[0].getEntityValue(entity);\n        var parentRelationMap = relationMaps.find(function (relationMap) { return relationMap.id === entityId; });\n        var parentEntity = entities.find(function (entity) {\n            if (!parentRelationMap)\n                return false;\n            return _this.metadata.primaryColumns[0].getEntityValue(entity) === parentRelationMap.parentId;\n        });\n        if (parentEntity) {\n            entity[parentProperty] = parentEntity;\n            this.buildParentEntityTree(entity[parentProperty], entities, relationMaps);\n        }\n    };\n    return TreeRepository;\n}(Repository));\nexport { TreeRepository };\n\n//# sourceMappingURL=TreeRepository.js.map\n","/**\n * Transforms plain old javascript object\n * Entity is constructed based on its entity metadata.\n */\nvar PlainObjectToNewEntityTransformer = /** @class */ (function () {\n    function PlainObjectToNewEntityTransformer() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    PlainObjectToNewEntityTransformer.prototype.transform = function (newEntity, object, metadata, getLazyRelationsPromiseValue) {\n        if (getLazyRelationsPromiseValue === void 0) { getLazyRelationsPromiseValue = false; }\n        // console.log(\"groupAndTransform entity:\", newEntity);\n        // console.log(\"groupAndTransform object:\", object);\n        this.groupAndTransform(newEntity, object, metadata, getLazyRelationsPromiseValue);\n        // console.log(\"result:\", newEntity);\n        return newEntity;\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Since db returns a duplicated rows of the data where accuracies of the same object can be duplicated\n     * we need to group our result and we must have some unique id (primary key in our case)\n     */\n    PlainObjectToNewEntityTransformer.prototype.groupAndTransform = function (entity, object, metadata, getLazyRelationsPromiseValue) {\n        // console.log(\"groupAndTransform entity:\", entity);\n        // console.log(\"groupAndTransform object:\", object);\n        var _this = this;\n        if (getLazyRelationsPromiseValue === void 0) { getLazyRelationsPromiseValue = false; }\n        // copy regular column properties from the given object\n        metadata.nonVirtualColumns.forEach(function (column) {\n            var objectColumnValue = column.getEntityValue(object);\n            if (objectColumnValue !== undefined)\n                column.setEntityValue(entity, objectColumnValue);\n        });\n        // // copy relation properties from the given object\n        if (metadata.relations.length) {\n            metadata.relations.forEach(function (relation) {\n                var entityRelatedValue = relation.getEntityValue(entity);\n                var objectRelatedValue = relation.getEntityValue(object, getLazyRelationsPromiseValue);\n                if (objectRelatedValue === undefined)\n                    return;\n                if (relation.isOneToMany || relation.isManyToMany) {\n                    if (!Array.isArray(objectRelatedValue))\n                        return;\n                    if (!entityRelatedValue) {\n                        entityRelatedValue = [];\n                        relation.setEntityValue(entity, entityRelatedValue);\n                    }\n                    objectRelatedValue.forEach(function (objectRelatedValueItem) {\n                        // check if we have this item from the merging object in the original entity we merge into\n                        var objectRelatedValueEntity = entityRelatedValue.find(function (entityRelatedValueItem) {\n                            return relation.inverseEntityMetadata.compareEntities(objectRelatedValueItem, entityRelatedValueItem);\n                        });\n                        // if such item already exist then merge new data into it, if its not we create a new entity and merge it into the array\n                        if (!objectRelatedValueEntity) {\n                            objectRelatedValueEntity = relation.inverseEntityMetadata.create(undefined, { fromDeserializer: true });\n                            entityRelatedValue.push(objectRelatedValueEntity);\n                        }\n                        _this.groupAndTransform(objectRelatedValueEntity, objectRelatedValueItem, relation.inverseEntityMetadata, getLazyRelationsPromiseValue);\n                    });\n                }\n                else {\n                    // if related object isn't an object (direct relation id for example)\n                    // we just set it to the entity relation, we don't need anything more from it\n                    // however we do it only if original entity does not have this relation set to object\n                    // to prevent full overriding of objects\n                    if (!(objectRelatedValue instanceof Object)) {\n                        if (!(entityRelatedValue instanceof Object))\n                            relation.setEntityValue(entity, objectRelatedValue);\n                        return;\n                    }\n                    if (!entityRelatedValue) {\n                        entityRelatedValue = relation.inverseEntityMetadata.create(undefined, { fromDeserializer: true });\n                        relation.setEntityValue(entity, entityRelatedValue);\n                    }\n                    _this.groupAndTransform(entityRelatedValue, objectRelatedValue, relation.inverseEntityMetadata, getLazyRelationsPromiseValue);\n                }\n            });\n        }\n    };\n    return PlainObjectToNewEntityTransformer;\n}());\nexport { PlainObjectToNewEntityTransformer };\n\n//# sourceMappingURL=PlainObjectToNewEntityTransformer.js.map\n","import { __awaiter, __generator, __read } from \"tslib\";\n/**\n */\nvar LoadMapItem = /** @class */ (function () {\n    function LoadMapItem(plainEntity, metadata, parentLoadMapItem, relation) {\n        this.plainEntity = plainEntity;\n        this.metadata = metadata;\n        this.parentLoadMapItem = parentLoadMapItem;\n        this.relation = relation;\n    }\n    Object.defineProperty(LoadMapItem.prototype, \"target\", {\n        get: function () {\n            return this.metadata.target;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LoadMapItem.prototype, \"id\", {\n        get: function () {\n            return this.metadata.getEntityIdMixedMap(this.plainEntity);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return LoadMapItem;\n}());\nvar LoadMap = /** @class */ (function () {\n    function LoadMap() {\n        this.loadMapItems = [];\n    }\n    Object.defineProperty(LoadMap.prototype, \"mainLoadMapItem\", {\n        get: function () {\n            return this.loadMapItems.find(function (item) { return !item.relation && !item.parentLoadMapItem; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LoadMap.prototype.addLoadMap = function (newLoadMap) {\n        var item = this.loadMapItems.find(function (item) { return item.target === newLoadMap.target && item.id === newLoadMap.id; });\n        if (!item)\n            this.loadMapItems.push(newLoadMap);\n    };\n    LoadMap.prototype.fillEntities = function (target, entities) {\n        var _this = this;\n        entities.forEach(function (entity) {\n            var item = _this.loadMapItems.find(function (loadMapItem) {\n                return loadMapItem.target === target && loadMapItem.metadata.compareEntities(entity, loadMapItem.plainEntity);\n            });\n            if (item)\n                item.entity = entity;\n        });\n    };\n    LoadMap.prototype.groupByTargetIds = function () {\n        var groups = [];\n        this.loadMapItems.forEach(function (loadMapItem) {\n            var group = groups.find(function (group) { return group.target === loadMapItem.target; });\n            if (!group) {\n                group = { target: loadMapItem.target, ids: [] };\n                groups.push(group);\n            }\n            group.ids.push(loadMapItem.id);\n        });\n        return groups;\n    };\n    return LoadMap;\n}());\n/**\n * Transforms plain old javascript object\n * Entity is constructed based on its entity metadata.\n */\nvar PlainObjectToDatabaseEntityTransformer = /** @class */ (function () {\n    function PlainObjectToDatabaseEntityTransformer(manager) {\n        this.manager = manager;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    PlainObjectToDatabaseEntityTransformer.prototype.transform = function (plainObject, metadata) {\n        return __awaiter(this, void 0, void 0, function () {\n            var loadMap, fillLoadMap;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // if plain object does not have id then nothing to load really\n                        if (!metadata.hasAllPrimaryKeys(plainObject))\n                            return [2 /*return*/, Promise.reject(\"Given object does not have a primary column, cannot transform it to database entity.\")];\n                        loadMap = new LoadMap();\n                        fillLoadMap = function (entity, entityMetadata, parentLoadMapItem, relation) {\n                            var item = new LoadMapItem(entity, entityMetadata, parentLoadMapItem, relation);\n                            loadMap.addLoadMap(item);\n                            entityMetadata\n                                .extractRelationValuesFromEntity(entity, metadata.relations)\n                                .filter(function (value) { return value !== null && value !== undefined; })\n                                .forEach(function (_a) {\n                                var _b = __read(_a, 3), relation = _b[0], value = _b[1], inverseEntityMetadata = _b[2];\n                                return fillLoadMap(value, inverseEntityMetadata, item, relation);\n                            });\n                        };\n                        fillLoadMap(plainObject, metadata);\n                        // load all entities and store them in the load map\n                        return [4 /*yield*/, Promise.all(loadMap.groupByTargetIds().map(function (targetWithIds) {\n                                return _this.manager\n                                    .findByIds(targetWithIds.target, targetWithIds.ids)\n                                    .then(function (entities) { return loadMap.fillEntities(targetWithIds.target, entities); });\n                            }))];\n                    case 1:\n                        // load all entities and store them in the load map\n                        _a.sent();\n                        // go through each item in the load map and set their entity relationship using metadata stored in load map\n                        loadMap.loadMapItems.forEach(function (loadMapItem) {\n                            if (!loadMapItem.relation ||\n                                !loadMapItem.entity ||\n                                !loadMapItem.parentLoadMapItem ||\n                                !loadMapItem.parentLoadMapItem.entity)\n                                return;\n                            if (loadMapItem.relation.isManyToMany || loadMapItem.relation.isOneToMany) {\n                                if (!loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName])\n                                    loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName] = [];\n                                loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName].push(loadMapItem.entity);\n                            }\n                            else {\n                                loadMapItem.parentLoadMapItem.entity[loadMapItem.relation.propertyName] = loadMapItem.entity;\n                            }\n                        });\n                        return [2 /*return*/, loadMap.mainLoadMapItem ? loadMap.mainLoadMapItem.entity : undefined];\n                }\n            });\n        });\n    };\n    return PlainObjectToDatabaseEntityTransformer;\n}());\nexport { PlainObjectToDatabaseEntityTransformer };\n\n//# sourceMappingURL=PlainObjectToDatabaseEntityTransformer.js.map\n","import { CustomRepositoryDoesNotHaveEntityError } from \"../error/CustomRepositoryDoesNotHaveEntityError\";\nimport { getMetadataArgsStorage } from \"../globals\";\nimport { CustomRepositoryNotFoundError } from \"../error/CustomRepositoryNotFoundError\";\n/**\n * Provides abstract class for custom repositories that do not inherit from original orm Repository.\n * Contains all most-necessary methods to simplify code in the custom repository.\n * All methods are protected thus not exposed and it allows to create encapsulated custom repository.\n *\n * @experimental\n */\nvar AbstractRepository = /** @class */ (function () {\n    function AbstractRepository() {\n    }\n    Object.defineProperty(AbstractRepository.prototype, \"repository\", {\n        // -------------------------------------------------------------------------\n        // Protected Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Gets the original ORM repository for the entity that is managed by this repository.\n         * If current repository does not manage any entity, then exception will be thrown.\n         */\n        get: function () {\n            var target = this.getCustomRepositoryTarget(this);\n            if (!target)\n                throw new CustomRepositoryDoesNotHaveEntityError(this.constructor);\n            return this.manager.getRepository(target);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractRepository.prototype, \"treeRepository\", {\n        /**\n         * Gets the original ORM tree repository for the entity that is managed by this repository.\n         * If current repository does not manage any entity, then exception will be thrown.\n         */\n        get: function () {\n            var target = this.getCustomRepositoryTarget(this);\n            if (!target)\n                throw new CustomRepositoryDoesNotHaveEntityError(this.constructor);\n            return this.manager.getTreeRepository(target);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new query builder for the repository's entity that can be used to build a sql query.\n     * If current repository does not manage any entity, then exception will be thrown.\n     */\n    AbstractRepository.prototype.createQueryBuilder = function (alias) {\n        var target = this.getCustomRepositoryTarget(this.constructor);\n        if (!target)\n            throw new CustomRepositoryDoesNotHaveEntityError(this.constructor);\n        return this.manager.getRepository(target).createQueryBuilder(alias);\n    };\n    /**\n     * Creates a new query builder for the given entity that can be used to build a sql query.\n     */\n    AbstractRepository.prototype.createQueryBuilderFor = function (entity, alias) {\n        return this.getRepositoryFor(entity).createQueryBuilder(alias);\n    };\n    /**\n     * Gets the original ORM repository for the given entity class.\n     */\n    AbstractRepository.prototype.getRepositoryFor = function (entity) {\n        return this.manager.getRepository(entity);\n    };\n    /**\n     * Gets the original ORM tree repository for the given entity class.\n     */\n    AbstractRepository.prototype.getTreeRepositoryFor = function (entity) {\n        return this.manager.getTreeRepository(entity);\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets custom repository's managed entity.\n     * If given custom repository does not manage any entity then undefined will be returned.\n     */\n    AbstractRepository.prototype.getCustomRepositoryTarget = function (customRepository) {\n        var entityRepositoryMetadataArgs = getMetadataArgsStorage().entityRepositories.find(function (repository) {\n            return repository.target === (customRepository instanceof Function ? customRepository : customRepository.constructor);\n        });\n        if (!entityRepositoryMetadataArgs)\n            throw new CustomRepositoryNotFoundError(customRepository);\n        return entityRepositoryMetadataArgs.entity;\n    };\n    return AbstractRepository;\n}());\nexport { AbstractRepository };\n\n//# sourceMappingURL=AbstractRepository.js.map\n","import { TreeRepository } from \"./TreeRepository\";\nimport { Repository } from \"./Repository\";\nimport { MongoDriver } from \"../driver/mongodb/MongoDriver\";\nimport { MongoRepository } from \"./MongoRepository\";\n/**\n * Factory used to create different types of repositories.\n */\nvar RepositoryFactory = /** @class */ (function () {\n    function RepositoryFactory() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a repository.\n     */\n    RepositoryFactory.prototype.create = function (manager, metadata, queryRunner) {\n        if (metadata.treeType) {\n            // NOTE: dynamic access to protected properties. We need this to prevent unwanted properties in those classes to be exposed,\n            // however we need these properties for internal work of the class\n            var repository = new TreeRepository();\n            Object.assign(repository, {\n                manager: manager,\n                metadata: metadata,\n                queryRunner: queryRunner,\n            });\n            return repository;\n        }\n        else {\n            // NOTE: dynamic access to protected properties. We need this to prevent unwanted properties in those classes to be exposed,\n            // however we need these properties for internal work of the class\n            var repository = void 0;\n            if (manager.connection.driver instanceof MongoDriver) {\n                repository = new MongoRepository();\n            }\n            else {\n                repository = new Repository();\n            }\n            Object.assign(repository, {\n                manager: manager,\n                metadata: metadata,\n                queryRunner: queryRunner,\n            });\n            return repository;\n        }\n    };\n    return RepositoryFactory;\n}());\nexport { RepositoryFactory };\n\n//# sourceMappingURL=RepositoryFactory.js.map\n","import { __read, __spreadArray } from \"tslib\";\nimport { TypeORMError } from \"../error\";\n/**\n * Orders insert or remove subjects in proper order (using topological sorting)\n * to make sure insert or remove operations are executed in a proper order.\n */\nvar SubjectTopoligicalSorter = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SubjectTopoligicalSorter(subjects) {\n        this.subjects = __spreadArray([], __read(subjects), false); // copy subjects to prevent changing of sent array\n        this.metadatas = this.getUniqueMetadatas(this.subjects);\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Sorts (orders) subjects in their topological order.\n     */\n    SubjectTopoligicalSorter.prototype.sort = function (direction) {\n        var _this = this;\n        // if there are no metadatas it probably mean there is no subjects... we don't have to do anything here\n        if (!this.metadatas.length)\n            return this.subjects;\n        var sortedSubjects = [];\n        // first if we sort for deletion all junction subjects\n        // junction subjects are subjects without entity and database entity set\n        if (direction === \"delete\") {\n            var junctionSubjects = this.subjects.filter(function (subject) { return !subject.entity && !subject.databaseEntity; });\n            sortedSubjects.push.apply(sortedSubjects, __spreadArray([], __read(junctionSubjects), false));\n            this.removeAlreadySorted(junctionSubjects);\n        }\n        // next we always insert entities with non-nullable relations, sort them first\n        var nonNullableDependencies = this.getNonNullableDependencies();\n        var sortedNonNullableEntityTargets = this.toposort(nonNullableDependencies);\n        if (direction === \"insert\")\n            sortedNonNullableEntityTargets = sortedNonNullableEntityTargets.reverse();\n        // so we have a sorted entity targets\n        // go thought each of them and find all subjects with sorted entity target\n        // add those sorted targets and remove them from original array of targets\n        sortedNonNullableEntityTargets.forEach(function (sortedEntityTarget) {\n            var entityTargetSubjects = _this.subjects.filter(function (subject) { return subject.metadata.targetName === sortedEntityTarget; });\n            sortedSubjects.push.apply(sortedSubjects, __spreadArray([], __read(entityTargetSubjects), false));\n            _this.removeAlreadySorted(entityTargetSubjects);\n        });\n        // next sort all other entities\n        // same process as in above but with other entities\n        var otherDependencies = this.getDependencies();\n        var sortedOtherEntityTargets = this.toposort(otherDependencies);\n        if (direction === \"insert\")\n            sortedOtherEntityTargets = sortedOtherEntityTargets.reverse();\n        sortedOtherEntityTargets.forEach(function (sortedEntityTarget) {\n            var entityTargetSubjects = _this.subjects.filter(function (subject) { return subject.metadata.targetName === sortedEntityTarget; });\n            sortedSubjects.push.apply(sortedSubjects, __spreadArray([], __read(entityTargetSubjects), false));\n            _this.removeAlreadySorted(entityTargetSubjects);\n        });\n        // if we have something left in the subjects add them as well\n        sortedSubjects.push.apply(sortedSubjects, __spreadArray([], __read(this.subjects), false));\n        return sortedSubjects;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Removes already sorted subjects from this.subjects list of subjects.\n     */\n    SubjectTopoligicalSorter.prototype.removeAlreadySorted = function (subjects) {\n        var _this = this;\n        subjects.forEach(function (subject) {\n            _this.subjects.splice(_this.subjects.indexOf(subject), 1);\n        });\n    };\n    /**\n     * Extracts all unique metadatas from the given subjects.\n     */\n    SubjectTopoligicalSorter.prototype.getUniqueMetadatas = function (subjects) {\n        var metadatas = [];\n        subjects.forEach(function (subject) {\n            if (metadatas.indexOf(subject.metadata) === -1)\n                metadatas.push(subject.metadata);\n        });\n        return metadatas;\n    };\n    /**\n     * Gets dependency tree for all entity metadatas with non-nullable relations.\n     * We need to execute insertions first for entities which non-nullable relations.\n     */\n    SubjectTopoligicalSorter.prototype.getNonNullableDependencies = function () {\n        return this.metadatas.reduce(function (dependencies, metadata) {\n            metadata.relationsWithJoinColumns.forEach(function (relation) {\n                if (relation.isNullable)\n                    return;\n                dependencies.push([metadata.targetName, relation.inverseEntityMetadata.targetName]);\n            });\n            return dependencies;\n        }, []);\n    };\n    /**\n     * Gets dependency tree for all entity metadatas with non-nullable relations.\n     * We need to execute insertions first for entities which non-nullable relations.\n     */\n    SubjectTopoligicalSorter.prototype.getDependencies = function () {\n        return this.metadatas.reduce(function (dependencies, metadata) {\n            metadata.relationsWithJoinColumns.forEach(function (relation) {\n                // if relation is self-referenced we skip it\n                if (relation.inverseEntityMetadata === metadata)\n                    return;\n                dependencies.push([metadata.targetName, relation.inverseEntityMetadata.targetName]);\n            });\n            return dependencies;\n        }, []);\n    };\n    /**\n     * Sorts given graph using topological sorting algorithm.\n     *\n     * Algorithm is kindly taken from https://github.com/marcelklehr/toposort repository.\n     */\n    SubjectTopoligicalSorter.prototype.toposort = function (edges) {\n        function uniqueNodes(arr) {\n            var res = [];\n            for (var i_1 = 0, len = arr.length; i_1 < len; i_1++) {\n                var edge = arr[i_1];\n                if (res.indexOf(edge[0]) < 0)\n                    res.push(edge[0]);\n                if (res.indexOf(edge[1]) < 0)\n                    res.push(edge[1]);\n            }\n            return res;\n        }\n        var nodes = uniqueNodes(edges);\n        var cursor = nodes.length, sorted = new Array(cursor), visited = {}, i = cursor;\n        while (i--) {\n            if (!visited[i])\n                visit(nodes[i], i, []);\n        }\n        function visit(node, i, predecessors) {\n            if (predecessors.indexOf(node) >= 0) {\n                throw new TypeORMError(\"Cyclic dependency: \" + JSON.stringify(node)); // todo: better error\n            }\n            if (!~nodes.indexOf(node)) {\n                throw new TypeORMError(\"Found unknown node. Make sure to provided all involved nodes. Unknown node: \" + JSON.stringify(node));\n            }\n            if (visited[i])\n                return;\n            visited[i] = true;\n            // outgoing edges\n            var outgoing = edges.filter(function (edge) {\n                return edge[0] === node;\n            });\n            if (i = outgoing.length) {\n                var preds = predecessors.concat(node);\n                do {\n                    var child = outgoing[--i][1];\n                    visit(child, nodes.indexOf(child), preds);\n                } while (i);\n            }\n            sorted[--cursor] = node;\n        }\n        return sorted;\n    };\n    return SubjectTopoligicalSorter;\n}());\nexport { SubjectTopoligicalSorter };\n\n//# sourceMappingURL=SubjectTopoligicalSorter.js.map\n","import { DateUtils } from \"../util/DateUtils\";\nimport { OrmUtils } from \"../util/OrmUtils\";\nimport { ApplyValueTransformers } from \"../util/ApplyValueTransformers\";\n/**\n * Finds what columns are changed in the subject entities.\n */\nvar SubjectChangedColumnsComputer = /** @class */ (function () {\n    function SubjectChangedColumnsComputer() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Finds what columns are changed in the subject entities.\n     */\n    SubjectChangedColumnsComputer.prototype.compute = function (subjects) {\n        var _this = this;\n        subjects.forEach(function (subject) {\n            _this.computeDiffColumns(subject);\n            _this.computeDiffRelationalColumns(subjects, subject);\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Differentiate columns from the updated entity and entity stored in the database.\n     */\n    SubjectChangedColumnsComputer.prototype.computeDiffColumns = function (subject) {\n        // if there is no persisted entity then nothing to compute changed in it\n        if (!subject.entity)\n            return;\n        subject.metadata.columns.forEach(function (column) {\n            // ignore special columns\n            if (column.isVirtual ||\n                column.isDiscriminator // ||\n            // column.isUpdateDate ||\n            // column.isVersion ||\n            // column.isCreateDate\n            )\n                return;\n            var changeMap = subject.changeMaps.find(function (changeMap) { return changeMap.column === column; });\n            if (changeMap) {\n                subject.changeMaps.splice(subject.changeMaps.indexOf(changeMap), 1);\n            }\n            // get user provided value - column value from the user provided persisted entity\n            var entityValue = column.getEntityValue(subject.entity);\n            // we don't perform operation over undefined properties (but we DO need null properties!)\n            if (entityValue === undefined)\n                return;\n            // if there is no database entity then all columns are treated as new, e.g. changed\n            if (subject.databaseEntity) {\n                // skip transform database value for json / jsonb for comparison later on\n                var shouldTransformDatabaseEntity = column.type !== \"json\" && column.type !== \"jsonb\";\n                // get database value of the column\n                var databaseValue = column.getEntityValue(subject.databaseEntity, shouldTransformDatabaseEntity);\n                // filter out \"relational columns\" only in the case if there is a relation object in entity\n                if (column.relationMetadata) {\n                    var value = column.relationMetadata.getEntityValue(subject.entity);\n                    if (value !== null && value !== undefined)\n                        return;\n                }\n                var normalizedValue = entityValue;\n                // normalize special values to make proper comparision\n                if (entityValue !== null) {\n                    switch (column.type) {\n                        case \"date\":\n                            normalizedValue = DateUtils.mixedDateToDateString(entityValue);\n                            break;\n                        case \"time\":\n                        case \"time with time zone\":\n                        case \"time without time zone\":\n                        case \"timetz\":\n                            normalizedValue = DateUtils.mixedDateToTimeString(entityValue);\n                            break;\n                        case \"datetime\":\n                        case \"datetime2\":\n                        case Date:\n                        case \"timestamp\":\n                        case \"timestamp without time zone\":\n                        case \"timestamp with time zone\":\n                        case \"timestamp with local time zone\":\n                        case \"timestamptz\":\n                            normalizedValue = DateUtils.mixedDateToUtcDatetimeString(entityValue);\n                            databaseValue = DateUtils.mixedDateToUtcDatetimeString(databaseValue);\n                            break;\n                        case \"json\":\n                        case \"jsonb\":\n                            // JSON.stringify doesn't work because postgresql sorts jsonb before save.\n                            // If you try to save json '[{\"messages\": \"\", \"attribute Key\": \"\", \"level\":\"\"}] ' as jsonb,\n                            // then postgresql will save it as '[{\"level\": \"\", \"message\":\"\", \"attributeKey\": \"\"}]'\n                            if (OrmUtils.deepCompare(entityValue, databaseValue))\n                                return;\n                            break;\n                        case \"simple-array\":\n                            normalizedValue = DateUtils.simpleArrayToString(entityValue);\n                            databaseValue = DateUtils.simpleArrayToString(databaseValue);\n                            break;\n                        case \"simple-enum\":\n                            normalizedValue = DateUtils.simpleEnumToString(entityValue);\n                            databaseValue = DateUtils.simpleEnumToString(databaseValue);\n                            break;\n                        case \"simple-json\":\n                            normalizedValue = DateUtils.simpleJsonToString(entityValue);\n                            databaseValue = DateUtils.simpleJsonToString(databaseValue);\n                            break;\n                    }\n                    if (column.transformer) {\n                        normalizedValue = ApplyValueTransformers.transformTo(column.transformer, entityValue);\n                    }\n                }\n                // if value is not changed - then do nothing\n                if (normalizedValue instanceof Buffer && databaseValue instanceof Buffer) {\n                    if (normalizedValue.equals(databaseValue)) {\n                        return;\n                    }\n                }\n                else {\n                    if (normalizedValue === databaseValue)\n                        return;\n                }\n            }\n            subject.diffColumns.push(column);\n            subject.changeMaps.push({\n                column: column,\n                value: entityValue\n            });\n        });\n    };\n    /**\n     * Difference columns of the owning one-to-one and many-to-one columns.\n     */\n    SubjectChangedColumnsComputer.prototype.computeDiffRelationalColumns = function (allSubjects, subject) {\n        // if there is no persisted entity then nothing to compute changed in it\n        if (!subject.entity)\n            return;\n        subject.metadata.relationsWithJoinColumns.forEach(function (relation) {\n            // get the related entity from the persisted entity\n            var relatedEntity = relation.getEntityValue(subject.entity);\n            // we don't perform operation over undefined properties (but we DO need null properties!)\n            if (relatedEntity === undefined)\n                return;\n            // if there is no database entity then all relational columns are treated as new, e.g. changed\n            if (subject.databaseEntity) {\n                // here we cover two scenarios:\n                // 1. related entity can be another entity which is natural way\n                // 2. related entity can be just an entity id\n                // if relation entity is just a relation id set (for example post.tag = 1)\n                // then we create an id map from it to make a proper comparision\n                var relatedEntityRelationIdMap = relatedEntity;\n                if (relatedEntityRelationIdMap !== null && relatedEntityRelationIdMap instanceof Object)\n                    relatedEntityRelationIdMap = relation.getRelationIdMap(relatedEntityRelationIdMap);\n                // get database related entity. Since loadRelationIds are used on databaseEntity\n                // related entity will contain only its relation ids\n                var databaseRelatedEntityRelationIdMap = relation.getEntityValue(subject.databaseEntity);\n                // if relation ids are equal then we don't need to update anything\n                var areRelatedIdsEqual = OrmUtils.compareIds(relatedEntityRelationIdMap, databaseRelatedEntityRelationIdMap);\n                if (areRelatedIdsEqual) {\n                    return;\n                }\n                else {\n                    subject.diffRelations.push(relation);\n                }\n            }\n            // if there is an inserted subject for the related entity of the persisted entity then use it as related entity\n            // this code is used for related entities without ids to be properly inserted (and then updated if needed)\n            var valueSubject = allSubjects.find(function (subject) { return subject.mustBeInserted && subject.entity === relatedEntity; });\n            if (valueSubject)\n                relatedEntity = valueSubject;\n            // find if there is already a relation to be changed\n            var changeMap = subject.changeMaps.find(function (changeMap) { return changeMap.relation === relation; });\n            if (changeMap) { // and update its value if it was found\n                changeMap.value = relatedEntity;\n            }\n            else { // if it wasn't found add a new relation for change\n                subject.changeMaps.push({\n                    relation: relation,\n                    value: relatedEntity\n                });\n            }\n        });\n    };\n    return SubjectChangedColumnsComputer;\n}());\nexport { SubjectChangedColumnsComputer };\n\n//# sourceMappingURL=SubjectChangedColumnsComputer.js.map\n","import { __extends } from \"tslib\";\nimport { TypeORMError } from \"./TypeORMError\";\nvar NestedSetMultipleRootError = /** @class */ (function (_super) {\n    __extends(NestedSetMultipleRootError, _super);\n    function NestedSetMultipleRootError() {\n        return _super.call(this, \"Nested sets do not support multiple root entities.\") || this;\n    }\n    return NestedSetMultipleRootError;\n}(TypeORMError));\nexport { NestedSetMultipleRootError };\n\n//# sourceMappingURL=NestedSetMultipleRootError.js.map\n","import { __awaiter, __generator, __read, __values } from \"tslib\";\nimport { OrmUtils } from \"../../util/OrmUtils\";\nimport { NestedSetMultipleRootError } from \"../../error/NestedSetMultipleRootError\";\nvar NestedSetIds = /** @class */ (function () {\n    function NestedSetIds() {\n    }\n    return NestedSetIds;\n}());\n/**\n * Executes subject operations for nested set tree entities.\n */\nvar NestedSetSubjectExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function NestedSetSubjectExecutor(queryRunner) {\n        this.queryRunner = queryRunner;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Executes operations when subject is being inserted.\n     */\n    NestedSetSubjectExecutor.prototype.insert = function (subject) {\n        return __awaiter(this, void 0, void 0, function () {\n            var escape, tableName, leftColumnName, rightColumnName, parent, parentId, parentNsRight, isUniqueRoot;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        escape = function (alias) { return _this.queryRunner.connection.driver.escape(alias); };\n                        tableName = this.getTableName(subject.metadata.tablePath);\n                        leftColumnName = escape(subject.metadata.nestedSetLeftColumn.databaseName);\n                        rightColumnName = escape(subject.metadata.nestedSetRightColumn.databaseName);\n                        parent = subject.metadata.treeParentRelation.getEntityValue(subject.entity);\n                        if (!parent && subject.parentSubject && subject.parentSubject.entity) // if entity was attached via children\n                            parent = subject.parentSubject.insertedValueSet ? subject.parentSubject.insertedValueSet : subject.parentSubject.entity;\n                        parentId = subject.metadata.getEntityIdMap(parent);\n                        parentNsRight = undefined;\n                        if (!parentId) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.queryRunner.manager\n                                .createQueryBuilder()\n                                .select(subject.metadata.targetName + \".\" + subject.metadata.nestedSetRightColumn.propertyPath, \"right\")\n                                .from(subject.metadata.target, subject.metadata.targetName)\n                                .whereInIds(parentId)\n                                .getRawOne()\n                                .then(function (result) {\n                                var value = result ? result[\"right\"] : undefined;\n                                // CockroachDB returns numeric types as string\n                                return typeof value === \"string\" ? parseInt(value) : value;\n                            })];\n                    case 1:\n                        parentNsRight = _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        if (!(parentNsRight !== undefined)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.queryRunner.query(\"UPDATE \" + tableName + \" SET \" +\n                                (leftColumnName + \" = CASE WHEN \" + leftColumnName + \" > \" + parentNsRight + \" THEN \" + leftColumnName + \" + 2 ELSE \" + leftColumnName + \" END,\") +\n                                (rightColumnName + \" = \" + rightColumnName + \" + 2 \") +\n                                (\"WHERE \" + rightColumnName + \" >= \" + parentNsRight))];\n                    case 3:\n                        _a.sent();\n                        OrmUtils.mergeDeep(subject.insertedValueSet, subject.metadata.nestedSetLeftColumn.createValueMap(parentNsRight), subject.metadata.nestedSetRightColumn.createValueMap(parentNsRight + 1));\n                        return [3 /*break*/, 6];\n                    case 4: return [4 /*yield*/, this.isUniqueRootEntity(subject, parent)];\n                    case 5:\n                        isUniqueRoot = _a.sent();\n                        // Validate if a root entity already exits and throw an exception\n                        if (!isUniqueRoot)\n                            throw new NestedSetMultipleRootError();\n                        OrmUtils.mergeDeep(subject.insertedValueSet, subject.metadata.nestedSetLeftColumn.createValueMap(1), subject.metadata.nestedSetRightColumn.createValueMap(2));\n                        _a.label = 6;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes operations when subject is being updated.\n     */\n    NestedSetSubjectExecutor.prototype.update = function (subject) {\n        return __awaiter(this, void 0, void 0, function () {\n            var parent, entity, oldParent, oldParentId, parentId, escape_1, tableName, leftColumnName, rightColumnName, entityId, entityNs, parentNs, isMovingUp, treeSize, entitySize, updateLeftSide, updateRightSide, isUniqueRoot;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        parent = subject.metadata.treeParentRelation.getEntityValue(subject.entity);\n                        if (!parent && subject.parentSubject && subject.parentSubject.entity) // if entity was attached via children\n                            parent = subject.parentSubject.entity;\n                        entity = subject.databaseEntity;\n                        if (!entity && parent) // if entity was attached via children\n                            entity = subject.metadata.treeChildrenRelation.getEntityValue(parent).find(function (child) {\n                                return Object.entries(subject.identifier).every(function (_a) {\n                                    var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                                    return child[key] === value;\n                                });\n                            });\n                        // Exit if the parent or the entity where never set\n                        if (entity === undefined || parent === undefined) {\n                            return [2 /*return*/];\n                        }\n                        oldParent = subject.metadata.treeParentRelation.getEntityValue(entity);\n                        oldParentId = subject.metadata.getEntityIdMap(oldParent);\n                        parentId = subject.metadata.getEntityIdMap(parent);\n                        // Exit if the new and old parents are the same\n                        if (OrmUtils.compareIds(oldParentId, parentId)) {\n                            return [2 /*return*/];\n                        }\n                        if (!parent) return [3 /*break*/, 9];\n                        escape_1 = function (alias) { return _this.queryRunner.connection.driver.escape(alias); };\n                        tableName = this.getTableName(subject.metadata.tablePath);\n                        leftColumnName = escape_1(subject.metadata.nestedSetLeftColumn.databaseName);\n                        rightColumnName = escape_1(subject.metadata.nestedSetRightColumn.databaseName);\n                        entityId = subject.metadata.getEntityIdMap(entity);\n                        entityNs = undefined;\n                        if (!entityId) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.getNestedSetIds(subject.metadata, entityId)];\n                    case 1:\n                        entityNs = (_a.sent())[0];\n                        _a.label = 2;\n                    case 2:\n                        parentNs = undefined;\n                        if (!parentId) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.getNestedSetIds(subject.metadata, parentId)];\n                    case 3:\n                        parentNs = (_a.sent())[0];\n                        _a.label = 4;\n                    case 4:\n                        if (!(entityNs !== undefined && parentNs !== undefined)) return [3 /*break*/, 8];\n                        isMovingUp = parentNs.left > entityNs.left;\n                        treeSize = entityNs.right - entityNs.left + 1;\n                        entitySize = void 0;\n                        if (isMovingUp) {\n                            entitySize = parentNs.left - entityNs.right;\n                        }\n                        else {\n                            entitySize = parentNs.right - entityNs.left;\n                        }\n                        updateLeftSide = \"WHEN \" + leftColumnName + \" >= \" + entityNs.left + \" AND \" +\n                            (leftColumnName + \" < \" + entityNs.right + \" \") +\n                            (\"THEN \" + leftColumnName + \" + \" + entitySize + \" \");\n                        updateRightSide = \"WHEN \" + rightColumnName + \" > \" + entityNs.left + \" AND \" +\n                            (rightColumnName + \" <= \" + entityNs.right + \" \") +\n                            (\"THEN \" + rightColumnName + \" + \" + entitySize + \" \");\n                        if (!isMovingUp) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.queryRunner.query(\"UPDATE \" + tableName + \" \" +\n                                (\"SET \" + leftColumnName + \" = CASE \") +\n                                (\"WHEN \" + leftColumnName + \" > \" + entityNs.right + \" AND \") +\n                                (leftColumnName + \" <= \" + parentNs.left + \" \") +\n                                (\"THEN \" + leftColumnName + \" - \" + treeSize + \" \") +\n                                updateLeftSide +\n                                (\"ELSE \" + leftColumnName + \" \") +\n                                \"END, \" +\n                                (rightColumnName + \" = CASE \") +\n                                (\"WHEN \" + rightColumnName + \" > \" + entityNs.right + \" AND \") +\n                                (rightColumnName + \" < \" + parentNs.left + \" \") +\n                                (\"THEN \" + rightColumnName + \" - \" + treeSize + \" \") +\n                                updateRightSide +\n                                (\"ELSE \" + rightColumnName + \" \") +\n                                \"END\")];\n                    case 5:\n                        _a.sent();\n                        return [3 /*break*/, 8];\n                    case 6: return [4 /*yield*/, this.queryRunner.query(\"UPDATE \" + tableName + \" \" +\n                            (\"SET \" + leftColumnName + \" = CASE \") +\n                            (\"WHEN \" + leftColumnName + \" < \" + entityNs.left + \" AND \") +\n                            (leftColumnName + \" > \" + parentNs.right + \" \") +\n                            (\"THEN \" + leftColumnName + \" + \" + treeSize + \" \") +\n                            updateLeftSide +\n                            (\"ELSE \" + leftColumnName + \" \") +\n                            \"END, \" +\n                            (rightColumnName + \" = CASE \") +\n                            (\"WHEN \" + rightColumnName + \" < \" + entityNs.left + \" AND \") +\n                            (rightColumnName + \" >= \" + parentNs.right + \" \") +\n                            (\"THEN \" + rightColumnName + \" + \" + treeSize + \" \") +\n                            updateRightSide +\n                            (\"ELSE \" + rightColumnName + \" \") +\n                            \"END\")];\n                    case 7:\n                        _a.sent();\n                        _a.label = 8;\n                    case 8: return [3 /*break*/, 11];\n                    case 9: return [4 /*yield*/, this.isUniqueRootEntity(subject, parent)];\n                    case 10:\n                        isUniqueRoot = _a.sent();\n                        // Validate if a root entity already exits and throw an exception\n                        if (!isUniqueRoot)\n                            throw new NestedSetMultipleRootError();\n                        _a.label = 11;\n                    case 11: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n    * Executes operations when subject is being removed.\n    */\n    NestedSetSubjectExecutor.prototype.remove = function (subjects) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, escape, tableName, leftColumnName, rightColumnName, entitiesIds, subjects_1, subjects_1_1, subject, entityId, entitiesNs, entitiesNs_1, entitiesNs_1_1, entity, treeSize, e_1_1;\n            var e_2, _a, e_1, _b;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!Array.isArray(subjects))\n                            subjects = [subjects];\n                        metadata = subjects[0].metadata;\n                        escape = function (alias) { return _this.queryRunner.connection.driver.escape(alias); };\n                        tableName = this.getTableName(metadata.tablePath);\n                        leftColumnName = escape(metadata.nestedSetLeftColumn.databaseName);\n                        rightColumnName = escape(metadata.nestedSetRightColumn.databaseName);\n                        entitiesIds = [];\n                        try {\n                            for (subjects_1 = __values(subjects), subjects_1_1 = subjects_1.next(); !subjects_1_1.done; subjects_1_1 = subjects_1.next()) {\n                                subject = subjects_1_1.value;\n                                entityId = metadata.getEntityIdMap(subject.entity);\n                                if (entityId) {\n                                    entitiesIds.push(entityId);\n                                }\n                            }\n                        }\n                        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                        finally {\n                            try {\n                                if (subjects_1_1 && !subjects_1_1.done && (_a = subjects_1.return)) _a.call(subjects_1);\n                            }\n                            finally { if (e_2) throw e_2.error; }\n                        }\n                        return [4 /*yield*/, this.getNestedSetIds(metadata, entitiesIds)];\n                    case 1:\n                        entitiesNs = _c.sent();\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 7, 8, 9]);\n                        entitiesNs_1 = __values(entitiesNs), entitiesNs_1_1 = entitiesNs_1.next();\n                        _c.label = 3;\n                    case 3:\n                        if (!!entitiesNs_1_1.done) return [3 /*break*/, 6];\n                        entity = entitiesNs_1_1.value;\n                        treeSize = entity.right - entity.left + 1;\n                        return [4 /*yield*/, this.queryRunner.query(\"UPDATE \" + tableName + \" \" +\n                                (\"SET \" + leftColumnName + \" = CASE \") +\n                                (\"WHEN \" + leftColumnName + \" > \" + entity.left + \" THEN \" + leftColumnName + \" - \" + treeSize + \" \") +\n                                (\"ELSE \" + leftColumnName + \" \") +\n                                \"END, \" +\n                                (rightColumnName + \" = CASE \") +\n                                (\"WHEN \" + rightColumnName + \" > \" + entity.right + \" THEN \" + rightColumnName + \" - \" + treeSize + \" \") +\n                                (\"ELSE \" + rightColumnName + \" \") +\n                                \"END\")];\n                    case 4:\n                        _c.sent();\n                        _c.label = 5;\n                    case 5:\n                        entitiesNs_1_1 = entitiesNs_1.next();\n                        return [3 /*break*/, 3];\n                    case 6: return [3 /*break*/, 9];\n                    case 7:\n                        e_1_1 = _c.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 9];\n                    case 8:\n                        try {\n                            if (entitiesNs_1_1 && !entitiesNs_1_1.done && (_b = entitiesNs_1.return)) _b.call(entitiesNs_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Get the nested set ids for a given entity\n     */\n    NestedSetSubjectExecutor.prototype.getNestedSetIds = function (metadata, ids) {\n        var select = {\n            left: metadata.targetName + \".\" + metadata.nestedSetLeftColumn.propertyPath,\n            right: metadata.targetName + \".\" + metadata.nestedSetRightColumn.propertyPath\n        };\n        var queryBuilder = this.queryRunner.manager.createQueryBuilder();\n        Object.entries(select).forEach(function (_a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            queryBuilder.addSelect(value, key);\n        });\n        return queryBuilder\n            .from(metadata.target, metadata.targetName)\n            .whereInIds(ids)\n            .orderBy(select.right, \"DESC\")\n            .getRawMany()\n            .then(function (results) {\n            var e_3, _a, e_4, _b;\n            var data = [];\n            try {\n                for (var results_1 = __values(results), results_1_1 = results_1.next(); !results_1_1.done; results_1_1 = results_1.next()) {\n                    var result = results_1_1.value;\n                    var entry = {};\n                    try {\n                        for (var _c = (e_4 = void 0, __values(Object.keys(select))), _d = _c.next(); !_d.done; _d = _c.next()) {\n                            var key = _d.value;\n                            var value = result ? result[key] : undefined;\n                            // CockroachDB returns numeric types as string\n                            entry[key] = typeof value === \"string\" ? parseInt(value) : value;\n                        }\n                    }\n                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                    finally {\n                        try {\n                            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                        }\n                        finally { if (e_4) throw e_4.error; }\n                    }\n                    data.push(entry);\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (results_1_1 && !results_1_1.done && (_a = results_1.return)) _a.call(results_1);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            return data;\n        });\n    };\n    NestedSetSubjectExecutor.prototype.isUniqueRootEntity = function (subject, parent) {\n        return __awaiter(this, void 0, void 0, function () {\n            var escape, tableName, parameters, whereCondition, countAlias, result;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        escape = function (alias) { return _this.queryRunner.connection.driver.escape(alias); };\n                        tableName = this.getTableName(subject.metadata.tablePath);\n                        parameters = [];\n                        whereCondition = subject.metadata.treeParentRelation.joinColumns.map(function (column) {\n                            var columnName = escape(column.databaseName);\n                            var parameter = column.getEntityValue(parent);\n                            if (parameter == null) {\n                                return columnName + \" IS NULL\";\n                            }\n                            parameters.push(parameter);\n                            var parameterName = _this.queryRunner.connection.driver.createParameter(\"entity_\" + column.databaseName, parameters.length - 1);\n                            return columnName + \" = \" + parameterName;\n                        }).join(\" AND \");\n                        countAlias = \"count\";\n                        return [4 /*yield*/, this.queryRunner.query(\"SELECT COUNT(1) AS \" + escape(countAlias) + \" FROM \" + tableName + \" WHERE \" + whereCondition, parameters, true)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, parseInt(result.records[0][countAlias]) === 0];\n                }\n            });\n        });\n    };\n    /**\n     * Gets escaped table name with schema name if SqlServer or Postgres driver used with custom\n     * schema name, otherwise returns escaped table name.\n     */\n    NestedSetSubjectExecutor.prototype.getTableName = function (tablePath) {\n        var _this = this;\n        return tablePath.split(\".\")\n            .map(function (i) {\n            // this condition need because in SQL Server driver when custom database name was specified and schema name was not, we got `dbName..tableName` string, and doesn't need to escape middle empty string\n            return i === \"\" ? i : _this.queryRunner.connection.driver.escape(i);\n        }).join(\".\");\n    };\n    return NestedSetSubjectExecutor;\n}());\nexport { NestedSetSubjectExecutor };\n\n//# sourceMappingURL=NestedSetSubjectExecutor.js.map\n","import { __awaiter, __generator, __read, __spreadArray, __values } from \"tslib\";\nimport { CannotAttachTreeChildrenEntityError } from \"../../error/CannotAttachTreeChildrenEntityError\";\nimport { OrmUtils } from \"../../util/OrmUtils\";\nimport { SqlServerDriver } from \"../../driver/sqlserver/SqlServerDriver\";\n/**\n * Executes subject operations for closure entities.\n */\nvar ClosureSubjectExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ClosureSubjectExecutor(queryRunner) {\n        this.queryRunner = queryRunner;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Executes operations when subject is being inserted.\n     */\n    ClosureSubjectExecutor.prototype.insert = function (subject) {\n        return __awaiter(this, void 0, void 0, function () {\n            var closureJunctionInsertMap, parent, escape_1, tableName, queryParams_1, ancestorColumnNames, descendantColumnNames, childEntityIds1, whereCondition;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        closureJunctionInsertMap = {};\n                        subject.metadata.closureJunctionTable.ancestorColumns.forEach(function (column) {\n                            closureJunctionInsertMap[column.databaseName] = subject.identifier;\n                        });\n                        subject.metadata.closureJunctionTable.descendantColumns.forEach(function (column) {\n                            closureJunctionInsertMap[column.databaseName] = subject.identifier;\n                        });\n                        // insert values into the closure junction table\n                        return [4 /*yield*/, this.queryRunner\n                                .manager\n                                .createQueryBuilder()\n                                .insert()\n                                .into(subject.metadata.closureJunctionTable.tablePath)\n                                .values(closureJunctionInsertMap)\n                                .updateEntity(false)\n                                .callListeners(false)\n                                .execute()];\n                    case 1:\n                        // insert values into the closure junction table\n                        _a.sent();\n                        parent = subject.metadata.treeParentRelation.getEntityValue(subject.entity);\n                        if (!parent && subject.parentSubject && subject.parentSubject.entity) // if entity was attached via children\n                            parent = subject.parentSubject.insertedValueSet ? subject.parentSubject.insertedValueSet : subject.parentSubject.entity;\n                        if (!parent) return [3 /*break*/, 3];\n                        escape_1 = function (alias) { return _this.queryRunner.connection.driver.escape(alias); };\n                        tableName = this.getTableName(subject.metadata.closureJunctionTable.tablePath);\n                        queryParams_1 = [];\n                        ancestorColumnNames = subject.metadata.closureJunctionTable.ancestorColumns.map(function (column) {\n                            return escape_1(column.databaseName);\n                        });\n                        descendantColumnNames = subject.metadata.closureJunctionTable.descendantColumns.map(function (column) {\n                            return escape_1(column.databaseName);\n                        });\n                        childEntityIds1 = subject.metadata.primaryColumns.map(function (column) {\n                            queryParams_1.push(column.getEntityValue(subject.insertedValueSet ? subject.insertedValueSet : subject.entity));\n                            return _this.queryRunner.connection.driver.createParameter(\"child_entity_\" + column.databaseName, queryParams_1.length - 1);\n                        });\n                        whereCondition = subject.metadata.closureJunctionTable.descendantColumns.map(function (column) {\n                            var columnName = escape_1(column.databaseName);\n                            var parentId = column.referencedColumn.getEntityValue(parent);\n                            if (!parentId)\n                                throw new CannotAttachTreeChildrenEntityError(subject.metadata.name);\n                            queryParams_1.push(parentId);\n                            var parameterName = _this.queryRunner.connection.driver.createParameter(\"parent_entity_\" + column.referencedColumn.databaseName, queryParams_1.length - 1);\n                            return columnName + \" = \" + parameterName;\n                        });\n                        return [4 /*yield*/, this.queryRunner.query(\"INSERT INTO \" + tableName + \" (\" + __spreadArray(__spreadArray([], __read(ancestorColumnNames), false), __read(descendantColumnNames), false).join(\", \") + \") \" +\n                                (\"SELECT \" + ancestorColumnNames.join(\", \") + \", \" + childEntityIds1.join(\", \") + \" FROM \" + tableName + \" WHERE \" + whereCondition.join(\" AND \")), queryParams_1)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes operations when subject is being updated.\n     */\n    ClosureSubjectExecutor.prototype.update = function (subject) {\n        return __awaiter(this, void 0, void 0, function () {\n            var parent, entity, oldParent, oldParentId, parentId, escape, closureTable, ancestorColumnNames, descendantColumnNames, createSubQuery, parameters, _a, _b, column, queryParams_2, tableName, superAlias_1, subAlias_1, select, entityWhereCondition, parentWhereCondition;\n            var e_1, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        parent = subject.metadata.treeParentRelation.getEntityValue(subject.entity);\n                        if (!parent && subject.parentSubject && subject.parentSubject.entity) // if entity was attached via children\n                            parent = subject.parentSubject.entity;\n                        entity = subject.databaseEntity;\n                        if (!entity && parent) // if entity was attached via children\n                            entity = subject.metadata.treeChildrenRelation.getEntityValue(parent).find(function (child) {\n                                return Object.entries(subject.identifier).every(function (_a) {\n                                    var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                                    return child[key] === value;\n                                });\n                            });\n                        // Exit if the parent or the entity where never set\n                        if (entity === undefined || parent === undefined) {\n                            return [2 /*return*/];\n                        }\n                        oldParent = subject.metadata.treeParentRelation.getEntityValue(entity);\n                        oldParentId = subject.metadata.getEntityIdMap(oldParent);\n                        parentId = subject.metadata.getEntityIdMap(parent);\n                        // Exit if the new and old parents are the same\n                        if (OrmUtils.compareIds(oldParentId, parentId)) {\n                            return [2 /*return*/];\n                        }\n                        escape = function (alias) { return _this.queryRunner.connection.driver.escape(alias); };\n                        closureTable = subject.metadata.closureJunctionTable;\n                        ancestorColumnNames = closureTable.ancestorColumns.map(function (column) {\n                            return escape(column.databaseName);\n                        });\n                        descendantColumnNames = closureTable.descendantColumns.map(function (column) {\n                            return escape(column.databaseName);\n                        });\n                        createSubQuery = function (qb, alias) {\n                            var e_2, _a;\n                            var subAlias = \"sub\" + alias;\n                            var subSelect = qb.createQueryBuilder()\n                                .select(descendantColumnNames.join(\", \"))\n                                .from(closureTable.tablePath, subAlias);\n                            try {\n                                // Create where conditions e.g. (WHERE \"subdescendant\".\"id_ancestor\" = :value_id)\n                                for (var _b = __values(closureTable.ancestorColumns), _c = _b.next(); !_c.done; _c = _b.next()) {\n                                    var column = _c.value;\n                                    subSelect.andWhere(escape(subAlias) + \".\" + escape(column.databaseName) + \" = :value_\" + column.referencedColumn.databaseName);\n                                }\n                            }\n                            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                            finally {\n                                try {\n                                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                                }\n                                finally { if (e_2) throw e_2.error; }\n                            }\n                            return qb.createQueryBuilder()\n                                .select(descendantColumnNames.join(\", \"))\n                                .from(\"(\" + subSelect.getQuery() + \")\", alias)\n                                .setParameters(subSelect.getParameters())\n                                .getQuery();\n                        };\n                        parameters = {};\n                        try {\n                            for (_a = __values(subject.metadata.primaryColumns), _b = _a.next(); !_b.done; _b = _a.next()) {\n                                column = _b.value;\n                                parameters[\"value_\" + column.databaseName] = entity[column.databaseName];\n                            }\n                        }\n                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                        finally {\n                            try {\n                                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                            }\n                            finally { if (e_1) throw e_1.error; }\n                        }\n                        return [4 /*yield*/, this.queryRunner\n                                .manager\n                                .createQueryBuilder()\n                                .delete()\n                                .from(closureTable.tablePath)\n                                .where(function (qb) { return \"(\" + descendantColumnNames.join(\", \") + \") IN (\" + createSubQuery(qb, \"descendant\") + \")\"; })\n                                .andWhere(function (qb) { return \"(\" + ancestorColumnNames.join(\", \") + \") NOT IN (\" + createSubQuery(qb, \"ancestor\") + \")\"; })\n                                .setParameters(parameters)\n                                .execute()];\n                    case 1:\n                        _d.sent();\n                        if (!parent) return [3 /*break*/, 3];\n                        queryParams_2 = [];\n                        tableName = this.getTableName(closureTable.tablePath);\n                        superAlias_1 = escape(\"supertree\");\n                        subAlias_1 = escape(\"subtree\");\n                        select = __spreadArray(__spreadArray([], __read(ancestorColumnNames.map(function (columnName) { return superAlias_1 + \".\" + columnName; })), false), __read(descendantColumnNames.map(function (columnName) { return subAlias_1 + \".\" + columnName; })), false);\n                        entityWhereCondition = subject.metadata.closureJunctionTable.ancestorColumns.map(function (column) {\n                            var columnName = escape(column.databaseName);\n                            var entityId = column.referencedColumn.getEntityValue(entity);\n                            queryParams_2.push(entityId);\n                            var parameterName = _this.queryRunner.connection.driver.createParameter(\"entity_\" + column.referencedColumn.databaseName, queryParams_2.length - 1);\n                            return subAlias_1 + \".\" + columnName + \" = \" + parameterName;\n                        });\n                        parentWhereCondition = subject.metadata.closureJunctionTable.descendantColumns.map(function (column) {\n                            var columnName = escape(column.databaseName);\n                            var parentId = column.referencedColumn.getEntityValue(parent);\n                            if (!parentId)\n                                throw new CannotAttachTreeChildrenEntityError(subject.metadata.name);\n                            queryParams_2.push(parentId);\n                            var parameterName = _this.queryRunner.connection.driver.createParameter(\"parent_entity_\" + column.referencedColumn.databaseName, queryParams_2.length - 1);\n                            return superAlias_1 + \".\" + columnName + \" = \" + parameterName;\n                        });\n                        return [4 /*yield*/, this.queryRunner.query(\"INSERT INTO \" + tableName + \" (\" + __spreadArray(__spreadArray([], __read(ancestorColumnNames), false), __read(descendantColumnNames), false).join(\", \") + \") \" +\n                                (\"SELECT \" + select.join(\", \") + \" \") +\n                                (\"FROM \" + tableName + \" AS \" + superAlias_1 + \", \" + tableName + \" AS \" + subAlias_1 + \" \") +\n                                (\"WHERE \" + __spreadArray(__spreadArray([], __read(entityWhereCondition), false), __read(parentWhereCondition), false).join(\" AND \")), queryParams_2)];\n                    case 2:\n                        _d.sent();\n                        _d.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n    * Executes operations when subject is being removed.\n    */\n    ClosureSubjectExecutor.prototype.remove = function (subjects) {\n        return __awaiter(this, void 0, void 0, function () {\n            var escape, identifiers, closureTable, generateWheres, ancestorWhere, descendantWhere;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // Only mssql need to execute deletes for the juntion table as it doesn't support multi cascade paths.\n                        if (!(this.queryRunner.connection.driver instanceof SqlServerDriver)) {\n                            return [2 /*return*/];\n                        }\n                        if (!Array.isArray(subjects))\n                            subjects = [subjects];\n                        escape = function (alias) { return _this.queryRunner.connection.driver.escape(alias); };\n                        identifiers = subjects.map(function (subject) { return subject.identifier; });\n                        closureTable = subjects[0].metadata.closureJunctionTable;\n                        generateWheres = function (columns) {\n                            return columns.map(function (column) {\n                                var data = identifiers.map(function (identifier) { return identifier[column.referencedColumn.databaseName]; });\n                                return escape(column.databaseName) + \" IN (\" + data.join(\", \") + \")\";\n                            }).join(\" AND \");\n                        };\n                        ancestorWhere = generateWheres(closureTable.ancestorColumns);\n                        descendantWhere = generateWheres(closureTable.descendantColumns);\n                        return [4 /*yield*/, this.queryRunner\n                                .manager\n                                .createQueryBuilder()\n                                .delete()\n                                .from(closureTable.tablePath)\n                                .where(ancestorWhere)\n                                .orWhere(descendantWhere)\n                                .execute()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Gets escaped table name with schema name if SqlServer or Postgres driver used with custom\n     * schema name, otherwise returns escaped table name.\n     */\n    ClosureSubjectExecutor.prototype.getTableName = function (tablePath) {\n        var _this = this;\n        return tablePath.split(\".\")\n            .map(function (i) {\n            // this condition need because in SQL Server driver when custom database name was specified and schema name was not, we got `dbName..tableName` string, and doesn't need to escape middle empty string\n            return i === \"\" ? i : _this.queryRunner.connection.driver.escape(i);\n        }).join(\".\");\n    };\n    return ClosureSubjectExecutor;\n}());\nexport { ClosureSubjectExecutor };\n\n//# sourceMappingURL=ClosureSubjectExecutor.js.map\n","import { __awaiter, __generator, __read } from \"tslib\";\nimport { OrmUtils } from \"../../util/OrmUtils\";\n/**\n * Executes subject operations for materialized-path tree entities.\n */\nvar MaterializedPathSubjectExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function MaterializedPathSubjectExecutor(queryRunner) {\n        this.queryRunner = queryRunner;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Executes operations when subject is being inserted.\n     */\n    MaterializedPathSubjectExecutor.prototype.insert = function (subject) {\n        return __awaiter(this, void 0, void 0, function () {\n            var parent, parentId, parentPath, insertedEntityId;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        parent = subject.metadata.treeParentRelation.getEntityValue(subject.entity);\n                        if (!parent && subject.parentSubject && subject.parentSubject.entity) // if entity was attached via children\n                            parent = subject.parentSubject.insertedValueSet ? subject.parentSubject.insertedValueSet : subject.parentSubject.entity;\n                        parentId = subject.metadata.getEntityIdMap(parent);\n                        parentPath = \"\";\n                        if (!parentId) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.getEntityPath(subject, parentId)];\n                    case 1:\n                        parentPath = _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        insertedEntityId = subject.metadata.treeParentRelation.joinColumns.map(function (joinColumn) {\n                            return joinColumn.referencedColumn.getEntityValue(subject.insertedValueSet);\n                        }).join(\"_\");\n                        return [4 /*yield*/, this.queryRunner.manager\n                                .createQueryBuilder()\n                                .update(subject.metadata.target)\n                                .set((_a = {},\n                                _a[subject.metadata.materializedPathColumn.propertyPath] = parentPath + insertedEntityId + \".\",\n                                _a))\n                                .where(subject.identifier)\n                                .execute()];\n                    case 3:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes operations when subject is being updated.\n     */\n    MaterializedPathSubjectExecutor.prototype.update = function (subject) {\n        return __awaiter(this, void 0, void 0, function () {\n            var newParent, entity, oldParent, oldParentId, newParentId, newParentPath, oldParentPath, entityPath, propertyPath;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        newParent = subject.metadata.treeParentRelation.getEntityValue(subject.entity);\n                        if (!newParent && subject.parentSubject && subject.parentSubject.entity) // if entity was attached via children\n                            newParent = subject.parentSubject.entity;\n                        entity = subject.databaseEntity;\n                        if (!entity && newParent) // if entity was attached via children\n                            entity = subject.metadata.treeChildrenRelation.getEntityValue(newParent).find(function (child) {\n                                return Object.entries(subject.identifier).every(function (_a) {\n                                    var _b = __read(_a, 2), key = _b[0], value = _b[1];\n                                    return child[key] === value;\n                                });\n                            });\n                        oldParent = subject.metadata.treeParentRelation.getEntityValue(entity);\n                        oldParentId = subject.metadata.getEntityIdMap(oldParent);\n                        newParentId = subject.metadata.getEntityIdMap(newParent);\n                        // Exit if the new and old parents are the same\n                        if (OrmUtils.compareIds(oldParentId, newParentId)) {\n                            return [2 /*return*/];\n                        }\n                        newParentPath = \"\";\n                        if (!newParentId) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.getEntityPath(subject, newParentId)];\n                    case 1:\n                        newParentPath = _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        oldParentPath = \"\";\n                        if (!oldParentId) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.getEntityPath(subject, oldParentId)];\n                    case 3:\n                        oldParentPath = (_b.sent()) || \"\";\n                        _b.label = 4;\n                    case 4:\n                        entityPath = subject.metadata.treeParentRelation.joinColumns.map(function (joinColumn) {\n                            return joinColumn.referencedColumn.getEntityValue(entity);\n                        }).join(\"_\");\n                        propertyPath = subject.metadata.materializedPathColumn.propertyPath;\n                        return [4 /*yield*/, this.queryRunner.manager\n                                .createQueryBuilder()\n                                .update(subject.metadata.target)\n                                .set((_a = {},\n                                _a[propertyPath] = function () { return \"REPLACE(\" + propertyPath + \", '\" + oldParentPath + entityPath + \".', '\" + newParentPath + entityPath + \".')\"; },\n                                _a))\n                                .where(propertyPath + \" LIKE :path\", { path: \"\" + oldParentPath + entityPath + \".%\" })\n                                .execute()];\n                    case 5:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MaterializedPathSubjectExecutor.prototype.getEntityPath = function (subject, id) {\n        return this.queryRunner.manager\n            .createQueryBuilder()\n            .select(subject.metadata.targetName + \".\" + subject.metadata.materializedPathColumn.propertyPath, \"path\")\n            .from(subject.metadata.target, subject.metadata.targetName)\n            .whereInIds(id)\n            .getRawOne()\n            .then(function (result) { return result ? result[\"path\"] : undefined; });\n    };\n    return MaterializedPathSubjectExecutor;\n}());\nexport { MaterializedPathSubjectExecutor };\n\n//# sourceMappingURL=MaterializedPathSubjectExecutor.js.map\n","import { __awaiter, __generator, __read, __spreadArray, __values } from \"tslib\";\nimport { SapDriver } from \"../driver/sap/SapDriver\";\nimport { SubjectTopoligicalSorter } from \"./SubjectTopoligicalSorter\";\nimport { SubjectChangedColumnsComputer } from \"./SubjectChangedColumnsComputer\";\nimport { SubjectWithoutIdentifierError } from \"../error/SubjectWithoutIdentifierError\";\nimport { SubjectRemovedAndUpdatedError } from \"../error/SubjectRemovedAndUpdatedError\";\nimport { MongoQueryRunner } from \"../driver/mongodb/MongoQueryRunner\";\nimport { MongoDriver } from \"../driver/mongodb/MongoDriver\";\nimport { BroadcasterResult } from \"../subscriber/BroadcasterResult\";\nimport { OracleDriver } from \"../driver/oracle/OracleDriver\";\nimport { NestedSetSubjectExecutor } from \"./tree/NestedSetSubjectExecutor\";\nimport { ClosureSubjectExecutor } from \"./tree/ClosureSubjectExecutor\";\nimport { MaterializedPathSubjectExecutor } from \"./tree/MaterializedPathSubjectExecutor\";\nimport { OrmUtils } from \"../util/OrmUtils\";\n/**\n * Executes all database operations (inserts, updated, deletes) that must be executed\n * with given persistence subjects.\n */\nvar SubjectExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SubjectExecutor(queryRunner, subjects, options) {\n        // -------------------------------------------------------------------------\n        // Public Properties\n        // -------------------------------------------------------------------------\n        /**\n         * Indicates if executor has any operations to execute (e.g. has insert / update / delete operations to be executed).\n         */\n        this.hasExecutableOperations = false;\n        /**\n         * Subjects that must be inserted.\n         */\n        this.insertSubjects = [];\n        /**\n         * Subjects that must be updated.\n         */\n        this.updateSubjects = [];\n        /**\n         * Subjects that must be removed.\n         */\n        this.removeSubjects = [];\n        /**\n         * Subjects that must be soft-removed.\n         */\n        this.softRemoveSubjects = [];\n        /**\n         * Subjects that must be recovered.\n         */\n        this.recoverSubjects = [];\n        this.queryRunner = queryRunner;\n        this.allSubjects = subjects;\n        this.options = options;\n        this.validate();\n        this.recompute();\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Executes all operations over given array of subjects.\n     * Executes queries using given query runner.\n     */\n    SubjectExecutor.prototype.execute = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var broadcasterResult;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        broadcasterResult = undefined;\n                        if (!(!this.options || this.options.listeners !== false)) return [3 /*break*/, 2];\n                        // console.time(\".broadcastBeforeEventsForAll\");\n                        broadcasterResult = this.broadcastBeforeEventsForAll();\n                        if (!(broadcasterResult.promises.length > 0)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, Promise.all(broadcasterResult.promises)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        // since event listeners and subscribers can call save methods and/or trigger entity changes we need to recompute operational subjects\n                        // recompute only in the case if any listener or subscriber was really executed\n                        if (broadcasterResult && broadcasterResult.count > 0) {\n                            // console.time(\".recompute\");\n                            this.insertSubjects.forEach(function (subject) { return subject.recompute(); });\n                            this.updateSubjects.forEach(function (subject) { return subject.recompute(); });\n                            this.removeSubjects.forEach(function (subject) { return subject.recompute(); });\n                            this.softRemoveSubjects.forEach(function (subject) { return subject.recompute(); });\n                            this.recoverSubjects.forEach(function (subject) { return subject.recompute(); });\n                            this.recompute();\n                            // console.timeEnd(\".recompute\");\n                        }\n                        // make sure our insert subjects are sorted (using topological sorting) to make cascade inserts work properly\n                        // console.timeEnd(\"prepare\");\n                        // execute all insert operations\n                        // console.time(\".insertion\");\n                        this.insertSubjects = new SubjectTopoligicalSorter(this.insertSubjects).sort(\"insert\");\n                        return [4 /*yield*/, this.executeInsertOperations()];\n                    case 3:\n                        _a.sent();\n                        // console.timeEnd(\".insertion\");\n                        // recompute update operations since insertion can create updation operations for the\n                        // properties it wasn't able to handle on its own (referenced columns)\n                        this.updateSubjects = this.allSubjects.filter(function (subject) { return subject.mustBeUpdated; });\n                        // execute update operations\n                        // console.time(\".updation\");\n                        return [4 /*yield*/, this.executeUpdateOperations()];\n                    case 4:\n                        // execute update operations\n                        // console.time(\".updation\");\n                        _a.sent();\n                        // console.timeEnd(\".updation\");\n                        // make sure our remove subjects are sorted (using topological sorting) when multiple entities are passed for the removal\n                        // console.time(\".removal\");\n                        this.removeSubjects = new SubjectTopoligicalSorter(this.removeSubjects).sort(\"delete\");\n                        return [4 /*yield*/, this.executeRemoveOperations()];\n                    case 5:\n                        _a.sent();\n                        // console.timeEnd(\".removal\");\n                        // recompute soft-remove operations\n                        this.softRemoveSubjects = this.allSubjects.filter(function (subject) { return subject.mustBeSoftRemoved; });\n                        // execute soft-remove operations\n                        return [4 /*yield*/, this.executeSoftRemoveOperations()];\n                    case 6:\n                        // execute soft-remove operations\n                        _a.sent();\n                        // recompute recover operations\n                        this.recoverSubjects = this.allSubjects.filter(function (subject) { return subject.mustBeRecovered; });\n                        // execute recover operations\n                        return [4 /*yield*/, this.executeRecoverOperations()];\n                    case 7:\n                        // execute recover operations\n                        _a.sent();\n                        // update all special columns in persisted entities, like inserted id or remove ids from the removed entities\n                        // console.time(\".updateSpecialColumnsInPersistedEntities\");\n                        return [4 /*yield*/, this.updateSpecialColumnsInPersistedEntities()];\n                    case 8:\n                        // update all special columns in persisted entities, like inserted id or remove ids from the removed entities\n                        // console.time(\".updateSpecialColumnsInPersistedEntities\");\n                        _a.sent();\n                        if (!(!this.options || this.options.listeners !== false)) return [3 /*break*/, 10];\n                        // console.time(\".broadcastAfterEventsForAll\");\n                        broadcasterResult = this.broadcastAfterEventsForAll();\n                        if (!(broadcasterResult.promises.length > 0)) return [3 /*break*/, 10];\n                        return [4 /*yield*/, Promise.all(broadcasterResult.promises)];\n                    case 9:\n                        _a.sent();\n                        _a.label = 10;\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Validates all given subjects.\n     */\n    SubjectExecutor.prototype.validate = function () {\n        this.allSubjects.forEach(function (subject) {\n            if (subject.mustBeUpdated && subject.mustBeRemoved)\n                throw new SubjectRemovedAndUpdatedError(subject);\n        });\n    };\n    /**\n     * Performs entity re-computations - finds changed columns, re-builds insert/update/remove subjects.\n     */\n    SubjectExecutor.prototype.recompute = function () {\n        new SubjectChangedColumnsComputer().compute(this.allSubjects);\n        this.insertSubjects = this.allSubjects.filter(function (subject) { return subject.mustBeInserted; });\n        this.updateSubjects = this.allSubjects.filter(function (subject) { return subject.mustBeUpdated; });\n        this.removeSubjects = this.allSubjects.filter(function (subject) { return subject.mustBeRemoved; });\n        this.softRemoveSubjects = this.allSubjects.filter(function (subject) { return subject.mustBeSoftRemoved; });\n        this.recoverSubjects = this.allSubjects.filter(function (subject) { return subject.mustBeRecovered; });\n        this.hasExecutableOperations = this.insertSubjects.length > 0 || this.updateSubjects.length > 0 || this.removeSubjects.length > 0 || this.softRemoveSubjects.length > 0 || this.recoverSubjects.length > 0;\n    };\n    /**\n     * Broadcasts \"BEFORE_INSERT\", \"BEFORE_UPDATE\", \"BEFORE_REMOVE\" events for all given subjects.\n     */\n    SubjectExecutor.prototype.broadcastBeforeEventsForAll = function () {\n        var _this = this;\n        var result = new BroadcasterResult();\n        if (this.insertSubjects.length)\n            this.insertSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastBeforeInsertEvent(result, subject.metadata, subject.entity); });\n        if (this.updateSubjects.length)\n            this.updateSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastBeforeUpdateEvent(result, subject.metadata, subject.entity, subject.databaseEntity, subject.diffColumns, subject.diffRelations); });\n        if (this.removeSubjects.length)\n            this.removeSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastBeforeRemoveEvent(result, subject.metadata, subject.entity, subject.databaseEntity); });\n        if (this.softRemoveSubjects.length)\n            this.softRemoveSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastBeforeUpdateEvent(result, subject.metadata, subject.entity, subject.databaseEntity, subject.diffColumns, subject.diffRelations); });\n        if (this.recoverSubjects.length)\n            this.recoverSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastBeforeUpdateEvent(result, subject.metadata, subject.entity, subject.databaseEntity, subject.diffColumns, subject.diffRelations); });\n        return result;\n    };\n    /**\n     * Broadcasts \"AFTER_INSERT\", \"AFTER_UPDATE\", \"AFTER_REMOVE\" events for all given subjects.\n     * Returns void if there wasn't any listener or subscriber executed.\n     * Note: this method has a performance-optimized code organization.\n     */\n    SubjectExecutor.prototype.broadcastAfterEventsForAll = function () {\n        var _this = this;\n        var result = new BroadcasterResult();\n        if (this.insertSubjects.length)\n            this.insertSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastAfterInsertEvent(result, subject.metadata, subject.entity); });\n        if (this.updateSubjects.length)\n            this.updateSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastAfterUpdateEvent(result, subject.metadata, subject.entity, subject.databaseEntity, subject.diffColumns, subject.diffRelations); });\n        if (this.removeSubjects.length)\n            this.removeSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastAfterRemoveEvent(result, subject.metadata, subject.entity, subject.databaseEntity); });\n        if (this.softRemoveSubjects.length)\n            this.softRemoveSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastAfterUpdateEvent(result, subject.metadata, subject.entity, subject.databaseEntity, subject.diffColumns, subject.diffRelations); });\n        if (this.recoverSubjects.length)\n            this.recoverSubjects.forEach(function (subject) { return _this.queryRunner.broadcaster.broadcastAfterUpdateEvent(result, subject.metadata, subject.entity, subject.databaseEntity, subject.diffColumns, subject.diffRelations); });\n        return result;\n    };\n    /**\n     * Executes insert operations.\n     */\n    SubjectExecutor.prototype.executeInsertOperations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, groupedInsertSubjects, groupedInsertSubjectKeys, _loop_1, this_1, groupedInsertSubjectKeys_1, groupedInsertSubjectKeys_1_1, groupName, e_1_1;\n            var e_1, _b;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = __read(this.groupBulkSubjects(this.insertSubjects, \"insert\"), 2), groupedInsertSubjects = _a[0], groupedInsertSubjectKeys = _a[1];\n                        _loop_1 = function (groupName) {\n                            var subjects, bulkInsertMaps, bulkInsertSubjects, singleInsertSubjects, manager, insertResult_1, insertResult_2, _loop_2, singleInsertSubjects_1, singleInsertSubjects_1_1, subject, e_2_1;\n                            var e_2, _d;\n                            return __generator(this, function (_e) {\n                                switch (_e.label) {\n                                    case 0:\n                                        subjects = groupedInsertSubjects[groupName];\n                                        bulkInsertMaps = [];\n                                        bulkInsertSubjects = [];\n                                        singleInsertSubjects = [];\n                                        if (this_1.queryRunner.connection.driver instanceof MongoDriver) {\n                                            subjects.forEach(function (subject) {\n                                                if (subject.metadata.createDateColumn && subject.entity) {\n                                                    subject.entity[subject.metadata.createDateColumn.databaseName] = new Date();\n                                                }\n                                                if (subject.metadata.updateDateColumn && subject.entity) {\n                                                    subject.entity[subject.metadata.updateDateColumn.databaseName] = new Date();\n                                                }\n                                                subject.createValueSetAndPopChangeMap();\n                                                bulkInsertSubjects.push(subject);\n                                                bulkInsertMaps.push(subject.entity);\n                                            });\n                                        }\n                                        else if (this_1.queryRunner.connection.driver instanceof OracleDriver) {\n                                            subjects.forEach(function (subject) {\n                                                singleInsertSubjects.push(subject);\n                                            });\n                                        }\n                                        else {\n                                            subjects.forEach(function (subject) {\n                                                // we do not insert in bulk in following cases:\n                                                // - when there is no values in insert (only defaults are inserted), since we cannot use DEFAULT VALUES expression for multiple inserted rows\n                                                // - when entity is a tree table, since tree tables require extra operation per each inserted row\n                                                // - when oracle is used, since oracle's bulk insertion is very bad\n                                                if (subject.changeMaps.length === 0 ||\n                                                    subject.metadata.treeType ||\n                                                    _this.queryRunner.connection.driver instanceof OracleDriver ||\n                                                    _this.queryRunner.connection.driver instanceof SapDriver) {\n                                                    singleInsertSubjects.push(subject);\n                                                }\n                                                else {\n                                                    bulkInsertSubjects.push(subject);\n                                                    bulkInsertMaps.push(subject.createValueSetAndPopChangeMap());\n                                                }\n                                            });\n                                        }\n                                        if (!(this_1.queryRunner instanceof MongoQueryRunner)) return [3 /*break*/, 2];\n                                        manager = this_1.queryRunner.manager;\n                                        return [4 /*yield*/, manager.insert(subjects[0].metadata.target, bulkInsertMaps)];\n                                    case 1:\n                                        insertResult_1 = _e.sent();\n                                        subjects.forEach(function (subject, index) {\n                                            subject.identifier = insertResult_1.identifiers[index];\n                                            subject.generatedMap = insertResult_1.generatedMaps[index];\n                                            subject.insertedValueSet = bulkInsertMaps[index];\n                                        });\n                                        return [3 /*break*/, 12];\n                                    case 2:\n                                        if (!(bulkInsertMaps.length > 0)) return [3 /*break*/, 4];\n                                        return [4 /*yield*/, this_1.queryRunner\n                                                .manager\n                                                .createQueryBuilder()\n                                                .insert()\n                                                .into(subjects[0].metadata.target)\n                                                .values(bulkInsertMaps)\n                                                .updateEntity(this_1.options && this_1.options.reload === false ? false : true)\n                                                .callListeners(false)\n                                                .execute()];\n                                    case 3:\n                                        insertResult_2 = _e.sent();\n                                        bulkInsertSubjects.forEach(function (subject, index) {\n                                            subject.identifier = insertResult_2.identifiers[index];\n                                            subject.generatedMap = insertResult_2.generatedMaps[index];\n                                            subject.insertedValueSet = bulkInsertMaps[index];\n                                        });\n                                        _e.label = 4;\n                                    case 4:\n                                        if (!(singleInsertSubjects.length > 0)) return [3 /*break*/, 12];\n                                        _loop_2 = function (subject) {\n                                            return __generator(this, function (_f) {\n                                                switch (_f.label) {\n                                                    case 0:\n                                                        subject.insertedValueSet = subject.createValueSetAndPopChangeMap(); // important to have because query builder sets inserted values into it\n                                                        if (!(subject.metadata.treeType === \"nested-set\")) return [3 /*break*/, 2];\n                                                        return [4 /*yield*/, new NestedSetSubjectExecutor(this_1.queryRunner).insert(subject)];\n                                                    case 1:\n                                                        _f.sent();\n                                                        _f.label = 2;\n                                                    case 2: return [4 /*yield*/, this_1.queryRunner\n                                                            .manager\n                                                            .createQueryBuilder()\n                                                            .insert()\n                                                            .into(subject.metadata.target)\n                                                            .values(subject.insertedValueSet)\n                                                            .updateEntity(this_1.options && this_1.options.reload === false ? false : true)\n                                                            .callListeners(false)\n                                                            .execute()\n                                                            .then(function (insertResult) {\n                                                            subject.identifier = insertResult.identifiers[0];\n                                                            subject.generatedMap = insertResult.generatedMaps[0];\n                                                        })];\n                                                    case 3:\n                                                        _f.sent();\n                                                        if (!(subject.metadata.treeType === \"closure-table\")) return [3 /*break*/, 5];\n                                                        return [4 /*yield*/, new ClosureSubjectExecutor(this_1.queryRunner).insert(subject)];\n                                                    case 4:\n                                                        _f.sent();\n                                                        return [3 /*break*/, 7];\n                                                    case 5:\n                                                        if (!(subject.metadata.treeType === \"materialized-path\")) return [3 /*break*/, 7];\n                                                        return [4 /*yield*/, new MaterializedPathSubjectExecutor(this_1.queryRunner).insert(subject)];\n                                                    case 6:\n                                                        _f.sent();\n                                                        _f.label = 7;\n                                                    case 7: return [2 /*return*/];\n                                                }\n                                            });\n                                        };\n                                        _e.label = 5;\n                                    case 5:\n                                        _e.trys.push([5, 10, 11, 12]);\n                                        singleInsertSubjects_1 = (e_2 = void 0, __values(singleInsertSubjects)), singleInsertSubjects_1_1 = singleInsertSubjects_1.next();\n                                        _e.label = 6;\n                                    case 6:\n                                        if (!!singleInsertSubjects_1_1.done) return [3 /*break*/, 9];\n                                        subject = singleInsertSubjects_1_1.value;\n                                        return [5 /*yield**/, _loop_2(subject)];\n                                    case 7:\n                                        _e.sent();\n                                        _e.label = 8;\n                                    case 8:\n                                        singleInsertSubjects_1_1 = singleInsertSubjects_1.next();\n                                        return [3 /*break*/, 6];\n                                    case 9: return [3 /*break*/, 12];\n                                    case 10:\n                                        e_2_1 = _e.sent();\n                                        e_2 = { error: e_2_1 };\n                                        return [3 /*break*/, 12];\n                                    case 11:\n                                        try {\n                                            if (singleInsertSubjects_1_1 && !singleInsertSubjects_1_1.done && (_d = singleInsertSubjects_1.return)) _d.call(singleInsertSubjects_1);\n                                        }\n                                        finally { if (e_2) throw e_2.error; }\n                                        return [7 /*endfinally*/];\n                                    case 12:\n                                        subjects.forEach(function (subject) {\n                                            if (subject.generatedMap) {\n                                                subject.metadata.columns.forEach(function (column) {\n                                                    var value = column.getEntityValue(subject.generatedMap);\n                                                    if (value !== undefined && value !== null) {\n                                                        var preparedValue = _this.queryRunner.connection.driver.prepareHydratedValue(value, column);\n                                                        column.setEntityValue(subject.generatedMap, preparedValue);\n                                                    }\n                                                });\n                                            }\n                                        });\n                                        return [2 /*return*/];\n                                }\n                            });\n                        };\n                        this_1 = this;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 6, 7, 8]);\n                        groupedInsertSubjectKeys_1 = __values(groupedInsertSubjectKeys), groupedInsertSubjectKeys_1_1 = groupedInsertSubjectKeys_1.next();\n                        _c.label = 2;\n                    case 2:\n                        if (!!groupedInsertSubjectKeys_1_1.done) return [3 /*break*/, 5];\n                        groupName = groupedInsertSubjectKeys_1_1.value;\n                        return [5 /*yield**/, _loop_1(groupName)];\n                    case 3:\n                        _c.sent();\n                        _c.label = 4;\n                    case 4:\n                        groupedInsertSubjectKeys_1_1 = groupedInsertSubjectKeys_1.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_1_1 = _c.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (groupedInsertSubjectKeys_1_1 && !groupedInsertSubjectKeys_1_1.done && (_b = groupedInsertSubjectKeys_1.return)) _b.call(groupedInsertSubjectKeys_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates all given subjects in the database.\n     */\n    SubjectExecutor.prototype.executeUpdateOperations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var updateSubject, nestedSetSubjects, remainingSubjects, _a, _b, subject, nestedSetPromise;\n            var e_3, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        updateSubject = function (subject) { return __awaiter(_this, void 0, void 0, function () {\n                            var partialEntity, manager, updateMap, _a, updateQueryBuilder, updateResult, updateGeneratedMap_1;\n                            var _this = this;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        if (!subject.identifier)\n                                            throw new SubjectWithoutIdentifierError(subject);\n                                        if (!(this.queryRunner instanceof MongoQueryRunner)) return [3 /*break*/, 2];\n                                        partialEntity = this.cloneMongoSubjectEntity(subject);\n                                        if (subject.metadata.objectIdColumn && subject.metadata.objectIdColumn.propertyName) {\n                                            delete partialEntity[subject.metadata.objectIdColumn.propertyName];\n                                        }\n                                        if (subject.metadata.createDateColumn && subject.metadata.createDateColumn.propertyName) {\n                                            delete partialEntity[subject.metadata.createDateColumn.propertyName];\n                                        }\n                                        if (subject.metadata.updateDateColumn && subject.metadata.updateDateColumn.propertyName) {\n                                            partialEntity[subject.metadata.updateDateColumn.propertyName] = new Date();\n                                        }\n                                        manager = this.queryRunner.manager;\n                                        return [4 /*yield*/, manager.update(subject.metadata.target, subject.identifier, partialEntity)];\n                                    case 1:\n                                        _b.sent();\n                                        return [3 /*break*/, 11];\n                                    case 2:\n                                        updateMap = subject.createValueSetAndPopChangeMap();\n                                        _a = subject.metadata.treeType;\n                                        switch (_a) {\n                                            case \"nested-set\": return [3 /*break*/, 3];\n                                            case \"closure-table\": return [3 /*break*/, 5];\n                                            case \"materialized-path\": return [3 /*break*/, 7];\n                                        }\n                                        return [3 /*break*/, 9];\n                                    case 3: return [4 /*yield*/, new NestedSetSubjectExecutor(this.queryRunner).update(subject)];\n                                    case 4:\n                                        _b.sent();\n                                        return [3 /*break*/, 9];\n                                    case 5: return [4 /*yield*/, new ClosureSubjectExecutor(this.queryRunner).update(subject)];\n                                    case 6:\n                                        _b.sent();\n                                        return [3 /*break*/, 9];\n                                    case 7: return [4 /*yield*/, new MaterializedPathSubjectExecutor(this.queryRunner).update(subject)];\n                                    case 8:\n                                        _b.sent();\n                                        return [3 /*break*/, 9];\n                                    case 9:\n                                        updateQueryBuilder = this.queryRunner\n                                            .manager\n                                            .createQueryBuilder()\n                                            .update(subject.metadata.target)\n                                            .set(updateMap)\n                                            .updateEntity(this.options && this.options.reload === false ? false : true)\n                                            .callListeners(false);\n                                        if (subject.entity) {\n                                            updateQueryBuilder.whereEntity(subject.identifier);\n                                        }\n                                        else { // in this case identifier is just conditions object to update by\n                                            updateQueryBuilder.where(subject.identifier);\n                                        }\n                                        return [4 /*yield*/, updateQueryBuilder.execute()];\n                                    case 10:\n                                        updateResult = _b.sent();\n                                        updateGeneratedMap_1 = updateResult.generatedMaps[0];\n                                        if (updateGeneratedMap_1) {\n                                            subject.metadata.columns.forEach(function (column) {\n                                                var value = column.getEntityValue(updateGeneratedMap_1);\n                                                if (value !== undefined && value !== null) {\n                                                    var preparedValue = _this.queryRunner.connection.driver.prepareHydratedValue(value, column);\n                                                    column.setEntityValue(updateGeneratedMap_1, preparedValue);\n                                                }\n                                            });\n                                            if (!subject.generatedMap) {\n                                                subject.generatedMap = {};\n                                            }\n                                            Object.assign(subject.generatedMap, updateGeneratedMap_1);\n                                        }\n                                        _b.label = 11;\n                                    case 11: return [2 /*return*/];\n                                }\n                            });\n                        }); };\n                        nestedSetSubjects = [];\n                        remainingSubjects = [];\n                        try {\n                            for (_a = __values(this.updateSubjects), _b = _a.next(); !_b.done; _b = _a.next()) {\n                                subject = _b.value;\n                                if (subject.metadata.treeType === \"nested-set\") {\n                                    nestedSetSubjects.push(subject);\n                                }\n                                else {\n                                    remainingSubjects.push(subject);\n                                }\n                            }\n                        }\n                        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                        finally {\n                            try {\n                                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n                            }\n                            finally { if (e_3) throw e_3.error; }\n                        }\n                        nestedSetPromise = new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n                            var nestedSetSubjects_1, nestedSetSubjects_1_1, subject, error_1, e_4_1;\n                            var e_4, _a;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        _b.trys.push([0, 7, 8, 9]);\n                                        nestedSetSubjects_1 = __values(nestedSetSubjects), nestedSetSubjects_1_1 = nestedSetSubjects_1.next();\n                                        _b.label = 1;\n                                    case 1:\n                                        if (!!nestedSetSubjects_1_1.done) return [3 /*break*/, 6];\n                                        subject = nestedSetSubjects_1_1.value;\n                                        _b.label = 2;\n                                    case 2:\n                                        _b.trys.push([2, 4, , 5]);\n                                        return [4 /*yield*/, updateSubject(subject)];\n                                    case 3:\n                                        _b.sent();\n                                        return [3 /*break*/, 5];\n                                    case 4:\n                                        error_1 = _b.sent();\n                                        fail(error_1);\n                                        return [3 /*break*/, 5];\n                                    case 5:\n                                        nestedSetSubjects_1_1 = nestedSetSubjects_1.next();\n                                        return [3 /*break*/, 1];\n                                    case 6: return [3 /*break*/, 9];\n                                    case 7:\n                                        e_4_1 = _b.sent();\n                                        e_4 = { error: e_4_1 };\n                                        return [3 /*break*/, 9];\n                                    case 8:\n                                        try {\n                                            if (nestedSetSubjects_1_1 && !nestedSetSubjects_1_1.done && (_a = nestedSetSubjects_1.return)) _a.call(nestedSetSubjects_1);\n                                        }\n                                        finally { if (e_4) throw e_4.error; }\n                                        return [7 /*endfinally*/];\n                                    case 9:\n                                        ok();\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); });\n                        // Run all remaning subjects in parallel\n                        return [4 /*yield*/, Promise.all(__spreadArray(__spreadArray([], __read(remainingSubjects.map(updateSubject)), false), [nestedSetPromise], false))];\n                    case 1:\n                        // Run all remaning subjects in parallel\n                        _d.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Removes all given subjects from the database.\n     *\n     * todo: we need to apply topological sort here as well\n     */\n    SubjectExecutor.prototype.executeRemoveOperations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, groupedRemoveSubjects, groupedRemoveSubjectKeys, groupedRemoveSubjectKeys_1, groupedRemoveSubjectKeys_1_1, groupName, subjects, deleteMaps, manager, _b, e_5_1;\n            var e_5, _c;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        _a = __read(this.groupBulkSubjects(this.removeSubjects, \"delete\"), 2), groupedRemoveSubjects = _a[0], groupedRemoveSubjectKeys = _a[1];\n                        _d.label = 1;\n                    case 1:\n                        _d.trys.push([1, 13, 14, 15]);\n                        groupedRemoveSubjectKeys_1 = __values(groupedRemoveSubjectKeys), groupedRemoveSubjectKeys_1_1 = groupedRemoveSubjectKeys_1.next();\n                        _d.label = 2;\n                    case 2:\n                        if (!!groupedRemoveSubjectKeys_1_1.done) return [3 /*break*/, 12];\n                        groupName = groupedRemoveSubjectKeys_1_1.value;\n                        subjects = groupedRemoveSubjects[groupName];\n                        deleteMaps = subjects.map(function (subject) {\n                            if (!subject.identifier)\n                                throw new SubjectWithoutIdentifierError(subject);\n                            return subject.identifier;\n                        });\n                        if (!(this.queryRunner instanceof MongoQueryRunner)) return [3 /*break*/, 4];\n                        manager = this.queryRunner.manager;\n                        return [4 /*yield*/, manager.delete(subjects[0].metadata.target, deleteMaps)];\n                    case 3:\n                        _d.sent();\n                        return [3 /*break*/, 11];\n                    case 4:\n                        _b = subjects[0].metadata.treeType;\n                        switch (_b) {\n                            case \"nested-set\": return [3 /*break*/, 5];\n                            case \"closure-table\": return [3 /*break*/, 7];\n                        }\n                        return [3 /*break*/, 9];\n                    case 5: return [4 /*yield*/, new NestedSetSubjectExecutor(this.queryRunner).remove(subjects)];\n                    case 6:\n                        _d.sent();\n                        return [3 /*break*/, 9];\n                    case 7: return [4 /*yield*/, new ClosureSubjectExecutor(this.queryRunner).remove(subjects)];\n                    case 8:\n                        _d.sent();\n                        return [3 /*break*/, 9];\n                    case 9: \n                    // here we execute our deletion query\n                    // we don't need to specify entities and set update entity to true since the only thing query builder\n                    // will do for use is a primary keys deletion which is handled by us later once persistence is finished\n                    // also, we disable listeners because we call them on our own in persistence layer\n                    return [4 /*yield*/, this.queryRunner\n                            .manager\n                            .createQueryBuilder()\n                            .delete()\n                            .from(subjects[0].metadata.target)\n                            .where(deleteMaps)\n                            .callListeners(false)\n                            .execute()];\n                    case 10:\n                        // here we execute our deletion query\n                        // we don't need to specify entities and set update entity to true since the only thing query builder\n                        // will do for use is a primary keys deletion which is handled by us later once persistence is finished\n                        // also, we disable listeners because we call them on our own in persistence layer\n                        _d.sent();\n                        _d.label = 11;\n                    case 11:\n                        groupedRemoveSubjectKeys_1_1 = groupedRemoveSubjectKeys_1.next();\n                        return [3 /*break*/, 2];\n                    case 12: return [3 /*break*/, 15];\n                    case 13:\n                        e_5_1 = _d.sent();\n                        e_5 = { error: e_5_1 };\n                        return [3 /*break*/, 15];\n                    case 14:\n                        try {\n                            if (groupedRemoveSubjectKeys_1_1 && !groupedRemoveSubjectKeys_1_1.done && (_c = groupedRemoveSubjectKeys_1.return)) _c.call(groupedRemoveSubjectKeys_1);\n                        }\n                        finally { if (e_5) throw e_5.error; }\n                        return [7 /*endfinally*/];\n                    case 15: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SubjectExecutor.prototype.cloneMongoSubjectEntity = function (subject) {\n        var e_6, _a;\n        var target = {};\n        if (subject.entity) {\n            try {\n                for (var _b = __values(subject.metadata.columns), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var column = _c.value;\n                    OrmUtils.mergeDeep(target, column.getEntityValueMap(subject.entity));\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n        }\n        return target;\n    };\n    /**\n     * Soft-removes all given subjects in the database.\n     */\n    SubjectExecutor.prototype.executeSoftRemoveOperations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(this.softRemoveSubjects.map(function (subject) { return __awaiter(_this, void 0, void 0, function () {\n                            var updateResult, partialEntity, manager, softDeleteQueryBuilder;\n                            var _this = this;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        if (!subject.identifier)\n                                            throw new SubjectWithoutIdentifierError(subject);\n                                        if (!(this.queryRunner instanceof MongoQueryRunner)) return [3 /*break*/, 2];\n                                        partialEntity = this.cloneMongoSubjectEntity(subject);\n                                        if (subject.metadata.objectIdColumn && subject.metadata.objectIdColumn.propertyName) {\n                                            delete partialEntity[subject.metadata.objectIdColumn.propertyName];\n                                        }\n                                        if (subject.metadata.createDateColumn && subject.metadata.createDateColumn.propertyName) {\n                                            delete partialEntity[subject.metadata.createDateColumn.propertyName];\n                                        }\n                                        if (subject.metadata.updateDateColumn && subject.metadata.updateDateColumn.propertyName) {\n                                            partialEntity[subject.metadata.updateDateColumn.propertyName] = new Date();\n                                        }\n                                        if (subject.metadata.deleteDateColumn && subject.metadata.deleteDateColumn.propertyName) {\n                                            partialEntity[subject.metadata.deleteDateColumn.propertyName] = new Date();\n                                        }\n                                        manager = this.queryRunner.manager;\n                                        return [4 /*yield*/, manager.update(subject.metadata.target, subject.identifier, partialEntity)];\n                                    case 1:\n                                        updateResult = _a.sent();\n                                        return [3 /*break*/, 4];\n                                    case 2:\n                                        softDeleteQueryBuilder = this.queryRunner\n                                            .manager\n                                            .createQueryBuilder()\n                                            .softDelete()\n                                            .from(subject.metadata.target)\n                                            .updateEntity(this.options && this.options.reload === false ? false : true)\n                                            .callListeners(false);\n                                        if (subject.entity) {\n                                            softDeleteQueryBuilder.whereEntity(subject.identifier);\n                                        }\n                                        else { // in this case identifier is just conditions object to update by\n                                            softDeleteQueryBuilder.where(subject.identifier);\n                                        }\n                                        return [4 /*yield*/, softDeleteQueryBuilder.execute()];\n                                    case 3:\n                                        updateResult = _a.sent();\n                                        _a.label = 4;\n                                    case 4:\n                                        subject.generatedMap = updateResult.generatedMaps[0];\n                                        if (subject.generatedMap) {\n                                            subject.metadata.columns.forEach(function (column) {\n                                                var value = column.getEntityValue(subject.generatedMap);\n                                                if (value !== undefined && value !== null) {\n                                                    var preparedValue = _this.queryRunner.connection.driver.prepareHydratedValue(value, column);\n                                                    column.setEntityValue(subject.generatedMap, preparedValue);\n                                                }\n                                            });\n                                        }\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Recovers all given subjects in the database.\n     */\n    SubjectExecutor.prototype.executeRecoverOperations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(this.recoverSubjects.map(function (subject) { return __awaiter(_this, void 0, void 0, function () {\n                            var updateResult, partialEntity, manager, softDeleteQueryBuilder;\n                            var _this = this;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        if (!subject.identifier)\n                                            throw new SubjectWithoutIdentifierError(subject);\n                                        if (!(this.queryRunner instanceof MongoQueryRunner)) return [3 /*break*/, 2];\n                                        partialEntity = this.cloneMongoSubjectEntity(subject);\n                                        if (subject.metadata.objectIdColumn && subject.metadata.objectIdColumn.propertyName) {\n                                            delete partialEntity[subject.metadata.objectIdColumn.propertyName];\n                                        }\n                                        if (subject.metadata.createDateColumn && subject.metadata.createDateColumn.propertyName) {\n                                            delete partialEntity[subject.metadata.createDateColumn.propertyName];\n                                        }\n                                        if (subject.metadata.updateDateColumn && subject.metadata.updateDateColumn.propertyName) {\n                                            partialEntity[subject.metadata.updateDateColumn.propertyName] = new Date();\n                                        }\n                                        if (subject.metadata.deleteDateColumn && subject.metadata.deleteDateColumn.propertyName) {\n                                            partialEntity[subject.metadata.deleteDateColumn.propertyName] = null;\n                                        }\n                                        manager = this.queryRunner.manager;\n                                        return [4 /*yield*/, manager.update(subject.metadata.target, subject.identifier, partialEntity)];\n                                    case 1:\n                                        updateResult = _a.sent();\n                                        return [3 /*break*/, 4];\n                                    case 2:\n                                        softDeleteQueryBuilder = this.queryRunner\n                                            .manager\n                                            .createQueryBuilder()\n                                            .restore()\n                                            .from(subject.metadata.target)\n                                            .updateEntity(this.options && this.options.reload === false ? false : true)\n                                            .callListeners(false);\n                                        if (subject.entity) {\n                                            softDeleteQueryBuilder.whereEntity(subject.identifier);\n                                        }\n                                        else { // in this case identifier is just conditions object to update by\n                                            softDeleteQueryBuilder.where(subject.identifier);\n                                        }\n                                        return [4 /*yield*/, softDeleteQueryBuilder.execute()];\n                                    case 3:\n                                        updateResult = _a.sent();\n                                        _a.label = 4;\n                                    case 4:\n                                        subject.generatedMap = updateResult.generatedMaps[0];\n                                        if (subject.generatedMap) {\n                                            subject.metadata.columns.forEach(function (column) {\n                                                var value = column.getEntityValue(subject.generatedMap);\n                                                if (value !== undefined && value !== null) {\n                                                    var preparedValue = _this.queryRunner.connection.driver.prepareHydratedValue(value, column);\n                                                    column.setEntityValue(subject.generatedMap, preparedValue);\n                                                }\n                                            });\n                                        }\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates all special columns of the saving entities (create date, update date, version, etc.).\n     * Also updates nullable columns and columns with default values.\n     */\n    SubjectExecutor.prototype.updateSpecialColumnsInPersistedEntities = function () {\n        var _this = this;\n        // update inserted entity properties\n        if (this.insertSubjects.length)\n            this.updateSpecialColumnsInInsertedAndUpdatedEntities(this.insertSubjects);\n        // update updated entity properties\n        if (this.updateSubjects.length)\n            this.updateSpecialColumnsInInsertedAndUpdatedEntities(this.updateSubjects);\n        // update soft-removed entity properties\n        if (this.updateSubjects.length)\n            this.updateSpecialColumnsInInsertedAndUpdatedEntities(this.softRemoveSubjects);\n        // update recovered entity properties\n        if (this.updateSubjects.length)\n            this.updateSpecialColumnsInInsertedAndUpdatedEntities(this.recoverSubjects);\n        // remove ids from the entities that were removed\n        if (this.removeSubjects.length) {\n            this.removeSubjects.forEach(function (subject) {\n                if (!subject.entity)\n                    return;\n                subject.metadata.primaryColumns.forEach(function (primaryColumn) {\n                    primaryColumn.setEntityValue(subject.entity, undefined);\n                });\n            });\n        }\n        // other post-persist updations\n        this.allSubjects.forEach(function (subject) {\n            if (!subject.entity)\n                return;\n            subject.metadata.relationIds.forEach(function (relationId) {\n                relationId.setValue(subject.entity);\n            });\n            // mongo _id remove\n            if (_this.queryRunner instanceof MongoQueryRunner) {\n                if (subject.metadata.objectIdColumn\n                    && subject.metadata.objectIdColumn.databaseName\n                    && subject.metadata.objectIdColumn.databaseName !== subject.metadata.objectIdColumn.propertyName) {\n                    delete subject.entity[subject.metadata.objectIdColumn.databaseName];\n                }\n            }\n        });\n    };\n    /**\n     * Updates all special columns of the saving entities (create date, update date, version, etc.).\n     * Also updates nullable columns and columns with default values.\n     */\n    SubjectExecutor.prototype.updateSpecialColumnsInInsertedAndUpdatedEntities = function (subjects) {\n        var _this = this;\n        subjects.forEach(function (subject) {\n            if (!subject.entity)\n                return;\n            // set values to \"null\" for nullable columns that did not have values\n            subject.metadata.columns.forEach(function (column) {\n                // if table inheritance is used make sure this column is not child's column\n                if (subject.metadata.childEntityMetadatas.length > 0 && subject.metadata.childEntityMetadatas.map(function (metadata) { return metadata.target; }).indexOf(column.target) !== -1)\n                    return;\n                // entities does not have virtual columns\n                if (column.isVirtual)\n                    return;\n                // update nullable columns\n                if (column.isNullable) {\n                    var columnValue = column.getEntityValue(subject.entity);\n                    if (columnValue === undefined)\n                        column.setEntityValue(subject.entity, null);\n                }\n                // update relational columns\n                if (subject.updatedRelationMaps.length > 0) {\n                    subject.updatedRelationMaps.forEach(function (updatedRelationMap) {\n                        updatedRelationMap.relation.joinColumns.forEach(function (column) {\n                            if (column.isVirtual === true)\n                                return;\n                            column.setEntityValue(subject.entity, updatedRelationMap.value instanceof Object ? column.referencedColumn.getEntityValue(updatedRelationMap.value) : updatedRelationMap.value);\n                        });\n                    });\n                }\n            });\n            // merge into entity all generated values returned by a database\n            if (subject.generatedMap)\n                _this.queryRunner.manager.merge(subject.metadata.target, subject.entity, subject.generatedMap);\n        });\n    };\n    /**\n     * Groups subjects by metadata names (by tables) to make bulk insertions and deletions possible.\n     * However there are some limitations with bulk insertions of data into tables with generated (increment) columns\n     * in some drivers. Some drivers like mysql and sqlite does not support returning multiple generated columns\n     * after insertion and can only return a single generated column value, that's why its not possible to do bulk insertion,\n     * because it breaks insertion result's generatedMap and leads to problems when this subject is used in other subjects saves.\n     * That's why we only support bulking in junction tables for those drivers.\n     *\n     * Other drivers like postgres and sql server support RETURNING / OUTPUT statement which allows to return generated\n     * id for each inserted row, that's why bulk insertion is not limited to junction tables in there.\n     */\n    SubjectExecutor.prototype.groupBulkSubjects = function (subjects, type) {\n        var group = {};\n        var keys = [];\n        var groupingAllowed = type === \"delete\" || this.queryRunner.connection.driver.isReturningSqlSupported();\n        subjects.forEach(function (subject, index) {\n            var key = groupingAllowed || subject.metadata.isJunction ? subject.metadata.name : subject.metadata.name + \"_\" + index;\n            if (!group[key]) {\n                group[key] = [subject];\n                keys.push(key);\n            }\n            else {\n                group[key].push(subject);\n            }\n        });\n        return [group, keys];\n    };\n    return SubjectExecutor;\n}());\nexport { SubjectExecutor };\n\n//# sourceMappingURL=SubjectExecutor.js.map\n","import { __read, __spreadArray } from \"tslib\";\nimport { OrmUtils } from \"../util/OrmUtils\";\n/**\n * Subject is a subject of persistence.\n * It holds information about each entity that needs to be persisted:\n * - what entity should be persisted\n * - what is database representation of the persisted entity\n * - what entity metadata of the persisted entity\n * - what is allowed to with persisted entity (insert/update/remove)\n *\n * Having this collection of subjects we can perform database queries.\n */\nvar Subject = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function Subject(options) {\n        var _a;\n        /**\n         * Subject identifier.\n         * This identifier is not limited to table entity primary columns.\n         * This can be entity id or ids as well as some unique entity properties, like name or title.\n         * Insert / Update / Remove operation will be executed by a given identifier.\n         */\n        this.identifier = undefined;\n        /**\n         * Copy of entity but with relational ids fulfilled.\n         */\n        this.entityWithFulfilledIds = undefined;\n        /**\n         * Indicates if database entity was loaded.\n         * No matter if it was found or not, it indicates the fact of loading.\n         */\n        this.databaseEntityLoaded = false;\n        /**\n         * Changes needs to be applied in the database for the given subject.\n         */\n        this.changeMaps = [];\n        /**\n         * Indicates if this subject can be inserted into the database.\n         * This means that this subject either is newly persisted, either can be inserted by cascades.\n         */\n        this.canBeInserted = false;\n        /**\n         * Indicates if this subject can be updated in the database.\n         * This means that this subject either was persisted, either can be updated by cascades.\n         */\n        this.canBeUpdated = false;\n        /**\n         * Indicates if this subject MUST be removed from the database.\n         * This means that this subject either was removed, either was removed by cascades.\n         */\n        this.mustBeRemoved = false;\n        /**\n         * Indicates if this subject can be soft-removed from the database.\n         * This means that this subject either was soft-removed, either was soft-removed by cascades.\n         */\n        this.canBeSoftRemoved = false;\n        /**\n         * Indicates if this subject can be recovered from the database.\n         * This means that this subject either was recovered, either was recovered by cascades.\n         */\n        this.canBeRecovered = false;\n        /**\n         * Relations updated by the change maps.\n         */\n        this.updatedRelationMaps = [];\n        /**\n         * List of updated columns\n         */\n        this.diffColumns = [];\n        /**\n         * List of updated relations\n         */\n        this.diffRelations = [];\n        this.metadata = options.metadata;\n        this.entity = options.entity;\n        this.parentSubject = options.parentSubject;\n        if (options.canBeInserted !== undefined)\n            this.canBeInserted = options.canBeInserted;\n        if (options.canBeUpdated !== undefined)\n            this.canBeUpdated = options.canBeUpdated;\n        if (options.mustBeRemoved !== undefined)\n            this.mustBeRemoved = options.mustBeRemoved;\n        if (options.canBeSoftRemoved !== undefined)\n            this.canBeSoftRemoved = options.canBeSoftRemoved;\n        if (options.canBeRecovered !== undefined)\n            this.canBeRecovered = options.canBeRecovered;\n        if (options.identifier !== undefined)\n            this.identifier = options.identifier;\n        if (options.changeMaps !== undefined)\n            (_a = this.changeMaps).push.apply(_a, __spreadArray([], __read(options.changeMaps), false));\n        this.recompute();\n    }\n    Object.defineProperty(Subject.prototype, \"mustBeInserted\", {\n        // -------------------------------------------------------------------------\n        // Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Checks if this subject must be inserted into the database.\n         * Subject can be inserted into the database if it is allowed to be inserted (explicitly persisted or by cascades)\n         * and if it does not have database entity set.\n         */\n        get: function () {\n            return this.canBeInserted && !this.databaseEntity;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Subject.prototype, \"mustBeUpdated\", {\n        /**\n         * Checks if this subject must be updated into the database.\n         * Subject can be updated in the database if it is allowed to be updated (explicitly persisted or by cascades)\n         * and if it does have differentiated columns or relations.\n         */\n        get: function () {\n            return this.canBeUpdated &&\n                this.identifier &&\n                (this.databaseEntityLoaded === false || (this.databaseEntityLoaded && this.databaseEntity)) &&\n                // ((this.entity && this.databaseEntity) || (!this.entity && !this.databaseEntity)) &&\n                this.changeMaps.length > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Subject.prototype, \"mustBeSoftRemoved\", {\n        /**\n         * Checks if this subject must be soft-removed into the database.\n         * Subject can be updated in the database if it is allowed to be soft-removed (explicitly persisted or by cascades)\n         * and if it does have differentiated columns or relations.\n         */\n        get: function () {\n            return this.canBeSoftRemoved &&\n                this.identifier &&\n                (this.databaseEntityLoaded === false || (this.databaseEntityLoaded && this.databaseEntity));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Subject.prototype, \"mustBeRecovered\", {\n        /**\n         * Checks if this subject must be recovered into the database.\n         * Subject can be updated in the database if it is allowed to be recovered (explicitly persisted or by cascades)\n         * and if it does have differentiated columns or relations.\n         */\n        get: function () {\n            return this.canBeRecovered &&\n                this.identifier &&\n                (this.databaseEntityLoaded === false || (this.databaseEntityLoaded && this.databaseEntity));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a value set needs to be inserted / updated in the database.\n     * Value set is based on the entity and change maps of the subject.\n     * Important note: this method pops data from this subject's change maps.\n     */\n    Subject.prototype.createValueSetAndPopChangeMap = function () {\n        var _this = this;\n        var changeMapsWithoutValues = [];\n        var changeSet = this.changeMaps.reduce(function (updateMap, changeMap) {\n            var value = changeMap.value;\n            if (value instanceof Subject) {\n                // referenced columns can refer on values both which were just inserted and which were present in the model\n                // if entity was just inserted valueSets must contain all values from the entity and values just inserted in the database\n                // so, here we check if we have a value set then we simply use it as value to get our reference column values\n                // otherwise simply use an entity which cannot be just inserted at the moment and have all necessary data\n                value = value.insertedValueSet ? value.insertedValueSet : value.entity;\n            }\n            // value = changeMap.valueFactory ? changeMap.valueFactory(value) : changeMap.column.createValueMap(value);\n            var valueMap;\n            if (_this.metadata.isJunction && changeMap.column) {\n                valueMap = changeMap.column.createValueMap(changeMap.column.referencedColumn.getEntityValue(value));\n            }\n            else if (changeMap.column) {\n                valueMap = changeMap.column.createValueMap(value);\n            }\n            else if (changeMap.relation) {\n                // value can be a related object, for example: post.question = { id: 1 }\n                // or value can be a null or direct relation id, e.g. post.question = 1\n                // if its a direction relation id then we just set it to the valueMap,\n                // however if its an object then we need to extract its relation id map and set it to the valueMap\n                if (value instanceof Object && !(value instanceof Buffer)) {\n                    // get relation id, e.g. referenced column name and its value,\n                    // for example: { id: 1 } which then will be set to relation, e.g. post.category = { id: 1 }\n                    var relationId = changeMap.relation.getRelationIdMap(value);\n                    // but relation id can be empty, for example in the case when you insert a new post with category\n                    // and both post and category are newly inserted objects (by cascades) and in this case category will not have id\n                    // this means we need to insert post without question id and update post's questionId once question be inserted\n                    // that's why we create a new changeMap operation for future updation of the post entity\n                    if (relationId === undefined) {\n                        changeMapsWithoutValues.push(changeMap);\n                        _this.canBeUpdated = true;\n                        return updateMap;\n                    }\n                    valueMap = changeMap.relation.createValueMap(relationId);\n                    _this.updatedRelationMaps.push({ relation: changeMap.relation, value: relationId });\n                }\n                else { // value can be \"null\" or direct relation id here\n                    valueMap = changeMap.relation.createValueMap(value);\n                    _this.updatedRelationMaps.push({ relation: changeMap.relation, value: value });\n                }\n            }\n            OrmUtils.mergeDeep(updateMap, valueMap);\n            return updateMap;\n        }, {});\n        this.changeMaps = changeMapsWithoutValues;\n        return changeSet;\n    };\n    /**\n     * Recomputes entityWithFulfilledIds and identifier when entity changes.\n     */\n    Subject.prototype.recompute = function () {\n        var _this = this;\n        if (this.entity) {\n            this.entityWithFulfilledIds = Object.assign({}, this.entity);\n            if (this.parentSubject) {\n                this.metadata.primaryColumns.forEach(function (primaryColumn) {\n                    if (primaryColumn.relationMetadata && primaryColumn.relationMetadata.inverseEntityMetadata === _this.parentSubject.metadata) {\n                        var value = primaryColumn.referencedColumn.getEntityValue(_this.parentSubject.entity);\n                        primaryColumn.setEntityValue(_this.entityWithFulfilledIds, value);\n                    }\n                });\n            }\n            this.identifier = this.metadata.getEntityIdMap(this.entityWithFulfilledIds);\n        }\n        else if (this.databaseEntity) {\n            this.identifier = this.metadata.getEntityIdMap(this.databaseEntity);\n        }\n    };\n    return Subject;\n}());\nexport { Subject };\n\n//# sourceMappingURL=Subject.js.map\n","import { Subject } from \"../Subject\";\nimport { OrmUtils } from \"../../util/OrmUtils\";\nimport { EntityMetadata } from \"../../metadata/EntityMetadata\";\n/**\n * Builds operations needs to be executed for one-to-many relations of the given subjects.\n *\n * by example: post contains one-to-many relation with category in the property called \"categories\", e.g.\n *             @OneToMany(type => Category, category => category.post) categories: Category[]\n *             If user adds categories into the post and saves post we need to bind them.\n *             This operation requires updation of category table since its owner of the relation and contains a join column.\n *\n * note: this class shares lot of things with OneToOneInverseSideOperationBuilder, so when you change this class\n *       make sure to reflect changes there as well.\n */\nvar OneToManySubjectBuilder = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function OneToManySubjectBuilder(subjects) {\n        this.subjects = subjects;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds all required operations.\n     */\n    OneToManySubjectBuilder.prototype.build = function () {\n        var _this = this;\n        this.subjects.forEach(function (subject) {\n            subject.metadata.oneToManyRelations.forEach(function (relation) {\n                // skip relations for which persistence is disabled\n                if (relation.persistenceEnabled === false)\n                    return;\n                _this.buildForSubjectRelation(subject, relation);\n            });\n        });\n    };\n    // ---------------------------------------------------------------------\n    // Protected Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds operations for a given subject and relation.\n     *\n     * by example: subject is \"post\" entity we are saving here and relation is \"categories\" inside it here.\n     */\n    OneToManySubjectBuilder.prototype.buildForSubjectRelation = function (subject, relation) {\n        // prepare objects (relation id maps) for the database entity\n        // by example: since subject is a post, we are expecting to get all post's categories saved in the database here,\n        //             particularly their relation ids, e.g. category ids stored in the database\n        var _this = this;\n        // in most cases relatedEntityDatabaseValues will contain only the entity key properties.\n        // this is because subject.databaseEntity contains relations with loaded relation ids only.\n        // however if the entity uses the afterLoad hook to calculate any properties, the fetched \"key object\" might include ADDITIONAL properties.\n        // to handle such situations, we pass the data to relation.inverseEntityMetadata.getEntityIdMap to extract the key without any other properties.\n        var relatedEntityDatabaseRelationIds = [];\n        if (subject.databaseEntity) { // related entities in the database can exist only if this entity (post) is saved\n            var relatedEntityDatabaseRelation = relation.getEntityValue(subject.databaseEntity);\n            if (relatedEntityDatabaseRelation) {\n                relatedEntityDatabaseRelationIds = relatedEntityDatabaseRelation.map(function (entity) { return relation.inverseEntityMetadata.getEntityIdMap(entity); });\n            }\n        }\n        // get related entities of persisted entity\n        // by example: get categories from the passed to persist post entity\n        var relatedEntities = relation.getEntityValue(subject.entity);\n        if (relatedEntities === null) // we treat relations set to null as removed, so we don't skip it\n            relatedEntities = [];\n        if (relatedEntities === undefined) // if relation is undefined then nothing to update\n            return;\n        // extract only relation ids from the related entities, since we only need them for comparison\n        // by example: extract from categories only relation ids (category id, or let's say category title, depend on join column options)\n        var relatedPersistedEntityRelationIds = [];\n        relatedEntities.forEach(function (relatedEntity) {\n            var relationIdMap = relation.inverseEntityMetadata.getEntityIdMap(relatedEntity); // by example: relationIdMap is category.id map here, e.g. { id: ... }\n            // try to find a subject of this related entity, maybe it was loaded or was marked for persistence\n            var relatedEntitySubject = _this.subjects.find(function (subject) {\n                return subject.entity === relatedEntity;\n            });\n            // if subject with entity was found take subject identifier as relation id map since it may contain extra properties resolved\n            if (relatedEntitySubject)\n                relationIdMap = relatedEntitySubject.identifier;\n            // if relationIdMap is undefined then it means user binds object which is not saved in the database yet\n            // by example: if post contains categories which does not have ids yet (because they are new)\n            //             it means they are always newly inserted and relation update operation always must be created for them\n            //             it does not make sense to perform difference operation for them for both add and remove actions\n            if (!relationIdMap) {\n                // we decided to remove this error because it brings complications when saving object with non-saved entities\n                // if (!relatedEntitySubject)\n                //     throw new TypeORMError(`One-to-many relation \"${relation.entityMetadata.name}.${relation.propertyPath}\" contains ` +\n                //         `entities which do not exist in the database yet, thus they cannot be bind in the database. ` +\n                //         `Please setup cascade insertion or save entities before binding it.`);\n                if (!relatedEntitySubject)\n                    return;\n                // okay, so related subject exist and its marked for insertion, then add a new change map\n                // by example: this will tell category to insert into its post relation our post we are working with\n                //             relatedEntitySubject is newly inserted CategorySubject\n                //             relation.inverseRelation is ManyToOne relation inside Category\n                //             subject is Post needs to be inserted into Category\n                relatedEntitySubject.changeMaps.push({\n                    relation: relation.inverseRelation,\n                    value: subject\n                });\n                return;\n            }\n            // check if this binding really exist in the database\n            // by example: find our category if its already bind in the database\n            var relationIdInDatabaseSubjectRelation = relatedEntityDatabaseRelationIds.find(function (relatedDatabaseEntityRelationId) {\n                return OrmUtils.compareIds(relationIdMap, relatedDatabaseEntityRelationId);\n            });\n            // if relationIdMap DOES NOT exist in the subject's relation in the database it means its a new relation and we need to \"bind\" them\n            // by example: this will tell category to insert into its post relation our post we are working with\n            //             relatedEntitySubject is newly inserted CategorySubject\n            //             relation.inverseRelation is ManyToOne relation inside Category\n            //             subject is Post needs to be inserted into Category\n            if (!relationIdInDatabaseSubjectRelation) {\n                // if there is no relatedEntitySubject then it means \"category\" wasn't persisted,\n                // but since we are going to update \"category\" table (since its an owning side of relation with join column)\n                // we create a new subject here:\n                if (!relatedEntitySubject) {\n                    relatedEntitySubject = new Subject({\n                        metadata: relation.inverseEntityMetadata,\n                        parentSubject: subject,\n                        canBeUpdated: true,\n                        identifier: relationIdMap\n                    });\n                    _this.subjects.push(relatedEntitySubject);\n                }\n                relatedEntitySubject.changeMaps.push({\n                    relation: relation.inverseRelation,\n                    value: subject\n                });\n            }\n            // if related entity has relation id then we add it to the list of relation ids\n            // this list will be used later to compare with database relation ids to find a difference\n            // what exist in this array and does not exist in the database are newly inserted relations\n            // what does not exist in this array, but exist in the database are removed relations\n            // removed relations are set to null from inverse side of relation\n            relatedPersistedEntityRelationIds.push(relationIdMap);\n        });\n        // find what related entities were added and what were removed based on difference between what we save and what database has\n        EntityMetadata\n            .difference(relatedEntityDatabaseRelationIds, relatedPersistedEntityRelationIds)\n            .forEach(function (removedRelatedEntityRelationId) {\n            // todo: probably we can improve this in the future by finding entity with column those values,\n            // todo: maybe it was already in persistence process. This is possible due to unique requirements of join columns\n            // we create a new subject which operations will be executed in subject operation executor\n            var removedRelatedEntitySubject = new Subject({\n                metadata: relation.inverseEntityMetadata,\n                parentSubject: subject,\n                identifier: removedRelatedEntityRelationId,\n            });\n            if (!relation.inverseRelation || relation.inverseRelation.orphanedRowAction === \"nullify\") {\n                removedRelatedEntitySubject.canBeUpdated = true;\n                removedRelatedEntitySubject.changeMaps = [{\n                        relation: relation.inverseRelation,\n                        value: null\n                    }];\n            }\n            else if (relation.inverseRelation.orphanedRowAction === \"delete\") {\n                removedRelatedEntitySubject.mustBeRemoved = true;\n            }\n            _this.subjects.push(removedRelatedEntitySubject);\n        });\n    };\n    return OneToManySubjectBuilder;\n}());\nexport { OneToManySubjectBuilder };\n\n//# sourceMappingURL=OneToManySubjectBuilder.js.map\n","import { Subject } from \"../Subject\";\nimport { OrmUtils } from \"../../util/OrmUtils\";\n/**\n * Builds operations needs to be executed for one-to-one non-owner relations of the given subjects.\n *\n * by example: post contains one-to-one non-owner relation with category in the property called \"category\", e.g.\n *             @OneToOne(type => Category, category => category.post) category: Category\n *             If user sets a category into the post and saves post we need to bind them.\n *             This operation requires updation of category table since its owner of the relation and contains a join column.\n *\n * note: this class shares lot of things with OneToManyUpdateBuilder, so when you change this class\n *       make sure to reflect changes there as well.\n */\nvar OneToOneInverseSideSubjectBuilder = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function OneToOneInverseSideSubjectBuilder(subjects) {\n        this.subjects = subjects;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds all required operations.\n     */\n    OneToOneInverseSideSubjectBuilder.prototype.build = function () {\n        var _this = this;\n        this.subjects.forEach(function (subject) {\n            subject.metadata.oneToOneRelations.forEach(function (relation) {\n                // we don't need owning relations, this operation is only for inverse side of one-to-one relations\n                // skip relations for which persistence is disabled\n                if (relation.isOwning || relation.persistenceEnabled === false)\n                    return;\n                _this.buildForSubjectRelation(subject, relation);\n            });\n        });\n    };\n    // ---------------------------------------------------------------------\n    // Protected Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds operations for a given subject and relation.\n     *\n     * by example: subject is \"post\" entity we are saving here and relation is \"category\" inside it here.\n     */\n    OneToOneInverseSideSubjectBuilder.prototype.buildForSubjectRelation = function (subject, relation) {\n        // prepare objects (relation id map) for the database entity\n        // note: subject.databaseEntity contains relation with loaded relation id only (id map)\n        // by example: since subject is a post, we are expecting to get post's category saved in the database here,\n        //             particularly its relation id, e.g. category id stored in the database\n        var relatedEntityDatabaseRelationId = undefined;\n        if (subject.databaseEntity) // related entity in the database can exist only if this entity (post) is saved\n            relatedEntityDatabaseRelationId = relation.getEntityValue(subject.databaseEntity);\n        // get related entities of persisted entity\n        // by example: get category from the passed to persist post entity\n        var relatedEntity = relation.getEntityValue(subject.entity); // by example: relatedEntity is a category here\n        if (relatedEntity === undefined) // if relation is undefined then nothing to update\n            return;\n        // if related entity is null then we need to check if there a bind in the database and unset it\n        // if there is no bind in the entity then we don't need to do anything\n        // by example: if post.category = null and category has this post in the database then we unset it\n        if (relatedEntity === null) {\n            // it makes sense to update database only there is a previously set value in the database\n            if (relatedEntityDatabaseRelationId) {\n                // todo: probably we can improve this in the future by finding entity with column those values,\n                // todo: maybe it was already in persistence process. This is possible due to unique requirements of join columns\n                // we create a new subject which operations will be executed in subject operation executor\n                var removedRelatedEntitySubject = new Subject({\n                    metadata: relation.inverseEntityMetadata,\n                    parentSubject: subject,\n                    canBeUpdated: true,\n                    identifier: relatedEntityDatabaseRelationId,\n                    changeMaps: [{\n                            relation: relation.inverseRelation,\n                            value: null\n                        }]\n                });\n                this.subjects.push(removedRelatedEntitySubject);\n            }\n            return;\n        } // else means entity is bind in the database\n        // extract only relation id from the related entities, since we only need it for comparision\n        // by example: extract from category only relation id (category id, or let's say category title, depend on join column options)\n        var relationIdMap = relation.inverseEntityMetadata.getEntityIdMap(relatedEntity); // by example: relationIdMap is category.id map here, e.g. { id: ... }\n        // try to find a subject of this related entity, maybe it was loaded or was marked for persistence\n        var relatedEntitySubject = this.subjects.find(function (operateSubject) {\n            return !!operateSubject.entity && operateSubject.entity === relatedEntity;\n        });\n        // if subject with entity was found take subject identifier as relation id map since it may contain extra properties resolved\n        if (relatedEntitySubject)\n            relationIdMap = relatedEntitySubject.identifier;\n        // if relationIdMap is undefined then it means user binds object which is not saved in the database yet\n        // by example: if post contains category which does not have id(s) yet (because its a new category)\n        //             it means its always newly inserted and relation update operation always must be created for it\n        //             it does not make sense to perform difference operation for it for both add and remove actions\n        if (!relationIdMap) {\n            // we decided to remove this error because it brings complications when saving object with non-saved entities\n            // if related entity does not have a subject then it means user tries to bind entity which wasn't saved\n            // in this persistence because he didn't pass this entity for save or he did not set cascades\n            // but without entity being inserted we cannot bind it in the relation operation, so we throw an exception here\n            // if (!relatedEntitySubject)\n            //     throw new TypeORMError(`One-to-one inverse relation \"${relation.entityMetadata.name}.${relation.propertyPath}\" contains ` +\n            //         `entity which does not exist in the database yet, thus cannot be bind in the database. ` +\n            //         `Please setup cascade insertion or save entity before binding it.`);\n            if (!relatedEntitySubject)\n                return;\n            // okay, so related subject exist and its marked for insertion, then add a new change map\n            // by example: this will tell category to insert into its post relation our post we are working with\n            //             relatedEntitySubject is newly inserted CategorySubject\n            //             relation.inverseRelation is OneToOne owner relation inside Category\n            //             subject is Post needs to be inserted into Category\n            relatedEntitySubject.changeMaps.push({\n                relation: relation.inverseRelation,\n                value: subject\n            });\n        }\n        // check if this binding really exist in the database\n        // by example: find our post if its already bind to category in the database and its not equal to what user tries to set\n        var areRelatedIdEqualWithDatabase = relatedEntityDatabaseRelationId && OrmUtils.compareIds(relationIdMap, relatedEntityDatabaseRelationId);\n        // if they aren't equal it means its a new relation and we need to \"bind\" them\n        // by example: this will tell category to insert into its post relation our post we are working with\n        //             relatedEntitySubject is newly inserted CategorySubject\n        //             relation.inverseRelation is ManyToOne relation inside Category\n        //             subject is Post needs to be inserted into Category\n        if (!areRelatedIdEqualWithDatabase) {\n            // if there is no relatedEntitySubject then it means \"category\" wasn't persisted,\n            // but since we are going to update \"category\" table (since its an owning side of relation with join column)\n            // we create a new subject here:\n            if (!relatedEntitySubject) {\n                relatedEntitySubject = new Subject({\n                    metadata: relation.inverseEntityMetadata,\n                    canBeUpdated: true,\n                    identifier: relationIdMap\n                });\n                this.subjects.push(relatedEntitySubject);\n            }\n            relatedEntitySubject.changeMaps.push({\n                relation: relation.inverseRelation,\n                value: subject\n            });\n        }\n    };\n    return OneToOneInverseSideSubjectBuilder;\n}());\nexport { OneToOneInverseSideSubjectBuilder };\n\n//# sourceMappingURL=OneToOneInverseSideSubjectBuilder.js.map\n","import { Subject } from \"../Subject\";\nimport { OrmUtils } from \"../../util/OrmUtils\";\n/**\n * Builds operations needs to be executed for many-to-many relations of the given subjects.\n *\n * by example: post contains owner many-to-many relation with categories in the property called \"categories\", e.g.\n *             @ManyToMany(type => Category, category => category.posts) categories: Category[]\n *             If user adds categories into the post and saves post we need to bind them.\n *             This operation requires updation of junction table.\n */\nvar ManyToManySubjectBuilder = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function ManyToManySubjectBuilder(subjects) {\n        this.subjects = subjects;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds operations for any changes in the many-to-many relations of the subjects.\n     */\n    ManyToManySubjectBuilder.prototype.build = function () {\n        var _this = this;\n        this.subjects.forEach(function (subject) {\n            // if subject doesn't have entity then no need to find something that should be inserted or removed\n            if (!subject.entity)\n                return;\n            // go through all persistence enabled many-to-many relations and build subject operations for them\n            subject.metadata.manyToManyRelations.forEach(function (relation) {\n                // skip relations for which persistence is disabled\n                if (relation.persistenceEnabled === false)\n                    return;\n                _this.buildForSubjectRelation(subject, relation);\n            });\n        });\n    };\n    /**\n     * Builds operations for removal of all many-to-many records of all many-to-many relations of the given subject.\n     */\n    ManyToManySubjectBuilder.prototype.buildForAllRemoval = function (subject) {\n        var _this = this;\n        // if subject does not have a database entity then it means it does not exist in the database\n        // if it does not exist in the database then we don't have anything for deletion\n        if (!subject.databaseEntity)\n            return;\n        // go through all persistence enabled many-to-many relations and build subject operations for them\n        subject.metadata.manyToManyRelations.forEach(function (relation) {\n            // skip relations for which persistence is disabled\n            if (relation.persistenceEnabled === false)\n                return;\n            // get all related entities (actually related entity relation ids) bind to this subject entity\n            // by example: returns category ids of the post we are currently working with (subject.entity is post)\n            var relatedEntityRelationIdsInDatabase = relation.getEntityValue(subject.databaseEntity);\n            // go through all related entities and create a new junction subject for each row in junction table\n            relatedEntityRelationIdsInDatabase.forEach(function (relationId) {\n                var junctionSubject = new Subject({\n                    metadata: relation.junctionEntityMetadata,\n                    parentSubject: subject,\n                    mustBeRemoved: true,\n                    identifier: _this.buildJunctionIdentifier(subject, relation, relationId)\n                });\n                // we use unshift because we need to perform those operations before post deletion is performed\n                // but post deletion was already added as an subject\n                // this is temporary solution, later we need to implement proper sorting of subjects before their removal\n                _this.subjects.push(junctionSubject);\n            });\n        });\n    };\n    // ---------------------------------------------------------------------\n    // Protected Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds operations for a given subject and relation.\n     *\n     * by example: subject is \"post\" entity we are saving here and relation is \"categories\" inside it here.\n     */\n    ManyToManySubjectBuilder.prototype.buildForSubjectRelation = function (subject, relation) {\n        var _this = this;\n        // load from db all relation ids of inverse entities that are \"bind\" to the subject's entity\n        // this way we gonna check which relation ids are missing and which are new (e.g. inserted or removed)\n        var databaseRelatedEntityIds = [];\n        // if subject don't have database entity it means all related entities in persisted subject are new and must be bind\n        // and we don't need to remove something that is not exist\n        if (subject.databaseEntity)\n            databaseRelatedEntityIds = relation.getEntityValue(subject.databaseEntity);\n        // extract entity's relation value\n        // by example: categories inside our post (subject.entity is post)\n        var relatedEntities = relation.getEntityValue(subject.entity);\n        if (relatedEntities === null) // if value set to null its equal if we set it to empty array - all items must be removed from the database\n            relatedEntities = [];\n        if (!(Array.isArray(relatedEntities)))\n            return;\n        // from all related entities find only those which aren't found in the db - for them we will create operation subjects\n        relatedEntities.forEach(function (relatedEntity) {\n            // todo: check how it will work for entities which are saved by cascades, but aren't saved in the database yet\n            // extract only relation id from the related entities, since we only need it for comparision\n            // by example: extract from category only relation id (category id, or let's say category title, depend on join column options)\n            var relatedEntityRelationIdMap = relation.inverseEntityMetadata.getEntityIdMap(relatedEntity);\n            // try to find a subject of this related entity, maybe it was loaded or was marked for persistence\n            var relatedEntitySubject = _this.subjects.find(function (subject) {\n                return subject.entity === relatedEntity;\n            });\n            // if subject with entity was found take subject identifier as relation id map since it may contain extra properties resolved\n            if (relatedEntitySubject)\n                relatedEntityRelationIdMap = relatedEntitySubject.identifier;\n            // if related entity relation id map is empty it means related entity is newly persisted\n            if (!relatedEntityRelationIdMap) {\n                // we decided to remove this error because it brings complications when saving object with non-saved entities\n                // if related entity does not have a subject then it means user tries to bind entity which wasn't saved\n                // in this persistence because he didn't pass this entity for save or he did not set cascades\n                // but without entity being inserted we cannot bind it in the relation operation, so we throw an exception here\n                // we decided to remove this error because it brings complications when saving object with non-saved entities\n                // if (!relatedEntitySubject)\n                //     throw new TypeORMError(`Many-to-many relation \"${relation.entityMetadata.name}.${relation.propertyPath}\" contains ` +\n                //         `entities which do not exist in the database yet, thus they cannot be bind in the database. ` +\n                //         `Please setup cascade insertion or save entities before binding it.`);\n                if (!relatedEntitySubject)\n                    return;\n            }\n            // try to find related entity in the database\n            // by example: find post's category in the database post's categories\n            var relatedEntityExistInDatabase = databaseRelatedEntityIds.find(function (databaseRelatedEntityRelationId) {\n                return OrmUtils.compareIds(databaseRelatedEntityRelationId, relatedEntityRelationIdMap);\n            });\n            // if entity is found then don't do anything - it means binding in junction table already exist, we don't need to add anything\n            if (relatedEntityExistInDatabase)\n                return;\n            var ownerValue = relation.isOwning ? subject : (relatedEntitySubject || relatedEntity); // by example: ownerEntityMap is post from subject here\n            var inverseValue = relation.isOwning ? (relatedEntitySubject || relatedEntity) : subject; // by example: inverseEntityMap is category from categories array here\n            // create a new subject for insert operation of junction rows\n            var junctionSubject = new Subject({\n                metadata: relation.junctionEntityMetadata,\n                parentSubject: subject,\n                canBeInserted: true,\n            });\n            _this.subjects.push(junctionSubject);\n            relation.junctionEntityMetadata.ownerColumns.forEach(function (column) {\n                junctionSubject.changeMaps.push({\n                    column: column,\n                    value: ownerValue,\n                    // valueFactory: (value) => column.referencedColumn!.getEntityValue(value) // column.referencedColumn!.getEntityValue(ownerEntityMap),\n                });\n            });\n            relation.junctionEntityMetadata.inverseColumns.forEach(function (column) {\n                junctionSubject.changeMaps.push({\n                    column: column,\n                    value: inverseValue,\n                    // valueFactory: (value) => column.referencedColumn!.getEntityValue(value) // column.referencedColumn!.getEntityValue(inverseEntityMap),\n                });\n            });\n        });\n        // get all inverse entities relation ids that are \"bind\" to the currently persisted entity\n        var changedInverseEntityRelationIds = [];\n        relatedEntities.forEach(function (relatedEntity) {\n            // relation.inverseEntityMetadata!.getEntityIdMap(relatedEntity)\n            var relatedEntityRelationIdMap = relation.inverseEntityMetadata.getEntityIdMap(relatedEntity);\n            // try to find a subject of this related entity, maybe it was loaded or was marked for persistence\n            var relatedEntitySubject = _this.subjects.find(function (subject) {\n                return subject.entity === relatedEntity;\n            });\n            // if subject with entity was found take subject identifier as relation id map since it may contain extra properties resolved\n            if (relatedEntitySubject)\n                relatedEntityRelationIdMap = relatedEntitySubject.identifier;\n            if (relatedEntityRelationIdMap !== undefined && relatedEntityRelationIdMap !== null)\n                changedInverseEntityRelationIds.push(relatedEntityRelationIdMap);\n        });\n        // now from all entities in the persisted entity find only those which aren't found in the db\n        var removedJunctionEntityIds = databaseRelatedEntityIds.filter(function (existRelationId) {\n            return !changedInverseEntityRelationIds.find(function (changedRelationId) {\n                return OrmUtils.compareIds(changedRelationId, existRelationId);\n            });\n        });\n        // finally create a new junction remove operations for missing related entities\n        removedJunctionEntityIds.forEach(function (removedEntityRelationId) {\n            var junctionSubject = new Subject({\n                metadata: relation.junctionEntityMetadata,\n                parentSubject: subject,\n                mustBeRemoved: true,\n                identifier: _this.buildJunctionIdentifier(subject, relation, removedEntityRelationId)\n            });\n            _this.subjects.push(junctionSubject);\n        });\n    };\n    /**\n     * Creates identifiers for junction table.\n     * Example: { postId: 1, categoryId: 2 }\n     */\n    ManyToManySubjectBuilder.prototype.buildJunctionIdentifier = function (subject, relation, relationId) {\n        var ownerEntityMap = relation.isOwning ? subject.entity : relationId;\n        var inverseEntityMap = relation.isOwning ? relationId : subject.entity;\n        var identifier = {};\n        relation.junctionEntityMetadata.ownerColumns.forEach(function (column) {\n            OrmUtils.mergeDeep(identifier, column.createValueMap(column.referencedColumn.getEntityValue(ownerEntityMap)));\n        });\n        relation.junctionEntityMetadata.inverseColumns.forEach(function (column) {\n            OrmUtils.mergeDeep(identifier, column.createValueMap(column.referencedColumn.getEntityValue(inverseEntityMap)));\n        });\n        return identifier;\n    };\n    return ManyToManySubjectBuilder;\n}());\nexport { ManyToManySubjectBuilder };\n\n//# sourceMappingURL=ManyToManySubjectBuilder.js.map\n","import { __awaiter, __generator, __read, __spreadArray, __values } from \"tslib\";\n/**\n * Loads database entities for all operate subjects which do not have database entity set.\n * All entities that we load database entities for are marked as updated or inserted.\n * To understand which of them really needs to be inserted or updated we need to load\n * their original representations from the database.\n */\nvar SubjectDatabaseEntityLoader = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function SubjectDatabaseEntityLoader(queryRunner, subjects) {\n        this.queryRunner = queryRunner;\n        this.subjects = subjects;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Loads database entities for all subjects.\n     *\n     * loadAllRelations flag is used to load all relation ids of the object, no matter if they present in subject entity or not.\n     * This option is used for deletion.\n     */\n    SubjectDatabaseEntityLoader.prototype.load = function (operationType) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promises;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = this.groupByEntityTargets().map(function (subjectGroup) { return __awaiter(_this, void 0, void 0, function () {\n                            var allIds, allSubjects, loadRelationPropertyPaths, findOptions, entities, allSubjects_1, allSubjects_1_1, subject;\n                            var e_1, _a;\n                            var _this = this;\n                            return __generator(this, function (_b) {\n                                switch (_b.label) {\n                                    case 0:\n                                        allIds = [];\n                                        allSubjects = [];\n                                        subjectGroup.subjects.forEach(function (subject) {\n                                            // we don't load if subject already has a database entity loaded\n                                            if (subject.databaseEntity || !subject.identifier)\n                                                return;\n                                            allIds.push(subject.identifier);\n                                            allSubjects.push(subject);\n                                        });\n                                        // if there no ids found (means all entities are new and have generated ids) - then nothing to load there\n                                        if (!allIds.length)\n                                            return [2 /*return*/];\n                                        loadRelationPropertyPaths = [];\n                                        // for the save, soft-remove and recover operation\n                                        // extract all property paths of the relations we need to load relation ids for\n                                        // this is for optimization purpose - this way we don't load relation ids for entities\n                                        // whose relations are undefined, and since they are undefined its really pointless to\n                                        // load something for them, since undefined properties are skipped by the orm\n                                        if (operationType === \"save\" || operationType === \"soft-remove\" || operationType === \"recover\") {\n                                            subjectGroup.subjects.forEach(function (subject) {\n                                                // gets all relation property paths that exist in the persisted entity.\n                                                subject.metadata.relations.forEach(function (relation) {\n                                                    var value = relation.getEntityValue(subject.entityWithFulfilledIds);\n                                                    if (value === undefined)\n                                                        return;\n                                                    if (loadRelationPropertyPaths.indexOf(relation.propertyPath) === -1)\n                                                        loadRelationPropertyPaths.push(relation.propertyPath);\n                                                });\n                                            });\n                                        }\n                                        else { // remove\n                                            // for remove operation\n                                            // we only need to load junction relation ids since only they are removed by cascades\n                                            loadRelationPropertyPaths.push.apply(// remove\n                                            loadRelationPropertyPaths, __spreadArray([], __read(subjectGroup.subjects[0].metadata.manyToManyRelations.map(function (relation) { return relation.propertyPath; })), false));\n                                        }\n                                        findOptions = {\n                                            loadEagerRelations: false,\n                                            loadRelationIds: {\n                                                relations: loadRelationPropertyPaths,\n                                                disableMixedMap: true\n                                            },\n                                            // the soft-deleted entities should be included in the loaded entities for recover operation\n                                            withDeleted: true\n                                        };\n                                        return [4 /*yield*/, this.queryRunner.manager\n                                                .getRepository(subjectGroup.target)\n                                                .findByIds(allIds, findOptions)];\n                                    case 1:\n                                        entities = _b.sent();\n                                        // now when we have entities we need to find subject of each entity\n                                        // and insert that entity into database entity of the found subjects\n                                        entities.forEach(function (entity) {\n                                            var subjects = _this.findByPersistEntityLike(subjectGroup.target, entity);\n                                            subjects.forEach(function (subject) {\n                                                subject.databaseEntity = entity;\n                                                if (!subject.identifier)\n                                                    subject.identifier = subject.metadata.hasAllPrimaryKeys(entity) ? subject.metadata.getEntityIdMap(entity) : undefined;\n                                            });\n                                        });\n                                        try {\n                                            // this way we tell what subjects we tried to load database entities of\n                                            for (allSubjects_1 = __values(allSubjects), allSubjects_1_1 = allSubjects_1.next(); !allSubjects_1_1.done; allSubjects_1_1 = allSubjects_1.next()) {\n                                                subject = allSubjects_1_1.value;\n                                                subject.databaseEntityLoaded = true;\n                                            }\n                                        }\n                                        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                                        finally {\n                                            try {\n                                                if (allSubjects_1_1 && !allSubjects_1_1.done && (_a = allSubjects_1.return)) _a.call(allSubjects_1);\n                                            }\n                                            finally { if (e_1) throw e_1.error; }\n                                        }\n                                        return [2 /*return*/];\n                                }\n                            });\n                        }); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // ---------------------------------------------------------------------\n    // Protected Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Finds subjects where entity like given subject's entity.\n     * Comparision made by entity id.\n     * Multiple subjects may be returned if duplicates are present in the subject array.\n     * This will likely result in the same row being updated multiple times during a transaction.\n     */\n    SubjectDatabaseEntityLoader.prototype.findByPersistEntityLike = function (entityTarget, entity) {\n        return this.subjects.filter(function (subject) {\n            if (!subject.entity)\n                return false;\n            if (subject.entity === entity)\n                return true;\n            return subject.metadata.target === entityTarget && subject.metadata.compareEntities(subject.entityWithFulfilledIds, entity);\n        });\n    };\n    /**\n     * Groups given Subject objects into groups separated by entity targets.\n     */\n    SubjectDatabaseEntityLoader.prototype.groupByEntityTargets = function () {\n        return this.subjects.reduce(function (groups, operatedEntity) {\n            var group = groups.find(function (group) { return group.target === operatedEntity.metadata.target; });\n            if (!group) {\n                group = { target: operatedEntity.metadata.target, subjects: [] };\n                groups.push(group);\n            }\n            group.subjects.push(operatedEntity);\n            return groups;\n        }, []);\n    };\n    return SubjectDatabaseEntityLoader;\n}());\nexport { SubjectDatabaseEntityLoader };\n\n//# sourceMappingURL=SubjectDatabaseEntityLoader.js.map\n","import { __read } from \"tslib\";\nimport { Subject } from \"../Subject\";\n/**\n * Finds all cascade operations of the given subject and cascade operations of the found cascaded subjects,\n * e.g. builds a cascade tree and creates a subjects for them.\n */\nvar CascadesSubjectBuilder = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function CascadesSubjectBuilder(allSubjects) {\n        this.allSubjects = allSubjects;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds a cascade subjects tree and pushes them in into the given array of subjects.\n     */\n    CascadesSubjectBuilder.prototype.build = function (subject, operationType) {\n        var _this = this;\n        subject.metadata\n            .extractRelationValuesFromEntity(subject.entity, subject.metadata.relations) // todo: we can create EntityMetadata.cascadeRelations\n            .forEach(function (_a) {\n            var _b = __read(_a, 3), relation = _b[0], relationEntity = _b[1], relationEntityMetadata = _b[2];\n            // we need only defined values and insert, update, soft-remove or recover cascades of the relation should be set\n            if (relationEntity === undefined ||\n                relationEntity === null ||\n                (!relation.isCascadeInsert && !relation.isCascadeUpdate && !relation.isCascadeSoftRemove && !relation.isCascadeRecover))\n                return;\n            // if relation entity is just a relation id set (for example post.tag = 1)\n            // then we don't really need to check cascades since there is no object to insert or update\n            if (!(relationEntity instanceof Object))\n                return;\n            // if we already has this entity in list of operated subjects then skip it to avoid recursion\n            var alreadyExistRelationEntitySubject = _this.findByPersistEntityLike(relationEntityMetadata.target, relationEntity);\n            if (alreadyExistRelationEntitySubject) {\n                if (alreadyExistRelationEntitySubject.canBeInserted === false) // if its not marked for insertion yet\n                    alreadyExistRelationEntitySubject.canBeInserted = relation.isCascadeInsert === true && operationType === \"save\";\n                if (alreadyExistRelationEntitySubject.canBeUpdated === false) // if its not marked for update yet\n                    alreadyExistRelationEntitySubject.canBeUpdated = relation.isCascadeUpdate === true && operationType === \"save\";\n                if (alreadyExistRelationEntitySubject.canBeSoftRemoved === false) // if its not marked for removal yet\n                    alreadyExistRelationEntitySubject.canBeSoftRemoved = relation.isCascadeSoftRemove === true && operationType === \"soft-remove\";\n                if (alreadyExistRelationEntitySubject.canBeRecovered === false) // if its not marked for recovery yet\n                    alreadyExistRelationEntitySubject.canBeRecovered = relation.isCascadeRecover === true && operationType === \"recover\";\n                return;\n            }\n            // mark subject with what we can do with it\n            // and add to the array of subjects to load only if there is no same entity there already\n            var relationEntitySubject = new Subject({\n                metadata: relationEntityMetadata,\n                parentSubject: subject,\n                entity: relationEntity,\n                canBeInserted: relation.isCascadeInsert === true && operationType === \"save\",\n                canBeUpdated: relation.isCascadeUpdate === true && operationType === \"save\",\n                canBeSoftRemoved: relation.isCascadeSoftRemove === true && operationType === \"soft-remove\",\n                canBeRecovered: relation.isCascadeRecover === true && operationType === \"recover\"\n            });\n            _this.allSubjects.push(relationEntitySubject);\n            // go recursively and find other entities we need to insert/update\n            _this.build(relationEntitySubject, operationType);\n        });\n    };\n    // ---------------------------------------------------------------------\n    // Protected Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Finds subject where entity like given subject's entity.\n     * Comparision made by entity id.\n     */\n    CascadesSubjectBuilder.prototype.findByPersistEntityLike = function (entityTarget, entity) {\n        return this.allSubjects.find(function (subject) {\n            if (!subject.entity)\n                return false;\n            if (subject.entity === entity)\n                return true;\n            return subject.metadata.target === entityTarget && subject.metadata.compareEntities(subject.entityWithFulfilledIds, entity);\n        });\n    };\n    return CascadesSubjectBuilder;\n}());\nexport { CascadesSubjectBuilder };\n\n//# sourceMappingURL=CascadesSubjectBuilder.js.map\n","import { __awaiter, __generator, __values } from \"tslib\";\nimport { MustBeEntityError } from \"../error/MustBeEntityError\";\nimport { SubjectExecutor } from \"./SubjectExecutor\";\nimport { CannotDetermineEntityError } from \"../error/CannotDetermineEntityError\";\nimport { Subject } from \"./Subject\";\nimport { OneToManySubjectBuilder } from \"./subject-builder/OneToManySubjectBuilder\";\nimport { OneToOneInverseSideSubjectBuilder } from \"./subject-builder/OneToOneInverseSideSubjectBuilder\";\nimport { ManyToManySubjectBuilder } from \"./subject-builder/ManyToManySubjectBuilder\";\nimport { SubjectDatabaseEntityLoader } from \"./SubjectDatabaseEntityLoader\";\nimport { CascadesSubjectBuilder } from \"./subject-builder/CascadesSubjectBuilder\";\nimport { OrmUtils } from \"../util/OrmUtils\";\n/**\n * Persists a single entity or multiple entities - saves or removes them.\n */\nvar EntityPersistExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function EntityPersistExecutor(connection, queryRunner, mode, target, entity, options) {\n        this.connection = connection;\n        this.queryRunner = queryRunner;\n        this.mode = mode;\n        this.target = target;\n        this.entity = entity;\n        this.options = options;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Executes persistence operation ob given entity or entities.\n     */\n    EntityPersistExecutor.prototype.execute = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, oldQueryRunnerData, entities, entitiesInChunks, executors, executorsWithExecutableOperations, isTransactionStartedByUs, executorsWithExecutableOperations_1, executorsWithExecutableOperations_1_1, executor, e_1_1, error_1, rollbackError_1;\n            var e_1, _a;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        // check if entity we are going to save is valid and is an object\n                        if (!this.entity || typeof this.entity !== \"object\")\n                            return [2 /*return*/, Promise.reject(new MustBeEntityError(this.mode, this.entity))];\n                        // we MUST call \"fake\" resolve here to make sure all properties of lazily loaded relations are resolved\n                        return [4 /*yield*/, Promise.resolve()];\n                    case 1:\n                        // we MUST call \"fake\" resolve here to make sure all properties of lazily loaded relations are resolved\n                        _b.sent();\n                        queryRunner = this.queryRunner || this.connection.createQueryRunner();\n                        oldQueryRunnerData = queryRunner.data;\n                        if (this.options && this.options.data) {\n                            queryRunner.data = this.options.data;\n                        }\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, , 22, 25]);\n                        entities = Array.isArray(this.entity) ? this.entity : [this.entity];\n                        entitiesInChunks = this.options && this.options.chunk && this.options.chunk > 0 ? OrmUtils.chunk(entities, this.options.chunk) : [entities];\n                        return [4 /*yield*/, Promise.all(entitiesInChunks.map(function (entities) { return __awaiter(_this, void 0, void 0, function () {\n                                var subjects, cascadesSubjectBuilder;\n                                var _this = this;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            subjects = [];\n                                            // create subjects for all entities we received for the persistence\n                                            entities.forEach(function (entity) {\n                                                var entityTarget = _this.target ? _this.target : entity.constructor;\n                                                if (entityTarget === Object)\n                                                    throw new CannotDetermineEntityError(_this.mode);\n                                                subjects.push(new Subject({\n                                                    metadata: _this.connection.getMetadata(entityTarget),\n                                                    entity: entity,\n                                                    canBeInserted: _this.mode === \"save\",\n                                                    canBeUpdated: _this.mode === \"save\",\n                                                    mustBeRemoved: _this.mode === \"remove\",\n                                                    canBeSoftRemoved: _this.mode === \"soft-remove\",\n                                                    canBeRecovered: _this.mode === \"recover\"\n                                                }));\n                                            });\n                                            cascadesSubjectBuilder = new CascadesSubjectBuilder(subjects);\n                                            subjects.forEach(function (subject) {\n                                                // next step we build list of subjects we will operate with\n                                                // these subjects are subjects that we need to insert or update alongside with main persisted entity\n                                                cascadesSubjectBuilder.build(subject, _this.mode);\n                                            });\n                                            // console.timeEnd(\"building cascades...\");\n                                            // load database entities for all subjects we have\n                                            // next step is to load database entities for all operate subjects\n                                            // console.time(\"loading...\");\n                                            return [4 /*yield*/, new SubjectDatabaseEntityLoader(queryRunner, subjects).load(this.mode)];\n                                        case 1:\n                                            // console.timeEnd(\"building cascades...\");\n                                            // load database entities for all subjects we have\n                                            // next step is to load database entities for all operate subjects\n                                            // console.time(\"loading...\");\n                                            _a.sent();\n                                            // console.timeEnd(\"loading...\");\n                                            // console.time(\"other subjects...\");\n                                            // build all related subjects and change maps\n                                            if (this.mode === \"save\" || this.mode === \"soft-remove\" || this.mode === \"recover\") {\n                                                new OneToManySubjectBuilder(subjects).build();\n                                                new OneToOneInverseSideSubjectBuilder(subjects).build();\n                                                new ManyToManySubjectBuilder(subjects).build();\n                                            }\n                                            else {\n                                                subjects.forEach(function (subject) {\n                                                    if (subject.mustBeRemoved) {\n                                                        new ManyToManySubjectBuilder(subjects).buildForAllRemoval(subject);\n                                                    }\n                                                });\n                                            }\n                                            // console.timeEnd(\"other subjects...\");\n                                            // console.timeEnd(\"building subjects...\");\n                                            // console.log(\"subjects\", subjects);\n                                            // create a subject executor\n                                            return [2 /*return*/, new SubjectExecutor(queryRunner, subjects, this.options)];\n                                    }\n                                });\n                            }); }))];\n                    case 3:\n                        executors = _b.sent();\n                        executorsWithExecutableOperations = executors.filter(function (executor) { return executor.hasExecutableOperations; });\n                        if (executorsWithExecutableOperations.length === 0)\n                            return [2 /*return*/];\n                        isTransactionStartedByUs = false;\n                        _b.label = 4;\n                    case 4:\n                        _b.trys.push([4, 16, , 21]);\n                        if (!!queryRunner.isTransactionActive) return [3 /*break*/, 6];\n                        if (!(!this.options || this.options.transaction !== false)) return [3 /*break*/, 6];\n                        isTransactionStartedByUs = true;\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 5:\n                        _b.sent();\n                        _b.label = 6;\n                    case 6:\n                        _b.trys.push([6, 11, 12, 13]);\n                        executorsWithExecutableOperations_1 = __values(executorsWithExecutableOperations), executorsWithExecutableOperations_1_1 = executorsWithExecutableOperations_1.next();\n                        _b.label = 7;\n                    case 7:\n                        if (!!executorsWithExecutableOperations_1_1.done) return [3 /*break*/, 10];\n                        executor = executorsWithExecutableOperations_1_1.value;\n                        return [4 /*yield*/, executor.execute()];\n                    case 8:\n                        _b.sent();\n                        _b.label = 9;\n                    case 9:\n                        executorsWithExecutableOperations_1_1 = executorsWithExecutableOperations_1.next();\n                        return [3 /*break*/, 7];\n                    case 10: return [3 /*break*/, 13];\n                    case 11:\n                        e_1_1 = _b.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 13];\n                    case 12:\n                        try {\n                            if (executorsWithExecutableOperations_1_1 && !executorsWithExecutableOperations_1_1.done && (_a = executorsWithExecutableOperations_1.return)) _a.call(executorsWithExecutableOperations_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 13:\n                        if (!(isTransactionStartedByUs === true)) return [3 /*break*/, 15];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 14:\n                        _b.sent();\n                        _b.label = 15;\n                    case 15: return [3 /*break*/, 21];\n                    case 16:\n                        error_1 = _b.sent();\n                        if (!isTransactionStartedByUs) return [3 /*break*/, 20];\n                        _b.label = 17;\n                    case 17:\n                        _b.trys.push([17, 19, , 20]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 18:\n                        _b.sent();\n                        return [3 /*break*/, 20];\n                    case 19:\n                        rollbackError_1 = _b.sent();\n                        return [3 /*break*/, 20];\n                    case 20: throw error_1;\n                    case 21: return [3 /*break*/, 25];\n                    case 22:\n                        queryRunner.data = oldQueryRunnerData;\n                        if (!!this.queryRunner) return [3 /*break*/, 24];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 23:\n                        _b.sent();\n                        _b.label = 24;\n                    case 24: return [7 /*endfinally*/];\n                    case 25: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return EntityPersistExecutor;\n}());\nexport { EntityPersistExecutor };\n\n//# sourceMappingURL=EntityPersistExecutor.js.map\n","import { __assign, __awaiter, __generator, __read, __spreadArray } from \"tslib\";\nimport { EntityNotFoundError } from \"../error/EntityNotFoundError\";\nimport { QueryRunnerProviderAlreadyReleasedError } from \"../error/QueryRunnerProviderAlreadyReleasedError\";\nimport { NoNeedToReleaseEntityManagerError } from \"../error/NoNeedToReleaseEntityManagerError\";\nimport { TreeRepository } from \"../repository/TreeRepository\";\nimport { Repository } from \"../repository/Repository\";\nimport { FindOptionsUtils } from \"../find-options/FindOptionsUtils\";\nimport { PlainObjectToNewEntityTransformer } from \"../query-builder/transformer/PlainObjectToNewEntityTransformer\";\nimport { PlainObjectToDatabaseEntityTransformer } from \"../query-builder/transformer/PlainObjectToDatabaseEntityTransformer\";\nimport { CustomRepositoryNotFoundError } from \"../error/CustomRepositoryNotFoundError\";\nimport { AbstractRepository } from \"../repository/AbstractRepository\";\nimport { CustomRepositoryCannotInheritRepositoryError } from \"../error/CustomRepositoryCannotInheritRepositoryError\";\nimport { MongoDriver } from \"../driver/mongodb/MongoDriver\";\nimport { RepositoryNotFoundError } from \"../error/RepositoryNotFoundError\";\nimport { RepositoryNotTreeError } from \"../error/RepositoryNotTreeError\";\nimport { RepositoryFactory } from \"../repository/RepositoryFactory\";\nimport { TreeRepositoryNotSupportedError } from \"../error/TreeRepositoryNotSupportedError\";\nimport { EntityPersistExecutor } from \"../persistence/EntityPersistExecutor\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\nimport { EntitySchema } from \"../entity-schema/EntitySchema\";\nimport { getMetadataArgsStorage } from \"../globals\";\nimport { TypeORMError } from \"../error\";\n/**\n * Entity manager supposed to work with any entity, automatically find its repository and call its methods,\n * whatever entity type are you passing.\n */\nvar EntityManager = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function EntityManager(connection, queryRunner) {\n        // -------------------------------------------------------------------------\n        // Protected Properties\n        // -------------------------------------------------------------------------\n        /**\n         * Once created and then reused by en repositories.\n         */\n        this.repositories = [];\n        /**\n         * Plain to object transformer used in create and merge operations.\n         */\n        this.plainObjectToEntityTransformer = new PlainObjectToNewEntityTransformer();\n        this.connection = connection;\n        if (queryRunner) {\n            this.queryRunner = queryRunner;\n            // dynamic: this.queryRunner = manager;\n            ObjectUtils.assign(this.queryRunner, { manager: this });\n        }\n    }\n    /**\n     * Wraps given function execution (and all operations made there) in a transaction.\n     * All database operations must be executed using provided entity manager.\n     */\n    EntityManager.prototype.transaction = function (isolationOrRunInTransaction, runInTransactionParam) {\n        return __awaiter(this, void 0, void 0, function () {\n            var isolation, runInTransaction, queryRunner, result, err_1, rollbackError_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        isolation = typeof isolationOrRunInTransaction === \"string\" ? isolationOrRunInTransaction : undefined;\n                        runInTransaction = typeof isolationOrRunInTransaction === \"function\" ? isolationOrRunInTransaction : runInTransactionParam;\n                        if (!runInTransaction) {\n                            throw new TypeORMError(\"Transaction method requires callback in second paramter if isolation level is supplied.\");\n                        }\n                        if (this.connection.driver instanceof MongoDriver)\n                            throw new TypeORMError(\"Transactions aren't supported by MongoDB.\");\n                        if (this.queryRunner && this.queryRunner.isReleased)\n                            throw new QueryRunnerProviderAlreadyReleasedError();\n                        if (this.queryRunner && this.queryRunner.isTransactionActive)\n                            throw new TypeORMError(\"Cannot start transaction because its already started\");\n                        queryRunner = this.queryRunner || this.connection.createQueryRunner();\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 8, 13, 16]);\n                        if (!isolation) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction(isolation)];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 3: return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [4 /*yield*/, runInTransaction(queryRunner.manager)];\n                    case 6:\n                        result = _a.sent();\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 7:\n                        _a.sent();\n                        return [2 /*return*/, result];\n                    case 8:\n                        err_1 = _a.sent();\n                        _a.label = 9;\n                    case 9:\n                        _a.trys.push([9, 11, , 12]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 10:\n                        _a.sent();\n                        return [3 /*break*/, 12];\n                    case 11:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 12];\n                    case 12: throw err_1;\n                    case 13:\n                        if (!!this.queryRunner) return [3 /*break*/, 15];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 14:\n                        _a.sent();\n                        _a.label = 15;\n                    case 15: return [7 /*endfinally*/];\n                    case 16: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes raw SQL query and returns raw database results.\n     */\n    EntityManager.prototype.query = function (query, parameters) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.connection.query(query, parameters, this.queryRunner)];\n            });\n        });\n    };\n    /**\n     * Creates a new query builder that can be used to build a sql query.\n     */\n    EntityManager.prototype.createQueryBuilder = function (entityClass, alias, queryRunner) {\n        if (alias) {\n            return this.connection.createQueryBuilder(entityClass, alias, queryRunner || this.queryRunner);\n        }\n        else {\n            return this.connection.createQueryBuilder(entityClass || queryRunner || this.queryRunner);\n        }\n    };\n    /**\n     * Checks if entity has an id by its Function type or schema name.\n     */\n    EntityManager.prototype.hasId = function (targetOrEntity, maybeEntity) {\n        var target = arguments.length === 2 ? targetOrEntity : targetOrEntity.constructor;\n        var entity = arguments.length === 2 ? maybeEntity : targetOrEntity;\n        var metadata = this.connection.getMetadata(target);\n        return metadata.hasId(entity);\n    };\n    /**\n     * Gets entity mixed id.\n     */\n    EntityManager.prototype.getId = function (targetOrEntity, maybeEntity) {\n        var target = arguments.length === 2 ? targetOrEntity : targetOrEntity.constructor;\n        var entity = arguments.length === 2 ? maybeEntity : targetOrEntity;\n        var metadata = this.connection.getMetadata(target);\n        return metadata.getEntityIdMixedMap(entity);\n    };\n    /**\n     * Creates a new entity instance or instances.\n     * Can copy properties from the given object into new entities.\n     */\n    EntityManager.prototype.create = function (entityClass, plainObjectOrObjects) {\n        var _this = this;\n        var metadata = this.connection.getMetadata(entityClass);\n        if (!plainObjectOrObjects)\n            return metadata.create(this.queryRunner);\n        if (Array.isArray(plainObjectOrObjects))\n            return plainObjectOrObjects.map(function (plainEntityLike) { return _this.create(entityClass, plainEntityLike); });\n        var mergeIntoEntity = metadata.create(this.queryRunner);\n        this.plainObjectToEntityTransformer.transform(mergeIntoEntity, plainObjectOrObjects, metadata, true);\n        return mergeIntoEntity;\n    };\n    /**\n     * Merges two entities into one new entity.\n     */\n    EntityManager.prototype.merge = function (entityClass, mergeIntoEntity) {\n        var _this = this;\n        var entityLikes = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            entityLikes[_i - 2] = arguments[_i];\n        }\n        var metadata = this.connection.getMetadata(entityClass);\n        entityLikes.forEach(function (object) { return _this.plainObjectToEntityTransformer.transform(mergeIntoEntity, object, metadata); });\n        return mergeIntoEntity;\n    };\n    /**\n     * Creates a new entity from the given plain javascript object. If entity already exist in the database, then\n     * it loads it (and everything related to it), replaces all values with the new ones from the given object\n     * and returns this new entity. This new entity is actually a loaded from the db entity with all properties\n     * replaced from the new object.\n     */\n    EntityManager.prototype.preload = function (entityClass, entityLike) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, plainObjectToDatabaseEntityTransformer, transformedEntity;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        metadata = this.connection.getMetadata(entityClass);\n                        plainObjectToDatabaseEntityTransformer = new PlainObjectToDatabaseEntityTransformer(this.connection.manager);\n                        return [4 /*yield*/, plainObjectToDatabaseEntityTransformer.transform(entityLike, metadata)];\n                    case 1:\n                        transformedEntity = _a.sent();\n                        if (transformedEntity)\n                            return [2 /*return*/, this.merge(entityClass, transformedEntity, entityLike)];\n                        return [2 /*return*/, undefined];\n                }\n            });\n        });\n    };\n    /**\n     * Saves a given entity in the database.\n     */\n    EntityManager.prototype.save = function (targetOrEntity, maybeEntityOrOptions, maybeOptions) {\n        // normalize mixed parameters\n        var target = (arguments.length > 1 && (targetOrEntity instanceof Function || targetOrEntity instanceof EntitySchema || typeof targetOrEntity === \"string\")) ? targetOrEntity : undefined;\n        var entity = target ? maybeEntityOrOptions : targetOrEntity;\n        var options = target ? maybeOptions : maybeEntityOrOptions;\n        if (target instanceof EntitySchema)\n            target = target.options.name;\n        // if user passed empty array of entities then we don't need to do anything\n        if (Array.isArray(entity) && entity.length === 0)\n            return Promise.resolve(entity);\n        // execute save operation\n        return new EntityPersistExecutor(this.connection, this.queryRunner, \"save\", target, entity, options)\n            .execute()\n            .then(function () { return entity; });\n    };\n    /**\n     * Removes a given entity from the database.\n     */\n    EntityManager.prototype.remove = function (targetOrEntity, maybeEntityOrOptions, maybeOptions) {\n        // normalize mixed parameters\n        var target = (arguments.length > 1 && (targetOrEntity instanceof Function || typeof targetOrEntity === \"string\")) ? targetOrEntity : undefined;\n        var entity = target ? maybeEntityOrOptions : targetOrEntity;\n        var options = target ? maybeOptions : maybeEntityOrOptions;\n        // if user passed empty array of entities then we don't need to do anything\n        if (Array.isArray(entity) && entity.length === 0)\n            return Promise.resolve(entity);\n        // execute save operation\n        return new EntityPersistExecutor(this.connection, this.queryRunner, \"remove\", target, entity, options)\n            .execute()\n            .then(function () { return entity; });\n    };\n    /**\n     * Records the delete date of one or many given entities.\n     */\n    EntityManager.prototype.softRemove = function (targetOrEntity, maybeEntityOrOptions, maybeOptions) {\n        // normalize mixed parameters\n        var target = (arguments.length > 1 && (targetOrEntity instanceof Function || targetOrEntity instanceof EntitySchema || typeof targetOrEntity === \"string\")) ? targetOrEntity : undefined;\n        var entity = target ? maybeEntityOrOptions : targetOrEntity;\n        var options = target ? maybeOptions : maybeEntityOrOptions;\n        if (target instanceof EntitySchema)\n            target = target.options.name;\n        // if user passed empty array of entities then we don't need to do anything\n        if (Array.isArray(entity) && entity.length === 0)\n            return Promise.resolve(entity);\n        // execute soft-remove operation\n        return new EntityPersistExecutor(this.connection, this.queryRunner, \"soft-remove\", target, entity, options)\n            .execute()\n            .then(function () { return entity; });\n    };\n    /**\n     * Recovers one or many given entities.\n     */\n    EntityManager.prototype.recover = function (targetOrEntity, maybeEntityOrOptions, maybeOptions) {\n        // normalize mixed parameters\n        var target = (arguments.length > 1 && (targetOrEntity instanceof Function || targetOrEntity instanceof EntitySchema || typeof targetOrEntity === \"string\")) ? targetOrEntity : undefined;\n        var entity = target ? maybeEntityOrOptions : targetOrEntity;\n        var options = target ? maybeOptions : maybeEntityOrOptions;\n        if (target instanceof EntitySchema)\n            target = target.options.name;\n        // if user passed empty array of entities then we don't need to do anything\n        if (Array.isArray(entity) && entity.length === 0)\n            return Promise.resolve(entity);\n        // execute recover operation\n        return new EntityPersistExecutor(this.connection, this.queryRunner, \"recover\", target, entity, options)\n            .execute()\n            .then(function () { return entity; });\n    };\n    /**\n     * Inserts a given entity into the database.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient INSERT query.\n     * Does not check if entity exist in the database, so query will fail if duplicate entity is being inserted.\n     * You can execute bulk inserts using this method.\n     */\n    EntityManager.prototype.insert = function (target, entity) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.createQueryBuilder()\n                        .insert()\n                        .into(target)\n                        .values(entity)\n                        .execute()];\n            });\n        });\n    };\n    EntityManager.prototype.upsert = function (target, entityOrEntities, conflictPathsOrOptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, options, uniqueColumnConstraints, useIndex, entities, conflictColumns, overwriteColumns;\n            return __generator(this, function (_a) {\n                metadata = this.connection.getMetadata(target);\n                if (Array.isArray(conflictPathsOrOptions)) {\n                    options = {\n                        conflictPaths: conflictPathsOrOptions\n                    };\n                }\n                else {\n                    options = conflictPathsOrOptions;\n                }\n                uniqueColumnConstraints = __spreadArray(__spreadArray([\n                    metadata.primaryColumns\n                ], __read(metadata.indices.filter(function (ix) { return ix.isUnique; }).map(function (ix) { return ix.columns; })), false), __read(metadata.uniques.map(function (uq) { return uq.columns; })), false);\n                useIndex = uniqueColumnConstraints.find(function (ix) {\n                    return ix.length === options.conflictPaths.length &&\n                        options.conflictPaths.every(function (conflictPropertyPath) { return ix.some(function (col) { return col.propertyPath === conflictPropertyPath; }); });\n                });\n                if (useIndex == null) {\n                    throw new TypeORMError(\"An upsert requires conditions that have a unique constraint but none was found for conflict properties: \" + options.conflictPaths.join(\", \"));\n                }\n                if (!Array.isArray(entityOrEntities)) {\n                    entities = [entityOrEntities];\n                }\n                else {\n                    entities = entityOrEntities;\n                }\n                conflictColumns = metadata.mapPropertyPathsToColumns(options.conflictPaths);\n                overwriteColumns = metadata.columns\n                    .filter(function (col) { return (!conflictColumns.includes(col)) && entities.some(function (entity) { return typeof col.getEntityValue(entity) !== \"undefined\"; }); });\n                return [2 /*return*/, this.createQueryBuilder()\n                        .insert()\n                        .into(target)\n                        .values(entities)\n                        .orUpdate(__spreadArray(__spreadArray([], __read(conflictColumns), false), __read(overwriteColumns), false).map(function (col) { return col.databaseName; }), conflictColumns.map(function (col) { return col.databaseName; }))\n                        .execute()];\n            });\n        });\n    };\n    /**\n     * Updates entity partially. Entity can be found by a given condition(s).\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient UPDATE query.\n     * Does not check if entity exist in the database.\n     * Condition(s) cannot be empty.\n     */\n    EntityManager.prototype.update = function (target, criteria, partialEntity) {\n        // if user passed empty criteria or empty list of criterias, then throw an error\n        if (criteria === undefined ||\n            criteria === null ||\n            criteria === \"\" ||\n            (Array.isArray(criteria) && criteria.length === 0)) {\n            return Promise.reject(new TypeORMError(\"Empty criteria(s) are not allowed for the update method.\"));\n        }\n        if (typeof criteria === \"string\" ||\n            typeof criteria === \"number\" ||\n            criteria instanceof Date ||\n            Array.isArray(criteria)) {\n            return this.createQueryBuilder()\n                .update(target)\n                .set(partialEntity)\n                .whereInIds(criteria)\n                .execute();\n        }\n        else {\n            return this.createQueryBuilder()\n                .update(target)\n                .set(partialEntity)\n                .where(criteria)\n                .execute();\n        }\n    };\n    /**\n     * Deletes entities by a given condition(s).\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient DELETE query.\n     * Does not check if entity exist in the database.\n     * Condition(s) cannot be empty.\n     */\n    EntityManager.prototype.delete = function (targetOrEntity, criteria) {\n        // if user passed empty criteria or empty list of criterias, then throw an error\n        if (criteria === undefined ||\n            criteria === null ||\n            criteria === \"\" ||\n            (Array.isArray(criteria) && criteria.length === 0)) {\n            return Promise.reject(new TypeORMError(\"Empty criteria(s) are not allowed for the delete method.\"));\n        }\n        if (typeof criteria === \"string\" ||\n            typeof criteria === \"number\" ||\n            criteria instanceof Date ||\n            Array.isArray(criteria)) {\n            return this.createQueryBuilder()\n                .delete()\n                .from(targetOrEntity)\n                .whereInIds(criteria)\n                .execute();\n        }\n        else {\n            return this.createQueryBuilder()\n                .delete()\n                .from(targetOrEntity)\n                .where(criteria)\n                .execute();\n        }\n    };\n    /**\n     * Records the delete date of entities by a given condition(s).\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient DELETE query.\n     * Does not check if entity exist in the database.\n     * Condition(s) cannot be empty.\n     */\n    EntityManager.prototype.softDelete = function (targetOrEntity, criteria) {\n        // if user passed empty criteria or empty list of criterias, then throw an error\n        if (criteria === undefined ||\n            criteria === null ||\n            criteria === \"\" ||\n            (Array.isArray(criteria) && criteria.length === 0)) {\n            return Promise.reject(new TypeORMError(\"Empty criteria(s) are not allowed for the delete method.\"));\n        }\n        if (typeof criteria === \"string\" ||\n            typeof criteria === \"number\" ||\n            criteria instanceof Date ||\n            Array.isArray(criteria)) {\n            return this.createQueryBuilder()\n                .softDelete()\n                .from(targetOrEntity)\n                .whereInIds(criteria)\n                .execute();\n        }\n        else {\n            return this.createQueryBuilder()\n                .softDelete()\n                .from(targetOrEntity)\n                .where(criteria)\n                .execute();\n        }\n    };\n    /**\n     * Restores entities by a given condition(s).\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient DELETE query.\n     * Does not check if entity exist in the database.\n     * Condition(s) cannot be empty.\n     */\n    EntityManager.prototype.restore = function (targetOrEntity, criteria) {\n        // if user passed empty criteria or empty list of criterias, then throw an error\n        if (criteria === undefined ||\n            criteria === null ||\n            criteria === \"\" ||\n            (Array.isArray(criteria) && criteria.length === 0)) {\n            return Promise.reject(new TypeORMError(\"Empty criteria(s) are not allowed for the delete method.\"));\n        }\n        if (typeof criteria === \"string\" ||\n            typeof criteria === \"number\" ||\n            criteria instanceof Date ||\n            Array.isArray(criteria)) {\n            return this.createQueryBuilder()\n                .restore()\n                .from(targetOrEntity)\n                .whereInIds(criteria)\n                .execute();\n        }\n        else {\n            return this.createQueryBuilder()\n                .restore()\n                .from(targetOrEntity)\n                .where(criteria)\n                .execute();\n        }\n    };\n    /**\n     * Counts entities that match given find options or conditions.\n     * Useful for pagination.\n     */\n    EntityManager.prototype.count = function (entityClass, optionsOrConditions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, qb;\n            return __generator(this, function (_a) {\n                metadata = this.connection.getMetadata(entityClass);\n                qb = this.createQueryBuilder(entityClass, FindOptionsUtils.extractFindManyOptionsAlias(optionsOrConditions) || metadata.name);\n                return [2 /*return*/, FindOptionsUtils.applyFindManyOptionsOrConditionsToQueryBuilder(qb, optionsOrConditions).getCount()];\n            });\n        });\n    };\n    /**\n     * Finds entities that match given find options or conditions.\n     */\n    EntityManager.prototype.find = function (entityClass, optionsOrConditions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, qb;\n            return __generator(this, function (_a) {\n                metadata = this.connection.getMetadata(entityClass);\n                qb = this.createQueryBuilder(entityClass, FindOptionsUtils.extractFindManyOptionsAlias(optionsOrConditions) || metadata.name);\n                FindOptionsUtils.applyFindManyOptionsOrConditionsToQueryBuilder(qb, optionsOrConditions);\n                if (!FindOptionsUtils.isFindManyOptions(optionsOrConditions) || optionsOrConditions.loadEagerRelations !== false)\n                    FindOptionsUtils.joinEagerRelations(qb, qb.alias, metadata);\n                return [2 /*return*/, qb.getMany()];\n            });\n        });\n    };\n    /**\n     * Finds entities that match given find options and conditions.\n     * Also counts all entities that match given conditions,\n     * but ignores pagination settings (from and take options).\n     */\n    EntityManager.prototype.findAndCount = function (entityClass, optionsOrConditions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, qb;\n            return __generator(this, function (_a) {\n                metadata = this.connection.getMetadata(entityClass);\n                qb = this.createQueryBuilder(entityClass, FindOptionsUtils.extractFindManyOptionsAlias(optionsOrConditions) || metadata.name);\n                FindOptionsUtils.applyFindManyOptionsOrConditionsToQueryBuilder(qb, optionsOrConditions);\n                if (!FindOptionsUtils.isFindManyOptions(optionsOrConditions) || optionsOrConditions.loadEagerRelations !== false)\n                    FindOptionsUtils.joinEagerRelations(qb, qb.alias, metadata);\n                return [2 /*return*/, qb.getManyAndCount()];\n            });\n        });\n    };\n    /**\n     * Finds entities with ids.\n     * Optionally find options or conditions can be applied.\n     */\n    EntityManager.prototype.findByIds = function (entityClass, ids, optionsOrConditions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, qb;\n            return __generator(this, function (_a) {\n                // if no ids passed, no need to execute a query - just return an empty array of values\n                if (!ids.length)\n                    return [2 /*return*/, Promise.resolve([])];\n                metadata = this.connection.getMetadata(entityClass);\n                qb = this.createQueryBuilder(entityClass, FindOptionsUtils.extractFindManyOptionsAlias(optionsOrConditions) || metadata.name);\n                FindOptionsUtils.applyFindManyOptionsOrConditionsToQueryBuilder(qb, optionsOrConditions);\n                if (!FindOptionsUtils.isFindManyOptions(optionsOrConditions) || optionsOrConditions.loadEagerRelations !== false)\n                    FindOptionsUtils.joinEagerRelations(qb, qb.alias, metadata);\n                return [2 /*return*/, qb.andWhereInIds(ids).getMany()];\n            });\n        });\n    };\n    /**\n     * Finds first entity that matches given conditions.\n     */\n    EntityManager.prototype.findOne = function (entityClass, idOrOptionsOrConditions, maybeOptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var findOptions, options, metadata, alias, qb, passedId;\n            return __generator(this, function (_a) {\n                findOptions = undefined;\n                if (FindOptionsUtils.isFindOneOptions(idOrOptionsOrConditions)) {\n                    findOptions = idOrOptionsOrConditions;\n                }\n                else if (maybeOptions && FindOptionsUtils.isFindOneOptions(maybeOptions)) {\n                    findOptions = maybeOptions;\n                }\n                options = undefined;\n                if (idOrOptionsOrConditions instanceof Object && !FindOptionsUtils.isFindOneOptions(idOrOptionsOrConditions))\n                    options = idOrOptionsOrConditions;\n                metadata = this.connection.getMetadata(entityClass);\n                alias = metadata.name;\n                if (findOptions && findOptions.join) {\n                    alias = findOptions.join.alias;\n                }\n                else if (maybeOptions && FindOptionsUtils.isFindOneOptions(maybeOptions) && maybeOptions.join) {\n                    alias = maybeOptions.join.alias;\n                }\n                qb = this.createQueryBuilder(entityClass, alias);\n                passedId = typeof idOrOptionsOrConditions === \"string\" || typeof idOrOptionsOrConditions === \"number\" || idOrOptionsOrConditions instanceof Date;\n                if (!passedId) {\n                    findOptions = __assign(__assign({}, (findOptions || {})), { take: 1 });\n                }\n                FindOptionsUtils.applyOptionsToQueryBuilder(qb, findOptions);\n                if (!findOptions || findOptions.loadEagerRelations !== false) {\n                    FindOptionsUtils.joinEagerRelations(qb, qb.alias, qb.expressionMap.mainAlias.metadata);\n                }\n                if (options) {\n                    qb.where(options);\n                }\n                else if (passedId) {\n                    qb.andWhereInIds(metadata.ensureEntityIdMap(idOrOptionsOrConditions));\n                }\n                return [2 /*return*/, qb.getOne()];\n            });\n        });\n    };\n    /**\n     * Finds first entity that matches given conditions or rejects the returned promise on error.\n     */\n    EntityManager.prototype.findOneOrFail = function (entityClass, idOrOptionsOrConditions, maybeOptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.findOne(entityClass, idOrOptionsOrConditions, maybeOptions).then(function (value) {\n                        if (value === undefined) {\n                            return Promise.reject(new EntityNotFoundError(entityClass, idOrOptionsOrConditions));\n                        }\n                        return Promise.resolve(value);\n                    })];\n            });\n        });\n    };\n    /**\n     * Clears all the data from the given table (truncates/drops it).\n     *\n     * Note: this method uses TRUNCATE and may not work as you expect in transactions on some platforms.\n     * @see https://stackoverflow.com/a/5972738/925151\n     */\n    EntityManager.prototype.clear = function (entityClass) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, queryRunner;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        metadata = this.connection.getMetadata(entityClass);\n                        queryRunner = this.queryRunner || this.connection.createQueryRunner();\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 3, 6]);\n                        return [4 /*yield*/, queryRunner.clearTable(metadata.tablePath)];\n                    case 2: return [2 /*return*/, _a.sent()]; // await is needed here because we are using finally\n                    case 3:\n                        if (!!this.queryRunner) return [3 /*break*/, 5];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [7 /*endfinally*/];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Increments some column by provided value of the entities matched given conditions.\n     */\n    EntityManager.prototype.increment = function (entityClass, conditions, propertyPath, value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, column, values;\n            var _this = this;\n            return __generator(this, function (_a) {\n                metadata = this.connection.getMetadata(entityClass);\n                column = metadata.findColumnWithPropertyPath(propertyPath);\n                if (!column)\n                    throw new TypeORMError(\"Column \" + propertyPath + \" was not found in \" + metadata.targetName + \" entity.\");\n                if (isNaN(Number(value)))\n                    throw new TypeORMError(\"Value \\\"\" + value + \"\\\" is not a number.\");\n                values = propertyPath\n                    .split(\".\")\n                    .reduceRight(function (value, key) {\n                    var _a;\n                    return (_a = {}, _a[key] = value, _a);\n                }, function () { return _this.connection.driver.escape(column.databaseName) + \" + \" + value; });\n                return [2 /*return*/, this\n                        .createQueryBuilder(entityClass, \"entity\")\n                        .update(entityClass)\n                        .set(values)\n                        .where(conditions)\n                        .execute()];\n            });\n        });\n    };\n    /**\n     * Decrements some column by provided value of the entities matched given conditions.\n     */\n    EntityManager.prototype.decrement = function (entityClass, conditions, propertyPath, value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, column, values;\n            var _this = this;\n            return __generator(this, function (_a) {\n                metadata = this.connection.getMetadata(entityClass);\n                column = metadata.findColumnWithPropertyPath(propertyPath);\n                if (!column)\n                    throw new TypeORMError(\"Column \" + propertyPath + \" was not found in \" + metadata.targetName + \" entity.\");\n                if (isNaN(Number(value)))\n                    throw new TypeORMError(\"Value \\\"\" + value + \"\\\" is not a number.\");\n                values = propertyPath\n                    .split(\".\")\n                    .reduceRight(function (value, key) {\n                    var _a;\n                    return (_a = {}, _a[key] = value, _a);\n                }, function () { return _this.connection.driver.escape(column.databaseName) + \" - \" + value; });\n                return [2 /*return*/, this\n                        .createQueryBuilder(entityClass, \"entity\")\n                        .update(entityClass)\n                        .set(values)\n                        .where(conditions)\n                        .execute()];\n            });\n        });\n    };\n    /**\n     * Gets repository for the given entity class or name.\n     * If single database connection mode is used, then repository is obtained from the\n     * repository aggregator, where each repository is individually created for this entity manager.\n     * When single database connection is not used, repository is being obtained from the connection.\n     */\n    EntityManager.prototype.getRepository = function (target) {\n        // throw exception if there is no repository with this target registered\n        if (!this.connection.hasMetadata(target))\n            throw new RepositoryNotFoundError(this.connection.name, target);\n        // find already created repository instance and return it if found\n        var metadata = this.connection.getMetadata(target);\n        var repository = this.repositories.find(function (repository) { return repository.metadata === metadata; });\n        if (repository)\n            return repository;\n        // if repository was not found then create it, store its instance and return it\n        var newRepository = new RepositoryFactory().create(this, metadata, this.queryRunner);\n        this.repositories.push(newRepository);\n        return newRepository;\n    };\n    /**\n     * Gets tree repository for the given entity class or name.\n     * If single database connection mode is used, then repository is obtained from the\n     * repository aggregator, where each repository is individually created for this entity manager.\n     * When single database connection is not used, repository is being obtained from the connection.\n     */\n    EntityManager.prototype.getTreeRepository = function (target) {\n        // tree tables aren't supported by some drivers (mongodb)\n        if (this.connection.driver.treeSupport === false)\n            throw new TreeRepositoryNotSupportedError(this.connection.driver);\n        // check if repository is real tree repository\n        var repository = this.getRepository(target);\n        if (!(repository instanceof TreeRepository))\n            throw new RepositoryNotTreeError(target);\n        return repository;\n    };\n    /**\n     * Gets mongodb repository for the given entity class.\n     */\n    EntityManager.prototype.getMongoRepository = function (target) {\n        return this.connection.getMongoRepository(target);\n    };\n    /**\n     * Gets custom entity repository marked with @EntityRepository decorator.\n     */\n    EntityManager.prototype.getCustomRepository = function (customRepository) {\n        var entityRepositoryMetadataArgs = getMetadataArgsStorage().entityRepositories.find(function (repository) {\n            return repository.target === (customRepository instanceof Function ? customRepository : customRepository.constructor);\n        });\n        if (!entityRepositoryMetadataArgs)\n            throw new CustomRepositoryNotFoundError(customRepository);\n        var entityMetadata = entityRepositoryMetadataArgs.entity ? this.connection.getMetadata(entityRepositoryMetadataArgs.entity) : undefined;\n        var entityRepositoryInstance = new entityRepositoryMetadataArgs.target(this, entityMetadata);\n        // NOTE: dynamic access to protected properties. We need this to prevent unwanted properties in those classes to be exposed,\n        // however we need these properties for internal work of the class\n        if (entityRepositoryInstance instanceof AbstractRepository) {\n            if (!entityRepositoryInstance[\"manager\"])\n                entityRepositoryInstance[\"manager\"] = this;\n        }\n        if (entityRepositoryInstance instanceof Repository) {\n            if (!entityMetadata)\n                throw new CustomRepositoryCannotInheritRepositoryError(customRepository);\n            entityRepositoryInstance[\"manager\"] = this;\n            entityRepositoryInstance[\"metadata\"] = entityMetadata;\n        }\n        return entityRepositoryInstance;\n    };\n    /**\n     * Releases all resources used by entity manager.\n     * This is used when entity manager is created with a single query runner,\n     * and this single query runner needs to be released after job with entity manager is done.\n     */\n    EntityManager.prototype.release = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (!this.queryRunner)\n                    throw new NoNeedToReleaseEntityManagerError();\n                return [2 /*return*/, this.queryRunner.release()];\n            });\n        });\n    };\n    return EntityManager;\n}());\nexport { EntityManager };\n\n//# sourceMappingURL=EntityManager.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { EntityManager } from \"./EntityManager\";\n/**\n * A special EntityManager that includes import/export and load/save function\n * that are unique to Sql.js.\n */\nvar SqljsEntityManager = /** @class */ (function (_super) {\n    __extends(SqljsEntityManager, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SqljsEntityManager(connection, queryRunner) {\n        var _this = _super.call(this, connection, queryRunner) || this;\n        _this.driver = connection.driver;\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads either the definition from a file (Node.js) or localstorage (browser)\n     * or uses the given definition to open a new database.\n     */\n    SqljsEntityManager.prototype.loadDatabase = function (fileNameOrLocalStorageOrData) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.driver.load(fileNameOrLocalStorageOrData)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Saves the current database to a file (Node.js) or localstorage (browser)\n     * if fileNameOrLocalStorage is not set options.location is used.\n     */\n    SqljsEntityManager.prototype.saveDatabase = function (fileNameOrLocalStorage) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.driver.save(fileNameOrLocalStorage)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the current database definition.\n     */\n    SqljsEntityManager.prototype.exportDatabase = function () {\n        return this.driver.export();\n    };\n    return SqljsEntityManager;\n}(EntityManager));\nexport { SqljsEntityManager };\n\n//# sourceMappingURL=SqljsEntityManager.js.map\n","import { __read, __spreadArray } from \"tslib\";\nimport { OrmUtils } from \"../util/OrmUtils\";\nimport { MongoDriver } from \"../driver/mongodb/MongoDriver\";\nimport { FindOperator } from \"../find-options/FindOperator\";\nimport { ApplyValueTransformers } from \"../util/ApplyValueTransformers\";\n/**\n * This metadata contains all information about entity's column.\n */\nvar ColumnMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function ColumnMetadata(options) {\n        /**\n         * Type's length in the database.\n         */\n        this.length = \"\";\n        /**\n         * Indicates if this column is a primary key.\n         */\n        this.isPrimary = false;\n        /**\n         * Indicates if this column is generated (auto increment or generated other way).\n         */\n        this.isGenerated = false;\n        /**\n         * Indicates if column can contain nulls or not.\n         */\n        this.isNullable = false;\n        /**\n         * Indicates if column is selected by query builder or not.\n         */\n        this.isSelect = true;\n        /**\n         * Indicates if column is inserted by default or not.\n         */\n        this.isInsert = true;\n        /**\n         * Indicates if column allows updates or not.\n         */\n        this.isUpdate = true;\n        /**\n         * Puts ZEROFILL attribute on to numeric column. Works only for MySQL.\n         * If you specify ZEROFILL for a numeric column, MySQL automatically adds the UNSIGNED attribute to the column\n         */\n        this.zerofill = false;\n        /**\n         * Puts UNSIGNED attribute on to numeric column. Works only for MySQL.\n         */\n        this.unsigned = false;\n        /**\n         * Indicates if this column is an array.\n         */\n        this.isArray = false;\n        /**\n         * Indicates if column is virtual. Virtual columns are not mapped to the entity.\n         */\n        this.isVirtual = false;\n        /**\n         * Indicates if column is discriminator. Discriminator columns are not mapped to the entity.\n         */\n        this.isDiscriminator = false;\n        /**\n         * Indicates if column is tree-level column. Tree-level columns are used in closure entities.\n         */\n        this.isTreeLevel = false;\n        /**\n         * Indicates if this column contains an entity creation date.\n         */\n        this.isCreateDate = false;\n        /**\n         * Indicates if this column contains an entity update date.\n         */\n        this.isUpdateDate = false;\n        /**\n         * Indicates if this column contains an entity delete date.\n         */\n        this.isDeleteDate = false;\n        /**\n         * Indicates if this column contains an entity version.\n         */\n        this.isVersion = false;\n        /**\n         * Indicates if this column contains an object id.\n         */\n        this.isObjectId = false;\n        /**\n         * Indicates if this column is nested set's left column.\n         * Used only in tree entities with nested-set type.\n         */\n        this.isNestedSetLeft = false;\n        /**\n         * Indicates if this column is nested set's right column.\n         * Used only in tree entities with nested-set type.\n         */\n        this.isNestedSetRight = false;\n        /**\n         * Indicates if this column is materialized path's path column.\n         * Used only in tree entities with materialized path type.\n         */\n        this.isMaterializedPath = false;\n        this.entityMetadata = options.entityMetadata;\n        this.embeddedMetadata = options.embeddedMetadata;\n        this.referencedColumn = options.referencedColumn;\n        if (options.args.target)\n            this.target = options.args.target;\n        if (options.args.propertyName)\n            this.propertyName = options.args.propertyName;\n        if (options.args.options.name)\n            this.givenDatabaseName = options.args.options.name;\n        if (options.args.options.type)\n            this.type = options.args.options.type;\n        if (options.args.options.length)\n            this.length = options.args.options.length ? options.args.options.length.toString() : \"\";\n        if (options.args.options.width)\n            this.width = options.args.options.width;\n        if (options.args.options.charset)\n            this.charset = options.args.options.charset;\n        if (options.args.options.collation)\n            this.collation = options.args.options.collation;\n        if (options.args.options.primary)\n            this.isPrimary = options.args.options.primary;\n        if (options.args.options.default === null) // to make sure default: null is the same as nullable: true\n            this.isNullable = true;\n        if (options.args.options.nullable !== undefined)\n            this.isNullable = options.args.options.nullable;\n        if (options.args.options.select !== undefined)\n            this.isSelect = options.args.options.select;\n        if (options.args.options.insert !== undefined)\n            this.isInsert = options.args.options.insert;\n        if (options.args.options.update !== undefined)\n            this.isUpdate = options.args.options.update;\n        if (options.args.options.readonly !== undefined)\n            this.isUpdate = !options.args.options.readonly;\n        if (options.args.options.comment)\n            this.comment = options.args.options.comment;\n        if (options.args.options.default !== undefined)\n            this.default = options.args.options.default;\n        if (options.args.options.onUpdate)\n            this.onUpdate = options.args.options.onUpdate;\n        if (options.args.options.scale !== null && options.args.options.scale !== undefined)\n            this.scale = options.args.options.scale;\n        if (options.args.options.zerofill) {\n            this.zerofill = options.args.options.zerofill;\n            this.unsigned = true; // if you specify ZEROFILL for a numeric column, MySQL automatically adds the UNSIGNED attribute to the column\n        }\n        if (options.args.options.unsigned)\n            this.unsigned = options.args.options.unsigned;\n        if (options.args.options.precision !== null)\n            this.precision = options.args.options.precision;\n        if (options.args.options.enum) {\n            if (options.args.options.enum instanceof Object && !Array.isArray(options.args.options.enum)) {\n                this.enum = Object.keys(options.args.options.enum)\n                    // remove numeric keys - typescript numeric enum types generate them\n                    // From the documentation: “declaration merging” means that the compiler merges two separate declarations\n                    // declared with the same name into a single definition. This concept is often used to merge enum with namespace\n                    // where in namespace we define e.g. utility methods for creating enum. This is well known in other languages\n                    // like Java (enum methods). Here in case if enum have function, we need to remove it from metadata, otherwise\n                    // generated SQL statements contains string representation of that function which leads into syntax error\n                    // at database side.\n                    .filter(function (key) { return isNaN(+key) && typeof options.args.options.enum[key] !== \"function\"; })\n                    .map(function (key) { return options.args.options.enum[key]; });\n            }\n            else {\n                this.enum = options.args.options.enum;\n            }\n        }\n        if (options.args.options.enumName) {\n            this.enumName = options.args.options.enumName;\n        }\n        if (options.args.options.asExpression) {\n            this.asExpression = options.args.options.asExpression;\n            this.generatedType = options.args.options.generatedType ? options.args.options.generatedType : \"VIRTUAL\";\n        }\n        if (options.args.options.hstoreType)\n            this.hstoreType = options.args.options.hstoreType;\n        if (options.args.options.array)\n            this.isArray = options.args.options.array;\n        if (options.args.mode) {\n            this.isVirtual = options.args.mode === \"virtual\";\n            this.isTreeLevel = options.args.mode === \"treeLevel\";\n            this.isCreateDate = options.args.mode === \"createDate\";\n            this.isUpdateDate = options.args.mode === \"updateDate\";\n            this.isDeleteDate = options.args.mode === \"deleteDate\";\n            this.isVersion = options.args.mode === \"version\";\n            this.isObjectId = options.args.mode === \"objectId\";\n        }\n        if (options.args.options.transformer)\n            this.transformer = options.args.options.transformer;\n        if (options.args.options.spatialFeatureType)\n            this.spatialFeatureType = options.args.options.spatialFeatureType;\n        if (options.args.options.srid !== undefined)\n            this.srid = options.args.options.srid;\n        if (this.isTreeLevel)\n            this.type = options.connection.driver.mappedDataTypes.treeLevel;\n        if (this.isCreateDate) {\n            if (!this.type)\n                this.type = options.connection.driver.mappedDataTypes.createDate;\n            if (!this.default)\n                this.default = function () { return options.connection.driver.mappedDataTypes.createDateDefault; };\n            // skip precision if it was explicitly set to \"null\" in column options. Otherwise use default precision if it exist.\n            if (this.precision === undefined && options.args.options.precision === undefined && options.connection.driver.mappedDataTypes.createDatePrecision)\n                this.precision = options.connection.driver.mappedDataTypes.createDatePrecision;\n        }\n        if (this.isUpdateDate) {\n            if (!this.type)\n                this.type = options.connection.driver.mappedDataTypes.updateDate;\n            if (!this.default)\n                this.default = function () { return options.connection.driver.mappedDataTypes.updateDateDefault; };\n            if (!this.onUpdate)\n                this.onUpdate = options.connection.driver.mappedDataTypes.updateDateDefault;\n            // skip precision if it was explicitly set to \"null\" in column options. Otherwise use default precision if it exist.\n            if (this.precision === undefined && options.args.options.precision === undefined && options.connection.driver.mappedDataTypes.updateDatePrecision)\n                this.precision = options.connection.driver.mappedDataTypes.updateDatePrecision;\n        }\n        if (this.isDeleteDate) {\n            if (!this.type)\n                this.type = options.connection.driver.mappedDataTypes.deleteDate;\n            if (!this.isNullable)\n                this.isNullable = options.connection.driver.mappedDataTypes.deleteDateNullable;\n            // skip precision if it was explicitly set to \"null\" in column options. Otherwise use default precision if it exist.\n            if (this.precision === undefined && options.args.options.precision === undefined && options.connection.driver.mappedDataTypes.deleteDatePrecision)\n                this.precision = options.connection.driver.mappedDataTypes.deleteDatePrecision;\n        }\n        if (this.isVersion)\n            this.type = options.connection.driver.mappedDataTypes.version;\n        if (options.closureType)\n            this.closureType = options.closureType;\n        if (options.nestedSetLeft)\n            this.isNestedSetLeft = options.nestedSetLeft;\n        if (options.nestedSetRight)\n            this.isNestedSetRight = options.nestedSetRight;\n        if (options.materializedPath)\n            this.isMaterializedPath = options.materializedPath;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Creates entity id map from the given entity ids array.\n     */\n    ColumnMetadata.prototype.createValueMap = function (value, useDatabaseName) {\n        var _a;\n        var _this = this;\n        if (useDatabaseName === void 0) { useDatabaseName = false; }\n        // extract column value from embeds of entity if column is in embedded\n        if (this.embeddedMetadata) {\n            // example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeddeds\n            // we need to get value of \"id\" column from the post real entity object and return it in a\n            // { data: { information: { counters: { id: ... } } } } format\n            // first step - we extract all parent properties of the entity relative to this column, e.g. [data, information, counters]\n            var propertyNames = __spreadArray([], __read(this.embeddedMetadata.parentPropertyNames), false);\n            // now need to access post[data][information][counters] to get column value from the counters\n            // and on each step we need to create complex literal object, e.g. first { data },\n            // then { data: { information } }, then { data: { information: { counters } } },\n            // then { data: { information: { counters: [this.propertyName]: entity[data][information][counters][this.propertyName] } } }\n            // this recursive function helps doing that\n            var extractEmbeddedColumnValue_1 = function (propertyNames, map) {\n                var propertyName = propertyNames.shift();\n                if (propertyName) {\n                    map[propertyName] = {};\n                    extractEmbeddedColumnValue_1(propertyNames, map[propertyName]);\n                    return map;\n                }\n                // this is bugfix for #720 when increment number is bigint we need to make sure its a string\n                if ((_this.generationStrategy === \"increment\" || _this.generationStrategy === \"rowid\") && _this.type === \"bigint\" && value !== null)\n                    value = String(value);\n                map[useDatabaseName ? _this.databaseName : _this.propertyName] = value;\n                return map;\n            };\n            return extractEmbeddedColumnValue_1(propertyNames, {});\n        }\n        else { // no embeds - no problems. Simply return column property name and its value of the entity\n            // this is bugfix for #720 when increment number is bigint we need to make sure its a string\n            if ((this.generationStrategy === \"increment\" || this.generationStrategy === \"rowid\") && this.type === \"bigint\" && value !== null)\n                value = String(value);\n            return _a = {}, _a[useDatabaseName ? this.databaseName : this.propertyName] = value, _a;\n        }\n    };\n    /**\n     * Extracts column value and returns its column name with this value in a literal object.\n     * If column is in embedded (or recursive embedded) it returns complex literal object.\n     *\n     * Examples what this method can return depend if this column is in embeds.\n     * { id: 1 } or { title: \"hello\" }, { counters: { code: 1 } }, { data: { information: { counters: { code: 1 } } } }\n     */\n    ColumnMetadata.prototype.getEntityValueMap = function (entity, options) {\n        var _a, _b;\n        var _this = this;\n        var returnNulls = false; // options && options.skipNulls === false ? false : true; // todo: remove if current will not bring problems, uncomment if it will.\n        // extract column value from embeds of entity if column is in embedded\n        if (this.embeddedMetadata) {\n            // example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeddeds\n            // we need to get value of \"id\" column from the post real entity object and return it in a\n            // { data: { information: { counters: { id: ... } } } } format\n            // first step - we extract all parent properties of the entity relative to this column, e.g. [data, information, counters]\n            var propertyNames = __spreadArray([], __read(this.embeddedMetadata.parentPropertyNames), false);\n            var isEmbeddedArray_1 = this.embeddedMetadata.isArray;\n            // now need to access post[data][information][counters] to get column value from the counters\n            // and on each step we need to create complex literal object, e.g. first { data },\n            // then { data: { information } }, then { data: { information: { counters } } },\n            // then { data: { information: { counters: [this.propertyName]: entity[data][information][counters][this.propertyName] } } }\n            // this recursive function helps doing that\n            var extractEmbeddedColumnValue_2 = function (propertyNames, value) {\n                var _a, _b;\n                if (value === undefined) {\n                    return {};\n                }\n                var propertyName = propertyNames.shift();\n                if (propertyName) {\n                    var submap = extractEmbeddedColumnValue_2(propertyNames, value[propertyName]);\n                    if (Object.keys(submap).length > 0) {\n                        return _a = {}, _a[propertyName] = submap, _a;\n                    }\n                    return {};\n                }\n                if (isEmbeddedArray_1 && Array.isArray(value)) {\n                    return value.map(function (v) {\n                        var _a;\n                        return (_a = {}, _a[_this.propertyName] = v[_this.propertyName], _a);\n                    });\n                }\n                if (value[_this.propertyName] !== undefined && (returnNulls === false || value[_this.propertyName] !== null)) {\n                    return _b = {}, _b[_this.propertyName] = value[_this.propertyName], _b;\n                }\n                return {};\n            };\n            var map = extractEmbeddedColumnValue_2(propertyNames, entity);\n            return Object.keys(map).length > 0 ? map : undefined;\n        }\n        else { // no embeds - no problems. Simply return column property name and its value of the entity\n            if (this.relationMetadata && entity[this.relationMetadata.propertyName] && entity[this.relationMetadata.propertyName] instanceof Object) {\n                var map = this.relationMetadata.joinColumns.reduce(function (map, joinColumn) {\n                    var value = joinColumn.referencedColumn.getEntityValueMap(entity[_this.relationMetadata.propertyName]);\n                    if (value === undefined)\n                        return map;\n                    return OrmUtils.mergeDeep(map, value);\n                }, {});\n                if (Object.keys(map).length > 0)\n                    return _a = {}, _a[this.propertyName] = map, _a;\n                return undefined;\n            }\n            else {\n                if (entity[this.propertyName] !== undefined && (returnNulls === false || entity[this.propertyName] !== null))\n                    return _b = {}, _b[this.propertyName] = entity[this.propertyName], _b;\n                return undefined;\n            }\n        }\n    };\n    /**\n     * Extracts column value from the given entity.\n     * If column is in embedded (or recursive embedded) it extracts its value from there.\n     */\n    ColumnMetadata.prototype.getEntityValue = function (entity, transform) {\n        var _this = this;\n        if (transform === void 0) { transform = false; }\n        if (entity === undefined || entity === null)\n            return undefined;\n        // extract column value from embeddeds of entity if column is in embedded\n        var value = undefined;\n        if (this.embeddedMetadata) {\n            // example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeddeds\n            // we need to get value of \"id\" column from the post real entity object\n            // first step - we extract all parent properties of the entity relative to this column, e.g. [data, information, counters]\n            var propertyNames = __spreadArray([], __read(this.embeddedMetadata.parentPropertyNames), false);\n            var isEmbeddedArray = this.embeddedMetadata.isArray;\n            // next we need to access post[data][information][counters][this.propertyName] to get column value from the counters\n            // this recursive function takes array of generated property names and gets the post[data][information][counters] embed\n            var extractEmbeddedColumnValue_3 = function (propertyNames, value) {\n                var propertyName = propertyNames.shift();\n                return propertyName && value ? extractEmbeddedColumnValue_3(propertyNames, value[propertyName]) : value;\n            };\n            // once we get nested embed object we get its column, e.g. post[data][information][counters][this.propertyName]\n            var embeddedObject = extractEmbeddedColumnValue_3(propertyNames, entity);\n            if (embeddedObject) {\n                if (this.relationMetadata && this.referencedColumn) {\n                    var relatedEntity = this.relationMetadata.getEntityValue(embeddedObject);\n                    if (relatedEntity && relatedEntity instanceof Object && !(relatedEntity instanceof FindOperator) && !(relatedEntity instanceof Buffer)) {\n                        value = this.referencedColumn.getEntityValue(relatedEntity);\n                    }\n                    else if (embeddedObject[this.propertyName] && embeddedObject[this.propertyName] instanceof Object && !(embeddedObject[this.propertyName] instanceof FindOperator) && !(embeddedObject[this.propertyName] instanceof Buffer) && !(embeddedObject[this.propertyName] instanceof Date)) {\n                        value = this.referencedColumn.getEntityValue(embeddedObject[this.propertyName]);\n                    }\n                    else {\n                        value = embeddedObject[this.propertyName];\n                    }\n                }\n                else if (this.referencedColumn) {\n                    value = this.referencedColumn.getEntityValue(embeddedObject[this.propertyName]);\n                }\n                else if (isEmbeddedArray && Array.isArray(embeddedObject)) {\n                    value = embeddedObject.map(function (o) { return o[_this.propertyName]; });\n                }\n                else {\n                    value = embeddedObject[this.propertyName];\n                }\n            }\n        }\n        else { // no embeds - no problems. Simply return column name by property name of the entity\n            if (this.relationMetadata && this.referencedColumn) {\n                var relatedEntity = this.relationMetadata.getEntityValue(entity);\n                if (relatedEntity && relatedEntity instanceof Object && !(relatedEntity instanceof FindOperator) && !(relatedEntity instanceof Function) && !(relatedEntity instanceof Buffer)) {\n                    value = this.referencedColumn.getEntityValue(relatedEntity);\n                }\n                else if (entity[this.propertyName] && entity[this.propertyName] instanceof Object && !(entity[this.propertyName] instanceof FindOperator) && !(entity[this.propertyName] instanceof Function) && !(entity[this.propertyName] instanceof Buffer) && !(entity[this.propertyName] instanceof Date)) {\n                    value = this.referencedColumn.getEntityValue(entity[this.propertyName]);\n                }\n                else {\n                    value = entity[this.propertyName];\n                }\n            }\n            else if (this.referencedColumn) {\n                value = this.referencedColumn.getEntityValue(entity[this.propertyName]);\n            }\n            else {\n                value = entity[this.propertyName];\n            }\n        }\n        if (transform && this.transformer)\n            value = ApplyValueTransformers.transformTo(this.transformer, value);\n        return value;\n    };\n    /**\n     * Sets given entity's column value.\n     * Using of this method helps to set entity relation's value of the lazy and non-lazy relations.\n     */\n    ColumnMetadata.prototype.setEntityValue = function (entity, value) {\n        var _this = this;\n        if (this.embeddedMetadata) {\n            // first step - we extract all parent properties of the entity relative to this column, e.g. [data, information, counters]\n            var extractEmbeddedColumnValue_4 = function (embeddedMetadatas, map) {\n                // if (!object[embeddedMetadata.propertyName])\n                //     object[embeddedMetadata.propertyName] = embeddedMetadata.create();\n                var embeddedMetadata = embeddedMetadatas.shift();\n                if (embeddedMetadata) {\n                    if (!map[embeddedMetadata.propertyName])\n                        map[embeddedMetadata.propertyName] = embeddedMetadata.create();\n                    extractEmbeddedColumnValue_4(embeddedMetadatas, map[embeddedMetadata.propertyName]);\n                    return map;\n                }\n                map[_this.propertyName] = value;\n                return map;\n            };\n            return extractEmbeddedColumnValue_4(__spreadArray([], __read(this.embeddedMetadata.embeddedMetadataTree), false), entity);\n        }\n        else {\n            // we write a deep object in this entity only if the column is virtual\n            // because if its not virtual it means the user defined a real column for this relation\n            // also we don't do it if column is inside a junction table\n            if (!this.entityMetadata.isJunction && this.isVirtual && this.referencedColumn && this.referencedColumn.propertyName !== this.propertyName) {\n                if (!(this.propertyName in entity)) {\n                    entity[this.propertyName] = {};\n                }\n                entity[this.propertyName][this.referencedColumn.propertyName] = value;\n            }\n            else {\n                entity[this.propertyName] = value;\n            }\n        }\n    };\n    // ---------------------------------------------------------------------\n    // Builder Methods\n    // ---------------------------------------------------------------------\n    ColumnMetadata.prototype.build = function (connection) {\n        this.propertyPath = this.buildPropertyPath();\n        this.propertyAliasName = this.propertyPath.replace(\".\", \"_\");\n        this.databaseName = this.buildDatabaseName(connection);\n        this.databasePath = this.buildDatabasePath();\n        this.databaseNameWithoutPrefixes = connection.namingStrategy.columnName(this.propertyName, this.givenDatabaseName, []);\n        return this;\n    };\n    ColumnMetadata.prototype.buildPropertyPath = function () {\n        var path = \"\";\n        if (this.embeddedMetadata && this.embeddedMetadata.parentPropertyNames.length)\n            path = this.embeddedMetadata.parentPropertyNames.join(\".\") + \".\";\n        path += this.propertyName;\n        // we add reference column to property path only if this column is virtual\n        // because if its not virtual it means user defined a real column for this relation\n        // also we don't do it if column is inside a junction table\n        if (!this.entityMetadata.isJunction && this.isVirtual && this.referencedColumn && this.referencedColumn.propertyName !== this.propertyName)\n            path += \".\" + this.referencedColumn.propertyName;\n        return path;\n    };\n    ColumnMetadata.prototype.buildDatabasePath = function () {\n        var path = \"\";\n        if (this.embeddedMetadata && this.embeddedMetadata.parentPropertyNames.length)\n            path = this.embeddedMetadata.parentPropertyNames.join(\".\") + \".\";\n        path += this.databaseName;\n        // we add reference column to property path only if this column is virtual\n        // because if its not virtual it means user defined a real column for this relation\n        // also we don't do it if column is inside a junction table\n        if (!this.entityMetadata.isJunction && this.isVirtual && this.referencedColumn && this.referencedColumn.databaseName !== this.databaseName)\n            path += \".\" + this.referencedColumn.databaseName;\n        return path;\n    };\n    ColumnMetadata.prototype.buildDatabaseName = function (connection) {\n        var propertyNames = this.embeddedMetadata ? this.embeddedMetadata.parentPrefixes : [];\n        if (connection.driver instanceof MongoDriver) // we don't need to include embedded name for the mongodb column names\n            propertyNames = [];\n        return connection.namingStrategy.columnName(this.propertyName, this.givenDatabaseName, propertyNames);\n    };\n    return ColumnMetadata;\n}());\nexport { ColumnMetadata };\n\n//# sourceMappingURL=ColumnMetadata.js.map\n","/**\n * This class stores query and its parameters\n */\nvar Query = /** @class */ (function () {\n    function Query(query, parameters) {\n        this.query = query;\n        this.parameters = parameters;\n    }\n    return Query;\n}());\nexport { Query };\n\n//# sourceMappingURL=Query.js.map\n","/**\n * This class stores up and down queries needed for migrations functionality.\n */\nvar SqlInMemory = /** @class */ (function () {\n    function SqlInMemory() {\n        this.upQueries = [];\n        this.downQueries = [];\n    }\n    return SqlInMemory;\n}());\nexport { SqlInMemory };\n\n//# sourceMappingURL=SqlInMemory.js.map\n","import { __awaiter, __generator, __read, __spreadArray, __values } from \"tslib\";\nimport { Query } from \"../driver/Query\";\nimport { SqlInMemory } from \"../driver/SqlInMemory\";\nimport { TypeORMError } from \"../error/TypeORMError\";\nimport { OrmUtils } from \"../util/OrmUtils\";\nvar BaseQueryRunner = /** @class */ (function () {\n    function BaseQueryRunner() {\n        // -------------------------------------------------------------------------\n        // Public Properties\n        // -------------------------------------------------------------------------\n        /**\n         * Indicates if connection for this query runner is released.\n         * Once its released, query runner cannot run queries anymore.\n         */\n        this.isReleased = false;\n        /**\n         * Indicates if transaction is in progress.\n         */\n        this.isTransactionActive = false;\n        /**\n         * Stores temporarily user data.\n         * Useful for sharing data with subscribers.\n         */\n        this.data = {};\n        /**\n         * All synchronized tables in the database.\n         */\n        this.loadedTables = [];\n        /**\n         * All synchronized views in the database.\n         */\n        this.loadedViews = [];\n        /**\n         * Indicates if special query runner mode in which sql queries won't be executed is enabled.\n         */\n        this.sqlMemoryMode = false;\n        /**\n         * Sql-s stored if \"sql in memory\" mode is enabled.\n         */\n        this.sqlInMemory = new SqlInMemory();\n        this.cachedTablePaths = {};\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads given table's data from the database.\n     */\n    BaseQueryRunner.prototype.getTable = function (tablePath) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, this.loadTables([tablePath])];\n                    case 1:\n                        _a.loadedTables = _b.sent();\n                        return [2 /*return*/, this.loadedTables.length > 0 ? this.loadedTables[0] : undefined];\n                }\n            });\n        });\n    };\n    /**\n     * Loads all tables (with given names) from the database.\n     */\n    BaseQueryRunner.prototype.getTables = function (tableNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!!tableNames) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.loadTables(tableNames)];\n                    case 1: \n                    // Don't cache in this case.\n                    // This is the new case & isn't used anywhere else anyway.\n                    return [2 /*return*/, _b.sent()];\n                    case 2:\n                        _a = this;\n                        return [4 /*yield*/, this.loadTables(tableNames)];\n                    case 3:\n                        _a.loadedTables = _b.sent();\n                        return [2 /*return*/, this.loadedTables];\n                }\n            });\n        });\n    };\n    /**\n     * Loads given view's data from the database.\n     */\n    BaseQueryRunner.prototype.getView = function (viewPath) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, this.loadViews([viewPath])];\n                    case 1:\n                        _a.loadedViews = _b.sent();\n                        return [2 /*return*/, this.loadedViews.length > 0 ? this.loadedViews[0] : undefined];\n                }\n            });\n        });\n    };\n    /**\n     * Loads given view's data from the database.\n     */\n    BaseQueryRunner.prototype.getViews = function (viewPaths) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, this.loadViews(viewPaths)];\n                    case 1:\n                        _a.loadedViews = _b.sent();\n                        return [2 /*return*/, this.loadedViews];\n                }\n            });\n        });\n    };\n    /**\n     * Enables special query runner mode in which sql queries won't be executed,\n     * instead they will be memorized into a special variable inside query runner.\n     * You can get memorized sql using getMemorySql() method.\n     */\n    BaseQueryRunner.prototype.enableSqlMemory = function () {\n        this.sqlInMemory = new SqlInMemory();\n        this.sqlMemoryMode = true;\n    };\n    /**\n     * Disables special query runner mode in which sql queries won't be executed\n     * started by calling enableSqlMemory() method.\n     *\n     * Previously memorized sql will be flushed.\n     */\n    BaseQueryRunner.prototype.disableSqlMemory = function () {\n        this.sqlInMemory = new SqlInMemory();\n        this.sqlMemoryMode = false;\n    };\n    /**\n     * Flushes all memorized sqls.\n     */\n    BaseQueryRunner.prototype.clearSqlMemory = function () {\n        this.sqlInMemory = new SqlInMemory();\n    };\n    /**\n     * Gets sql stored in the memory. Parameters in the sql are already replaced.\n     */\n    BaseQueryRunner.prototype.getMemorySql = function () {\n        return this.sqlInMemory;\n    };\n    /**\n     * Executes up sql queries.\n     */\n    BaseQueryRunner.prototype.executeMemoryUpSql = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b, _c, query, parameters, e_1_1;\n            var e_1, _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _e.trys.push([0, 5, 6, 7]);\n                        _a = __values(this.sqlInMemory.upQueries), _b = _a.next();\n                        _e.label = 1;\n                    case 1:\n                        if (!!_b.done) return [3 /*break*/, 4];\n                        _c = _b.value, query = _c.query, parameters = _c.parameters;\n                        return [4 /*yield*/, this.query(query, parameters)];\n                    case 2:\n                        _e.sent();\n                        _e.label = 3;\n                    case 3:\n                        _b = _a.next();\n                        return [3 /*break*/, 1];\n                    case 4: return [3 /*break*/, 7];\n                    case 5:\n                        e_1_1 = _e.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 7];\n                    case 6:\n                        try {\n                            if (_b && !_b.done && (_d = _a.return)) _d.call(_a);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes down sql queries.\n     */\n    BaseQueryRunner.prototype.executeMemoryDownSql = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, _b, _c, query, parameters, e_2_1;\n            var e_2, _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _e.trys.push([0, 5, 6, 7]);\n                        _a = __values(this.sqlInMemory.downQueries.reverse()), _b = _a.next();\n                        _e.label = 1;\n                    case 1:\n                        if (!!_b.done) return [3 /*break*/, 4];\n                        _c = _b.value, query = _c.query, parameters = _c.parameters;\n                        return [4 /*yield*/, this.query(query, parameters)];\n                    case 2:\n                        _e.sent();\n                        _e.label = 3;\n                    case 3:\n                        _b = _a.next();\n                        return [3 /*break*/, 1];\n                    case 4: return [3 /*break*/, 7];\n                    case 5:\n                        e_2_1 = _e.sent();\n                        e_2 = { error: e_2_1 };\n                        return [3 /*break*/, 7];\n                    case 6:\n                        try {\n                            if (_b && !_b.done && (_d = _a.return)) _d.call(_a);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                        return [7 /*endfinally*/];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets view from previously loaded views, otherwise loads it from database.\n     */\n    BaseQueryRunner.prototype.getCachedView = function (viewName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var view, foundViews;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        view = this.loadedViews.find(function (view) { return view.name === viewName; });\n                        if (view)\n                            return [2 /*return*/, view];\n                        return [4 /*yield*/, this.loadViews([viewName])];\n                    case 1:\n                        foundViews = _a.sent();\n                        if (foundViews.length > 0) {\n                            this.loadedViews.push(foundViews[0]);\n                            return [2 /*return*/, foundViews[0]];\n                        }\n                        else {\n                            throw new TypeORMError(\"View \\\"\" + viewName + \"\\\" does not exist.\");\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Gets table from previously loaded tables, otherwise loads it from database.\n     */\n    BaseQueryRunner.prototype.getCachedTable = function (tableName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tablePath_1, table, foundTables, foundTablePath_1, cachedTable;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (tableName in this.cachedTablePaths) {\n                            tablePath_1 = this.cachedTablePaths[tableName];\n                            table = this.loadedTables.find(function (table) { return _this.getTablePath(table) === tablePath_1; });\n                            if (table) {\n                                return [2 /*return*/, table];\n                            }\n                        }\n                        return [4 /*yield*/, this.loadTables([tableName])];\n                    case 1:\n                        foundTables = _a.sent();\n                        if (foundTables.length > 0) {\n                            foundTablePath_1 = this.getTablePath(foundTables[0]);\n                            cachedTable = this.loadedTables.find(function (table) { return _this.getTablePath(table) === foundTablePath_1; });\n                            if (!cachedTable) {\n                                this.cachedTablePaths[tableName] = this.getTablePath(foundTables[0]);\n                                this.loadedTables.push(foundTables[0]);\n                                return [2 /*return*/, foundTables[0]];\n                            }\n                            else {\n                                return [2 /*return*/, cachedTable];\n                            }\n                        }\n                        else {\n                            throw new TypeORMError(\"Table \\\"\" + tableName + \"\\\" does not exist.\");\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Replaces loaded table with given changed table.\n     */\n    BaseQueryRunner.prototype.replaceCachedTable = function (table, changedTable) {\n        var e_3, _a;\n        var _this = this;\n        var oldTablePath = this.getTablePath(table);\n        var foundTable = this.loadedTables.find(function (loadedTable) { return _this.getTablePath(loadedTable) === oldTablePath; });\n        try {\n            // Clean up the lookup cache..\n            for (var _b = __values(Object.entries(this.cachedTablePaths)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], cachedPath = _d[1];\n                if (cachedPath === oldTablePath) {\n                    this.cachedTablePaths[key] = this.getTablePath(changedTable);\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (foundTable) {\n            foundTable.database = changedTable.database;\n            foundTable.schema = changedTable.schema;\n            foundTable.name = changedTable.name;\n            foundTable.columns = changedTable.columns;\n            foundTable.indices = changedTable.indices;\n            foundTable.foreignKeys = changedTable.foreignKeys;\n            foundTable.uniques = changedTable.uniques;\n            foundTable.checks = changedTable.checks;\n            foundTable.justCreated = changedTable.justCreated;\n            foundTable.engine = changedTable.engine;\n        }\n    };\n    BaseQueryRunner.prototype.getTablePath = function (target) {\n        var parsed = this.connection.driver.parseTableName(target);\n        return this.connection.driver.buildTableName(parsed.tableName, parsed.schema, parsed.database);\n    };\n    BaseQueryRunner.prototype.getTypeormMetadataTableName = function () {\n        var options = this.connection.driver.options;\n        return this.connection.driver.buildTableName(\"typeorm_metadata\", options.schema, options.database);\n    };\n    /**\n     * Checks if at least one of column properties was changed.\n     * Does not checks column type, length and autoincrement, because these properties changes separately.\n     */\n    BaseQueryRunner.prototype.isColumnChanged = function (oldColumn, newColumn, checkDefault, checkComment) {\n        // this logs need to debug issues in column change detection. Do not delete it!\n        // console.log(\"charset ---------------\");\n        // console.log(oldColumn.charset !== newColumn.charset);\n        // console.log(oldColumn.charset, newColumn.charset);\n        // console.log(\"collation ---------------\");\n        // console.log(oldColumn.collation !== newColumn.collation);\n        // console.log(oldColumn.collation, newColumn.collation);\n        // console.log(\"precision ---------------\");\n        // console.log(oldColumn.precision !== newColumn.precision);\n        // console.log(oldColumn.precision, newColumn.precision);\n        // console.log(\"scale ---------------\");\n        // console.log(oldColumn.scale !== newColumn.scale);\n        // console.log(oldColumn.scale, newColumn.scale);\n        // console.log(\"default ---------------\");\n        // console.log((checkDefault && oldColumn.default !== newColumn.default));\n        // console.log(oldColumn.default, newColumn.default);\n        // console.log(\"isNullable ---------------\");\n        // console.log(oldColumn.isNullable !== newColumn.isNullable);\n        // console.log(oldColumn.isNullable, newColumn.isNullable);\n        // console.log(\"comment ---------------\");\n        // console.log((checkComment && oldColumn.comment !== newColumn.comment));\n        // console.log(oldColumn.comment, newColumn.comment);\n        // console.log(\"enum ---------------\");\n        // console.log(!OrmUtils.isArraysEqual(oldColumn.enum || [], newColumn.enum || []));\n        // console.log(oldColumn.enum, newColumn.enum);\n        return oldColumn.charset !== newColumn.charset\n            || oldColumn.collation !== newColumn.collation\n            || oldColumn.precision !== newColumn.precision\n            || oldColumn.scale !== newColumn.scale\n            || oldColumn.width !== newColumn.width // MySQL only\n            || oldColumn.zerofill !== newColumn.zerofill // MySQL only\n            || oldColumn.unsigned !== newColumn.unsigned // MySQL only\n            || oldColumn.asExpression !== newColumn.asExpression // MySQL only\n            || (checkDefault && oldColumn.default !== newColumn.default)\n            || oldColumn.onUpdate !== newColumn.onUpdate // MySQL only\n            || oldColumn.isNullable !== newColumn.isNullable\n            || (checkComment && oldColumn.comment !== newColumn.comment)\n            || !OrmUtils.isArraysEqual(oldColumn.enum || [], newColumn.enum || []);\n    };\n    /**\n     * Checks if column length is by default.\n     */\n    BaseQueryRunner.prototype.isDefaultColumnLength = function (table, column, length) {\n        // if table have metadata, we check if length is specified in column metadata\n        if (this.connection.hasMetadata(table.name)) {\n            var metadata = this.connection.getMetadata(table.name);\n            var columnMetadata = metadata.findColumnWithDatabaseName(column.name);\n            if (columnMetadata) {\n                var columnMetadataLength = this.connection.driver.getColumnLength(columnMetadata);\n                if (columnMetadataLength)\n                    return false;\n            }\n        }\n        if (this.connection.driver.dataTypeDefaults\n            && this.connection.driver.dataTypeDefaults[column.type]\n            && this.connection.driver.dataTypeDefaults[column.type].length) {\n            return this.connection.driver.dataTypeDefaults[column.type].length.toString() === length.toString();\n        }\n        return false;\n    };\n    /**\n     * Checks if column precision is by default.\n     */\n    BaseQueryRunner.prototype.isDefaultColumnPrecision = function (table, column, precision) {\n        // if table have metadata, we check if length is specified in column metadata\n        if (this.connection.hasMetadata(table.name)) {\n            var metadata = this.connection.getMetadata(table.name);\n            var columnMetadata = metadata.findColumnWithDatabaseName(column.name);\n            if (columnMetadata && columnMetadata.precision !== null && columnMetadata.precision !== undefined)\n                return false;\n        }\n        if (this.connection.driver.dataTypeDefaults\n            && this.connection.driver.dataTypeDefaults[column.type]\n            && this.connection.driver.dataTypeDefaults[column.type].precision !== null\n            && this.connection.driver.dataTypeDefaults[column.type].precision !== undefined)\n            return this.connection.driver.dataTypeDefaults[column.type].precision === precision;\n        return false;\n    };\n    /**\n     * Checks if column scale is by default.\n     */\n    BaseQueryRunner.prototype.isDefaultColumnScale = function (table, column, scale) {\n        // if table have metadata, we check if length is specified in column metadata\n        if (this.connection.hasMetadata(table.name)) {\n            var metadata = this.connection.getMetadata(table.name);\n            var columnMetadata = metadata.findColumnWithDatabaseName(column.name);\n            if (columnMetadata && columnMetadata.scale !== null && columnMetadata.scale !== undefined)\n                return false;\n        }\n        if (this.connection.driver.dataTypeDefaults\n            && this.connection.driver.dataTypeDefaults[column.type]\n            && this.connection.driver.dataTypeDefaults[column.type].scale !== null\n            && this.connection.driver.dataTypeDefaults[column.type].scale !== undefined)\n            return this.connection.driver.dataTypeDefaults[column.type].scale === scale;\n        return false;\n    };\n    /**\n     * Executes sql used special for schema build.\n     */\n    BaseQueryRunner.prototype.executeQueries = function (upQueries, downQueries) {\n        return __awaiter(this, void 0, void 0, function () {\n            var upQueries_1, upQueries_1_1, _a, query, parameters, e_4_1;\n            var _b, _c, e_4, _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        if (upQueries instanceof Query)\n                            upQueries = [upQueries];\n                        if (downQueries instanceof Query)\n                            downQueries = [downQueries];\n                        (_b = this.sqlInMemory.upQueries).push.apply(_b, __spreadArray([], __read(upQueries), false));\n                        (_c = this.sqlInMemory.downQueries).push.apply(_c, __spreadArray([], __read(downQueries), false));\n                        // if sql-in-memory mode is enabled then simply store sql in memory and return\n                        if (this.sqlMemoryMode === true)\n                            return [2 /*return*/, Promise.resolve()];\n                        _e.label = 1;\n                    case 1:\n                        _e.trys.push([1, 6, 7, 8]);\n                        upQueries_1 = __values(upQueries), upQueries_1_1 = upQueries_1.next();\n                        _e.label = 2;\n                    case 2:\n                        if (!!upQueries_1_1.done) return [3 /*break*/, 5];\n                        _a = upQueries_1_1.value, query = _a.query, parameters = _a.parameters;\n                        return [4 /*yield*/, this.query(query, parameters)];\n                    case 3:\n                        _e.sent();\n                        _e.label = 4;\n                    case 4:\n                        upQueries_1_1 = upQueries_1.next();\n                        return [3 /*break*/, 2];\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        e_4_1 = _e.sent();\n                        e_4 = { error: e_4_1 };\n                        return [3 /*break*/, 8];\n                    case 7:\n                        try {\n                            if (upQueries_1_1 && !upQueries_1_1.done && (_d = upQueries_1.return)) _d.call(upQueries_1);\n                        }\n                        finally { if (e_4) throw e_4.error; }\n                        return [7 /*endfinally*/];\n                    case 8: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return BaseQueryRunner;\n}());\nexport { BaseQueryRunner };\n\n//# sourceMappingURL=BaseQueryRunner.js.map\n","import { __awaiter, __extends, __generator, __read, __spreadArray } from \"tslib\";\nimport { TransactionAlreadyStartedError } from \"../../error/TransactionAlreadyStartedError\";\nimport { TransactionNotStartedError } from \"../../error/TransactionNotStartedError\";\nimport { TableColumn } from \"../../schema-builder/table/TableColumn\";\nimport { ColumnMetadata } from \"../../metadata/ColumnMetadata\";\nimport { Table } from \"../../schema-builder/table/Table\";\nimport { TableIndex } from \"../../schema-builder/table/TableIndex\";\nimport { TableForeignKey } from \"../../schema-builder/table/TableForeignKey\";\nimport { View } from \"../../schema-builder/view/View\";\nimport { Query } from \"../Query\";\nimport { TableUnique } from \"../../schema-builder/table/TableUnique\";\nimport { BaseQueryRunner } from \"../../query-runner/BaseQueryRunner\";\nimport { OrmUtils } from \"../../util/OrmUtils\";\nimport { TableCheck } from \"../../schema-builder/table/TableCheck\";\nimport { TypeORMError } from \"../../error\";\n/**\n * Runs queries on a single sqlite database connection.\n */\nvar AbstractSqliteQueryRunner = /** @class */ (function (_super) {\n    __extends(AbstractSqliteQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function AbstractSqliteQueryRunner() {\n        return _super.call(this) || this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates/uses database connection from the connection pool to perform further operations.\n     * Returns obtained database connection.\n     */\n    AbstractSqliteQueryRunner.prototype.connect = function () {\n        return Promise.resolve(this.driver.databaseConnection);\n    };\n    /**\n     * Releases used database connection.\n     * We just clear loaded tables and sql in memory, because sqlite do not support multiple connections thus query runners.\n     */\n    AbstractSqliteQueryRunner.prototype.release = function () {\n        this.loadedTables = [];\n        this.clearSqlMemory();\n        return Promise.resolve();\n    };\n    /**\n     * Starts transaction.\n     */\n    AbstractSqliteQueryRunner.prototype.startTransaction = function (isolationLevel) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isTransactionActive)\n                            throw new TransactionAlreadyStartedError();\n                        if (!isolationLevel) return [3 /*break*/, 4];\n                        if (isolationLevel !== \"READ UNCOMMITTED\" && isolationLevel !== \"SERIALIZABLE\") {\n                            throw new TypeORMError(\"SQLite only supports SERIALIZABLE and READ UNCOMMITTED isolation\");\n                        }\n                        if (!(isolationLevel === \"READ UNCOMMITTED\")) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.query(\"PRAGMA read_uncommitted = true\")];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this.query(\"PRAGMA read_uncommitted = false\")];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [4 /*yield*/, this.broadcaster.broadcast('BeforeTransactionStart')];\n                    case 5:\n                        _a.sent();\n                        this.isTransactionActive = true;\n                        return [4 /*yield*/, this.query(\"BEGIN TRANSACTION\")];\n                    case 6:\n                        _a.sent();\n                        return [4 /*yield*/, this.broadcaster.broadcast('AfterTransactionStart')];\n                    case 7:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Commits transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    AbstractSqliteQueryRunner.prototype.commitTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive)\n                            throw new TransactionNotStartedError();\n                        return [4 /*yield*/, this.broadcaster.broadcast('BeforeTransactionCommit')];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.query(\"COMMIT\")];\n                    case 2:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        return [4 /*yield*/, this.broadcaster.broadcast('AfterTransactionCommit')];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Rollbacks transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    AbstractSqliteQueryRunner.prototype.rollbackTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive)\n                            throw new TransactionNotStartedError();\n                        return [4 /*yield*/, this.broadcaster.broadcast('BeforeTransactionRollback')];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.query(\"ROLLBACK\")];\n                    case 2:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        return [4 /*yield*/, this.broadcaster.broadcast('AfterTransactionRollback')];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Returns raw data stream.\n     */\n    AbstractSqliteQueryRunner.prototype.stream = function (query, parameters, onEnd, onError) {\n        throw new TypeORMError(\"Stream is not supported by sqlite driver.\");\n    };\n    /**\n     * Returns all available database names including system databases.\n     */\n    AbstractSqliteQueryRunner.prototype.getDatabases = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve([])];\n            });\n        });\n    };\n    /**\n     * Returns all available schema names including system schemas.\n     * If database parameter specified, returns schemas of that database.\n     */\n    AbstractSqliteQueryRunner.prototype.getSchemas = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve([])];\n            });\n        });\n    };\n    /**\n     * Checks if database with the given name exist.\n     */\n    AbstractSqliteQueryRunner.prototype.hasDatabase = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve(false)];\n            });\n        });\n    };\n    /**\n     * Loads currently using database\n     */\n    AbstractSqliteQueryRunner.prototype.getCurrentDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve(undefined)];\n            });\n        });\n    };\n    /**\n     * Checks if schema with the given name exist.\n     */\n    AbstractSqliteQueryRunner.prototype.hasSchema = function (schema) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new TypeORMError(\"This driver does not support table schemas\");\n            });\n        });\n    };\n    /**\n     * Loads currently using database schema\n     */\n    AbstractSqliteQueryRunner.prototype.getCurrentSchema = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve(undefined)];\n            });\n        });\n    };\n    /**\n     * Checks if table with the given name exist in the database.\n     */\n    AbstractSqliteQueryRunner.prototype.hasTable = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tableName, sql, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        tableName = tableOrName instanceof Table ? tableOrName.name : tableOrName;\n                        sql = \"SELECT * FROM \\\"sqlite_master\\\" WHERE \\\"type\\\" = 'table' AND \\\"name\\\" = '\" + tableName + \"'\";\n                        return [4 /*yield*/, this.query(sql)];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if column with the given name exist in the given table.\n     */\n    AbstractSqliteQueryRunner.prototype.hasColumn = function (tableOrName, columnName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var tableName, sql, columns;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        tableName = tableOrName instanceof Table ? tableOrName.name : tableOrName;\n                        sql = \"PRAGMA table_info(\\\"\" + tableName + \"\\\")\";\n                        return [4 /*yield*/, this.query(sql)];\n                    case 1:\n                        columns = _a.sent();\n                        return [2 /*return*/, !!columns.find(function (column) { return column[\"name\"] === columnName; })];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new database.\n     */\n    AbstractSqliteQueryRunner.prototype.createDatabase = function (database, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    /**\n     * Drops database.\n     */\n    AbstractSqliteQueryRunner.prototype.dropDatabase = function (database, ifExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    /**\n     * Creates a new table schema.\n     */\n    AbstractSqliteQueryRunner.prototype.createSchema = function (schemaPath, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    /**\n     * Drops table schema.\n     */\n    AbstractSqliteQueryRunner.prototype.dropSchema = function (schemaPath, ifExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve()];\n            });\n        });\n    };\n    /**\n     * Creates a new table.\n     */\n    AbstractSqliteQueryRunner.prototype.createTable = function (table, ifNotExist, createForeignKeys, createIndices) {\n        if (ifNotExist === void 0) { ifNotExist = false; }\n        if (createForeignKeys === void 0) { createForeignKeys = true; }\n        if (createIndices === void 0) { createIndices = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var upQueries, downQueries, isTableExist;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        upQueries = [];\n                        downQueries = [];\n                        if (!ifNotExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasTable(table)];\n                    case 1:\n                        isTableExist = _a.sent();\n                        if (isTableExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _a.label = 2;\n                    case 2:\n                        upQueries.push(this.createTableSql(table, createForeignKeys));\n                        downQueries.push(this.dropTableSql(table));\n                        if (createIndices) {\n                            table.indices.forEach(function (index) {\n                                // new index may be passed without name. In this case we generate index name manually.\n                                if (!index.name)\n                                    index.name = _this.connection.namingStrategy.indexName(table, index.columnNames, index.where);\n                                upQueries.push(_this.createIndexSql(table, index));\n                                downQueries.push(_this.dropIndexSql(index));\n                            });\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the table.\n     */\n    AbstractSqliteQueryRunner.prototype.dropTable = function (tableOrName, ifExist, dropForeignKeys, dropIndices) {\n        if (dropForeignKeys === void 0) { dropForeignKeys = true; }\n        if (dropIndices === void 0) { dropIndices = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var isTableExist, createForeignKeys, table, _a, upQueries, downQueries;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!ifExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasTable(tableOrName)];\n                    case 1:\n                        isTableExist = _b.sent();\n                        if (!isTableExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _b.label = 2;\n                    case 2:\n                        createForeignKeys = dropForeignKeys;\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 3];\n                        _a = tableOrName;\n                        return [3 /*break*/, 5];\n                    case 3: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 4:\n                        _a = _b.sent();\n                        _b.label = 5;\n                    case 5:\n                        table = _a;\n                        upQueries = [];\n                        downQueries = [];\n                        if (dropIndices) {\n                            table.indices.forEach(function (index) {\n                                upQueries.push(_this.dropIndexSql(index));\n                                downQueries.push(_this.createIndexSql(table, index));\n                            });\n                        }\n                        upQueries.push(this.dropTableSql(table, ifExist));\n                        downQueries.push(this.createTableSql(table, createForeignKeys));\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 6:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new view.\n     */\n    AbstractSqliteQueryRunner.prototype.createView = function (view) {\n        return __awaiter(this, void 0, void 0, function () {\n            var upQueries, downQueries;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        upQueries = [];\n                        downQueries = [];\n                        upQueries.push(this.createViewSql(view));\n                        upQueries.push(this.insertViewDefinitionSql(view));\n                        downQueries.push(this.dropViewSql(view));\n                        downQueries.push(this.deleteViewDefinitionSql(view));\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the view.\n     */\n    AbstractSqliteQueryRunner.prototype.dropView = function (target) {\n        return __awaiter(this, void 0, void 0, function () {\n            var viewName, view, upQueries, downQueries;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        viewName = target instanceof View ? target.name : target;\n                        return [4 /*yield*/, this.getCachedView(viewName)];\n                    case 1:\n                        view = _a.sent();\n                        upQueries = [];\n                        downQueries = [];\n                        upQueries.push(this.deleteViewDefinitionSql(view));\n                        upQueries.push(this.dropViewSql(view));\n                        downQueries.push(this.insertViewDefinitionSql(view));\n                        downQueries.push(this.createViewSql(view));\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames the given table.\n     */\n    AbstractSqliteQueryRunner.prototype.renameTable = function (oldTableOrName, newTableName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var oldTable, _a, newTable, up, down;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(oldTableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = oldTableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(oldTableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        oldTable = _a;\n                        newTable = oldTable.clone();\n                        newTable.name = newTableName;\n                        up = new Query(\"ALTER TABLE \\\"\" + oldTable.name + \"\\\" RENAME TO \\\"\" + newTableName + \"\\\"\");\n                        down = new Query(\"ALTER TABLE \\\"\" + newTableName + \"\\\" RENAME TO \\\"\" + oldTable.name + \"\\\"\");\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        // rename old table;\n                        oldTable.name = newTable.name;\n                        // rename unique constraints\n                        newTable.uniques.forEach(function (unique) {\n                            unique.name = _this.connection.namingStrategy.uniqueConstraintName(newTable, unique.columnNames);\n                        });\n                        // rename foreign key constraints\n                        newTable.foreignKeys.forEach(function (foreignKey) {\n                            foreignKey.name = _this.connection.namingStrategy.foreignKeyName(newTable, foreignKey.columnNames, _this.getTablePath(foreignKey), foreignKey.referencedColumnNames);\n                        });\n                        // rename indices\n                        newTable.indices.forEach(function (index) {\n                            index.name = _this.connection.namingStrategy.indexName(newTable, index.columnNames, index.where);\n                        });\n                        // recreate table with new constraint names\n                        return [4 /*yield*/, this.recreateTable(newTable, oldTable)];\n                    case 5:\n                        // recreate table with new constraint names\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new column from the column in the table.\n     */\n    AbstractSqliteQueryRunner.prototype.addColumn = function (tableOrName, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        return [2 /*return*/, this.addColumns(table, [column])];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new columns from the column in the table.\n     */\n    AbstractSqliteQueryRunner.prototype.addColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        columns.forEach(function (column) { return changedTable.addColumn(column); });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames column in the given table.\n     */\n    AbstractSqliteQueryRunner.prototype.renameColumn = function (tableOrName, oldTableColumnOrName, newTableColumnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, oldColumn, newColumn;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        oldColumn = oldTableColumnOrName instanceof TableColumn ? oldTableColumnOrName : table.columns.find(function (c) { return c.name === oldTableColumnOrName; });\n                        if (!oldColumn)\n                            throw new TypeORMError(\"Column \\\"\" + oldTableColumnOrName + \"\\\" was not found in the \\\"\" + table.name + \"\\\" table.\");\n                        newColumn = undefined;\n                        if (newTableColumnOrName instanceof TableColumn) {\n                            newColumn = newTableColumnOrName;\n                        }\n                        else {\n                            newColumn = oldColumn.clone();\n                            newColumn.name = newTableColumnOrName;\n                        }\n                        return [2 /*return*/, this.changeColumn(table, oldColumn, newColumn)];\n                }\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     */\n    AbstractSqliteQueryRunner.prototype.changeColumn = function (tableOrName, oldTableColumnOrName, newColumn) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, oldColumn;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        oldColumn = oldTableColumnOrName instanceof TableColumn ? oldTableColumnOrName : table.columns.find(function (c) { return c.name === oldTableColumnOrName; });\n                        if (!oldColumn)\n                            throw new TypeORMError(\"Column \\\"\" + oldTableColumnOrName + \"\\\" was not found in the \\\"\" + table.name + \"\\\" table.\");\n                        return [4 /*yield*/, this.changeColumns(table, [{ oldColumn: oldColumn, newColumn: newColumn }])];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     * Changed column looses all its keys in the db.\n     */\n    AbstractSqliteQueryRunner.prototype.changeColumns = function (tableOrName, changedColumns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        changedColumns.forEach(function (changedColumnSet) {\n                            if (changedColumnSet.newColumn.name !== changedColumnSet.oldColumn.name) {\n                                changedTable.findColumnUniques(changedColumnSet.oldColumn).forEach(function (unique) {\n                                    unique.columnNames.splice(unique.columnNames.indexOf(changedColumnSet.oldColumn.name), 1);\n                                    unique.columnNames.push(changedColumnSet.newColumn.name);\n                                    unique.name = _this.connection.namingStrategy.uniqueConstraintName(changedTable, unique.columnNames);\n                                });\n                                changedTable.findColumnForeignKeys(changedColumnSet.oldColumn).forEach(function (fk) {\n                                    fk.columnNames.splice(fk.columnNames.indexOf(changedColumnSet.oldColumn.name), 1);\n                                    fk.columnNames.push(changedColumnSet.newColumn.name);\n                                    fk.name = _this.connection.namingStrategy.foreignKeyName(changedTable, fk.columnNames, _this.getTablePath(fk), fk.referencedColumnNames);\n                                });\n                                changedTable.findColumnIndices(changedColumnSet.oldColumn).forEach(function (index) {\n                                    index.columnNames.splice(index.columnNames.indexOf(changedColumnSet.oldColumn.name), 1);\n                                    index.columnNames.push(changedColumnSet.newColumn.name);\n                                    index.name = _this.connection.namingStrategy.indexName(changedTable, index.columnNames, index.where);\n                                });\n                            }\n                            var originalColumn = changedTable.columns.find(function (column) { return column.name === changedColumnSet.oldColumn.name; });\n                            if (originalColumn)\n                                changedTable.columns[changedTable.columns.indexOf(originalColumn)] = changedColumnSet.newColumn;\n                        });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops column in the table.\n     */\n    AbstractSqliteQueryRunner.prototype.dropColumn = function (tableOrName, columnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, column;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        column = columnOrName instanceof TableColumn ? columnOrName : table.findColumnByName(columnOrName);\n                        if (!column)\n                            throw new TypeORMError(\"Column \\\"\" + columnOrName + \"\\\" was not found in table \\\"\" + table.name + \"\\\"\");\n                        return [4 /*yield*/, this.dropColumns(table, [column])];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the columns in the table.\n     */\n    AbstractSqliteQueryRunner.prototype.dropColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        columns.forEach(function (column) {\n                            var columnInstance = column instanceof TableColumn ? column : table.findColumnByName(column);\n                            if (!columnInstance)\n                                throw new Error(\"Column \\\"\" + column + \"\\\" was not found in table \\\"\" + table.name + \"\\\"\");\n                            changedTable.removeColumn(columnInstance);\n                            changedTable.findColumnUniques(columnInstance).forEach(function (unique) { return changedTable.removeUniqueConstraint(unique); });\n                            changedTable.findColumnIndices(columnInstance).forEach(function (index) { return changedTable.removeIndex(index); });\n                            changedTable.findColumnForeignKeys(columnInstance).forEach(function (fk) { return changedTable.removeForeignKey(fk); });\n                        });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new primary key.\n     */\n    AbstractSqliteQueryRunner.prototype.createPrimaryKey = function (tableOrName, columnNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        changedTable.columns.forEach(function (column) {\n                            if (columnNames.find(function (columnName) { return columnName === column.name; }))\n                                column.isPrimary = true;\n                        });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        // mark columns as primary in original table\n                        table.columns.forEach(function (column) {\n                            if (columnNames.find(function (columnName) { return columnName === column.name; }))\n                                column.isPrimary = true;\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates composite primary keys.\n     */\n    AbstractSqliteQueryRunner.prototype.updatePrimaryKeys = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.resolve()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a primary key.\n     */\n    AbstractSqliteQueryRunner.prototype.dropPrimaryKey = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        changedTable.primaryColumns.forEach(function (column) {\n                            column.isPrimary = false;\n                        });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        // mark primary columns as non-primary in original table\n                        table.primaryColumns.forEach(function (column) {\n                            column.isPrimary = false;\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new unique constraint.\n     */\n    AbstractSqliteQueryRunner.prototype.createUniqueConstraint = function (tableOrName, uniqueConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createUniqueConstraints(tableOrName, [uniqueConstraint])];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new unique constraints.\n     */\n    AbstractSqliteQueryRunner.prototype.createUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        uniqueConstraints.forEach(function (uniqueConstraint) { return changedTable.addUniqueConstraint(uniqueConstraint); });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an unique constraint.\n     */\n    AbstractSqliteQueryRunner.prototype.dropUniqueConstraint = function (tableOrName, uniqueOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, uniqueConstraint;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        uniqueConstraint = uniqueOrName instanceof TableUnique ? uniqueOrName : table.uniques.find(function (u) { return u.name === uniqueOrName; });\n                        if (!uniqueConstraint)\n                            throw new TypeORMError(\"Supplied unique constraint was not found in table \" + table.name);\n                        return [4 /*yield*/, this.dropUniqueConstraints(table, [uniqueConstraint])];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates an unique constraints.\n     */\n    AbstractSqliteQueryRunner.prototype.dropUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        uniqueConstraints.forEach(function (uniqueConstraint) { return changedTable.removeUniqueConstraint(uniqueConstraint); });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new check constraint.\n     */\n    AbstractSqliteQueryRunner.prototype.createCheckConstraint = function (tableOrName, checkConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createCheckConstraints(tableOrName, [checkConstraint])];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new check constraints.\n     */\n    AbstractSqliteQueryRunner.prototype.createCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        checkConstraints.forEach(function (checkConstraint) { return changedTable.addCheckConstraint(checkConstraint); });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops check constraint.\n     */\n    AbstractSqliteQueryRunner.prototype.dropCheckConstraint = function (tableOrName, checkOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, checkConstraint;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        checkConstraint = checkOrName instanceof TableCheck ? checkOrName : table.checks.find(function (c) { return c.name === checkOrName; });\n                        if (!checkConstraint)\n                            throw new TypeORMError(\"Supplied check constraint was not found in table \" + table.name);\n                        return [4 /*yield*/, this.dropCheckConstraints(table, [checkConstraint])];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops check constraints.\n     */\n    AbstractSqliteQueryRunner.prototype.dropCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        checkConstraints.forEach(function (checkConstraint) { return changedTable.removeCheckConstraint(checkConstraint); });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new exclusion constraint.\n     */\n    AbstractSqliteQueryRunner.prototype.createExclusionConstraint = function (tableOrName, exclusionConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new TypeORMError(\"Sqlite does not support exclusion constraints.\");\n            });\n        });\n    };\n    /**\n     * Creates a new exclusion constraints.\n     */\n    AbstractSqliteQueryRunner.prototype.createExclusionConstraints = function (tableOrName, exclusionConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new TypeORMError(\"Sqlite does not support exclusion constraints.\");\n            });\n        });\n    };\n    /**\n     * Drops exclusion constraint.\n     */\n    AbstractSqliteQueryRunner.prototype.dropExclusionConstraint = function (tableOrName, exclusionOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new TypeORMError(\"Sqlite does not support exclusion constraints.\");\n            });\n        });\n    };\n    /**\n     * Drops exclusion constraints.\n     */\n    AbstractSqliteQueryRunner.prototype.dropExclusionConstraints = function (tableOrName, exclusionConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new TypeORMError(\"Sqlite does not support exclusion constraints.\");\n            });\n        });\n    };\n    /**\n     * Creates a new foreign key.\n     */\n    AbstractSqliteQueryRunner.prototype.createForeignKey = function (tableOrName, foreignKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.createForeignKeys(tableOrName, [foreignKey])];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new foreign keys.\n     */\n    AbstractSqliteQueryRunner.prototype.createForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        foreignKeys.forEach(function (foreignKey) { return changedTable.addForeignKey(foreignKey); });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a foreign key from the table.\n     */\n    AbstractSqliteQueryRunner.prototype.dropForeignKey = function (tableOrName, foreignKeyOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, foreignKey;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        foreignKey = foreignKeyOrName instanceof TableForeignKey ? foreignKeyOrName : table.foreignKeys.find(function (fk) { return fk.name === foreignKeyOrName; });\n                        if (!foreignKey)\n                            throw new TypeORMError(\"Supplied foreign key was not found in table \" + table.name);\n                        return [4 /*yield*/, this.dropForeignKeys(tableOrName, [foreignKey])];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a foreign keys from the table.\n     */\n    AbstractSqliteQueryRunner.prototype.dropForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, changedTable;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        changedTable = table.clone();\n                        foreignKeys.forEach(function (foreignKey) { return changedTable.removeForeignKey(foreignKey); });\n                        return [4 /*yield*/, this.recreateTable(changedTable, table)];\n                    case 4:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new index.\n     */\n    AbstractSqliteQueryRunner.prototype.createIndex = function (tableOrName, index) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new index may be passed without name. In this case we generate index name manually.\n                        if (!index.name)\n                            index.name = this.connection.namingStrategy.indexName(table, index.columnNames, index.where);\n                        up = this.createIndexSql(table, index);\n                        down = this.dropIndexSql(index);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addIndex(index);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new indices\n     */\n    AbstractSqliteQueryRunner.prototype.createIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promises;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = indices.map(function (index) { return _this.createIndex(tableOrName, index); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an index from the table.\n     */\n    AbstractSqliteQueryRunner.prototype.dropIndex = function (tableOrName, indexOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, index, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        index = indexOrName instanceof TableIndex ? indexOrName : table.indices.find(function (i) { return i.name === indexOrName; });\n                        if (!index)\n                            throw new TypeORMError(\"Supplied index was not found in table \" + table.name);\n                        up = this.dropIndexSql(index);\n                        down = this.createIndexSql(table, index);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeIndex(index);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an indices from the table.\n     */\n    AbstractSqliteQueryRunner.prototype.dropIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promises;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = indices.map(function (index) { return _this.dropIndex(tableOrName, index); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears all table contents.\n     * Note: this operation uses SQL's TRUNCATE query which cannot be reverted in transactions.\n     */\n    AbstractSqliteQueryRunner.prototype.clearTable = function (tableName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"DELETE FROM \\\"\" + tableName + \"\\\"\")];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Removes all tables from the currently connected database.\n     */\n    AbstractSqliteQueryRunner.prototype.clearDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectViewDropsQuery, dropViewQueries, selectTableDropsQuery, dropTableQueries, error_1, rollbackError_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"PRAGMA foreign_keys = OFF;\")];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.startTransaction()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 9, 14, 16]);\n                        selectViewDropsQuery = \"SELECT 'DROP VIEW \\\"' || name || '\\\";' as query FROM \\\"sqlite_master\\\" WHERE \\\"type\\\" = 'view'\";\n                        return [4 /*yield*/, this.query(selectViewDropsQuery)];\n                    case 4:\n                        dropViewQueries = _a.sent();\n                        return [4 /*yield*/, Promise.all(dropViewQueries.map(function (q) { return _this.query(q[\"query\"]); }))];\n                    case 5:\n                        _a.sent();\n                        selectTableDropsQuery = \"SELECT 'DROP TABLE \\\"' || name || '\\\";' as query FROM \\\"sqlite_master\\\" WHERE \\\"type\\\" = 'table' AND \\\"name\\\" != 'sqlite_sequence'\";\n                        return [4 /*yield*/, this.query(selectTableDropsQuery)];\n                    case 6:\n                        dropTableQueries = _a.sent();\n                        return [4 /*yield*/, Promise.all(dropTableQueries.map(function (q) { return _this.query(q[\"query\"]); }))];\n                    case 7:\n                        _a.sent();\n                        return [4 /*yield*/, this.commitTransaction()];\n                    case 8:\n                        _a.sent();\n                        return [3 /*break*/, 16];\n                    case 9:\n                        error_1 = _a.sent();\n                        _a.label = 10;\n                    case 10:\n                        _a.trys.push([10, 12, , 13]);\n                        return [4 /*yield*/, this.rollbackTransaction()];\n                    case 11:\n                        _a.sent();\n                        return [3 /*break*/, 13];\n                    case 12:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 13];\n                    case 13: throw error_1;\n                    case 14: return [4 /*yield*/, this.query(\"PRAGMA foreign_keys = ON;\")];\n                    case 15:\n                        _a.sent();\n                        return [7 /*endfinally*/];\n                    case 16: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    AbstractSqliteQueryRunner.prototype.loadViews = function (viewNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var hasTable, viewNamesString, query, dbViews;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.hasTable(this.getTypeormMetadataTableName())];\n                    case 1:\n                        hasTable = _a.sent();\n                        if (!hasTable) {\n                            return [2 /*return*/, []];\n                        }\n                        if (!viewNames) {\n                            viewNames = [];\n                        }\n                        viewNamesString = viewNames.map(function (name) { return \"'\" + name + \"'\"; }).join(\", \");\n                        query = \"SELECT \\\"t\\\".* FROM \\\"\" + this.getTypeormMetadataTableName() + \"\\\" \\\"t\\\" INNER JOIN \\\"sqlite_master\\\" s ON \\\"s\\\".\\\"name\\\" = \\\"t\\\".\\\"name\\\" AND \\\"s\\\".\\\"type\\\" = 'view' WHERE \\\"t\\\".\\\"type\\\" = 'VIEW'\";\n                        if (viewNamesString.length > 0)\n                            query += \" AND \\\"t\\\".\\\"name\\\" IN (\" + viewNamesString + \")\";\n                        return [4 /*yield*/, this.query(query)];\n                    case 2:\n                        dbViews = _a.sent();\n                        return [2 /*return*/, dbViews.map(function (dbView) {\n                                var view = new View();\n                                view.name = dbView[\"name\"];\n                                view.expression = dbView[\"value\"];\n                                return view;\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * Loads all tables (with given names) from the database and creates a Table from them.\n     */\n    AbstractSqliteQueryRunner.prototype.loadTables = function (tableNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dbTables, tablesSql, _a, _b, _c, _d, tableNamesString_1, tablesSql, _e, _f, _g, _h, tableNamesString, dbIndicesDef;\n            var _this = this;\n            return __generator(this, function (_j) {\n                switch (_j.label) {\n                    case 0:\n                        // if no tables given then no need to proceed\n                        if (tableNames && tableNames.length === 0) {\n                            return [2 /*return*/, []];\n                        }\n                        dbTables = [];\n                        if (!!tableNames) return [3 /*break*/, 2];\n                        tablesSql = \"SELECT * FROM \\\"sqlite_master\\\" WHERE \\\"type\\\" = 'table'\";\n                        _b = (_a = dbTables.push).apply;\n                        _c = [dbTables];\n                        _d = [[]];\n                        return [4 /*yield*/, this.query(tablesSql)];\n                    case 1:\n                        _b.apply(_a, _c.concat([__spreadArray.apply(void 0, _d.concat([__read.apply(void 0, [_j.sent()]), false]))]));\n                        return [3 /*break*/, 4];\n                    case 2:\n                        tableNamesString_1 = tableNames.map(function (tableName) { return \"'\" + tableName + \"'\"; }).join(\", \");\n                        tablesSql = \"SELECT * FROM \\\"sqlite_master\\\" WHERE \\\"type\\\" = 'table' AND \\\"name\\\" IN (\" + tableNamesString_1 + \")\";\n                        _f = (_e = dbTables.push).apply;\n                        _g = [dbTables];\n                        _h = [[]];\n                        return [4 /*yield*/, this.query(tablesSql)];\n                    case 3:\n                        _f.apply(_e, _g.concat([__spreadArray.apply(void 0, _h.concat([__read.apply(void 0, [_j.sent()]), false]))]));\n                        _j.label = 4;\n                    case 4:\n                        // if tables were not found in the db, no need to proceed\n                        if (dbTables.length === 0) {\n                            return [2 /*return*/, []];\n                        }\n                        tableNamesString = dbTables.map(function (_a) {\n                            var name = _a.name;\n                            return \"'\" + name + \"'\";\n                        }).join(\", \");\n                        return [4 /*yield*/, this.query(\"SELECT * FROM \\\"sqlite_master\\\" WHERE \\\"type\\\" = 'index' AND \\\"tbl_name\\\" IN (\" + tableNamesString + \")\")];\n                    case 5:\n                        dbIndicesDef = _j.sent();\n                        // create table schemas for loaded tables\n                        return [2 /*return*/, Promise.all(dbTables.map(function (dbTable) { return __awaiter(_this, void 0, void 0, function () {\n                                var table, sql, _a, dbColumns, dbIndices, dbForeignKeys, autoIncrementColumnName, tableSql, autoIncrementIndex, comma, bracket, tableForeignKeyConstraints, uniqueRegexResult, uniqueMappings, uniqueRegex, tableUniquePromises, _b, result, regexp, indicesPromises, indices;\n                                var _this = this;\n                                return __generator(this, function (_c) {\n                                    switch (_c.label) {\n                                        case 0:\n                                            table = new Table();\n                                            table.name = dbTable[\"name\"];\n                                            sql = dbTable[\"sql\"];\n                                            return [4 /*yield*/, Promise.all([\n                                                    this.query(\"PRAGMA table_info(\\\"\" + dbTable[\"name\"] + \"\\\")\"),\n                                                    this.query(\"PRAGMA index_list(\\\"\" + dbTable[\"name\"] + \"\\\")\"),\n                                                    this.query(\"PRAGMA foreign_key_list(\\\"\" + dbTable[\"name\"] + \"\\\")\"),\n                                                ])];\n                                        case 1:\n                                            _a = __read.apply(void 0, [_c.sent(), 3]), dbColumns = _a[0], dbIndices = _a[1], dbForeignKeys = _a[2];\n                                            autoIncrementColumnName = undefined;\n                                            tableSql = dbTable[\"sql\"];\n                                            autoIncrementIndex = tableSql.toUpperCase().indexOf(\"AUTOINCREMENT\");\n                                            if (autoIncrementIndex !== -1) {\n                                                autoIncrementColumnName = tableSql.substr(0, autoIncrementIndex);\n                                                comma = autoIncrementColumnName.lastIndexOf(\",\");\n                                                bracket = autoIncrementColumnName.lastIndexOf(\"(\");\n                                                if (comma !== -1) {\n                                                    autoIncrementColumnName = autoIncrementColumnName.substr(comma);\n                                                    autoIncrementColumnName = autoIncrementColumnName.substr(0, autoIncrementColumnName.lastIndexOf(\"\\\"\"));\n                                                    autoIncrementColumnName = autoIncrementColumnName.substr(autoIncrementColumnName.indexOf(\"\\\"\") + 1);\n                                                }\n                                                else if (bracket !== -1) {\n                                                    autoIncrementColumnName = autoIncrementColumnName.substr(bracket);\n                                                    autoIncrementColumnName = autoIncrementColumnName.substr(0, autoIncrementColumnName.lastIndexOf(\"\\\"\"));\n                                                    autoIncrementColumnName = autoIncrementColumnName.substr(autoIncrementColumnName.indexOf(\"\\\"\") + 1);\n                                                }\n                                            }\n                                            // create columns from the loaded columns\n                                            table.columns = dbColumns.map(function (dbColumn) {\n                                                var tableColumn = new TableColumn();\n                                                tableColumn.name = dbColumn[\"name\"];\n                                                tableColumn.type = dbColumn[\"type\"].toLowerCase();\n                                                tableColumn.default = dbColumn[\"dflt_value\"] !== null && dbColumn[\"dflt_value\"] !== undefined ? dbColumn[\"dflt_value\"] : undefined;\n                                                tableColumn.isNullable = dbColumn[\"notnull\"] === 0;\n                                                // primary keys are numbered starting with 1, columns that aren't primary keys are marked with 0\n                                                tableColumn.isPrimary = dbColumn[\"pk\"] > 0;\n                                                tableColumn.comment = \"\"; // SQLite does not support column comments\n                                                tableColumn.isGenerated = autoIncrementColumnName === dbColumn[\"name\"];\n                                                if (tableColumn.isGenerated) {\n                                                    tableColumn.generationStrategy = \"increment\";\n                                                }\n                                                if (tableColumn.type === \"varchar\") {\n                                                    // Check if this is an enum\n                                                    var enumMatch = sql.match(new RegExp(\"\\\"(\" + tableColumn.name + \")\\\" varchar CHECK\\\\s*\\\\(\\\\s*\\\\1\\\\s+IN\\\\s*\\\\(('[^']+'(?:\\\\s*,\\\\s*'[^']+')+)\\\\s*\\\\)\\\\s*\\\\)\"));\n                                                    if (enumMatch) {\n                                                        // This is an enum\n                                                        tableColumn.enum = enumMatch[2].substr(1, enumMatch[2].length - 2).split(\"','\");\n                                                    }\n                                                }\n                                                // parse datatype and attempt to retrieve length, precision and scale\n                                                var pos = tableColumn.type.indexOf(\"(\");\n                                                if (pos !== -1) {\n                                                    var fullType = tableColumn.type;\n                                                    var dataType_1 = fullType.substr(0, pos);\n                                                    if (!!_this.driver.withLengthColumnTypes.find(function (col) { return col === dataType_1; })) {\n                                                        var len = parseInt(fullType.substring(pos + 1, fullType.length - 1));\n                                                        if (len) {\n                                                            tableColumn.length = len.toString();\n                                                            tableColumn.type = dataType_1; // remove the length part from the datatype\n                                                        }\n                                                    }\n                                                    if (!!_this.driver.withPrecisionColumnTypes.find(function (col) { return col === dataType_1; })) {\n                                                        var re = new RegExp(\"^\" + dataType_1 + \"\\\\((\\\\d+),?\\\\s?(\\\\d+)?\\\\)\");\n                                                        var matches = fullType.match(re);\n                                                        if (matches && matches[1]) {\n                                                            tableColumn.precision = +matches[1];\n                                                        }\n                                                        if (!!_this.driver.withScaleColumnTypes.find(function (col) { return col === dataType_1; })) {\n                                                            if (matches && matches[2]) {\n                                                                tableColumn.scale = +matches[2];\n                                                            }\n                                                        }\n                                                        tableColumn.type = dataType_1; // remove the precision/scale part from the datatype\n                                                    }\n                                                }\n                                                return tableColumn;\n                                            });\n                                            tableForeignKeyConstraints = OrmUtils.uniq(dbForeignKeys, function (dbForeignKey) { return dbForeignKey[\"id\"]; });\n                                            table.foreignKeys = tableForeignKeyConstraints.map(function (foreignKey) {\n                                                var ownForeignKeys = dbForeignKeys.filter(function (dbForeignKey) { return dbForeignKey[\"id\"] === foreignKey[\"id\"] && dbForeignKey[\"table\"] === foreignKey[\"table\"]; });\n                                                var columnNames = ownForeignKeys.map(function (dbForeignKey) { return dbForeignKey[\"from\"]; });\n                                                var referencedColumnNames = ownForeignKeys.map(function (dbForeignKey) { return dbForeignKey[\"to\"]; });\n                                                // build foreign key name, because we can not get it directly.\n                                                var fkName = _this.connection.namingStrategy.foreignKeyName(table, columnNames, foreignKey.referencedTableName, foreignKey.referencedColumnNames);\n                                                return new TableForeignKey({\n                                                    name: fkName,\n                                                    columnNames: columnNames,\n                                                    referencedTableName: foreignKey[\"table\"],\n                                                    referencedColumnNames: referencedColumnNames,\n                                                    onDelete: foreignKey[\"on_delete\"],\n                                                    onUpdate: foreignKey[\"on_update\"]\n                                                });\n                                            });\n                                            uniqueMappings = [];\n                                            uniqueRegex = /CONSTRAINT \"([^\"]*)\" UNIQUE \\((.*?)\\)/g;\n                                            while ((uniqueRegexResult = uniqueRegex.exec(sql)) !== null) {\n                                                uniqueMappings.push({\n                                                    name: uniqueRegexResult[1],\n                                                    columns: uniqueRegexResult[2].substr(1, uniqueRegexResult[2].length - 2).split(\"\\\", \\\"\")\n                                                });\n                                            }\n                                            tableUniquePromises = dbIndices\n                                                .filter(function (dbIndex) { return dbIndex[\"origin\"] === \"u\"; })\n                                                .map(function (dbIndex) { return dbIndex[\"name\"]; })\n                                                .filter(function (value, index, self) { return self.indexOf(value) === index; })\n                                                .map(function (dbIndexName) { return __awaiter(_this, void 0, void 0, function () {\n                                                var dbIndex, indexInfos, indexColumns, column, foundMapping;\n                                                return __generator(this, function (_a) {\n                                                    switch (_a.label) {\n                                                        case 0:\n                                                            dbIndex = dbIndices.find(function (dbIndex) { return dbIndex[\"name\"] === dbIndexName; });\n                                                            return [4 /*yield*/, this.query(\"PRAGMA index_info(\\\"\" + dbIndex[\"name\"] + \"\\\")\")];\n                                                        case 1:\n                                                            indexInfos = _a.sent();\n                                                            indexColumns = indexInfos\n                                                                .sort(function (indexInfo1, indexInfo2) { return parseInt(indexInfo1[\"seqno\"]) - parseInt(indexInfo2[\"seqno\"]); })\n                                                                .map(function (indexInfo) { return indexInfo[\"name\"]; });\n                                                            if (indexColumns.length === 1) {\n                                                                column = table.columns.find(function (column) {\n                                                                    return !!indexColumns.find(function (indexColumn) { return indexColumn === column.name; });\n                                                                });\n                                                                if (column)\n                                                                    column.isUnique = true;\n                                                            }\n                                                            foundMapping = uniqueMappings.find(function (mapping) {\n                                                                return mapping.columns.every(function (column) {\n                                                                    return indexColumns.indexOf(column) !== -1;\n                                                                });\n                                                            });\n                                                            return [2 /*return*/, new TableUnique({\n                                                                    name: foundMapping ? foundMapping.name : this.connection.namingStrategy.uniqueConstraintName(table, indexColumns),\n                                                                    columnNames: indexColumns\n                                                                })];\n                                                    }\n                                                });\n                                            }); });\n                                            _b = table;\n                                            return [4 /*yield*/, Promise.all(tableUniquePromises)];\n                                        case 2:\n                                            _b.uniques = (_c.sent());\n                                            regexp = /CONSTRAINT \"([^\"]*)\" CHECK (\\(.*?\\))([,]|[)]$)/g;\n                                            while (((result = regexp.exec(sql)) !== null)) {\n                                                table.checks.push(new TableCheck({ name: result[1], expression: result[2] }));\n                                            }\n                                            indicesPromises = dbIndices\n                                                .filter(function (dbIndex) { return dbIndex[\"origin\"] === \"c\"; })\n                                                .map(function (dbIndex) { return dbIndex[\"name\"]; })\n                                                .filter(function (value, index, self) { return self.indexOf(value) === index; }) // unqiue\n                                                .map(function (dbIndexName) { return __awaiter(_this, void 0, void 0, function () {\n                                                var indexDef, condition, dbIndex, indexInfos, indexColumns, isUnique;\n                                                return __generator(this, function (_a) {\n                                                    switch (_a.label) {\n                                                        case 0:\n                                                            indexDef = dbIndicesDef.find(function (dbIndexDef) { return dbIndexDef[\"name\"] === dbIndexName; });\n                                                            condition = /WHERE (.*)/.exec(indexDef[\"sql\"]);\n                                                            dbIndex = dbIndices.find(function (dbIndex) { return dbIndex[\"name\"] === dbIndexName; });\n                                                            return [4 /*yield*/, this.query(\"PRAGMA index_info(\\\"\" + dbIndex[\"name\"] + \"\\\")\")];\n                                                        case 1:\n                                                            indexInfos = _a.sent();\n                                                            indexColumns = indexInfos\n                                                                .sort(function (indexInfo1, indexInfo2) { return parseInt(indexInfo1[\"seqno\"]) - parseInt(indexInfo2[\"seqno\"]); })\n                                                                .map(function (indexInfo) { return indexInfo[\"name\"]; });\n                                                            isUnique = dbIndex[\"unique\"] === \"1\" || dbIndex[\"unique\"] === 1;\n                                                            return [2 /*return*/, new TableIndex({\n                                                                    table: table,\n                                                                    name: dbIndex[\"name\"],\n                                                                    columnNames: indexColumns,\n                                                                    isUnique: isUnique,\n                                                                    where: condition ? condition[1] : undefined\n                                                                })];\n                                                    }\n                                                });\n                                            }); });\n                                            return [4 /*yield*/, Promise.all(indicesPromises)];\n                                        case 3:\n                                            indices = _c.sent();\n                                            table.indices = indices.filter(function (index) { return !!index; });\n                                            return [2 /*return*/, table];\n                                    }\n                                });\n                            }); }))];\n                }\n            });\n        });\n    };\n    /**\n     * Builds create table sql.\n     */\n    AbstractSqliteQueryRunner.prototype.createTableSql = function (table, createForeignKeys) {\n        var _this = this;\n        var primaryColumns = table.columns.filter(function (column) { return column.isPrimary; });\n        var hasAutoIncrement = primaryColumns.find(function (column) { return column.isGenerated && column.generationStrategy === \"increment\"; });\n        var skipPrimary = primaryColumns.length > 1;\n        if (skipPrimary && hasAutoIncrement)\n            throw new TypeORMError(\"Sqlite does not support AUTOINCREMENT on composite primary key\");\n        var columnDefinitions = table.columns.map(function (column) { return _this.buildCreateColumnSql(column, skipPrimary); }).join(\", \");\n        var sql = \"CREATE TABLE \\\"\" + table.name + \"\\\" (\" + columnDefinitions;\n        // need for `addColumn()` method, because it recreates table.\n        table.columns\n            .filter(function (column) { return column.isUnique; })\n            .forEach(function (column) {\n            var isUniqueExist = table.uniques.some(function (unique) { return unique.columnNames.length === 1 && unique.columnNames[0] === column.name; });\n            if (!isUniqueExist)\n                table.uniques.push(new TableUnique({\n                    name: _this.connection.namingStrategy.uniqueConstraintName(table, [column.name]),\n                    columnNames: [column.name]\n                }));\n        });\n        if (table.uniques.length > 0) {\n            var uniquesSql = table.uniques.map(function (unique) {\n                var uniqueName = unique.name ? unique.name : _this.connection.namingStrategy.uniqueConstraintName(table, unique.columnNames);\n                var columnNames = unique.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                return \"CONSTRAINT \\\"\" + uniqueName + \"\\\" UNIQUE (\" + columnNames + \")\";\n            }).join(\", \");\n            sql += \", \" + uniquesSql;\n        }\n        if (table.checks.length > 0) {\n            var checksSql = table.checks.map(function (check) {\n                var checkName = check.name ? check.name : _this.connection.namingStrategy.checkConstraintName(table, check.expression);\n                return \"CONSTRAINT \\\"\" + checkName + \"\\\" CHECK (\" + check.expression + \")\";\n            }).join(\", \");\n            sql += \", \" + checksSql;\n        }\n        if (table.foreignKeys.length > 0 && createForeignKeys) {\n            var foreignKeysSql = table.foreignKeys.map(function (fk) {\n                var columnNames = fk.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                if (!fk.name)\n                    fk.name = _this.connection.namingStrategy.foreignKeyName(table, fk.columnNames, _this.getTablePath(fk), fk.referencedColumnNames);\n                var referencedColumnNames = fk.referencedColumnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                var constraint = \"CONSTRAINT \\\"\" + fk.name + \"\\\" FOREIGN KEY (\" + columnNames + \") REFERENCES \\\"\" + fk.referencedTableName + \"\\\" (\" + referencedColumnNames + \")\";\n                if (fk.onDelete)\n                    constraint += \" ON DELETE \" + fk.onDelete;\n                if (fk.onUpdate)\n                    constraint += \" ON UPDATE \" + fk.onUpdate;\n                return constraint;\n            }).join(\", \");\n            sql += \", \" + foreignKeysSql;\n        }\n        if (primaryColumns.length > 1) {\n            var columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n            sql += \", PRIMARY KEY (\" + columnNames + \")\";\n        }\n        sql += \")\";\n        var tableMetadata = this.connection.entityMetadatas.find(function (metadata) { return _this.getTablePath(table) === _this.getTablePath(metadata); });\n        if (tableMetadata && tableMetadata.withoutRowid) {\n            sql += \" WITHOUT ROWID\";\n        }\n        return new Query(sql);\n    };\n    /**\n     * Builds drop table sql.\n     */\n    AbstractSqliteQueryRunner.prototype.dropTableSql = function (tableOrName, ifExist) {\n        var tableName = tableOrName instanceof Table ? tableOrName.name : tableOrName;\n        var query = ifExist ? \"DROP TABLE IF EXISTS \\\"\" + tableName + \"\\\"\" : \"DROP TABLE \\\"\" + tableName + \"\\\"\";\n        return new Query(query);\n    };\n    AbstractSqliteQueryRunner.prototype.createViewSql = function (view) {\n        if (typeof view.expression === \"string\") {\n            return new Query(\"CREATE VIEW \\\"\" + view.name + \"\\\" AS \" + view.expression);\n        }\n        else {\n            return new Query(\"CREATE VIEW \\\"\" + view.name + \"\\\" AS \" + view.expression(this.connection).getQuery());\n        }\n    };\n    AbstractSqliteQueryRunner.prototype.insertViewDefinitionSql = function (view) {\n        var expression = typeof view.expression === \"string\" ? view.expression.trim() : view.expression(this.connection).getQuery();\n        var _a = __read(this.connection.createQueryBuilder()\n            .insert()\n            .into(this.getTypeormMetadataTableName())\n            .values({ type: \"VIEW\", name: view.name, value: expression })\n            .getQueryAndParameters(), 2), query = _a[0], parameters = _a[1];\n        return new Query(query, parameters);\n    };\n    /**\n     * Builds drop view sql.\n     */\n    AbstractSqliteQueryRunner.prototype.dropViewSql = function (viewOrPath) {\n        var viewName = viewOrPath instanceof View ? viewOrPath.name : viewOrPath;\n        return new Query(\"DROP VIEW \\\"\" + viewName + \"\\\"\");\n    };\n    /**\n     * Builds remove view sql.\n     */\n    AbstractSqliteQueryRunner.prototype.deleteViewDefinitionSql = function (viewOrPath) {\n        var viewName = viewOrPath instanceof View ? viewOrPath.name : viewOrPath;\n        var qb = this.connection.createQueryBuilder();\n        var _a = __read(qb.delete()\n            .from(this.getTypeormMetadataTableName())\n            .where(qb.escape(\"type\") + \" = 'VIEW'\")\n            .andWhere(qb.escape(\"name\") + \" = :name\", { name: viewName })\n            .getQueryAndParameters(), 2), query = _a[0], parameters = _a[1];\n        return new Query(query, parameters);\n    };\n    /**\n     * Builds create index sql.\n     */\n    AbstractSqliteQueryRunner.prototype.createIndexSql = function (table, index) {\n        var columns = index.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n        return new Query(\"CREATE \" + (index.isUnique ? \"UNIQUE \" : \"\") + \"INDEX \\\"\" + index.name + \"\\\" ON \\\"\" + table.name + \"\\\" (\" + columns + \") \" + (index.where ? \"WHERE \" + index.where : \"\"));\n    };\n    /**\n     * Builds drop index sql.\n     */\n    AbstractSqliteQueryRunner.prototype.dropIndexSql = function (indexOrName) {\n        var indexName = indexOrName instanceof TableIndex ? indexOrName.name : indexOrName;\n        return new Query(\"DROP INDEX \\\"\" + indexName + \"\\\"\");\n    };\n    /**\n     * Builds a query for create column.\n     */\n    AbstractSqliteQueryRunner.prototype.buildCreateColumnSql = function (column, skipPrimary) {\n        var c = \"\\\"\" + column.name + \"\\\"\";\n        if (column instanceof ColumnMetadata) {\n            c += \" \" + this.driver.normalizeType(column);\n        }\n        else {\n            c += \" \" + this.connection.driver.createFullType(column);\n        }\n        if (column.enum)\n            c += \" CHECK( \" + column.name + \" IN (\" + column.enum.map(function (val) { return \"'\" + val + \"'\"; }).join(\",\") + \") )\";\n        if (column.isPrimary && !skipPrimary)\n            c += \" PRIMARY KEY\";\n        if (column.isGenerated === true && column.generationStrategy === \"increment\") // don't use skipPrimary here since updates can update already exist primary without auto inc.\n            c += \" AUTOINCREMENT\";\n        if (column.collation)\n            c += \" COLLATE \" + column.collation;\n        if (column.isNullable !== true)\n            c += \" NOT NULL\";\n        if (column.default !== undefined && column.default !== null)\n            c += \" DEFAULT (\" + column.default + \")\";\n        return c;\n    };\n    AbstractSqliteQueryRunner.prototype.recreateTable = function (newTable, oldTable, migrateData) {\n        if (migrateData === void 0) { migrateData = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var upQueries, downQueries, newColumnNames, oldColumnNames;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        upQueries = [];\n                        downQueries = [];\n                        // drop old table indices\n                        oldTable.indices.forEach(function (index) {\n                            upQueries.push(_this.dropIndexSql(index));\n                            downQueries.push(_this.createIndexSql(oldTable, index));\n                        });\n                        // change table name into 'temporary_table'\n                        newTable.name = \"temporary_\" + newTable.name;\n                        // create new table\n                        upQueries.push(this.createTableSql(newTable, true));\n                        downQueries.push(this.dropTableSql(newTable));\n                        // migrate all data from the old table into new table\n                        if (migrateData) {\n                            newColumnNames = newTable.columns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            oldColumnNames = oldTable.columns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            if (oldTable.columns.length < newTable.columns.length) {\n                                newColumnNames = newTable.columns.filter(function (column) {\n                                    return oldTable.columns.find(function (c) { return c.name === column.name; });\n                                }).map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            }\n                            else if (oldTable.columns.length > newTable.columns.length) {\n                                oldColumnNames = oldTable.columns.filter(function (column) {\n                                    return newTable.columns.find(function (c) { return c.name === column.name; });\n                                }).map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            }\n                            upQueries.push(new Query(\"INSERT INTO \\\"\" + newTable.name + \"\\\"(\" + newColumnNames + \") SELECT \" + oldColumnNames + \" FROM \\\"\" + oldTable.name + \"\\\"\"));\n                            downQueries.push(new Query(\"INSERT INTO \\\"\" + oldTable.name + \"\\\"(\" + oldColumnNames + \") SELECT \" + newColumnNames + \" FROM \\\"\" + newTable.name + \"\\\"\"));\n                        }\n                        // drop old table\n                        upQueries.push(this.dropTableSql(oldTable));\n                        downQueries.push(this.createTableSql(oldTable, true));\n                        // rename old table\n                        upQueries.push(new Query(\"ALTER TABLE \\\"\" + newTable.name + \"\\\" RENAME TO \\\"\" + oldTable.name + \"\\\"\"));\n                        downQueries.push(new Query(\"ALTER TABLE \\\"\" + oldTable.name + \"\\\" RENAME TO \\\"\" + newTable.name + \"\\\"\"));\n                        newTable.name = oldTable.name;\n                        // recreate table indices\n                        newTable.indices.forEach(function (index) {\n                            // new index may be passed without name. In this case we generate index name manually.\n                            if (!index.name)\n                                index.name = _this.connection.namingStrategy.indexName(newTable, index.columnNames, index.where);\n                            upQueries.push(_this.createIndexSql(newTable, index));\n                            downQueries.push(_this.dropIndexSql(index));\n                        });\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 1:\n                        _a.sent();\n                        this.replaceCachedTable(oldTable, newTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return AbstractSqliteQueryRunner;\n}(BaseQueryRunner));\nexport { AbstractSqliteQueryRunner };\n\n//# sourceMappingURL=AbstractSqliteQueryRunner.js.map\n","import { __awaiter, __generator, __read, __spreadArray } from \"tslib\";\nimport { BroadcasterResult } from \"./BroadcasterResult\";\n/**\n * Broadcaster provides a helper methods to broadcast events to the subscribers.\n */\nvar Broadcaster = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function Broadcaster(queryRunner) {\n        this.queryRunner = queryRunner;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    Broadcaster.prototype.broadcast = function (event) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return __awaiter(this, void 0, void 0, function () {\n            var result, broadcastFunction;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        result = new BroadcasterResult();\n                        broadcastFunction = this[\"broadcast\" + event + \"Event\"];\n                        if (typeof broadcastFunction === \"function\") {\n                            (_a = broadcastFunction).call.apply(_a, __spreadArray([this,\n                                result], __read(args), false));\n                        }\n                        return [4 /*yield*/, result.wait()];\n                    case 1:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Broadcasts \"BEFORE_INSERT\" event.\n     * Before insert event is executed before entity is being inserted to the database for the first time.\n     * All subscribers and entity listeners who listened to this event will be executed at this point.\n     * Subscribers and entity listeners can return promises, it will wait until they are resolved.\n     *\n     * Note: this method has a performance-optimized code organization, do not change code structure.\n     */\n    Broadcaster.prototype.broadcastBeforeInsertEvent = function (result, metadata, entity) {\n        var _this = this;\n        if (entity && metadata.beforeInsertListeners.length) {\n            metadata.beforeInsertListeners.forEach(function (listener) {\n                if (listener.isAllowed(entity)) {\n                    var executionResult = listener.execute(entity);\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (_this.isAllowedSubscriber(subscriber, metadata.target) && subscriber.beforeInsert) {\n                    var executionResult = subscriber.beforeInsert({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                        entity: entity,\n                        metadata: metadata\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"BEFORE_UPDATE\" event.\n     * Before update event is executed before entity is being updated in the database.\n     * All subscribers and entity listeners who listened to this event will be executed at this point.\n     * Subscribers and entity listeners can return promises, it will wait until they are resolved.\n     *\n     * Note: this method has a performance-optimized code organization, do not change code structure.\n     */\n    Broadcaster.prototype.broadcastBeforeUpdateEvent = function (result, metadata, entity, databaseEntity, updatedColumns, updatedRelations) {\n        var _this = this;\n        if (entity && metadata.beforeUpdateListeners.length) {\n            metadata.beforeUpdateListeners.forEach(function (listener) {\n                if (listener.isAllowed(entity)) {\n                    var executionResult = listener.execute(entity);\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (_this.isAllowedSubscriber(subscriber, metadata.target) && subscriber.beforeUpdate) {\n                    var executionResult = subscriber.beforeUpdate({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                        entity: entity,\n                        metadata: metadata,\n                        databaseEntity: databaseEntity,\n                        updatedColumns: updatedColumns || [],\n                        updatedRelations: updatedRelations || []\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"BEFORE_REMOVE\" event.\n     * Before remove event is executed before entity is being removed from the database.\n     * All subscribers and entity listeners who listened to this event will be executed at this point.\n     * Subscribers and entity listeners can return promises, it will wait until they are resolved.\n     *\n     * Note: this method has a performance-optimized code organization, do not change code structure.\n     */\n    Broadcaster.prototype.broadcastBeforeRemoveEvent = function (result, metadata, entity, databaseEntity) {\n        var _this = this;\n        if (entity && metadata.beforeRemoveListeners.length) {\n            metadata.beforeRemoveListeners.forEach(function (listener) {\n                if (listener.isAllowed(entity)) {\n                    var executionResult = listener.execute(entity);\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (_this.isAllowedSubscriber(subscriber, metadata.target) && subscriber.beforeRemove) {\n                    var executionResult = subscriber.beforeRemove({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                        entity: entity,\n                        metadata: metadata,\n                        databaseEntity: databaseEntity,\n                        entityId: metadata.getEntityIdMixedMap(databaseEntity)\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"AFTER_INSERT\" event.\n     * After insert event is executed after entity is being persisted to the database for the first time.\n     * All subscribers and entity listeners who listened to this event will be executed at this point.\n     * Subscribers and entity listeners can return promises, it will wait until they are resolved.\n     *\n     * Note: this method has a performance-optimized code organization, do not change code structure.\n     */\n    Broadcaster.prototype.broadcastAfterInsertEvent = function (result, metadata, entity) {\n        var _this = this;\n        if (entity && metadata.afterInsertListeners.length) {\n            metadata.afterInsertListeners.forEach(function (listener) {\n                if (listener.isAllowed(entity)) {\n                    var executionResult = listener.execute(entity);\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (_this.isAllowedSubscriber(subscriber, metadata.target) && subscriber.afterInsert) {\n                    var executionResult = subscriber.afterInsert({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                        entity: entity,\n                        metadata: metadata\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"BEFORE_TRANSACTION_START\" event.\n     */\n    Broadcaster.prototype.broadcastBeforeTransactionStartEvent = function (result) {\n        var _this = this;\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (subscriber.beforeTransactionStart) {\n                    var executionResult = subscriber.beforeTransactionStart({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"AFTER_TRANSACTION_START\" event.\n     */\n    Broadcaster.prototype.broadcastAfterTransactionStartEvent = function (result) {\n        var _this = this;\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (subscriber.afterTransactionStart) {\n                    var executionResult = subscriber.afterTransactionStart({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"BEFORE_TRANSACTION_COMMIT\" event.\n     */\n    Broadcaster.prototype.broadcastBeforeTransactionCommitEvent = function (result) {\n        var _this = this;\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (subscriber.beforeTransactionCommit) {\n                    var executionResult = subscriber.beforeTransactionCommit({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"AFTER_TRANSACTION_COMMIT\" event.\n     */\n    Broadcaster.prototype.broadcastAfterTransactionCommitEvent = function (result) {\n        var _this = this;\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (subscriber.afterTransactionCommit) {\n                    var executionResult = subscriber.afterTransactionCommit({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"BEFORE_TRANSACTION_ROLLBACK\" event.\n     */\n    Broadcaster.prototype.broadcastBeforeTransactionRollbackEvent = function (result) {\n        var _this = this;\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (subscriber.beforeTransactionRollback) {\n                    var executionResult = subscriber.beforeTransactionRollback({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"AFTER_TRANSACTION_ROLLBACK\" event.\n     */\n    Broadcaster.prototype.broadcastAfterTransactionRollbackEvent = function (result) {\n        var _this = this;\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (subscriber.afterTransactionRollback) {\n                    var executionResult = subscriber.afterTransactionRollback({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"AFTER_UPDATE\" event.\n     * After update event is executed after entity is being updated in the database.\n     * All subscribers and entity listeners who listened to this event will be executed at this point.\n     * Subscribers and entity listeners can return promises, it will wait until they are resolved.\n     *\n     * Note: this method has a performance-optimized code organization, do not change code structure.\n     */\n    Broadcaster.prototype.broadcastAfterUpdateEvent = function (result, metadata, entity, databaseEntity, updatedColumns, updatedRelations) {\n        var _this = this;\n        if (entity && metadata.afterUpdateListeners.length) {\n            metadata.afterUpdateListeners.forEach(function (listener) {\n                if (listener.isAllowed(entity)) {\n                    var executionResult = listener.execute(entity);\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (_this.isAllowedSubscriber(subscriber, metadata.target) && subscriber.afterUpdate) {\n                    var executionResult = subscriber.afterUpdate({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                        entity: entity,\n                        metadata: metadata,\n                        databaseEntity: databaseEntity,\n                        updatedColumns: updatedColumns || [],\n                        updatedRelations: updatedRelations || []\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * Broadcasts \"AFTER_REMOVE\" event.\n     * After remove event is executed after entity is being removed from the database.\n     * All subscribers and entity listeners who listened to this event will be executed at this point.\n     * Subscribers and entity listeners can return promises, it will wait until they are resolved.\n     *\n     * Note: this method has a performance-optimized code organization, do not change code structure.\n     */\n    Broadcaster.prototype.broadcastAfterRemoveEvent = function (result, metadata, entity, databaseEntity) {\n        var _this = this;\n        if (entity && metadata.afterRemoveListeners.length) {\n            metadata.afterRemoveListeners.forEach(function (listener) {\n                if (listener.isAllowed(entity)) {\n                    var executionResult = listener.execute(entity);\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n        if (this.queryRunner.connection.subscribers.length) {\n            this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                if (_this.isAllowedSubscriber(subscriber, metadata.target) && subscriber.afterRemove) {\n                    var executionResult = subscriber.afterRemove({\n                        connection: _this.queryRunner.connection,\n                        queryRunner: _this.queryRunner,\n                        manager: _this.queryRunner.manager,\n                        entity: entity,\n                        metadata: metadata,\n                        databaseEntity: databaseEntity,\n                        entityId: metadata.getEntityIdMixedMap(databaseEntity)\n                    });\n                    if (executionResult instanceof Promise)\n                        result.promises.push(executionResult);\n                    result.count++;\n                }\n            });\n        }\n    };\n    /**\n     * @deprecated Use `broadcastLoadForAllEvent`\n     */\n    Broadcaster.prototype.broadcastLoadEventsForAll = function (result, metadata, entities) {\n        return this.broadcastLoadEvent(result, metadata, entities);\n    };\n    /**\n     * Broadcasts \"AFTER_LOAD\" event for all given entities, and their sub-entities.\n     * After load event is executed after entity has been loaded from the database.\n     * All subscribers and entity listeners who listened to this event will be executed at this point.\n     * Subscribers and entity listeners can return promises, it will wait until they are resolved.\n     *\n     * Note: this method has a performance-optimized code organization, do not change code structure.\n     */\n    Broadcaster.prototype.broadcastLoadEvent = function (result, metadata, entities) {\n        var _this = this;\n        entities.forEach(function (entity) {\n            if (entity instanceof Promise) // todo: check why need this?\n                return;\n            // collect load events for all children entities that were loaded with the main entity\n            if (metadata.relations.length) {\n                metadata.relations.forEach(function (relation) {\n                    // in lazy relations we cannot simply access to entity property because it will cause a getter and a database query\n                    if (relation.isLazy && !entity.hasOwnProperty(relation.propertyName))\n                        return;\n                    var value = relation.getEntityValue(entity);\n                    if (value instanceof Object)\n                        _this.broadcastLoadEvent(result, relation.inverseEntityMetadata, Array.isArray(value) ? value : [value]);\n                });\n            }\n            if (metadata.afterLoadListeners.length) {\n                metadata.afterLoadListeners.forEach(function (listener) {\n                    if (listener.isAllowed(entity)) {\n                        var executionResult = listener.execute(entity);\n                        if (executionResult instanceof Promise)\n                            result.promises.push(executionResult);\n                        result.count++;\n                    }\n                });\n            }\n            if (_this.queryRunner.connection.subscribers.length) {\n                _this.queryRunner.connection.subscribers.forEach(function (subscriber) {\n                    if (_this.isAllowedSubscriber(subscriber, metadata.target) && subscriber.afterLoad) {\n                        var executionResult = subscriber.afterLoad(entity, {\n                            connection: _this.queryRunner.connection,\n                            queryRunner: _this.queryRunner,\n                            manager: _this.queryRunner.manager,\n                            entity: entity,\n                            metadata: metadata\n                        });\n                        if (executionResult instanceof Promise)\n                            result.promises.push(executionResult);\n                        result.count++;\n                    }\n                });\n            }\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Checks if subscriber's methods can be executed by checking if its don't listen to the particular entity,\n     * or listens our entity.\n     */\n    Broadcaster.prototype.isAllowedSubscriber = function (subscriber, target) {\n        return !subscriber.listenTo ||\n            !subscriber.listenTo() ||\n            subscriber.listenTo() === Object ||\n            subscriber.listenTo() === target ||\n            subscriber.listenTo().isPrototypeOf(target);\n    };\n    return Broadcaster;\n}());\nexport { Broadcaster };\n\n//# sourceMappingURL=Broadcaster.js.map\n","/**\n * Result object returned by UpdateQueryBuilder execution.\n */\nvar QueryResult = /** @class */ (function () {\n    function QueryResult() {\n        /**\n         * Rows\n         */\n        this.records = [];\n    }\n    return QueryResult;\n}());\nexport { QueryResult };\n\n//# sourceMappingURL=QueryResult.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { QueryRunnerAlreadyReleasedError } from \"../../error/QueryRunnerAlreadyReleasedError\";\nimport { AbstractSqliteQueryRunner } from \"../sqlite-abstract/AbstractSqliteQueryRunner\";\nimport { Broadcaster } from \"../../subscriber/Broadcaster\";\nimport { QueryFailedError } from \"../../error/QueryFailedError\";\nimport { QueryResult } from \"../../query-runner/QueryResult\";\n/**\n * Runs queries on a single sqlite database connection.\n */\nvar SqljsQueryRunner = /** @class */ (function (_super) {\n    __extends(SqljsQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SqljsQueryRunner(driver) {\n        var _this = _super.call(this) || this;\n        /**\n         * Flag to determine if a modification has happened since the last time this query runner has requested a save.\n         */\n        _this.isDirty = false;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster(_this);\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public methods\n    // -------------------------------------------------------------------------\n    SqljsQueryRunner.prototype.flush = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isDirty) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.driver.autoSave()];\n                    case 1:\n                        _a.sent();\n                        this.isDirty = false;\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SqljsQueryRunner.prototype.release = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.flush()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, _super.prototype.release.call(this)];\n                }\n            });\n        });\n    };\n    /**\n     * Commits transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    SqljsQueryRunner.prototype.commitTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, _super.prototype.commitTransaction.call(this)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.flush()];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes a given SQL query.\n     */\n    SqljsQueryRunner.prototype.query = function (query, parameters, useStructuredResult) {\n        if (parameters === void 0) { parameters = []; }\n        if (useStructuredResult === void 0) { useStructuredResult = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var command, databaseConnection, queryStartTime, statement, maxQueryExecutionTime, queryEndTime, queryExecutionTime, records, result;\n            return __generator(this, function (_a) {\n                if (this.isReleased)\n                    throw new QueryRunnerAlreadyReleasedError();\n                command = query.trim().split(\" \", 1)[0];\n                databaseConnection = this.driver.databaseConnection;\n                this.driver.connection.logger.logQuery(query, parameters, this);\n                queryStartTime = +new Date();\n                try {\n                    statement = databaseConnection.prepare(query);\n                    if (parameters) {\n                        parameters = parameters.map(function (p) { return typeof p !== 'undefined' ? p : null; });\n                        statement.bind(parameters);\n                    }\n                    maxQueryExecutionTime = this.driver.options.maxQueryExecutionTime;\n                    queryEndTime = +new Date();\n                    queryExecutionTime = queryEndTime - queryStartTime;\n                    if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime)\n                        this.driver.connection.logger.logQuerySlow(queryExecutionTime, query, parameters, this);\n                    records = [];\n                    while (statement.step()) {\n                        records.push(statement.getAsObject());\n                    }\n                    result = new QueryResult();\n                    result.affected = databaseConnection.getRowsModified();\n                    result.records = records;\n                    result.raw = records;\n                    statement.free();\n                    if (command !== \"SELECT\") {\n                        this.isDirty = true;\n                    }\n                    if (useStructuredResult) {\n                        return [2 /*return*/, result];\n                    }\n                    else {\n                        return [2 /*return*/, result.raw];\n                    }\n                }\n                catch (e) {\n                    if (statement) {\n                        statement.free();\n                    }\n                    this.driver.connection.logger.logQueryError(e, query, parameters, this);\n                    throw new QueryFailedError(query, parameters, e);\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    return SqljsQueryRunner;\n}(AbstractSqliteQueryRunner));\nexport { SqljsQueryRunner };\n\n//# sourceMappingURL=SqljsQueryRunner.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { AbstractSqliteDriver } from \"../sqlite-abstract/AbstractSqliteDriver\";\nimport { SqljsQueryRunner } from \"./SqljsQueryRunner\";\nimport { DriverPackageNotInstalledError } from \"../../error/DriverPackageNotInstalledError\";\nimport { DriverOptionNotSetError } from \"../../error/DriverOptionNotSetError\";\nimport { PlatformTools } from \"../../platform/PlatformTools\";\nimport { OrmUtils } from \"../../util/OrmUtils\";\nimport { TypeORMError } from \"../../error\";\nvar SqljsDriver = /** @class */ (function (_super) {\n    __extends(SqljsDriver, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SqljsDriver(connection) {\n        var _this = _super.call(this, connection) || this;\n        // If autoSave is enabled by user, location or autoSaveCallback have to be set\n        // because either autoSave saves to location or calls autoSaveCallback.\n        if (_this.options.autoSave && !_this.options.location && !_this.options.autoSaveCallback) {\n            throw new DriverOptionNotSetError(\"location or autoSaveCallback\");\n        }\n        // load sql.js package\n        _this.loadDependencies();\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     */\n    SqljsDriver.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this;\n                        return [4 /*yield*/, this.createDatabaseConnection()];\n                    case 1:\n                        _a.databaseConnection = _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Closes connection with database.\n     */\n    SqljsDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.queryRunner = undefined;\n                this.databaseConnection.close();\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    SqljsDriver.prototype.createQueryRunner = function (mode) {\n        if (!this.queryRunner)\n            this.queryRunner = new SqljsQueryRunner(this);\n        return this.queryRunner;\n    };\n    /**\n     * Loads a database from a given file (Node.js), local storage key (browser) or array.\n     * This will delete the current database!\n     */\n    SqljsDriver.prototype.load = function (fileNameOrLocalStorageOrData, checkIfFileOrLocalStorageExists) {\n        if (checkIfFileOrLocalStorageExists === void 0) { checkIfFileOrLocalStorageExists = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var database, localStorageContent;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(typeof fileNameOrLocalStorageOrData === \"string\")) return [3 /*break*/, 8];\n                        if (!(PlatformTools.type === \"node\")) return [3 /*break*/, 1];\n                        // Node.js\n                        // fileNameOrLocalStorageOrData should be a path to the file\n                        if (PlatformTools.fileExist(fileNameOrLocalStorageOrData)) {\n                            database = PlatformTools.readFileSync(fileNameOrLocalStorageOrData);\n                            return [2 /*return*/, this.createDatabaseConnectionWithImport(database)];\n                        }\n                        else if (checkIfFileOrLocalStorageExists) {\n                            throw new TypeORMError(\"File \" + fileNameOrLocalStorageOrData + \" does not exist\");\n                        }\n                        else {\n                            // File doesn't exist and checkIfFileOrLocalStorageExists is set to false.\n                            // Therefore open a database without importing an existing file.\n                            // File will be written on first write operation.\n                            return [2 /*return*/, this.createDatabaseConnectionWithImport()];\n                        }\n                        return [3 /*break*/, 7];\n                    case 1:\n                        localStorageContent = null;\n                        if (!this.options.useLocalForage) return [3 /*break*/, 5];\n                        if (!window.localforage) return [3 /*break*/, 3];\n                        return [4 /*yield*/, window.localforage.getItem(fileNameOrLocalStorageOrData)];\n                    case 2:\n                        localStorageContent = _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3: throw new TypeORMError(\"localforage is not defined - please import localforage.js into your site\");\n                    case 4: return [3 /*break*/, 6];\n                    case 5:\n                        localStorageContent = PlatformTools.getGlobalVariable().localStorage.getItem(fileNameOrLocalStorageOrData);\n                        _a.label = 6;\n                    case 6:\n                        if (localStorageContent != null) {\n                            // localStorage value exists.\n                            return [2 /*return*/, this.createDatabaseConnectionWithImport(JSON.parse(localStorageContent))];\n                        }\n                        else if (checkIfFileOrLocalStorageExists) {\n                            throw new TypeORMError(\"File \" + fileNameOrLocalStorageOrData + \" does not exist\");\n                        }\n                        else {\n                            // localStorage value doesn't exist and checkIfFileOrLocalStorageExists is set to false.\n                            // Therefore open a database without importing anything.\n                            // localStorage value will be written on first write operation.\n                            return [2 /*return*/, this.createDatabaseConnectionWithImport()];\n                        }\n                        _a.label = 7;\n                    case 7: return [3 /*break*/, 9];\n                    case 8: return [2 /*return*/, this.createDatabaseConnectionWithImport(fileNameOrLocalStorageOrData)];\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Saved the current database to the given file (Node.js), local storage key (browser) or\n     * indexedDB key (browser with enabled useLocalForage option).\n     * If no location path is given, the location path in the options (if specified) will be used.\n     */\n    SqljsDriver.prototype.save = function (location) {\n        return __awaiter(this, void 0, void 0, function () {\n            var path, content, e_1, database, databaseArray;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!location && !this.options.location) {\n                            throw new TypeORMError(\"No location is set, specify a location parameter or add the location option to your configuration\");\n                        }\n                        path = \"\";\n                        if (location) {\n                            path = location;\n                        }\n                        else if (this.options.location) {\n                            path = this.options.location;\n                        }\n                        if (!(PlatformTools.type === \"node\")) return [3 /*break*/, 5];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        content = Buffer.from(this.databaseConnection.export());\n                        return [4 /*yield*/, PlatformTools.writeFile(path, content)];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        throw new TypeORMError(\"Could not save database, error: \" + e_1);\n                    case 4: return [3 /*break*/, 10];\n                    case 5:\n                        database = this.databaseConnection.export();\n                        databaseArray = [].slice.call(database);\n                        if (!this.options.useLocalForage) return [3 /*break*/, 9];\n                        if (!window.localforage) return [3 /*break*/, 7];\n                        return [4 /*yield*/, window.localforage.setItem(path, JSON.stringify(databaseArray))];\n                    case 6:\n                        _a.sent();\n                        return [3 /*break*/, 8];\n                    case 7: throw new TypeORMError(\"localforage is not defined - please import localforage.js into your site\");\n                    case 8: return [3 /*break*/, 10];\n                    case 9:\n                        PlatformTools.getGlobalVariable().localStorage.setItem(path, JSON.stringify(databaseArray));\n                        _a.label = 10;\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * This gets called by the QueryRunner when a change to the database is made.\n     * If a custom autoSaveCallback is specified, it get's called with the database as Uint8Array,\n     * otherwise the save method is called which saves it to file (Node.js), local storage (browser)\n     * or indexedDB (browser with enabled useLocalForage option).\n     */\n    SqljsDriver.prototype.autoSave = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.options.autoSave) return [3 /*break*/, 4];\n                        if (!this.options.autoSaveCallback) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.options.autoSaveCallback(this.export())];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this.save()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the current database as Uint8Array.\n     */\n    SqljsDriver.prototype.export = function () {\n        return this.databaseConnection.export();\n    };\n    /**\n     * Creates generated map of values generated or returned by database after INSERT query.\n     */\n    SqljsDriver.prototype.createGeneratedMap = function (metadata, insertResult) {\n        var _this = this;\n        var generatedMap = metadata.generatedColumns.reduce(function (map, generatedColumn) {\n            // seems to be the only way to get the inserted id, see https://github.com/kripken/sql.js/issues/77\n            if (generatedColumn.isPrimary && generatedColumn.generationStrategy === \"increment\") {\n                var query = \"SELECT last_insert_rowid()\";\n                try {\n                    var result = _this.databaseConnection.exec(query);\n                    _this.connection.logger.logQuery(query);\n                    return OrmUtils.mergeDeep(map, generatedColumn.createValueMap(result[0].values[0][0]));\n                }\n                catch (e) {\n                    _this.connection.logger.logQueryError(e, query, []);\n                }\n            }\n            return map;\n        }, {});\n        return Object.keys(generatedMap).length > 0 ? generatedMap : undefined;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     * If the location option is set, the database is loaded first.\n     */\n    SqljsDriver.prototype.createDatabaseConnection = function () {\n        if (this.options.location) {\n            return this.load(this.options.location, false);\n        }\n        return this.createDatabaseConnectionWithImport(this.options.database);\n    };\n    /**\n     * Creates connection with an optional database.\n     * If database is specified it is loaded, otherwise a new empty database is created.\n     */\n    SqljsDriver.prototype.createDatabaseConnectionWithImport = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            var isLegacyVersion, sqlite, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        isLegacyVersion = typeof this.sqlite.Database === \"function\";\n                        if (!isLegacyVersion) return [3 /*break*/, 1];\n                        _a = this.sqlite;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.sqlite(this.options.sqlJsConfig)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        sqlite = _a;\n                        if (database && database.length > 0) {\n                            this.databaseConnection = new sqlite.Database(database);\n                        }\n                        else {\n                            this.databaseConnection = new sqlite.Database();\n                        }\n                        this.databaseConnection.exec(\"PRAGMA foreign_keys = ON;\");\n                        return [2 /*return*/, this.databaseConnection];\n                }\n            });\n        });\n    };\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    SqljsDriver.prototype.loadDependencies = function () {\n        if (PlatformTools.type === \"browser\") {\n            var sqlite = this.options.driver || window.SQL;\n            this.sqlite = sqlite;\n        }\n        else {\n            try {\n                var sqlite = this.options.driver || PlatformTools.load(\"sql.js\");\n                this.sqlite = sqlite;\n            }\n            catch (e) {\n                throw new DriverPackageNotInstalledError(\"sql.js\", \"sql.js\");\n            }\n        }\n    };\n    return SqljsDriver;\n}(AbstractSqliteDriver));\nexport { SqljsDriver };\n\n//# sourceMappingURL=SqljsDriver.js.map\n","import { EntityManager } from \"./EntityManager\";\nimport { MongoEntityManager } from \"./MongoEntityManager\";\nimport { MongoDriver } from \"../driver/mongodb/MongoDriver\";\nimport { SqljsEntityManager } from \"./SqljsEntityManager\";\nimport { SqljsDriver } from \"../driver/sqljs/SqljsDriver\";\n/**\n * Helps to create entity managers.\n */\nvar EntityManagerFactory = /** @class */ (function () {\n    function EntityManagerFactory() {\n    }\n    /**\n     * Creates a new entity manager depend on a given connection's driver.\n     */\n    EntityManagerFactory.prototype.create = function (connection, queryRunner) {\n        if (connection.driver instanceof MongoDriver)\n            return new MongoEntityManager(connection);\n        if (connection.driver instanceof SqljsDriver)\n            return new SqljsEntityManager(connection, queryRunner);\n        return new EntityManager(connection, queryRunner);\n    };\n    return EntityManagerFactory;\n}());\nexport { EntityManagerFactory };\n\n//# sourceMappingURL=EntityManagerFactory.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { QueryRunnerAlreadyReleasedError } from \"../../error/QueryRunnerAlreadyReleasedError\";\nimport { QueryFailedError } from \"../../error/QueryFailedError\";\nimport { AbstractSqliteQueryRunner } from \"../sqlite-abstract/AbstractSqliteQueryRunner\";\nimport { Broadcaster } from \"../../subscriber/Broadcaster\";\nimport { TypeORMError } from \"../../error\";\nimport { QueryResult } from \"../../query-runner/QueryResult\";\n/**\n * Runs queries on a single sqlite database connection.\n */\nvar CordovaQueryRunner = /** @class */ (function (_super) {\n    __extends(CordovaQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function CordovaQueryRunner(driver) {\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster(_this);\n        return _this;\n    }\n    /**\n     * Executes a given SQL query.\n     */\n    CordovaQueryRunner.prototype.query = function (query, parameters, useStructuredResult) {\n        if (useStructuredResult === void 0) { useStructuredResult = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var databaseConnection, queryStartTime, raw, maxQueryExecutionTime, queryEndTime, queryExecutionTime, result, resultSet, i, err_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isReleased)\n                            throw new QueryRunnerAlreadyReleasedError();\n                        return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        this.driver.connection.logger.logQuery(query, parameters, this);\n                        queryStartTime = +new Date();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n                                return __generator(this, function (_a) {\n                                    databaseConnection.executeSql(query, parameters, function (raw) { return ok(raw); }, function (err) { return fail(err); });\n                                    return [2 /*return*/];\n                                });\n                            }); })];\n                    case 3:\n                        raw = _a.sent();\n                        maxQueryExecutionTime = this.driver.options.maxQueryExecutionTime;\n                        queryEndTime = +new Date();\n                        queryExecutionTime = queryEndTime - queryStartTime;\n                        if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime) {\n                            this.driver.connection.logger.logQuerySlow(queryExecutionTime, query, parameters, this);\n                        }\n                        result = new QueryResult();\n                        if (query.substr(0, 11) === \"INSERT INTO\") {\n                            result.raw = raw.insertId;\n                        }\n                        else {\n                            resultSet = [];\n                            for (i = 0; i < raw.rows.length; i++) {\n                                resultSet.push(raw.rows.item(i));\n                            }\n                            result.records = resultSet;\n                            result.raw = resultSet;\n                        }\n                        if (useStructuredResult) {\n                            return [2 /*return*/, result];\n                        }\n                        else {\n                            return [2 /*return*/, result.raw];\n                        }\n                        return [3 /*break*/, 5];\n                    case 4:\n                        err_1 = _a.sent();\n                        this.driver.connection.logger.logQueryError(err_1, query, parameters, this);\n                        throw new QueryFailedError(query, parameters, err_1);\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Insert a new row with given values into the given table.\n     * Returns value of the generated column if given and generate column exist in the table.\n     // todo: implement new syntax\n    async insert(tableName: string, keyValues: ObjectLiteral): Promise<InsertResult> {\n        const keys = Object.keys(keyValues);\n        const columns = keys.map(key => `\"${key}\"`).join(\", \");\n        const values = keys.map(key => \"?\").join(\",\");\n        const generatedColumns = this.connection.hasMetadata(tableName) ? this.connection.getMetadata(tableName).generatedColumns : [];\n        const sql = columns.length > 0 ? (`INSERT INTO \"${tableName}\"(${columns}) VALUES (${values})`) : `INSERT INTO \"${tableName}\" DEFAULT VALUES`;\n        const parameters = keys.map(key => keyValues[key]);\n\n        return new Promise<InsertResult>(async (ok, fail) => {\n            this.driver.connection.logger.logQuery(sql, parameters, this);\n            const __this = this;\n            const databaseConnection = await this.connect();\n            databaseConnection.executeSql(sql, parameters, (resultSet: any) => {\n                const generatedMap = generatedColumns.reduce((map, generatedColumn) => {\n                    const value = generatedColumn.isPrimary && generatedColumn.generationStrategy === \"increment\" && resultSet.insertId ? resultSet.insertId : keyValues[generatedColumn.databaseName];\n                    if (!value) return map;\n                    return OrmUtils.mergeDeep(map, generatedColumn.createValueMap(value));\n                }, {} as ObjectLiteral);\n\n                ok({\n                    result: undefined,\n                    generatedMap: Object.keys(generatedMap).length > 0 ? generatedMap : undefined\n                });\n            }, (err: any) => {\n                __this.driver.connection.logger.logQueryError(err, sql, parameters, this);\n                fail(err);\n            });\n        });\n    }*/\n    /**\n     * Would start a transaction but this driver does not support transactions.\n     */\n    CordovaQueryRunner.prototype.startTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new TypeORMError('Transactions are not supported by the Cordova driver');\n            });\n        });\n    };\n    /**\n     * Would start a transaction but this driver does not support transactions.\n     */\n    CordovaQueryRunner.prototype.commitTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new TypeORMError('Transactions are not supported by the Cordova driver');\n            });\n        });\n    };\n    /**\n     * Would start a transaction but this driver does not support transactions.\n     */\n    CordovaQueryRunner.prototype.rollbackTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                throw new TypeORMError('Transactions are not supported by the Cordova driver');\n            });\n        });\n    };\n    /**\n     * Removes all tables from the currently connected database.\n     * Be careful with using this method and avoid using it in production or migrations\n     * (because it can clear all your database).\n     */\n    CordovaQueryRunner.prototype.clearDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectViewDropsQuery, dropViewQueries, selectTableDropsQuery, dropTableQueries;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"PRAGMA foreign_keys = OFF;\")];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, , 7, 9]);\n                        selectViewDropsQuery = \"SELECT 'DROP VIEW \\\"' || name || '\\\";' as query FROM \\\"sqlite_master\\\" WHERE \\\"type\\\" = 'view'\";\n                        return [4 /*yield*/, this.query(selectViewDropsQuery)];\n                    case 3:\n                        dropViewQueries = _a.sent();\n                        selectTableDropsQuery = \"SELECT 'DROP TABLE \\\"' || name || '\\\";' as query FROM \\\"sqlite_master\\\" WHERE \\\"type\\\" = 'table' AND \\\"name\\\" != 'sqlite_sequence'\";\n                        return [4 /*yield*/, this.query(selectTableDropsQuery)];\n                    case 4:\n                        dropTableQueries = _a.sent();\n                        return [4 /*yield*/, Promise.all(dropViewQueries.map(function (q) { return _this.query(q[\"query\"]); }))];\n                    case 5:\n                        _a.sent();\n                        return [4 /*yield*/, Promise.all(dropTableQueries.map(function (q) { return _this.query(q[\"query\"]); }))];\n                    case 6:\n                        _a.sent();\n                        return [3 /*break*/, 9];\n                    case 7: return [4 /*yield*/, this.query(\"PRAGMA foreign_keys = ON;\")];\n                    case 8:\n                        _a.sent();\n                        return [7 /*endfinally*/];\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Parametrizes given object of values. Used to create column=value queries.\n     */\n    CordovaQueryRunner.prototype.parametrize = function (objectLiteral, startIndex) {\n        if (startIndex === void 0) { startIndex = 0; }\n        return Object.keys(objectLiteral).map(function (key, index) { return \"\\\"\" + key + \"\\\"\" + \"=?\"; });\n    };\n    return CordovaQueryRunner;\n}(AbstractSqliteQueryRunner));\nexport { CordovaQueryRunner };\n\n//# sourceMappingURL=CordovaQueryRunner.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { AbstractSqliteDriver } from \"../sqlite-abstract/AbstractSqliteDriver\";\nimport { CordovaQueryRunner } from \"./CordovaQueryRunner\";\nimport { DriverOptionNotSetError } from \"../../error/DriverOptionNotSetError\";\nimport { DriverPackageNotInstalledError } from \"../../error/DriverPackageNotInstalledError\";\nvar CordovaDriver = /** @class */ (function (_super) {\n    __extends(CordovaDriver, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function CordovaDriver(connection) {\n        var _this = _super.call(this, connection) || this;\n        // this.connection = connection;\n        // this.options = connection.options as CordovaConnectionOptions;\n        _this.database = _this.options.database;\n        // validate options to make sure everything is set\n        if (!_this.options.database)\n            throw new DriverOptionNotSetError(\"database\");\n        if (!_this.options.location)\n            throw new DriverOptionNotSetError(\"location\");\n        // load sqlite package\n        _this.loadDependencies();\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Closes connection with database.\n     */\n    CordovaDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                this.queryRunner = undefined;\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.databaseConnection.close(ok, fail);\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    CordovaDriver.prototype.createQueryRunner = function (mode) {\n        if (!this.queryRunner)\n            this.queryRunner = new CordovaQueryRunner(this);\n        return this.queryRunner;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    CordovaDriver.prototype.createDatabaseConnection = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var options, connection;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        options = Object.assign({}, {\n                            name: this.options.database,\n                            location: this.options.location,\n                        }, this.options.extra || {});\n                        return [4 /*yield*/, new Promise(function (resolve) {\n                                _this.sqlite.openDatabase(options, function (db) { return resolve(db); });\n                            })];\n                    case 1:\n                        connection = _a.sent();\n                        return [4 /*yield*/, new Promise(function (ok, fail) {\n                                // we need to enable foreign keys in sqlite to make sure all foreign key related features\n                                // working properly. this also makes onDelete to work with sqlite.\n                                connection.executeSql(\"PRAGMA foreign_keys = ON;\", [], function () { return ok(); }, function (err) { return fail(err); });\n                            })];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/, connection];\n                }\n            });\n        });\n    };\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    CordovaDriver.prototype.loadDependencies = function () {\n        try {\n            var sqlite = this.options.driver || window.sqlitePlugin;\n            this.sqlite = sqlite;\n        }\n        catch (e) {\n            throw new DriverPackageNotInstalledError(\"Cordova-SQLite\", \"cordova-sqlite-storage\");\n        }\n    };\n    return CordovaDriver;\n}(AbstractSqliteDriver));\nexport { CordovaDriver };\n\n//# sourceMappingURL=CordovaDriver.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { QueryRunnerAlreadyReleasedError } from \"../../error/QueryRunnerAlreadyReleasedError\";\nimport { QueryFailedError } from \"../../error/QueryFailedError\";\nimport { AbstractSqliteQueryRunner } from \"../sqlite-abstract/AbstractSqliteQueryRunner\";\nimport { Broadcaster } from \"../../subscriber/Broadcaster\";\nimport { QueryResult } from \"../../query-runner/QueryResult\";\n/**\n * Runs queries on a single sqlite database connection.\n */\nvar ReactNativeQueryRunner = /** @class */ (function (_super) {\n    __extends(ReactNativeQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ReactNativeQueryRunner(driver) {\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster(_this);\n        return _this;\n    }\n    /**\n     * Executes a given SQL query.\n     */\n    ReactNativeQueryRunner.prototype.query = function (query, parameters, useStructuredResult) {\n        var _this = this;\n        if (useStructuredResult === void 0) { useStructuredResult = false; }\n        if (this.isReleased)\n            throw new QueryRunnerAlreadyReleasedError();\n        return new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n            var databaseConnection, queryStartTime;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        this.driver.connection.logger.logQuery(query, parameters, this);\n                        queryStartTime = +new Date();\n                        databaseConnection.executeSql(query, parameters, function (raw) {\n                            // log slow queries if maxQueryExecution time is set\n                            var maxQueryExecutionTime = _this.driver.options.maxQueryExecutionTime;\n                            var queryEndTime = +new Date();\n                            var queryExecutionTime = queryEndTime - queryStartTime;\n                            if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime)\n                                _this.driver.connection.logger.logQuerySlow(queryExecutionTime, query, parameters, _this);\n                            var result = new QueryResult();\n                            // return id of inserted row, if query was insert statement.\n                            if (query.substr(0, 11) === \"INSERT INTO\") {\n                                result.raw = raw.insertId;\n                            }\n                            if (raw === null || raw === void 0 ? void 0 : raw.hasOwnProperty('rowsAffected')) {\n                                result.affected = raw.rowsAffected;\n                            }\n                            if (raw === null || raw === void 0 ? void 0 : raw.hasOwnProperty('rows')) {\n                                var records = [];\n                                for (var i = 0; i < raw.rows.length; i++) {\n                                    records.push(raw.rows.item(i));\n                                }\n                                result.raw = records;\n                                result.records = records;\n                            }\n                            if (useStructuredResult) {\n                                ok(result);\n                            }\n                            else {\n                                ok(result.raw);\n                            }\n                        }, function (err) {\n                            _this.driver.connection.logger.logQueryError(err, query, parameters, _this);\n                            fail(new QueryFailedError(query, parameters, err));\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Parametrizes given object of values. Used to create column=value queries.\n     */\n    ReactNativeQueryRunner.prototype.parametrize = function (objectLiteral, startIndex) {\n        if (startIndex === void 0) { startIndex = 0; }\n        return Object.keys(objectLiteral).map(function (key, index) { return \"\\\"\" + key + \"\\\"\" + \"=?\"; });\n    };\n    return ReactNativeQueryRunner;\n}(AbstractSqliteQueryRunner));\nexport { ReactNativeQueryRunner };\n\n//# sourceMappingURL=ReactNativeQueryRunner.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { AbstractSqliteDriver } from \"../sqlite-abstract/AbstractSqliteDriver\";\nimport { ReactNativeQueryRunner } from \"./ReactNativeQueryRunner\";\nimport { DriverOptionNotSetError } from \"../../error/DriverOptionNotSetError\";\nimport { DriverPackageNotInstalledError } from \"../../error/DriverPackageNotInstalledError\";\nvar ReactNativeDriver = /** @class */ (function (_super) {\n    __extends(ReactNativeDriver, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ReactNativeDriver(connection) {\n        var _this = _super.call(this, connection) || this;\n        _this.database = _this.options.database;\n        // validate options to make sure everything is set\n        if (!_this.options.database)\n            throw new DriverOptionNotSetError(\"database\");\n        if (!_this.options.location)\n            throw new DriverOptionNotSetError(\"location\");\n        // load sqlite package\n        _this.loadDependencies();\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Closes connection with database.\n     */\n    ReactNativeDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.queryRunner = undefined;\n                        _this.databaseConnection.close(ok, fail);\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    ReactNativeDriver.prototype.createQueryRunner = function (mode) {\n        if (!this.queryRunner)\n            this.queryRunner = new ReactNativeQueryRunner(this);\n        return this.queryRunner;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    ReactNativeDriver.prototype.createDatabaseConnection = function () {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            var options = Object.assign({}, {\n                name: _this.options.database,\n                location: _this.options.location,\n            }, _this.options.extra || {});\n            _this.sqlite.openDatabase(options, function (db) {\n                var databaseConnection = db;\n                // we need to enable foreign keys in sqlite to make sure all foreign key related features\n                // working properly. this also makes onDelete work with sqlite.\n                databaseConnection.executeSql(\"PRAGMA foreign_keys = ON;\", [], function (result) {\n                    ok(databaseConnection);\n                }, function (error) {\n                    fail(error);\n                });\n            }, function (error) {\n                fail(error);\n            });\n        });\n    };\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    ReactNativeDriver.prototype.loadDependencies = function () {\n        try {\n            var sqlite = this.options.driver || require(\"react-native-sqlite-storage\");\n            this.sqlite = sqlite;\n        }\n        catch (e) {\n            throw new DriverPackageNotInstalledError(\"React-Native\", \"react-native-sqlite-storage\");\n        }\n    };\n    return ReactNativeDriver;\n}(AbstractSqliteDriver));\nexport { ReactNativeDriver };\n\n//# sourceMappingURL=ReactNativeDriver.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { QueryRunnerAlreadyReleasedError } from \"../../error/QueryRunnerAlreadyReleasedError\";\nimport { QueryFailedError } from \"../../error/QueryFailedError\";\nimport { AbstractSqliteQueryRunner } from \"../sqlite-abstract/AbstractSqliteQueryRunner\";\nimport { Broadcaster } from \"../../subscriber/Broadcaster\";\nimport { QueryResult } from \"../../query-runner/QueryResult\";\n/**\n * Runs queries on a single sqlite database connection.\n */\nvar NativescriptQueryRunner = /** @class */ (function (_super) {\n    __extends(NativescriptQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function NativescriptQueryRunner(driver) {\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster(_this);\n        return _this;\n    }\n    /**\n     * Executes a given SQL query.\n     */\n    NativescriptQueryRunner.prototype.query = function (query, parameters, useStructuredResult) {\n        if (useStructuredResult === void 0) { useStructuredResult = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var connection;\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this.isReleased) {\n                    throw new QueryRunnerAlreadyReleasedError();\n                }\n                connection = this.driver.connection;\n                return [2 /*return*/, new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n                        var databaseConnection, isInsertQuery, handler, queryStartTime;\n                        var _this = this;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4 /*yield*/, this.connect()];\n                                case 1:\n                                    databaseConnection = _a.sent();\n                                    isInsertQuery = query.substr(0, 11) === \"INSERT INTO\";\n                                    connection.logger.logQuery(query, parameters, this);\n                                    handler = function (err, raw) {\n                                        // log slow queries if maxQueryExecution time is set\n                                        var maxQueryExecutionTime = _this.driver.options.maxQueryExecutionTime;\n                                        var queryEndTime = +new Date();\n                                        var queryExecutionTime = queryEndTime - queryStartTime;\n                                        if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime) {\n                                            connection.logger.logQuerySlow(queryExecutionTime, query, parameters, _this);\n                                        }\n                                        if (err) {\n                                            connection.logger.logQueryError(err, query, parameters, _this);\n                                            fail(new QueryFailedError(query, parameters, err));\n                                        }\n                                        var result = new QueryResult();\n                                        result.raw = raw;\n                                        if (!isInsertQuery && Array.isArray(raw)) {\n                                            result.records = raw;\n                                        }\n                                        if (useStructuredResult) {\n                                            ok(result);\n                                        }\n                                        else {\n                                            ok(result.raw);\n                                        }\n                                    };\n                                    queryStartTime = +new Date();\n                                    if (isInsertQuery) {\n                                        databaseConnection.execSQL(query, parameters, handler);\n                                    }\n                                    else {\n                                        databaseConnection.all(query, parameters, handler);\n                                    }\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Parametrizes given object of values. Used to create column=value queries.\n     */\n    NativescriptQueryRunner.prototype.parametrize = function (objectLiteral, startIndex) {\n        if (startIndex === void 0) { startIndex = 0; }\n        return Object.keys(objectLiteral).map(function (key, index) { return \"\\\"\" + key + \"\\\"\" + \"=?\"; });\n    };\n    return NativescriptQueryRunner;\n}(AbstractSqliteQueryRunner));\nexport { NativescriptQueryRunner };\n\n//# sourceMappingURL=NativescriptQueryRunner.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { AbstractSqliteDriver } from \"../sqlite-abstract/AbstractSqliteDriver\";\nimport { NativescriptQueryRunner } from \"./NativescriptQueryRunner\";\nimport { DriverOptionNotSetError } from \"../../error/DriverOptionNotSetError\";\nimport { DriverPackageNotInstalledError } from \"../../error/DriverPackageNotInstalledError\";\n/**\n * Organizes communication with sqlite DBMS within Nativescript.\n */\nvar NativescriptDriver = /** @class */ (function (_super) {\n    __extends(NativescriptDriver, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function NativescriptDriver(connection) {\n        var _this = _super.call(this, connection) || this;\n        _this.connection = connection;\n        _this.options = connection.options;\n        _this.database = _this.options.database;\n        _this.driver = _this.options.driver;\n        // validate options to make sure everything is set\n        if (!_this.options.database) {\n            throw new DriverOptionNotSetError(\"database\");\n        }\n        // load sqlite package\n        _this.loadDependencies();\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Closes connection with database.\n     */\n    NativescriptDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.queryRunner = undefined;\n                        _this.databaseConnection.close().then(ok).catch(fail);\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    NativescriptDriver.prototype.createQueryRunner = function (mode) {\n        if (!this.queryRunner) {\n            this.queryRunner = new NativescriptQueryRunner(this);\n        }\n        return this.queryRunner;\n    };\n    NativescriptDriver.prototype.normalizeType = function (column) {\n        if (column.type === Buffer) {\n            return \"blob\";\n        }\n        return _super.prototype.normalizeType.call(this, column);\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    NativescriptDriver.prototype.createDatabaseConnection = function () {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            var options = Object.assign({}, {\n                readOnly: _this.options.readOnly,\n                key: _this.options.key,\n                multithreading: _this.options.multithreading,\n                migrate: _this.options.migrate,\n                iosFlags: _this.options.iosFlags,\n                androidFlags: _this.options.androidFlags,\n            }, _this.options.extra || {});\n            new _this.sqlite(_this.options.database, options, function (err, db) {\n                if (err)\n                    return fail(err);\n                // use object mode to work with TypeORM\n                db.resultType(_this.sqlite.RESULTSASOBJECT);\n                // we need to enable foreign keys in sqlite to make sure all foreign key related features\n                // working properly. this also makes onDelete work with sqlite.\n                db.execSQL(\"PRAGMA foreign_keys = ON;\", [], function (err, result) {\n                    if (err)\n                        return fail(err);\n                    // We are all set\n                    ok(db);\n                });\n            });\n        });\n    };\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    NativescriptDriver.prototype.loadDependencies = function () {\n        this.sqlite = this.driver;\n        if (!this.driver) {\n            throw new DriverPackageNotInstalledError(\"Nativescript\", \"nativescript-sqlite\");\n        }\n    };\n    return NativescriptDriver;\n}(AbstractSqliteDriver));\nexport { NativescriptDriver };\n\n//# sourceMappingURL=NativescriptDriver.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { QueryRunnerAlreadyReleasedError } from \"../../error/QueryRunnerAlreadyReleasedError\";\nimport { QueryFailedError } from \"../../error/QueryFailedError\";\nimport { AbstractSqliteQueryRunner } from \"../sqlite-abstract/AbstractSqliteQueryRunner\";\nimport { TransactionAlreadyStartedError } from \"../../error/TransactionAlreadyStartedError\";\nimport { TransactionNotStartedError } from \"../../error/TransactionNotStartedError\";\nimport { Broadcaster } from \"../../subscriber/Broadcaster\";\nimport { QueryResult } from \"../../query-runner/QueryResult\";\n/**\n * Runs queries on a single sqlite database connection.\n */\nvar ExpoQueryRunner = /** @class */ (function (_super) {\n    __extends(ExpoQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ExpoQueryRunner(driver) {\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster(_this);\n        return _this;\n    }\n    /**\n     * Starts transaction. Within Expo, all database operations happen in a\n     * transaction context, so issuing a `BEGIN TRANSACTION` command is\n     * redundant and will result in the following error:\n     *\n     * `Error: Error code 1: cannot start a transaction within a transaction`\n     *\n     * Instead, we keep track of a `Transaction` object in `this.transaction`\n     * and continue using the same object until we wish to commit the\n     * transaction.\n     */\n    ExpoQueryRunner.prototype.startTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isTransactionActive && typeof this.transaction !== \"undefined\")\n                            throw new TransactionAlreadyStartedError();\n                        return [4 /*yield*/, this.broadcaster.broadcast('BeforeTransactionStart')];\n                    case 1:\n                        _a.sent();\n                        this.isTransactionActive = true;\n                        return [4 /*yield*/, this.broadcaster.broadcast('AfterTransactionStart')];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Commits transaction.\n     * Error will be thrown if transaction was not started.\n     * Since Expo will automatically commit the transaction once all the\n     * callbacks of the transaction object have been completed, \"committing\" a\n     * transaction in this driver's context means that we delete the transaction\n     * object and set the stage for the next transaction.\n     */\n    ExpoQueryRunner.prototype.commitTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive && typeof this.transaction === \"undefined\")\n                            throw new TransactionNotStartedError();\n                        return [4 /*yield*/, this.broadcaster.broadcast('BeforeTransactionCommit')];\n                    case 1:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        this.transaction = undefined;\n                        return [4 /*yield*/, this.broadcaster.broadcast('AfterTransactionCommit')];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Rollbacks transaction.\n     * Error will be thrown if transaction was not started.\n     * This method's functionality is identical to `commitTransaction()` because\n     * the transaction lifecycle is handled within the Expo transaction object.\n     * Issuing separate statements for `COMMIT` or `ROLLBACK` aren't necessary.\n     */\n    ExpoQueryRunner.prototype.rollbackTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive && typeof this.transaction === \"undefined\")\n                            throw new TransactionNotStartedError();\n                        return [4 /*yield*/, this.broadcaster.broadcast('BeforeTransactionRollback')];\n                    case 1:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        this.transaction = undefined;\n                        return [4 /*yield*/, this.broadcaster.broadcast('AfterTransactionRollback')];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes a given SQL query.\n     */\n    ExpoQueryRunner.prototype.query = function (query, parameters, useStructuredResult) {\n        if (useStructuredResult === void 0) { useStructuredResult = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this.isReleased)\n                    throw new QueryRunnerAlreadyReleasedError();\n                return [2 /*return*/, new Promise(function (ok, fail) { return __awaiter(_this, void 0, void 0, function () {\n                        var databaseConnection, queryStartTime;\n                        var _this = this;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4 /*yield*/, this.connect()];\n                                case 1:\n                                    databaseConnection = _a.sent();\n                                    this.driver.connection.logger.logQuery(query, parameters, this);\n                                    queryStartTime = +new Date();\n                                    // All Expo SQL queries are executed in a transaction context\n                                    databaseConnection.transaction(function (transaction) {\n                                        if (typeof _this.transaction === \"undefined\") {\n                                            _this.startTransaction();\n                                            _this.transaction = transaction;\n                                        }\n                                        _this.transaction.executeSql(query, parameters, function (t, raw) {\n                                            // log slow queries if maxQueryExecution time is set\n                                            var maxQueryExecutionTime = _this.driver.options.maxQueryExecutionTime;\n                                            var queryEndTime = +new Date();\n                                            var queryExecutionTime = queryEndTime - queryStartTime;\n                                            if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime) {\n                                                _this.driver.connection.logger.logQuerySlow(queryExecutionTime, query, parameters, _this);\n                                            }\n                                            var result = new QueryResult();\n                                            // return id of inserted row, if query was insert statement.\n                                            if (query.substr(0, 11) === \"INSERT INTO\") {\n                                                result.raw = raw.insertId;\n                                            }\n                                            if (raw === null || raw === void 0 ? void 0 : raw.hasOwnProperty('rowsAffected')) {\n                                                result.affected = raw.rowsAffected;\n                                            }\n                                            if (raw === null || raw === void 0 ? void 0 : raw.hasOwnProperty('rows')) {\n                                                var resultSet = [];\n                                                for (var i = 0; i < raw.rows.length; i++) {\n                                                    resultSet.push(raw.rows.item(i));\n                                                }\n                                                result.raw = resultSet;\n                                                result.records = resultSet;\n                                            }\n                                            if (useStructuredResult) {\n                                                ok(result);\n                                            }\n                                            else {\n                                                ok(result.raw);\n                                            }\n                                        }, function (t, err) {\n                                            _this.driver.connection.logger.logQueryError(err, query, parameters, _this);\n                                            fail(new QueryFailedError(query, parameters, err));\n                                        });\n                                    }, function (err) {\n                                        _this.rollbackTransaction();\n                                    }, function () {\n                                        _this.isTransactionActive = false;\n                                        _this.transaction = undefined;\n                                    });\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); })];\n            });\n        });\n    };\n    return ExpoQueryRunner;\n}(AbstractSqliteQueryRunner));\nexport { ExpoQueryRunner };\n\n//# sourceMappingURL=ExpoQueryRunner.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { AbstractSqliteDriver } from \"../sqlite-abstract/AbstractSqliteDriver\";\nimport { ExpoQueryRunner } from \"./ExpoQueryRunner\";\nimport { DriverOptionNotSetError } from \"../../error/DriverOptionNotSetError\";\nvar ExpoDriver = /** @class */ (function (_super) {\n    __extends(ExpoDriver, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ExpoDriver(connection) {\n        var _this = _super.call(this, connection) || this;\n        _this.database = _this.options.database;\n        // validate options to make sure everything is set\n        if (!_this.options.database)\n            throw new DriverOptionNotSetError(\"database\");\n        if (!_this.options.driver)\n            throw new DriverOptionNotSetError(\"driver\");\n        // load sqlite package\n        _this.sqlite = _this.options.driver;\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Closes connection with database.\n     */\n    ExpoDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        try {\n                            _this.queryRunner = undefined;\n                            _this.databaseConnection._db.close();\n                            _this.databaseConnection = undefined;\n                            ok();\n                        }\n                        catch (error) {\n                            fail(error);\n                        }\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    ExpoDriver.prototype.createQueryRunner = function (mode) {\n        if (!this.queryRunner)\n            this.queryRunner = new ExpoQueryRunner(this);\n        return this.queryRunner;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    ExpoDriver.prototype.createDatabaseConnection = function () {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            try {\n                var databaseConnection_1 = _this.sqlite.openDatabase(_this.options.database);\n                /*\n                // we need to enable foreign keys in sqlite to make sure all foreign key related features\n                // working properly. this also makes onDelete work with sqlite.\n                */\n                databaseConnection_1.transaction(function (tsx) {\n                    tsx.executeSql(\"PRAGMA foreign_keys = ON;\", [], function (t, result) {\n                        ok(databaseConnection_1);\n                    }, function (t, err) {\n                        fail({ transaction: t, error: err });\n                    });\n                }, function (err) {\n                    fail(err);\n                });\n            }\n            catch (error) {\n                fail(error);\n            }\n        });\n    };\n    return ExpoDriver;\n}(AbstractSqliteDriver));\nexport { ExpoDriver };\n\n//# sourceMappingURL=ExpoDriver.js.map\n","var VersionUtils = /** @class */ (function () {\n    function VersionUtils() {\n    }\n    VersionUtils.isGreaterOrEqual = function (version, targetVersion) {\n        var v1 = parseVersion(version);\n        var v2 = parseVersion(targetVersion);\n        return v1[0] > v2[0] ||\n            v1[0] === v2[0] && v1[1] > v2[1] ||\n            v1[0] === v2[0] && v1[1] === v2[1] && v1[2] >= v2[2];\n    };\n    return VersionUtils;\n}());\nexport { VersionUtils };\nfunction parseVersion(version) {\n    if (version === void 0) { version = \"\"; }\n    var v = [0, 0, 0];\n    version.split(\".\").forEach(function (value, i) { return v[i] = parseInt(value, 10); });\n    return v;\n}\n\n//# sourceMappingURL=VersionUtils.js.map\n","import { __awaiter, __extends, __generator, __read, __spreadArray, __values } from \"tslib\";\nimport { QueryFailedError } from \"../../error/QueryFailedError\";\nimport { QueryRunnerAlreadyReleasedError } from \"../../error/QueryRunnerAlreadyReleasedError\";\nimport { TransactionAlreadyStartedError } from \"../../error/TransactionAlreadyStartedError\";\nimport { TransactionNotStartedError } from \"../../error/TransactionNotStartedError\";\nimport { BaseQueryRunner } from \"../../query-runner/BaseQueryRunner\";\nimport { Table } from \"../../schema-builder/table/Table\";\nimport { TableCheck } from \"../../schema-builder/table/TableCheck\";\nimport { TableColumn } from \"../../schema-builder/table/TableColumn\";\nimport { TableExclusion } from \"../../schema-builder/table/TableExclusion\";\nimport { TableForeignKey } from \"../../schema-builder/table/TableForeignKey\";\nimport { TableIndex } from \"../../schema-builder/table/TableIndex\";\nimport { TableUnique } from \"../../schema-builder/table/TableUnique\";\nimport { View } from \"../../schema-builder/view/View\";\nimport { Broadcaster } from \"../../subscriber/Broadcaster\";\nimport { OrmUtils } from \"../../util/OrmUtils\";\nimport { Query } from \"../Query\";\nimport { VersionUtils } from \"../../util/VersionUtils\";\nimport { TypeORMError } from \"../../error\";\nimport { QueryResult } from \"../../query-runner/QueryResult\";\n/**\n * Runs queries on a single postgres database connection.\n */\nvar PostgresQueryRunner = /** @class */ (function (_super) {\n    __extends(PostgresQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function PostgresQueryRunner(driver, mode) {\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.mode = mode;\n        _this.broadcaster = new Broadcaster(_this);\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates/uses database connection from the connection pool to perform further operations.\n     * Returns obtained database connection.\n     */\n    PostgresQueryRunner.prototype.connect = function () {\n        var _this = this;\n        if (this.databaseConnection)\n            return Promise.resolve(this.databaseConnection);\n        if (this.databaseConnectionPromise)\n            return this.databaseConnectionPromise;\n        if (this.mode === \"slave\" && this.driver.isReplicated) {\n            this.databaseConnectionPromise = this.driver.obtainSlaveConnection().then(function (_a) {\n                var _b = __read(_a, 2), connection = _b[0], release = _b[1];\n                _this.driver.connectedQueryRunners.push(_this);\n                _this.databaseConnection = connection;\n                var onErrorCallback = function (err) { return _this.releasePostgresConnection(err); };\n                _this.releaseCallback = function () {\n                    _this.databaseConnection.removeListener(\"error\", onErrorCallback);\n                    release();\n                };\n                _this.databaseConnection.on(\"error\", onErrorCallback);\n                return _this.databaseConnection;\n            });\n        }\n        else { // master\n            this.databaseConnectionPromise = this.driver.obtainMasterConnection().then(function (_a) {\n                var _b = __read(_a, 2), connection = _b[0], release = _b[1];\n                _this.driver.connectedQueryRunners.push(_this);\n                _this.databaseConnection = connection;\n                var onErrorCallback = function (err) { return _this.releasePostgresConnection(err); };\n                _this.releaseCallback = function () {\n                    _this.databaseConnection.removeListener(\"error\", onErrorCallback);\n                    release();\n                };\n                _this.databaseConnection.on(\"error\", onErrorCallback);\n                return _this.databaseConnection;\n            });\n        }\n        return this.databaseConnectionPromise;\n    };\n    /**\n     * Release a connection back to the pool, optionally specifying an Error to release with.\n     * Per pg-pool documentation this will prevent the pool from re-using the broken connection.\n     */\n    PostgresQueryRunner.prototype.releasePostgresConnection = function (err) {\n        return __awaiter(this, void 0, void 0, function () {\n            var index;\n            return __generator(this, function (_a) {\n                if (this.isReleased) {\n                    return [2 /*return*/];\n                }\n                this.isReleased = true;\n                if (this.releaseCallback) {\n                    this.releaseCallback(err);\n                    this.releaseCallback = undefined;\n                }\n                index = this.driver.connectedQueryRunners.indexOf(this);\n                if (index !== -1) {\n                    this.driver.connectedQueryRunners.splice(index, 1);\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Releases used database connection.\n     * You cannot use query runner methods once its released.\n     */\n    PostgresQueryRunner.prototype.release = function () {\n        return this.releasePostgresConnection();\n    };\n    /**\n     * Starts transaction.\n     */\n    PostgresQueryRunner.prototype.startTransaction = function (isolationLevel) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isTransactionActive)\n                            throw new TransactionAlreadyStartedError();\n                        return [4 /*yield*/, this.broadcaster.broadcast('BeforeTransactionStart')];\n                    case 1:\n                        _a.sent();\n                        this.isTransactionActive = true;\n                        return [4 /*yield*/, this.query(\"START TRANSACTION\")];\n                    case 2:\n                        _a.sent();\n                        if (!isolationLevel) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.query(\"SET TRANSACTION ISOLATION LEVEL \" + isolationLevel)];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [4 /*yield*/, this.broadcaster.broadcast('AfterTransactionStart')];\n                    case 5:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Commits transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    PostgresQueryRunner.prototype.commitTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive)\n                            throw new TransactionNotStartedError();\n                        return [4 /*yield*/, this.broadcaster.broadcast('BeforeTransactionCommit')];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.query(\"COMMIT\")];\n                    case 2:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        return [4 /*yield*/, this.broadcaster.broadcast('AfterTransactionCommit')];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Rollbacks transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    PostgresQueryRunner.prototype.rollbackTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive)\n                            throw new TransactionNotStartedError();\n                        return [4 /*yield*/, this.broadcaster.broadcast('BeforeTransactionRollback')];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.query(\"ROLLBACK\")];\n                    case 2:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        return [4 /*yield*/, this.broadcaster.broadcast('AfterTransactionRollback')];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes a given SQL query.\n     */\n    PostgresQueryRunner.prototype.query = function (query, parameters, useStructuredResult) {\n        if (useStructuredResult === void 0) { useStructuredResult = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var databaseConnection, queryStartTime, raw, maxQueryExecutionTime, queryEndTime, queryExecutionTime, result, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isReleased)\n                            throw new QueryRunnerAlreadyReleasedError();\n                        return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        this.driver.connection.logger.logQuery(query, parameters, this);\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        queryStartTime = +new Date();\n                        return [4 /*yield*/, databaseConnection.query(query, parameters)];\n                    case 3:\n                        raw = _a.sent();\n                        maxQueryExecutionTime = this.driver.options.maxQueryExecutionTime;\n                        queryEndTime = +new Date();\n                        queryExecutionTime = queryEndTime - queryStartTime;\n                        if (maxQueryExecutionTime && queryExecutionTime > maxQueryExecutionTime)\n                            this.driver.connection.logger.logQuerySlow(queryExecutionTime, query, parameters, this);\n                        result = new QueryResult();\n                        if (raw === null || raw === void 0 ? void 0 : raw.hasOwnProperty('rows')) {\n                            result.records = raw.rows;\n                        }\n                        if (raw === null || raw === void 0 ? void 0 : raw.hasOwnProperty('rowCount')) {\n                            result.affected = raw.rowCount;\n                        }\n                        switch (raw.command) {\n                            case \"DELETE\":\n                            case \"UPDATE\":\n                                // for UPDATE and DELETE query additionally return number of affected rows\n                                result.raw = [raw.rows, raw.rowCount];\n                                break;\n                            default:\n                                result.raw = raw.rows;\n                        }\n                        if (!useStructuredResult) {\n                            return [2 /*return*/, result.raw];\n                        }\n                        return [2 /*return*/, result];\n                    case 4:\n                        err_1 = _a.sent();\n                        this.driver.connection.logger.logQueryError(err_1, query, parameters, this);\n                        throw new QueryFailedError(query, parameters, err_1);\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Returns raw data stream.\n     */\n    PostgresQueryRunner.prototype.stream = function (query, parameters, onEnd, onError) {\n        return __awaiter(this, void 0, void 0, function () {\n            var QueryStream, databaseConnection, stream;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        QueryStream = this.driver.loadStreamDependency();\n                        if (this.isReleased)\n                            throw new QueryRunnerAlreadyReleasedError();\n                        return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        this.driver.connection.logger.logQuery(query, parameters, this);\n                        stream = databaseConnection.query(new QueryStream(query, parameters));\n                        if (onEnd)\n                            stream.on(\"end\", onEnd);\n                        if (onError)\n                            stream.on(\"error\", onError);\n                        return [2 /*return*/, stream];\n                }\n            });\n        });\n    };\n    /**\n     * Returns all available database names including system databases.\n     */\n    PostgresQueryRunner.prototype.getDatabases = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve([])];\n            });\n        });\n    };\n    /**\n     * Returns all available schema names including system schemas.\n     * If database parameter specified, returns schemas of that database.\n     */\n    PostgresQueryRunner.prototype.getSchemas = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve([])];\n            });\n        });\n    };\n    /**\n     * Checks if database with the given name exist.\n     */\n    PostgresQueryRunner.prototype.hasDatabase = function (database) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"SELECT * FROM pg_database WHERE datname='\" + database + \"';\")];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Loads currently using database\n     */\n    PostgresQueryRunner.prototype.getCurrentDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var query;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"SELECT * FROM current_database()\")];\n                    case 1:\n                        query = _a.sent();\n                        return [2 /*return*/, query[0][\"current_database\"]];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if schema with the given name exist.\n     */\n    PostgresQueryRunner.prototype.hasSchema = function (schema) {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"SELECT * FROM \\\"information_schema\\\".\\\"schemata\\\" WHERE \\\"schema_name\\\" = '\" + schema + \"'\")];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Loads currently using database schema\n     */\n    PostgresQueryRunner.prototype.getCurrentSchema = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var query;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"SELECT * FROM current_schema()\")];\n                    case 1:\n                        query = _a.sent();\n                        return [2 /*return*/, query[0][\"current_schema\"]];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if table with the given name exist in the database.\n     */\n    PostgresQueryRunner.prototype.hasTable = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var parsedTableName, _a, sql, result;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        parsedTableName = this.driver.parseTableName(tableOrName);\n                        if (!!parsedTableName.schema) return [3 /*break*/, 2];\n                        _a = parsedTableName;\n                        return [4 /*yield*/, this.getCurrentSchema()];\n                    case 1:\n                        _a.schema = _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        sql = \"SELECT * FROM \\\"information_schema\\\".\\\"tables\\\" WHERE \\\"table_schema\\\" = '\" + parsedTableName.schema + \"' AND \\\"table_name\\\" = '\" + parsedTableName.tableName + \"'\";\n                        return [4 /*yield*/, this.query(sql)];\n                    case 3:\n                        result = _b.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if column with the given name exist in the given table.\n     */\n    PostgresQueryRunner.prototype.hasColumn = function (tableOrName, columnName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var parsedTableName, _a, sql, result;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        parsedTableName = this.driver.parseTableName(tableOrName);\n                        if (!!parsedTableName.schema) return [3 /*break*/, 2];\n                        _a = parsedTableName;\n                        return [4 /*yield*/, this.getCurrentSchema()];\n                    case 1:\n                        _a.schema = _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        sql = \"SELECT * FROM \\\"information_schema\\\".\\\"columns\\\" WHERE \\\"table_schema\\\" = '\" + parsedTableName.schema + \"' AND \\\"table_name\\\" = '\" + parsedTableName.tableName + \"' AND \\\"column_name\\\" = '\" + columnName + \"'\";\n                        return [4 /*yield*/, this.query(sql)];\n                    case 3:\n                        result = _b.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new database.\n     * Note: Postgres does not support database creation inside a transaction block.\n     */\n    PostgresQueryRunner.prototype.createDatabase = function (database, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            var databaseAlreadyExists, up, down;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!ifNotExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasDatabase(database)];\n                    case 1:\n                        databaseAlreadyExists = _a.sent();\n                        if (databaseAlreadyExists)\n                            return [2 /*return*/, Promise.resolve()];\n                        _a.label = 2;\n                    case 2:\n                        up = \"CREATE DATABASE \\\"\" + database + \"\\\"\";\n                        down = \"DROP DATABASE \\\"\" + database + \"\\\"\";\n                        return [4 /*yield*/, this.executeQueries(new Query(up), new Query(down))];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops database.\n     * Note: Postgres does not support database dropping inside a transaction block.\n     */\n    PostgresQueryRunner.prototype.dropDatabase = function (database, ifExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            var up, down;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        up = ifExist ? \"DROP DATABASE IF EXISTS \\\"\" + database + \"\\\"\" : \"DROP DATABASE \\\"\" + database + \"\\\"\";\n                        down = \"CREATE DATABASE \\\"\" + database + \"\\\"\";\n                        return [4 /*yield*/, this.executeQueries(new Query(up), new Query(down))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new table schema.\n     */\n    PostgresQueryRunner.prototype.createSchema = function (schemaPath, ifNotExist) {\n        return __awaiter(this, void 0, void 0, function () {\n            var schema, up, down;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        schema = schemaPath.indexOf(\".\") === -1 ? schemaPath : schemaPath.split(\".\")[1];\n                        up = ifNotExist ? \"CREATE SCHEMA IF NOT EXISTS \\\"\" + schema + \"\\\"\" : \"CREATE SCHEMA \\\"\" + schema + \"\\\"\";\n                        down = \"DROP SCHEMA \\\"\" + schema + \"\\\" CASCADE\";\n                        return [4 /*yield*/, this.executeQueries(new Query(up), new Query(down))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops table schema.\n     */\n    PostgresQueryRunner.prototype.dropSchema = function (schemaPath, ifExist, isCascade) {\n        return __awaiter(this, void 0, void 0, function () {\n            var schema, up, down;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        schema = schemaPath.indexOf(\".\") === -1 ? schemaPath : schemaPath.split(\".\")[1];\n                        up = ifExist ? \"DROP SCHEMA IF EXISTS \\\"\" + schema + \"\\\" \" + (isCascade ? \"CASCADE\" : \"\") : \"DROP SCHEMA \\\"\" + schema + \"\\\" \" + (isCascade ? \"CASCADE\" : \"\");\n                        down = \"CREATE SCHEMA \\\"\" + schema + \"\\\"\";\n                        return [4 /*yield*/, this.executeQueries(new Query(up), new Query(down))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new table.\n     */\n    PostgresQueryRunner.prototype.createTable = function (table, ifNotExist, createForeignKeys, createIndices) {\n        if (ifNotExist === void 0) { ifNotExist = false; }\n        if (createForeignKeys === void 0) { createForeignKeys = true; }\n        if (createIndices === void 0) { createIndices = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var isTableExist, upQueries, downQueries, enumColumns, createdEnumTypes, enumColumns_1, enumColumns_1_1, column, hasEnum, enumName, e_1_1;\n            var e_1, _a;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!ifNotExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasTable(table)];\n                    case 1:\n                        isTableExist = _b.sent();\n                        if (isTableExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _b.label = 2;\n                    case 2:\n                        upQueries = [];\n                        downQueries = [];\n                        enumColumns = table.columns.filter(function (column) { return column.type === \"enum\" || column.type === \"simple-enum\"; });\n                        createdEnumTypes = [];\n                        _b.label = 3;\n                    case 3:\n                        _b.trys.push([3, 8, 9, 10]);\n                        enumColumns_1 = __values(enumColumns), enumColumns_1_1 = enumColumns_1.next();\n                        _b.label = 4;\n                    case 4:\n                        if (!!enumColumns_1_1.done) return [3 /*break*/, 7];\n                        column = enumColumns_1_1.value;\n                        return [4 /*yield*/, this.hasEnumType(table, column)];\n                    case 5:\n                        hasEnum = _b.sent();\n                        enumName = this.buildEnumName(table, column);\n                        // if enum with the same \"enumName\" is defined more then once, me must prevent double creation\n                        if (!hasEnum && createdEnumTypes.indexOf(enumName) === -1) {\n                            createdEnumTypes.push(enumName);\n                            upQueries.push(this.createEnumTypeSql(table, column, enumName));\n                            downQueries.push(this.dropEnumTypeSql(table, column, enumName));\n                        }\n                        _b.label = 6;\n                    case 6:\n                        enumColumns_1_1 = enumColumns_1.next();\n                        return [3 /*break*/, 4];\n                    case 7: return [3 /*break*/, 10];\n                    case 8:\n                        e_1_1 = _b.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 10];\n                    case 9:\n                        try {\n                            if (enumColumns_1_1 && !enumColumns_1_1.done && (_a = enumColumns_1.return)) _a.call(enumColumns_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 10:\n                        upQueries.push(this.createTableSql(table, createForeignKeys));\n                        downQueries.push(this.dropTableSql(table));\n                        // if createForeignKeys is true, we must drop created foreign keys in down query.\n                        // createTable does not need separate method to create foreign keys, because it create fk's in the same query with table creation.\n                        if (createForeignKeys)\n                            table.foreignKeys.forEach(function (foreignKey) { return downQueries.push(_this.dropForeignKeySql(table, foreignKey)); });\n                        if (createIndices) {\n                            table.indices.forEach(function (index) {\n                                // new index may be passed without name. In this case we generate index name manually.\n                                if (!index.name)\n                                    index.name = _this.connection.namingStrategy.indexName(table, index.columnNames, index.where);\n                                upQueries.push(_this.createIndexSql(table, index));\n                                downQueries.push(_this.dropIndexSql(table, index));\n                            });\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 11:\n                        _b.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the table.\n     */\n    PostgresQueryRunner.prototype.dropTable = function (target, ifExist, dropForeignKeys, dropIndices) {\n        if (dropForeignKeys === void 0) { dropForeignKeys = true; }\n        if (dropIndices === void 0) { dropIndices = true; }\n        return __awaiter(this, void 0, void 0, function () {\n            var isTableExist, createForeignKeys, tablePath, table, upQueries, downQueries;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!ifExist) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.hasTable(target)];\n                    case 1:\n                        isTableExist = _a.sent();\n                        if (!isTableExist)\n                            return [2 /*return*/, Promise.resolve()];\n                        _a.label = 2;\n                    case 2:\n                        createForeignKeys = dropForeignKeys;\n                        tablePath = this.getTablePath(target);\n                        return [4 /*yield*/, this.getCachedTable(tablePath)];\n                    case 3:\n                        table = _a.sent();\n                        upQueries = [];\n                        downQueries = [];\n                        if (dropIndices) {\n                            table.indices.forEach(function (index) {\n                                upQueries.push(_this.dropIndexSql(table, index));\n                                downQueries.push(_this.createIndexSql(table, index));\n                            });\n                        }\n                        if (dropForeignKeys)\n                            table.foreignKeys.forEach(function (foreignKey) { return upQueries.push(_this.dropForeignKeySql(table, foreignKey)); });\n                        upQueries.push(this.dropTableSql(table));\n                        downQueries.push(this.createTableSql(table, createForeignKeys));\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new view.\n     */\n    PostgresQueryRunner.prototype.createView = function (view) {\n        return __awaiter(this, void 0, void 0, function () {\n            var upQueries, downQueries, _a, _b, _c, _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        upQueries = [];\n                        downQueries = [];\n                        upQueries.push(this.createViewSql(view));\n                        _b = (_a = upQueries).push;\n                        return [4 /*yield*/, this.insertViewDefinitionSql(view)];\n                    case 1:\n                        _b.apply(_a, [_e.sent()]);\n                        downQueries.push(this.dropViewSql(view));\n                        _d = (_c = downQueries).push;\n                        return [4 /*yield*/, this.deleteViewDefinitionSql(view)];\n                    case 2:\n                        _d.apply(_c, [_e.sent()]);\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 3:\n                        _e.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the view.\n     */\n    PostgresQueryRunner.prototype.dropView = function (target) {\n        return __awaiter(this, void 0, void 0, function () {\n            var viewName, view, upQueries, downQueries, _a, _b, _c, _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        viewName = target instanceof View ? target.name : target;\n                        return [4 /*yield*/, this.getCachedView(viewName)];\n                    case 1:\n                        view = _e.sent();\n                        upQueries = [];\n                        downQueries = [];\n                        _b = (_a = upQueries).push;\n                        return [4 /*yield*/, this.deleteViewDefinitionSql(view)];\n                    case 2:\n                        _b.apply(_a, [_e.sent()]);\n                        upQueries.push(this.dropViewSql(view));\n                        _d = (_c = downQueries).push;\n                        return [4 /*yield*/, this.insertViewDefinitionSql(view)];\n                    case 3:\n                        _d.apply(_c, [_e.sent()]);\n                        downQueries.push(this.createViewSql(view));\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _e.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames the given table.\n     */\n    PostgresQueryRunner.prototype.renameTable = function (oldTableOrName, newTableName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var upQueries, downQueries, oldTable, _a, newTable, _b, schemaName, oldTableName, columnNames, oldPkName, newPkName, enumColumns, enumColumns_2, enumColumns_2_1, column, oldEnumType, e_2_1;\n            var e_2, _c;\n            var _this = this;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        upQueries = [];\n                        downQueries = [];\n                        if (!(oldTableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = oldTableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(oldTableOrName)];\n                    case 2:\n                        _a = _d.sent();\n                        _d.label = 3;\n                    case 3:\n                        oldTable = _a;\n                        newTable = oldTable.clone();\n                        _b = this.driver.parseTableName(oldTable), schemaName = _b.schema, oldTableName = _b.tableName;\n                        newTable.name = schemaName ? schemaName + \".\" + newTableName : newTableName;\n                        upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(oldTable) + \" RENAME TO \\\"\" + newTableName + \"\\\"\"));\n                        downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(newTable) + \" RENAME TO \\\"\" + oldTableName + \"\\\"\"));\n                        // rename column primary key constraint\n                        if (newTable.primaryColumns.length > 0) {\n                            columnNames = newTable.primaryColumns.map(function (column) { return column.name; });\n                            oldPkName = this.connection.namingStrategy.primaryKeyName(oldTable, columnNames);\n                            newPkName = this.connection.namingStrategy.primaryKeyName(newTable, columnNames);\n                            upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(newTable) + \" RENAME CONSTRAINT \\\"\" + oldPkName + \"\\\" TO \\\"\" + newPkName + \"\\\"\"));\n                            downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(newTable) + \" RENAME CONSTRAINT \\\"\" + newPkName + \"\\\" TO \\\"\" + oldPkName + \"\\\"\"));\n                        }\n                        // rename sequences\n                        newTable.columns.map(function (col) {\n                            if (col.isGenerated && col.generationStrategy === \"increment\") {\n                                var sequencePath = _this.buildSequencePath(oldTable, col.name);\n                                var sequenceName = _this.buildSequenceName(oldTable, col.name);\n                                var newSequencePath = _this.buildSequencePath(newTable, col.name);\n                                var newSequenceName = _this.buildSequenceName(newTable, col.name);\n                                var up = \"ALTER SEQUENCE \" + _this.escapePath(sequencePath) + \" RENAME TO \\\"\" + newSequenceName + \"\\\"\";\n                                var down = \"ALTER SEQUENCE \" + _this.escapePath(newSequencePath) + \" RENAME TO \\\"\" + sequenceName + \"\\\"\";\n                                upQueries.push(new Query(up));\n                                downQueries.push(new Query(down));\n                            }\n                        });\n                        // rename unique constraints\n                        newTable.uniques.forEach(function (unique) {\n                            // build new constraint name\n                            var newUniqueName = _this.connection.namingStrategy.uniqueConstraintName(newTable, unique.columnNames);\n                            // build queries\n                            upQueries.push(new Query(\"ALTER TABLE \" + _this.escapePath(newTable) + \" RENAME CONSTRAINT \\\"\" + unique.name + \"\\\" TO \\\"\" + newUniqueName + \"\\\"\"));\n                            downQueries.push(new Query(\"ALTER TABLE \" + _this.escapePath(newTable) + \" RENAME CONSTRAINT \\\"\" + newUniqueName + \"\\\" TO \\\"\" + unique.name + \"\\\"\"));\n                            // replace constraint name\n                            unique.name = newUniqueName;\n                        });\n                        // rename index constraints\n                        newTable.indices.forEach(function (index) {\n                            // build new constraint name\n                            var schema = _this.driver.parseTableName(newTable).schema;\n                            var newIndexName = _this.connection.namingStrategy.indexName(newTable, index.columnNames, index.where);\n                            // build queries\n                            var up = schema ? \"ALTER INDEX \\\"\" + schema + \"\\\".\\\"\" + index.name + \"\\\" RENAME TO \\\"\" + newIndexName + \"\\\"\" : \"ALTER INDEX \\\"\" + index.name + \"\\\" RENAME TO \\\"\" + newIndexName + \"\\\"\";\n                            var down = schema ? \"ALTER INDEX \\\"\" + schema + \"\\\".\\\"\" + newIndexName + \"\\\" RENAME TO \\\"\" + index.name + \"\\\"\" : \"ALTER INDEX \\\"\" + newIndexName + \"\\\" RENAME TO \\\"\" + index.name + \"\\\"\";\n                            upQueries.push(new Query(up));\n                            downQueries.push(new Query(down));\n                            // replace constraint name\n                            index.name = newIndexName;\n                        });\n                        // rename foreign key constraints\n                        newTable.foreignKeys.forEach(function (foreignKey) {\n                            // build new constraint name\n                            var newForeignKeyName = _this.connection.namingStrategy.foreignKeyName(newTable, foreignKey.columnNames, _this.getTablePath(foreignKey), foreignKey.referencedColumnNames);\n                            // build queries\n                            upQueries.push(new Query(\"ALTER TABLE \" + _this.escapePath(newTable) + \" RENAME CONSTRAINT \\\"\" + foreignKey.name + \"\\\" TO \\\"\" + newForeignKeyName + \"\\\"\"));\n                            downQueries.push(new Query(\"ALTER TABLE \" + _this.escapePath(newTable) + \" RENAME CONSTRAINT \\\"\" + newForeignKeyName + \"\\\" TO \\\"\" + foreignKey.name + \"\\\"\"));\n                            // replace constraint name\n                            foreignKey.name = newForeignKeyName;\n                        });\n                        enumColumns = newTable.columns.filter(function (column) { return column.type === \"enum\" || column.type === \"simple-enum\"; });\n                        _d.label = 4;\n                    case 4:\n                        _d.trys.push([4, 9, 10, 11]);\n                        enumColumns_2 = __values(enumColumns), enumColumns_2_1 = enumColumns_2.next();\n                        _d.label = 5;\n                    case 5:\n                        if (!!enumColumns_2_1.done) return [3 /*break*/, 8];\n                        column = enumColumns_2_1.value;\n                        // skip renaming for user-defined enum name\n                        if (column.enumName)\n                            return [3 /*break*/, 7];\n                        return [4 /*yield*/, this.getUserDefinedTypeName(oldTable, column)];\n                    case 6:\n                        oldEnumType = _d.sent();\n                        upQueries.push(new Query(\"ALTER TYPE \\\"\" + oldEnumType.schema + \"\\\".\\\"\" + oldEnumType.name + \"\\\" RENAME TO \" + this.buildEnumName(newTable, column, false)));\n                        downQueries.push(new Query(\"ALTER TYPE \" + this.buildEnumName(newTable, column) + \" RENAME TO \\\"\" + oldEnumType.name + \"\\\"\"));\n                        _d.label = 7;\n                    case 7:\n                        enumColumns_2_1 = enumColumns_2.next();\n                        return [3 /*break*/, 5];\n                    case 8: return [3 /*break*/, 11];\n                    case 9:\n                        e_2_1 = _d.sent();\n                        e_2 = { error: e_2_1 };\n                        return [3 /*break*/, 11];\n                    case 10:\n                        try {\n                            if (enumColumns_2_1 && !enumColumns_2_1.done && (_c = enumColumns_2.return)) _c.call(enumColumns_2);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                        return [7 /*endfinally*/];\n                    case 11: return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 12:\n                        _d.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new column from the column in the table.\n     */\n    PostgresQueryRunner.prototype.addColumn = function (tableOrName, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, upQueries, downQueries, hasEnum, primaryColumns, pkName_1, columnNames_1, pkName, columnNames, columnIndex, uniqueConstraint;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        if (!(column.type === \"enum\" || column.type === \"simple-enum\")) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this.hasEnumType(table, column)];\n                    case 4:\n                        hasEnum = _b.sent();\n                        if (!hasEnum) {\n                            upQueries.push(this.createEnumTypeSql(table, column));\n                            downQueries.push(this.dropEnumTypeSql(table, column));\n                        }\n                        _b.label = 5;\n                    case 5:\n                        upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD \" + this.buildCreateColumnSql(table, column)));\n                        downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP COLUMN \\\"\" + column.name + \"\\\"\"));\n                        // create or update primary key constraint\n                        if (column.isPrimary) {\n                            primaryColumns = clonedTable.primaryColumns;\n                            // if table already have primary key, me must drop it and recreate again\n                            if (primaryColumns.length > 0) {\n                                pkName_1 = this.connection.namingStrategy.primaryKeyName(clonedTable, primaryColumns.map(function (column) { return column.name; }));\n                                columnNames_1 = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + pkName_1 + \"\\\"\"));\n                                downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + pkName_1 + \"\\\" PRIMARY KEY (\" + columnNames_1 + \")\"));\n                            }\n                            primaryColumns.push(column);\n                            pkName = this.connection.namingStrategy.primaryKeyName(clonedTable, primaryColumns.map(function (column) { return column.name; }));\n                            columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\"));\n                            downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\"));\n                        }\n                        columnIndex = clonedTable.indices.find(function (index) { return index.columnNames.length === 1 && index.columnNames[0] === column.name; });\n                        if (columnIndex) {\n                            upQueries.push(this.createIndexSql(table, columnIndex));\n                            downQueries.push(this.dropIndexSql(table, columnIndex));\n                        }\n                        // create unique constraint\n                        if (column.isUnique) {\n                            uniqueConstraint = new TableUnique({\n                                name: this.connection.namingStrategy.uniqueConstraintName(table, [column.name]),\n                                columnNames: [column.name]\n                            });\n                            clonedTable.uniques.push(uniqueConstraint);\n                            upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\\\"\" + column.name + \"\\\")\"));\n                            downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\"\"));\n                        }\n                        // create column's comment\n                        if (column.comment) {\n                            upQueries.push(new Query(\"COMMENT ON COLUMN \" + this.escapePath(table) + \".\\\"\" + column.name + \"\\\" IS \" + this.escapeComment(column.comment)));\n                            downQueries.push(new Query(\"COMMENT ON COLUMN \" + this.escapePath(table) + \".\\\"\" + column.name + \"\\\" IS \" + this.escapeComment(column.comment)));\n                        }\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 6:\n                        _b.sent();\n                        clonedTable.addColumn(column);\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new columns from the column in the table.\n     */\n    PostgresQueryRunner.prototype.addColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var columns_1, columns_1_1, column, e_3_1;\n            var e_3, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 5, 6, 7]);\n                        columns_1 = __values(columns), columns_1_1 = columns_1.next();\n                        _b.label = 1;\n                    case 1:\n                        if (!!columns_1_1.done) return [3 /*break*/, 4];\n                        column = columns_1_1.value;\n                        return [4 /*yield*/, this.addColumn(tableOrName, column)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        columns_1_1 = columns_1.next();\n                        return [3 /*break*/, 1];\n                    case 4: return [3 /*break*/, 7];\n                    case 5:\n                        e_3_1 = _b.sent();\n                        e_3 = { error: e_3_1 };\n                        return [3 /*break*/, 7];\n                    case 6:\n                        try {\n                            if (columns_1_1 && !columns_1_1.done && (_a = columns_1.return)) _a.call(columns_1);\n                        }\n                        finally { if (e_3) throw e_3.error; }\n                        return [7 /*endfinally*/];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Renames column in the given table.\n     */\n    PostgresQueryRunner.prototype.renameColumn = function (tableOrName, oldTableColumnOrName, newTableColumnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, oldColumn, newColumn;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        oldColumn = oldTableColumnOrName instanceof TableColumn ? oldTableColumnOrName : table.columns.find(function (c) { return c.name === oldTableColumnOrName; });\n                        if (!oldColumn)\n                            throw new TypeORMError(\"Column \\\"\" + oldTableColumnOrName + \"\\\" was not found in the \\\"\" + table.name + \"\\\" table.\");\n                        if (newTableColumnOrName instanceof TableColumn) {\n                            newColumn = newTableColumnOrName;\n                        }\n                        else {\n                            newColumn = oldColumn.clone();\n                            newColumn.name = newTableColumnOrName;\n                        }\n                        return [2 /*return*/, this.changeColumn(table, oldColumn, newColumn)];\n                }\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     */\n    PostgresQueryRunner.prototype.changeColumn = function (tableOrName, oldTableColumnOrName, newColumn) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, upQueries, downQueries, defaultValueChanged, oldColumn, oldEnumType, primaryColumns, columnNames, oldPkName, newPkName, sequencePath, sequenceName, newSequencePath, newSequenceName, up, down, oldTableColumn, arraySuffix, newEnumName, oldEnumName, oldEnumNameWithoutSchema, oldEnumNameWithSchema_old, oldEnumNameWithoutSchema_old, upType, downType, primaryColumns, pkName, columnNames, column, pkName, columnNames, primaryColumn, column, pkName, columnNames, uniqueConstraint, uniqueConstraint;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        defaultValueChanged = false;\n                        oldColumn = oldTableColumnOrName instanceof TableColumn\n                            ? oldTableColumnOrName\n                            : table.columns.find(function (column) { return column.name === oldTableColumnOrName; });\n                        if (!oldColumn)\n                            throw new TypeORMError(\"Column \\\"\" + oldTableColumnOrName + \"\\\" was not found in the \\\"\" + table.name + \"\\\" table.\");\n                        if (!(oldColumn.type !== newColumn.type || oldColumn.length !== newColumn.length || newColumn.isArray !== oldColumn.isArray)) return [3 /*break*/, 6];\n                        // To avoid data conversion, we just recreate column\n                        return [4 /*yield*/, this.dropColumn(table, oldColumn)];\n                    case 4:\n                        // To avoid data conversion, we just recreate column\n                        _b.sent();\n                        return [4 /*yield*/, this.addColumn(table, newColumn)];\n                    case 5:\n                        _b.sent();\n                        // update cloned table\n                        clonedTable = table.clone();\n                        return [3 /*break*/, 10];\n                    case 6:\n                        if (!(oldColumn.name !== newColumn.name)) return [3 /*break*/, 9];\n                        // rename column\n                        upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" RENAME COLUMN \\\"\" + oldColumn.name + \"\\\" TO \\\"\" + newColumn.name + \"\\\"\"));\n                        downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" RENAME COLUMN \\\"\" + newColumn.name + \"\\\" TO \\\"\" + oldColumn.name + \"\\\"\"));\n                        if (!(oldColumn.type === \"enum\" || oldColumn.type === \"simple-enum\")) return [3 /*break*/, 8];\n                        return [4 /*yield*/, this.getUserDefinedTypeName(table, oldColumn)];\n                    case 7:\n                        oldEnumType = _b.sent();\n                        upQueries.push(new Query(\"ALTER TYPE \\\"\" + oldEnumType.schema + \"\\\".\\\"\" + oldEnumType.name + \"\\\" RENAME TO \" + this.buildEnumName(table, newColumn, false)));\n                        downQueries.push(new Query(\"ALTER TYPE \" + this.buildEnumName(table, newColumn) + \" RENAME TO \\\"\" + oldEnumType.name + \"\\\"\"));\n                        _b.label = 8;\n                    case 8:\n                        // rename column primary key constraint\n                        if (oldColumn.isPrimary === true) {\n                            primaryColumns = clonedTable.primaryColumns;\n                            columnNames = primaryColumns.map(function (column) { return column.name; });\n                            oldPkName = this.connection.namingStrategy.primaryKeyName(clonedTable, columnNames);\n                            // replace old column name with new column name\n                            columnNames.splice(columnNames.indexOf(oldColumn.name), 1);\n                            columnNames.push(newColumn.name);\n                            newPkName = this.connection.namingStrategy.primaryKeyName(clonedTable, columnNames);\n                            upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" RENAME CONSTRAINT \\\"\" + oldPkName + \"\\\" TO \\\"\" + newPkName + \"\\\"\"));\n                            downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" RENAME CONSTRAINT \\\"\" + newPkName + \"\\\" TO \\\"\" + oldPkName + \"\\\"\"));\n                        }\n                        // rename column sequence\n                        if (oldColumn.isGenerated === true && newColumn.generationStrategy === \"increment\") {\n                            sequencePath = this.buildSequencePath(table, oldColumn.name);\n                            sequenceName = this.buildSequenceName(table, oldColumn.name);\n                            newSequencePath = this.buildSequencePath(table, newColumn.name);\n                            newSequenceName = this.buildSequenceName(table, newColumn.name);\n                            up = \"ALTER SEQUENCE \" + this.escapePath(sequencePath) + \" RENAME TO \\\"\" + newSequenceName + \"\\\"\";\n                            down = \"ALTER SEQUENCE \" + this.escapePath(newSequencePath) + \" RENAME TO \\\"\" + sequenceName + \"\\\"\";\n                            upQueries.push(new Query(up));\n                            downQueries.push(new Query(down));\n                        }\n                        // rename unique constraints\n                        clonedTable.findColumnUniques(oldColumn).forEach(function (unique) {\n                            // build new constraint name\n                            unique.columnNames.splice(unique.columnNames.indexOf(oldColumn.name), 1);\n                            unique.columnNames.push(newColumn.name);\n                            var newUniqueName = _this.connection.namingStrategy.uniqueConstraintName(clonedTable, unique.columnNames);\n                            // build queries\n                            upQueries.push(new Query(\"ALTER TABLE \" + _this.escapePath(table) + \" RENAME CONSTRAINT \\\"\" + unique.name + \"\\\" TO \\\"\" + newUniqueName + \"\\\"\"));\n                            downQueries.push(new Query(\"ALTER TABLE \" + _this.escapePath(table) + \" RENAME CONSTRAINT \\\"\" + newUniqueName + \"\\\" TO \\\"\" + unique.name + \"\\\"\"));\n                            // replace constraint name\n                            unique.name = newUniqueName;\n                        });\n                        // rename index constraints\n                        clonedTable.findColumnIndices(oldColumn).forEach(function (index) {\n                            // build new constraint name\n                            index.columnNames.splice(index.columnNames.indexOf(oldColumn.name), 1);\n                            index.columnNames.push(newColumn.name);\n                            var schema = _this.driver.parseTableName(table).schema;\n                            var newIndexName = _this.connection.namingStrategy.indexName(clonedTable, index.columnNames, index.where);\n                            // build queries\n                            var up = schema ? \"ALTER INDEX \\\"\" + schema + \"\\\".\\\"\" + index.name + \"\\\" RENAME TO \\\"\" + newIndexName + \"\\\"\" : \"ALTER INDEX \\\"\" + index.name + \"\\\" RENAME TO \\\"\" + newIndexName + \"\\\"\";\n                            var down = schema ? \"ALTER INDEX \\\"\" + schema + \"\\\".\\\"\" + newIndexName + \"\\\" RENAME TO \\\"\" + index.name + \"\\\"\" : \"ALTER INDEX \\\"\" + newIndexName + \"\\\" RENAME TO \\\"\" + index.name + \"\\\"\";\n                            upQueries.push(new Query(up));\n                            downQueries.push(new Query(down));\n                            // replace constraint name\n                            index.name = newIndexName;\n                        });\n                        // rename foreign key constraints\n                        clonedTable.findColumnForeignKeys(oldColumn).forEach(function (foreignKey) {\n                            // build new constraint name\n                            foreignKey.columnNames.splice(foreignKey.columnNames.indexOf(oldColumn.name), 1);\n                            foreignKey.columnNames.push(newColumn.name);\n                            var newForeignKeyName = _this.connection.namingStrategy.foreignKeyName(clonedTable, foreignKey.columnNames, _this.getTablePath(foreignKey), foreignKey.referencedColumnNames);\n                            // build queries\n                            upQueries.push(new Query(\"ALTER TABLE \" + _this.escapePath(table) + \" RENAME CONSTRAINT \\\"\" + foreignKey.name + \"\\\" TO \\\"\" + newForeignKeyName + \"\\\"\"));\n                            downQueries.push(new Query(\"ALTER TABLE \" + _this.escapePath(table) + \" RENAME CONSTRAINT \\\"\" + newForeignKeyName + \"\\\" TO \\\"\" + foreignKey.name + \"\\\"\"));\n                            // replace constraint name\n                            foreignKey.name = newForeignKeyName;\n                        });\n                        oldTableColumn = clonedTable.columns.find(function (column) { return column.name === oldColumn.name; });\n                        clonedTable.columns[clonedTable.columns.indexOf(oldTableColumn)].name = newColumn.name;\n                        oldColumn.name = newColumn.name;\n                        _b.label = 9;\n                    case 9:\n                        if (newColumn.precision !== oldColumn.precision || newColumn.scale !== oldColumn.scale) {\n                            upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" TYPE \" + this.driver.createFullType(newColumn)));\n                            downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" TYPE \" + this.driver.createFullType(oldColumn)));\n                        }\n                        if ((newColumn.type === \"enum\" || newColumn.type === \"simple-enum\")\n                            && (oldColumn.type === \"enum\" || oldColumn.type === \"simple-enum\")\n                            && (!OrmUtils.isArraysEqual(newColumn.enum, oldColumn.enum) || newColumn.enumName !== oldColumn.enumName)) {\n                            arraySuffix = newColumn.isArray ? \"[]\" : \"\";\n                            newEnumName = this.buildEnumName(table, newColumn);\n                            oldEnumName = this.buildEnumName(table, oldColumn);\n                            oldEnumNameWithoutSchema = this.buildEnumName(table, oldColumn, false);\n                            oldEnumNameWithSchema_old = this.buildEnumName(table, oldColumn, true, false, true);\n                            oldEnumNameWithoutSchema_old = this.buildEnumName(table, oldColumn, false, false, true);\n                            // rename old ENUM\n                            upQueries.push(new Query(\"ALTER TYPE \" + oldEnumName + \" RENAME TO \" + oldEnumNameWithoutSchema_old));\n                            downQueries.push(new Query(\"ALTER TYPE \" + oldEnumNameWithSchema_old + \" RENAME TO \" + oldEnumNameWithoutSchema));\n                            // create new ENUM\n                            upQueries.push(this.createEnumTypeSql(table, newColumn, newEnumName));\n                            downQueries.push(this.dropEnumTypeSql(table, newColumn, newEnumName));\n                            // if column have default value, we must drop it to avoid issues with type casting\n                            if (oldColumn.default !== null && oldColumn.default !== undefined) {\n                                // mark default as changed to prevent double update\n                                defaultValueChanged = true;\n                                upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + oldColumn.name + \"\\\" DROP DEFAULT\"));\n                                downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + oldColumn.name + \"\\\" SET DEFAULT \" + oldColumn.default));\n                            }\n                            upType = \"\" + newEnumName + arraySuffix + \" USING \\\"\" + newColumn.name + \"\\\"::\\\"text\\\"::\" + newEnumName + arraySuffix;\n                            downType = \"\" + oldEnumNameWithSchema_old + arraySuffix + \" USING \\\"\" + newColumn.name + \"\\\"::\\\"text\\\"::\" + oldEnumNameWithSchema_old + arraySuffix;\n                            // update column to use new type\n                            upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" TYPE \" + upType));\n                            downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" TYPE \" + downType));\n                            // restore column default or create new one\n                            if (newColumn.default !== null && newColumn.default !== undefined) {\n                                upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" SET DEFAULT \" + newColumn.default));\n                                downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" DROP DEFAULT\"));\n                            }\n                            // remove old ENUM\n                            upQueries.push(this.dropEnumTypeSql(table, oldColumn, oldEnumNameWithSchema_old));\n                            downQueries.push(this.createEnumTypeSql(table, oldColumn, oldEnumNameWithSchema_old));\n                        }\n                        if (oldColumn.isNullable !== newColumn.isNullable) {\n                            if (newColumn.isNullable) {\n                                upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + oldColumn.name + \"\\\" DROP NOT NULL\"));\n                                downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + oldColumn.name + \"\\\" SET NOT NULL\"));\n                            }\n                            else {\n                                upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + oldColumn.name + \"\\\" SET NOT NULL\"));\n                                downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + oldColumn.name + \"\\\" DROP NOT NULL\"));\n                            }\n                        }\n                        if (oldColumn.comment !== newColumn.comment) {\n                            upQueries.push(new Query(\"COMMENT ON COLUMN \" + this.escapePath(table) + \".\\\"\" + oldColumn.name + \"\\\" IS \" + this.escapeComment(newColumn.comment)));\n                            downQueries.push(new Query(\"COMMENT ON COLUMN \" + this.escapePath(table) + \".\\\"\" + newColumn.name + \"\\\" IS \" + this.escapeComment(oldColumn.comment)));\n                        }\n                        if (newColumn.isPrimary !== oldColumn.isPrimary) {\n                            primaryColumns = clonedTable.primaryColumns;\n                            // if primary column state changed, we must always drop existed constraint.\n                            if (primaryColumns.length > 0) {\n                                pkName = this.connection.namingStrategy.primaryKeyName(clonedTable, primaryColumns.map(function (column) { return column.name; }));\n                                columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\"));\n                                downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\"));\n                            }\n                            if (newColumn.isPrimary === true) {\n                                primaryColumns.push(newColumn);\n                                column = clonedTable.columns.find(function (column) { return column.name === newColumn.name; });\n                                column.isPrimary = true;\n                                pkName = this.connection.namingStrategy.primaryKeyName(clonedTable, primaryColumns.map(function (column) { return column.name; }));\n                                columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\"));\n                                downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\"));\n                            }\n                            else {\n                                primaryColumn = primaryColumns.find(function (c) { return c.name === newColumn.name; });\n                                primaryColumns.splice(primaryColumns.indexOf(primaryColumn), 1);\n                                column = clonedTable.columns.find(function (column) { return column.name === newColumn.name; });\n                                column.isPrimary = false;\n                                // if we have another primary keys, we must recreate constraint.\n                                if (primaryColumns.length > 0) {\n                                    pkName = this.connection.namingStrategy.primaryKeyName(clonedTable, primaryColumns.map(function (column) { return column.name; }));\n                                    columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                                    upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\"));\n                                    downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\"));\n                                }\n                            }\n                        }\n                        if (newColumn.isUnique !== oldColumn.isUnique) {\n                            if (newColumn.isUnique === true) {\n                                uniqueConstraint = new TableUnique({\n                                    name: this.connection.namingStrategy.uniqueConstraintName(table, [newColumn.name]),\n                                    columnNames: [newColumn.name]\n                                });\n                                clonedTable.uniques.push(uniqueConstraint);\n                                upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\\\"\" + newColumn.name + \"\\\")\"));\n                                downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\"\"));\n                            }\n                            else {\n                                uniqueConstraint = clonedTable.uniques.find(function (unique) {\n                                    return unique.columnNames.length === 1 && !!unique.columnNames.find(function (columnName) { return columnName === newColumn.name; });\n                                });\n                                clonedTable.uniques.splice(clonedTable.uniques.indexOf(uniqueConstraint), 1);\n                                upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\"\"));\n                                downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\\\"\" + newColumn.name + \"\\\")\"));\n                            }\n                        }\n                        if (oldColumn.isGenerated !== newColumn.isGenerated &&\n                            newColumn.generationStrategy !== \"uuid\" &&\n                            newColumn.generationStrategy !== \"identity\") {\n                            if (newColumn.isGenerated === true) {\n                                upQueries.push(new Query(\"CREATE SEQUENCE IF NOT EXISTS \" + this.escapePath(this.buildSequencePath(table, newColumn)) + \" OWNED BY \" + this.escapePath(table) + \".\\\"\" + newColumn.name + \"\\\"\"));\n                                downQueries.push(new Query(\"DROP SEQUENCE \" + this.escapePath(this.buildSequencePath(table, newColumn))));\n                                upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" SET DEFAULT nextval('\" + this.escapePath(this.buildSequencePath(table, newColumn)) + \"')\"));\n                                downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" DROP DEFAULT\"));\n                            }\n                            else {\n                                upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" DROP DEFAULT\"));\n                                downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" SET DEFAULT nextval('\" + this.escapePath(this.buildSequencePath(table, newColumn)) + \"')\"));\n                                upQueries.push(new Query(\"DROP SEQUENCE \" + this.escapePath(this.buildSequencePath(table, newColumn))));\n                                downQueries.push(new Query(\"CREATE SEQUENCE IF NOT EXISTS \" + this.escapePath(this.buildSequencePath(table, newColumn)) + \" OWNED BY \" + this.escapePath(table) + \".\\\"\" + newColumn.name + \"\\\"\"));\n                            }\n                        }\n                        // the default might have changed when the enum changed\n                        if (newColumn.default !== oldColumn.default && !defaultValueChanged) {\n                            if (newColumn.default !== null && newColumn.default !== undefined) {\n                                upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" SET DEFAULT \" + newColumn.default));\n                                if (oldColumn.default !== null && oldColumn.default !== undefined) {\n                                    downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" SET DEFAULT \" + oldColumn.default));\n                                }\n                                else {\n                                    downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" DROP DEFAULT\"));\n                                }\n                            }\n                            else if (oldColumn.default !== null && oldColumn.default !== undefined) {\n                                upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" DROP DEFAULT\"));\n                                downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" SET DEFAULT \" + oldColumn.default));\n                            }\n                        }\n                        if ((newColumn.spatialFeatureType || \"\").toLowerCase() !== (oldColumn.spatialFeatureType || \"\").toLowerCase() || newColumn.srid !== oldColumn.srid) {\n                            upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" TYPE \" + this.driver.createFullType(newColumn)));\n                            downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ALTER COLUMN \\\"\" + newColumn.name + \"\\\" TYPE \" + this.driver.createFullType(oldColumn)));\n                        }\n                        _b.label = 10;\n                    case 10: return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 11:\n                        _b.sent();\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Changes a column in the table.\n     */\n    PostgresQueryRunner.prototype.changeColumns = function (tableOrName, changedColumns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var changedColumns_1, changedColumns_1_1, _a, oldColumn, newColumn, e_4_1;\n            var e_4, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _c.trys.push([0, 5, 6, 7]);\n                        changedColumns_1 = __values(changedColumns), changedColumns_1_1 = changedColumns_1.next();\n                        _c.label = 1;\n                    case 1:\n                        if (!!changedColumns_1_1.done) return [3 /*break*/, 4];\n                        _a = changedColumns_1_1.value, oldColumn = _a.oldColumn, newColumn = _a.newColumn;\n                        return [4 /*yield*/, this.changeColumn(tableOrName, oldColumn, newColumn)];\n                    case 2:\n                        _c.sent();\n                        _c.label = 3;\n                    case 3:\n                        changedColumns_1_1 = changedColumns_1.next();\n                        return [3 /*break*/, 1];\n                    case 4: return [3 /*break*/, 7];\n                    case 5:\n                        e_4_1 = _c.sent();\n                        e_4 = { error: e_4_1 };\n                        return [3 /*break*/, 7];\n                    case 6:\n                        try {\n                            if (changedColumns_1_1 && !changedColumns_1_1.done && (_b = changedColumns_1.return)) _b.call(changedColumns_1);\n                        }\n                        finally { if (e_4) throw e_4.error; }\n                        return [7 /*endfinally*/];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops column in the table.\n     */\n    PostgresQueryRunner.prototype.dropColumn = function (tableOrName, columnOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, column, clonedTable, upQueries, downQueries, pkName, columnNames, tableColumn, pkName_2, columnNames_2, columnIndex, columnCheck, columnUnique, hasEnum, enumType, escapedEnumName;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        column = columnOrName instanceof TableColumn ? columnOrName : table.findColumnByName(columnOrName);\n                        if (!column)\n                            throw new TypeORMError(\"Column \\\"\" + columnOrName + \"\\\" was not found in table \\\"\" + table.name + \"\\\"\");\n                        clonedTable = table.clone();\n                        upQueries = [];\n                        downQueries = [];\n                        // drop primary key constraint\n                        if (column.isPrimary) {\n                            pkName = this.connection.namingStrategy.primaryKeyName(clonedTable, clonedTable.primaryColumns.map(function (column) { return column.name; }));\n                            columnNames = clonedTable.primaryColumns.map(function (primaryColumn) { return \"\\\"\" + primaryColumn.name + \"\\\"\"; }).join(\", \");\n                            upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(clonedTable) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\"));\n                            downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(clonedTable) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNames + \")\"));\n                            tableColumn = clonedTable.findColumnByName(column.name);\n                            tableColumn.isPrimary = false;\n                            // if primary key have multiple columns, we must recreate it without dropped column\n                            if (clonedTable.primaryColumns.length > 0) {\n                                pkName_2 = this.connection.namingStrategy.primaryKeyName(clonedTable, clonedTable.primaryColumns.map(function (column) { return column.name; }));\n                                columnNames_2 = clonedTable.primaryColumns.map(function (primaryColumn) { return \"\\\"\" + primaryColumn.name + \"\\\"\"; }).join(\", \");\n                                upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(clonedTable) + \" ADD CONSTRAINT \\\"\" + pkName_2 + \"\\\" PRIMARY KEY (\" + columnNames_2 + \")\"));\n                                downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(clonedTable) + \" DROP CONSTRAINT \\\"\" + pkName_2 + \"\\\"\"));\n                            }\n                        }\n                        columnIndex = clonedTable.indices.find(function (index) { return index.columnNames.length === 1 && index.columnNames[0] === column.name; });\n                        if (columnIndex) {\n                            clonedTable.indices.splice(clonedTable.indices.indexOf(columnIndex), 1);\n                            upQueries.push(this.dropIndexSql(table, columnIndex));\n                            downQueries.push(this.createIndexSql(table, columnIndex));\n                        }\n                        columnCheck = clonedTable.checks.find(function (check) { return !!check.columnNames && check.columnNames.length === 1 && check.columnNames[0] === column.name; });\n                        if (columnCheck) {\n                            clonedTable.checks.splice(clonedTable.checks.indexOf(columnCheck), 1);\n                            upQueries.push(this.dropCheckConstraintSql(table, columnCheck));\n                            downQueries.push(this.createCheckConstraintSql(table, columnCheck));\n                        }\n                        columnUnique = clonedTable.uniques.find(function (unique) { return unique.columnNames.length === 1 && unique.columnNames[0] === column.name; });\n                        if (columnUnique) {\n                            clonedTable.uniques.splice(clonedTable.uniques.indexOf(columnUnique), 1);\n                            upQueries.push(this.dropUniqueConstraintSql(table, columnUnique));\n                            downQueries.push(this.createUniqueConstraintSql(table, columnUnique));\n                        }\n                        upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP COLUMN \\\"\" + column.name + \"\\\"\"));\n                        downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD \" + this.buildCreateColumnSql(table, column)));\n                        if (!(column.type === \"enum\" || column.type === \"simple-enum\")) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.hasEnumType(table, column)];\n                    case 4:\n                        hasEnum = _b.sent();\n                        if (!hasEnum) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.getUserDefinedTypeName(table, column)];\n                    case 5:\n                        enumType = _b.sent();\n                        escapedEnumName = \"\\\"\" + enumType.schema + \"\\\".\\\"\" + enumType.name + \"\\\"\";\n                        upQueries.push(this.dropEnumTypeSql(table, column, escapedEnumName));\n                        downQueries.push(this.createEnumTypeSql(table, column, escapedEnumName));\n                        _b.label = 6;\n                    case 6: return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 7:\n                        _b.sent();\n                        clonedTable.removeColumn(column);\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the columns in the table.\n     */\n    PostgresQueryRunner.prototype.dropColumns = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var columns_2, columns_2_1, column, e_5_1;\n            var e_5, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 5, 6, 7]);\n                        columns_2 = __values(columns), columns_2_1 = columns_2.next();\n                        _b.label = 1;\n                    case 1:\n                        if (!!columns_2_1.done) return [3 /*break*/, 4];\n                        column = columns_2_1.value;\n                        return [4 /*yield*/, this.dropColumn(tableOrName, column)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        columns_2_1 = columns_2.next();\n                        return [3 /*break*/, 1];\n                    case 4: return [3 /*break*/, 7];\n                    case 5:\n                        e_5_1 = _b.sent();\n                        e_5 = { error: e_5_1 };\n                        return [3 /*break*/, 7];\n                    case 6:\n                        try {\n                            if (columns_2_1 && !columns_2_1.done && (_a = columns_2.return)) _a.call(columns_2);\n                        }\n                        finally { if (e_5) throw e_5.error; }\n                        return [7 /*endfinally*/];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new primary key.\n     */\n    PostgresQueryRunner.prototype.createPrimaryKey = function (tableOrName, columnNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        up = this.createPrimaryKeySql(table, columnNames);\n                        // mark columns as primary, because dropPrimaryKeySql build constraint name from table primary column names.\n                        clonedTable.columns.forEach(function (column) {\n                            if (columnNames.find(function (columnName) { return columnName === column.name; }))\n                                column.isPrimary = true;\n                        });\n                        down = this.dropPrimaryKeySql(clonedTable);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates composite primary keys.\n     */\n    PostgresQueryRunner.prototype.updatePrimaryKeys = function (tableOrName, columns) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, clonedTable, columnNames, upQueries, downQueries, primaryColumns, pkName_3, columnNamesString_1, pkName, columnNamesString;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        clonedTable = table.clone();\n                        columnNames = columns.map(function (column) { return column.name; });\n                        upQueries = [];\n                        downQueries = [];\n                        primaryColumns = clonedTable.primaryColumns;\n                        if (primaryColumns.length > 0) {\n                            pkName_3 = this.connection.namingStrategy.primaryKeyName(clonedTable, primaryColumns.map(function (column) { return column.name; }));\n                            columnNamesString_1 = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n                            upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + pkName_3 + \"\\\"\"));\n                            downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + pkName_3 + \"\\\" PRIMARY KEY (\" + columnNamesString_1 + \")\"));\n                        }\n                        // update columns in table.\n                        clonedTable.columns\n                            .filter(function (column) { return columnNames.indexOf(column.name) !== -1; })\n                            .forEach(function (column) { return column.isPrimary = true; });\n                        pkName = this.connection.namingStrategy.primaryKeyName(clonedTable, columnNames);\n                        columnNamesString = columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                        upQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + pkName + \"\\\" PRIMARY KEY (\" + columnNamesString + \")\"));\n                        downQueries.push(new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + pkName + \"\\\"\"));\n                        return [4 /*yield*/, this.executeQueries(upQueries, downQueries)];\n                    case 4:\n                        _b.sent();\n                        this.replaceCachedTable(table, clonedTable);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a primary key.\n     */\n    PostgresQueryRunner.prototype.dropPrimaryKey = function (tableOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        up = this.dropPrimaryKeySql(table);\n                        down = this.createPrimaryKeySql(table, table.primaryColumns.map(function (column) { return column.name; }));\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.primaryColumns.forEach(function (column) {\n                            column.isPrimary = false;\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new unique constraint.\n     */\n    PostgresQueryRunner.prototype.createUniqueConstraint = function (tableOrName, uniqueConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new unique constraint may be passed without name. In this case we generate unique name manually.\n                        if (!uniqueConstraint.name)\n                            uniqueConstraint.name = this.connection.namingStrategy.uniqueConstraintName(table, uniqueConstraint.columnNames);\n                        up = this.createUniqueConstraintSql(table, uniqueConstraint);\n                        down = this.dropUniqueConstraintSql(table, uniqueConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addUniqueConstraint(uniqueConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new unique constraints.\n     */\n    PostgresQueryRunner.prototype.createUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var uniqueConstraints_1, uniqueConstraints_1_1, uniqueConstraint, e_6_1;\n            var e_6, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 5, 6, 7]);\n                        uniqueConstraints_1 = __values(uniqueConstraints), uniqueConstraints_1_1 = uniqueConstraints_1.next();\n                        _b.label = 1;\n                    case 1:\n                        if (!!uniqueConstraints_1_1.done) return [3 /*break*/, 4];\n                        uniqueConstraint = uniqueConstraints_1_1.value;\n                        return [4 /*yield*/, this.createUniqueConstraint(tableOrName, uniqueConstraint)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        uniqueConstraints_1_1 = uniqueConstraints_1.next();\n                        return [3 /*break*/, 1];\n                    case 4: return [3 /*break*/, 7];\n                    case 5:\n                        e_6_1 = _b.sent();\n                        e_6 = { error: e_6_1 };\n                        return [3 /*break*/, 7];\n                    case 6:\n                        try {\n                            if (uniqueConstraints_1_1 && !uniqueConstraints_1_1.done && (_a = uniqueConstraints_1.return)) _a.call(uniqueConstraints_1);\n                        }\n                        finally { if (e_6) throw e_6.error; }\n                        return [7 /*endfinally*/];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops unique constraint.\n     */\n    PostgresQueryRunner.prototype.dropUniqueConstraint = function (tableOrName, uniqueOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, uniqueConstraint, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        uniqueConstraint = uniqueOrName instanceof TableUnique ? uniqueOrName : table.uniques.find(function (u) { return u.name === uniqueOrName; });\n                        if (!uniqueConstraint)\n                            throw new TypeORMError(\"Supplied unique constraint was not found in table \" + table.name);\n                        up = this.dropUniqueConstraintSql(table, uniqueConstraint);\n                        down = this.createUniqueConstraintSql(table, uniqueConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeUniqueConstraint(uniqueConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops unique constraints.\n     */\n    PostgresQueryRunner.prototype.dropUniqueConstraints = function (tableOrName, uniqueConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var uniqueConstraints_2, uniqueConstraints_2_1, uniqueConstraint, e_7_1;\n            var e_7, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 5, 6, 7]);\n                        uniqueConstraints_2 = __values(uniqueConstraints), uniqueConstraints_2_1 = uniqueConstraints_2.next();\n                        _b.label = 1;\n                    case 1:\n                        if (!!uniqueConstraints_2_1.done) return [3 /*break*/, 4];\n                        uniqueConstraint = uniqueConstraints_2_1.value;\n                        return [4 /*yield*/, this.dropUniqueConstraint(tableOrName, uniqueConstraint)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        uniqueConstraints_2_1 = uniqueConstraints_2.next();\n                        return [3 /*break*/, 1];\n                    case 4: return [3 /*break*/, 7];\n                    case 5:\n                        e_7_1 = _b.sent();\n                        e_7 = { error: e_7_1 };\n                        return [3 /*break*/, 7];\n                    case 6:\n                        try {\n                            if (uniqueConstraints_2_1 && !uniqueConstraints_2_1.done && (_a = uniqueConstraints_2.return)) _a.call(uniqueConstraints_2);\n                        }\n                        finally { if (e_7) throw e_7.error; }\n                        return [7 /*endfinally*/];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new check constraint.\n     */\n    PostgresQueryRunner.prototype.createCheckConstraint = function (tableOrName, checkConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new unique constraint may be passed without name. In this case we generate unique name manually.\n                        if (!checkConstraint.name)\n                            checkConstraint.name = this.connection.namingStrategy.checkConstraintName(table, checkConstraint.expression);\n                        up = this.createCheckConstraintSql(table, checkConstraint);\n                        down = this.dropCheckConstraintSql(table, checkConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addCheckConstraint(checkConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new check constraints.\n     */\n    PostgresQueryRunner.prototype.createCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promises;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = checkConstraints.map(function (checkConstraint) { return _this.createCheckConstraint(tableOrName, checkConstraint); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops check constraint.\n     */\n    PostgresQueryRunner.prototype.dropCheckConstraint = function (tableOrName, checkOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, checkConstraint, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        checkConstraint = checkOrName instanceof TableCheck ? checkOrName : table.checks.find(function (c) { return c.name === checkOrName; });\n                        if (!checkConstraint)\n                            throw new TypeORMError(\"Supplied check constraint was not found in table \" + table.name);\n                        up = this.dropCheckConstraintSql(table, checkConstraint);\n                        down = this.createCheckConstraintSql(table, checkConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeCheckConstraint(checkConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops check constraints.\n     */\n    PostgresQueryRunner.prototype.dropCheckConstraints = function (tableOrName, checkConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promises;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = checkConstraints.map(function (checkConstraint) { return _this.dropCheckConstraint(tableOrName, checkConstraint); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new exclusion constraint.\n     */\n    PostgresQueryRunner.prototype.createExclusionConstraint = function (tableOrName, exclusionConstraint) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new unique constraint may be passed without name. In this case we generate unique name manually.\n                        if (!exclusionConstraint.name)\n                            exclusionConstraint.name = this.connection.namingStrategy.exclusionConstraintName(table, exclusionConstraint.expression);\n                        up = this.createExclusionConstraintSql(table, exclusionConstraint);\n                        down = this.dropExclusionConstraintSql(table, exclusionConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addExclusionConstraint(exclusionConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates new exclusion constraints.\n     */\n    PostgresQueryRunner.prototype.createExclusionConstraints = function (tableOrName, exclusionConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promises;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = exclusionConstraints.map(function (exclusionConstraint) { return _this.createExclusionConstraint(tableOrName, exclusionConstraint); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops exclusion constraint.\n     */\n    PostgresQueryRunner.prototype.dropExclusionConstraint = function (tableOrName, exclusionOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, exclusionConstraint, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        exclusionConstraint = exclusionOrName instanceof TableExclusion ? exclusionOrName : table.exclusions.find(function (c) { return c.name === exclusionOrName; });\n                        if (!exclusionConstraint)\n                            throw new TypeORMError(\"Supplied exclusion constraint was not found in table \" + table.name);\n                        up = this.dropExclusionConstraintSql(table, exclusionConstraint);\n                        down = this.createExclusionConstraintSql(table, exclusionConstraint);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeExclusionConstraint(exclusionConstraint);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops exclusion constraints.\n     */\n    PostgresQueryRunner.prototype.dropExclusionConstraints = function (tableOrName, exclusionConstraints) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promises;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        promises = exclusionConstraints.map(function (exclusionConstraint) { return _this.dropExclusionConstraint(tableOrName, exclusionConstraint); });\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new foreign key.\n     */\n    PostgresQueryRunner.prototype.createForeignKey = function (tableOrName, foreignKey) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new FK may be passed without name. In this case we generate FK name manually.\n                        if (!foreignKey.name)\n                            foreignKey.name = this.connection.namingStrategy.foreignKeyName(table, foreignKey.columnNames, this.getTablePath(foreignKey), foreignKey.referencedColumnNames);\n                        up = this.createForeignKeySql(table, foreignKey);\n                        down = this.dropForeignKeySql(table, foreignKey);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addForeignKey(foreignKey);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new foreign keys.\n     */\n    PostgresQueryRunner.prototype.createForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var foreignKeys_1, foreignKeys_1_1, foreignKey, e_8_1;\n            var e_8, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 5, 6, 7]);\n                        foreignKeys_1 = __values(foreignKeys), foreignKeys_1_1 = foreignKeys_1.next();\n                        _b.label = 1;\n                    case 1:\n                        if (!!foreignKeys_1_1.done) return [3 /*break*/, 4];\n                        foreignKey = foreignKeys_1_1.value;\n                        return [4 /*yield*/, this.createForeignKey(tableOrName, foreignKey)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        foreignKeys_1_1 = foreignKeys_1.next();\n                        return [3 /*break*/, 1];\n                    case 4: return [3 /*break*/, 7];\n                    case 5:\n                        e_8_1 = _b.sent();\n                        e_8 = { error: e_8_1 };\n                        return [3 /*break*/, 7];\n                    case 6:\n                        try {\n                            if (foreignKeys_1_1 && !foreignKeys_1_1.done && (_a = foreignKeys_1.return)) _a.call(foreignKeys_1);\n                        }\n                        finally { if (e_8) throw e_8.error; }\n                        return [7 /*endfinally*/];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a foreign key from the table.\n     */\n    PostgresQueryRunner.prototype.dropForeignKey = function (tableOrName, foreignKeyOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, foreignKey, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        foreignKey = foreignKeyOrName instanceof TableForeignKey ? foreignKeyOrName : table.foreignKeys.find(function (fk) { return fk.name === foreignKeyOrName; });\n                        if (!foreignKey)\n                            throw new TypeORMError(\"Supplied foreign key was not found in table \" + table.name);\n                        up = this.dropForeignKeySql(table, foreignKey);\n                        down = this.createForeignKeySql(table, foreignKey);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeForeignKey(foreignKey);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops a foreign keys from the table.\n     */\n    PostgresQueryRunner.prototype.dropForeignKeys = function (tableOrName, foreignKeys) {\n        return __awaiter(this, void 0, void 0, function () {\n            var foreignKeys_2, foreignKeys_2_1, foreignKey, e_9_1;\n            var e_9, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 5, 6, 7]);\n                        foreignKeys_2 = __values(foreignKeys), foreignKeys_2_1 = foreignKeys_2.next();\n                        _b.label = 1;\n                    case 1:\n                        if (!!foreignKeys_2_1.done) return [3 /*break*/, 4];\n                        foreignKey = foreignKeys_2_1.value;\n                        return [4 /*yield*/, this.dropForeignKey(tableOrName, foreignKey)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        foreignKeys_2_1 = foreignKeys_2.next();\n                        return [3 /*break*/, 1];\n                    case 4: return [3 /*break*/, 7];\n                    case 5:\n                        e_9_1 = _b.sent();\n                        e_9 = { error: e_9_1 };\n                        return [3 /*break*/, 7];\n                    case 6:\n                        try {\n                            if (foreignKeys_2_1 && !foreignKeys_2_1.done && (_a = foreignKeys_2.return)) _a.call(foreignKeys_2);\n                        }\n                        finally { if (e_9) throw e_9.error; }\n                        return [7 /*endfinally*/];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new index.\n     */\n    PostgresQueryRunner.prototype.createIndex = function (tableOrName, index) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        // new index may be passed without name. In this case we generate index name manually.\n                        if (!index.name)\n                            index.name = this.connection.namingStrategy.indexName(table, index.columnNames, index.where);\n                        up = this.createIndexSql(table, index);\n                        down = this.dropIndexSql(table, index);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.addIndex(index);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new indices\n     */\n    PostgresQueryRunner.prototype.createIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            var indices_1, indices_1_1, index, e_10_1;\n            var e_10, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 5, 6, 7]);\n                        indices_1 = __values(indices), indices_1_1 = indices_1.next();\n                        _b.label = 1;\n                    case 1:\n                        if (!!indices_1_1.done) return [3 /*break*/, 4];\n                        index = indices_1_1.value;\n                        return [4 /*yield*/, this.createIndex(tableOrName, index)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        indices_1_1 = indices_1.next();\n                        return [3 /*break*/, 1];\n                    case 4: return [3 /*break*/, 7];\n                    case 5:\n                        e_10_1 = _b.sent();\n                        e_10 = { error: e_10_1 };\n                        return [3 /*break*/, 7];\n                    case 6:\n                        try {\n                            if (indices_1_1 && !indices_1_1.done && (_a = indices_1.return)) _a.call(indices_1);\n                        }\n                        finally { if (e_10) throw e_10.error; }\n                        return [7 /*endfinally*/];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an index from the table.\n     */\n    PostgresQueryRunner.prototype.dropIndex = function (tableOrName, indexOrName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var table, _a, index, up, down;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!(tableOrName instanceof Table)) return [3 /*break*/, 1];\n                        _a = tableOrName;\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.getCachedTable(tableOrName)];\n                    case 2:\n                        _a = _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        table = _a;\n                        index = indexOrName instanceof TableIndex ? indexOrName : table.indices.find(function (i) { return i.name === indexOrName; });\n                        if (!index)\n                            throw new TypeORMError(\"Supplied index was not found in table \" + table.name);\n                        up = this.dropIndexSql(table, index);\n                        down = this.createIndexSql(table, index);\n                        return [4 /*yield*/, this.executeQueries(up, down)];\n                    case 4:\n                        _b.sent();\n                        table.removeIndex(index);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops an indices from the table.\n     */\n    PostgresQueryRunner.prototype.dropIndices = function (tableOrName, indices) {\n        return __awaiter(this, void 0, void 0, function () {\n            var indices_2, indices_2_1, index, e_11_1;\n            var e_11, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 5, 6, 7]);\n                        indices_2 = __values(indices), indices_2_1 = indices_2.next();\n                        _b.label = 1;\n                    case 1:\n                        if (!!indices_2_1.done) return [3 /*break*/, 4];\n                        index = indices_2_1.value;\n                        return [4 /*yield*/, this.dropIndex(tableOrName, index)];\n                    case 2:\n                        _b.sent();\n                        _b.label = 3;\n                    case 3:\n                        indices_2_1 = indices_2.next();\n                        return [3 /*break*/, 1];\n                    case 4: return [3 /*break*/, 7];\n                    case 5:\n                        e_11_1 = _b.sent();\n                        e_11 = { error: e_11_1 };\n                        return [3 /*break*/, 7];\n                    case 6:\n                        try {\n                            if (indices_2_1 && !indices_2_1.done && (_a = indices_2.return)) _a.call(indices_2);\n                        }\n                        finally { if (e_11) throw e_11.error; }\n                        return [7 /*endfinally*/];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears all table contents.\n     * Note: this operation uses SQL's TRUNCATE query which cannot be reverted in transactions.\n     */\n    PostgresQueryRunner.prototype.clearTable = function (tableName) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"TRUNCATE TABLE \" + this.escapePath(tableName))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Removes all tables from the currently connected database.\n     */\n    PostgresQueryRunner.prototype.clearDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var schemas, schemaNamesString, version, selectViewDropsQuery, dropViewQueries, selectMatViewDropsQuery, dropMatViewQueries, selectTableDropsQuery, dropTableQueries, error_1, rollbackError_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        schemas = [];\n                        this.connection.entityMetadatas\n                            .filter(function (metadata) { return metadata.schema; })\n                            .forEach(function (metadata) {\n                            var isSchemaExist = !!schemas.find(function (schema) { return schema === metadata.schema; });\n                            if (!isSchemaExist)\n                                schemas.push(metadata.schema);\n                        });\n                        schemas.push(this.driver.options.schema || \"current_schema()\");\n                        schemaNamesString = schemas.map(function (name) {\n                            return name === \"current_schema()\" ? name : \"'\" + name + \"'\";\n                        }).join(\", \");\n                        return [4 /*yield*/, this.startTransaction()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 13, , 18]);\n                        return [4 /*yield*/, this.getVersion()\n                            // drop views\n                        ];\n                    case 3:\n                        version = _a.sent();\n                        selectViewDropsQuery = \"SELECT 'DROP VIEW IF EXISTS \\\"' || schemaname || '\\\".\\\"' || viewname || '\\\" CASCADE;' as \\\"query\\\" \" +\n                            (\"FROM \\\"pg_views\\\" WHERE \\\"schemaname\\\" IN (\" + schemaNamesString + \") AND \\\"viewname\\\" NOT IN ('geography_columns', 'geometry_columns', 'raster_columns', 'raster_overviews')\");\n                        return [4 /*yield*/, this.query(selectViewDropsQuery)];\n                    case 4:\n                        dropViewQueries = _a.sent();\n                        return [4 /*yield*/, Promise.all(dropViewQueries.map(function (q) { return _this.query(q[\"query\"]); }))];\n                    case 5:\n                        _a.sent();\n                        if (!VersionUtils.isGreaterOrEqual(version, \"9.3\")) return [3 /*break*/, 8];\n                        selectMatViewDropsQuery = \"SELECT 'DROP MATERIALIZED VIEW IF EXISTS \\\"' || schemaname || '\\\".\\\"' || matviewname || '\\\" CASCADE;' as \\\"query\\\" \" +\n                            (\"FROM \\\"pg_matviews\\\" WHERE \\\"schemaname\\\" IN (\" + schemaNamesString + \")\");\n                        return [4 /*yield*/, this.query(selectMatViewDropsQuery)];\n                    case 6:\n                        dropMatViewQueries = _a.sent();\n                        return [4 /*yield*/, Promise.all(dropMatViewQueries.map(function (q) { return _this.query(q[\"query\"]); }))];\n                    case 7:\n                        _a.sent();\n                        _a.label = 8;\n                    case 8:\n                        selectTableDropsQuery = \"SELECT 'DROP TABLE IF EXISTS \\\"' || schemaname || '\\\".\\\"' || tablename || '\\\" CASCADE;' as \\\"query\\\" FROM \\\"pg_tables\\\" WHERE \\\"schemaname\\\" IN (\" + schemaNamesString + \") AND \\\"tablename\\\" NOT IN ('spatial_ref_sys')\";\n                        return [4 /*yield*/, this.query(selectTableDropsQuery)];\n                    case 9:\n                        dropTableQueries = _a.sent();\n                        return [4 /*yield*/, Promise.all(dropTableQueries.map(function (q) { return _this.query(q[\"query\"]); }))];\n                    case 10:\n                        _a.sent();\n                        // drop enum types\n                        return [4 /*yield*/, this.dropEnumTypes(schemaNamesString)];\n                    case 11:\n                        // drop enum types\n                        _a.sent();\n                        return [4 /*yield*/, this.commitTransaction()];\n                    case 12:\n                        _a.sent();\n                        return [3 /*break*/, 18];\n                    case 13:\n                        error_1 = _a.sent();\n                        _a.label = 14;\n                    case 14:\n                        _a.trys.push([14, 16, , 17]);\n                        return [4 /*yield*/, this.rollbackTransaction()];\n                    case 15:\n                        _a.sent();\n                        return [3 /*break*/, 17];\n                    case 16:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 17];\n                    case 17: throw error_1;\n                    case 18: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    PostgresQueryRunner.prototype.loadViews = function (viewNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var hasTable, currentDatabase, currentSchema, viewsCondition, query, dbViews;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.hasTable(this.getTypeormMetadataTableName())];\n                    case 1:\n                        hasTable = _a.sent();\n                        if (!hasTable)\n                            return [2 /*return*/, []];\n                        if (!viewNames) {\n                            viewNames = [];\n                        }\n                        return [4 /*yield*/, this.getCurrentDatabase()];\n                    case 2:\n                        currentDatabase = _a.sent();\n                        return [4 /*yield*/, this.getCurrentSchema()];\n                    case 3:\n                        currentSchema = _a.sent();\n                        viewsCondition = viewNames.length === 0 ? \"1=1\" : viewNames\n                            .map(function (tableName) { return _this.driver.parseTableName(tableName); })\n                            .map(function (_a) {\n                            var schema = _a.schema, tableName = _a.tableName;\n                            if (!schema) {\n                                schema = _this.driver.options.schema || currentSchema;\n                            }\n                            return \"(\\\"t\\\".\\\"schema\\\" = '\" + schema + \"' AND \\\"t\\\".\\\"name\\\" = '\" + tableName + \"')\";\n                        }).join(\" OR \");\n                        query = \"SELECT \\\"t\\\".* FROM \" + this.escapePath(this.getTypeormMetadataTableName()) + \" \\\"t\\\" \" +\n                            \"INNER JOIN \\\"pg_catalog\\\".\\\"pg_class\\\" \\\"c\\\" ON \\\"c\\\".\\\"relname\\\" = \\\"t\\\".\\\"name\\\" \" +\n                            \"INNER JOIN \\\"pg_namespace\\\" \\\"n\\\" ON \\\"n\\\".\\\"oid\\\" = \\\"c\\\".\\\"relnamespace\\\" AND \\\"n\\\".\\\"nspname\\\" = \\\"t\\\".\\\"schema\\\" \" +\n                            (\"WHERE \\\"t\\\".\\\"type\\\" IN ('VIEW', 'MATERIALIZED_VIEW') \" + (viewsCondition ? \"AND (\" + viewsCondition + \")\" : \"\"));\n                        return [4 /*yield*/, this.query(query)];\n                    case 4:\n                        dbViews = _a.sent();\n                        return [2 /*return*/, dbViews.map(function (dbView) {\n                                var view = new View();\n                                var schema = dbView[\"schema\"] === currentSchema && !_this.driver.options.schema ? undefined : dbView[\"schema\"];\n                                view.database = currentDatabase;\n                                view.schema = dbView[\"schema\"];\n                                view.name = _this.driver.buildTableName(dbView[\"name\"], schema);\n                                view.expression = dbView[\"value\"];\n                                view.materialized = dbView[\"type\"] === \"MATERIALIZED_VIEW\";\n                                return view;\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * Loads all tables (with given names) from the database and creates a Table from them.\n     */\n    PostgresQueryRunner.prototype.loadTables = function (tableNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentSchema, currentDatabase, dbTables, tablesSql, _a, _b, _c, _d, tablesCondition, tablesSql, _e, _f, _g, _h, columnsCondition, columnsSql, constraintsCondition, constraintsSql, indicesSql, foreignKeysCondition, hasRelispartitionColumn, isPartitionCondition, foreignKeysSql, _j, dbColumns, dbConstraints, dbIndices, dbForeignKeys;\n            var _this = this;\n            return __generator(this, function (_k) {\n                switch (_k.label) {\n                    case 0:\n                        // if no tables given then no need to proceed\n                        if (tableNames && tableNames.length === 0) {\n                            return [2 /*return*/, []];\n                        }\n                        return [4 /*yield*/, this.getCurrentSchema()];\n                    case 1:\n                        currentSchema = _k.sent();\n                        return [4 /*yield*/, this.getCurrentDatabase()];\n                    case 2:\n                        currentDatabase = _k.sent();\n                        dbTables = [];\n                        if (!!tableNames) return [3 /*break*/, 4];\n                        tablesSql = \"SELECT \\\"table_schema\\\", \\\"table_name\\\" FROM \\\"information_schema\\\".\\\"tables\\\"\";\n                        _b = (_a = dbTables.push).apply;\n                        _c = [dbTables];\n                        _d = [[]];\n                        return [4 /*yield*/, this.query(tablesSql)];\n                    case 3:\n                        _b.apply(_a, _c.concat([__spreadArray.apply(void 0, _d.concat([__read.apply(void 0, [_k.sent()]), false]))]));\n                        return [3 /*break*/, 6];\n                    case 4:\n                        tablesCondition = tableNames\n                            .map(function (tableName) { return _this.driver.parseTableName(tableName); })\n                            .map(function (_a) {\n                            var schema = _a.schema, tableName = _a.tableName;\n                            return \"(\\\"table_schema\\\" = '\" + (schema || currentSchema) + \"' AND \\\"table_name\\\" = '\" + tableName + \"')\";\n                        }).join(\" OR \");\n                        tablesSql = \"SELECT \\\"table_schema\\\", \\\"table_name\\\" FROM \\\"information_schema\\\".\\\"tables\\\" WHERE \" + tablesCondition;\n                        _f = (_e = dbTables.push).apply;\n                        _g = [dbTables];\n                        _h = [[]];\n                        return [4 /*yield*/, this.query(tablesSql)];\n                    case 5:\n                        _f.apply(_e, _g.concat([__spreadArray.apply(void 0, _h.concat([__read.apply(void 0, [_k.sent()]), false]))]));\n                        _k.label = 6;\n                    case 6:\n                        // if tables were not found in the db, no need to proceed\n                        if (dbTables.length === 0) {\n                            return [2 /*return*/, []];\n                        }\n                        columnsCondition = dbTables.map(function (_a) {\n                            var table_schema = _a.table_schema, table_name = _a.table_name;\n                            return \"(\\\"table_schema\\\" = '\" + table_schema + \"' AND \\\"table_name\\\" = '\" + table_name + \"')\";\n                        }).join(\" OR \");\n                        columnsSql = \"SELECT columns.*, pg_catalog.col_description(('\\\"' || table_catalog || '\\\".\\\"' || table_schema || '\\\".\\\"' || table_name || '\\\"')::regclass::oid, ordinal_position) AS description, \" +\n                            \"('\\\"' || \\\"udt_schema\\\" || '\\\".\\\"' || \\\"udt_name\\\" || '\\\"')::\\\"regtype\\\" AS \\\"regtype\\\", pg_catalog.format_type(\\\"col_attr\\\".\\\"atttypid\\\", \\\"col_attr\\\".\\\"atttypmod\\\") AS \\\"format_type\\\" \" +\n                            \"FROM \\\"information_schema\\\".\\\"columns\\\" \" +\n                            \"LEFT JOIN \\\"pg_catalog\\\".\\\"pg_attribute\\\" AS \\\"col_attr\\\" ON \\\"col_attr\\\".\\\"attname\\\" = \\\"columns\\\".\\\"column_name\\\" \" +\n                            \"AND \\\"col_attr\\\".\\\"attrelid\\\" = ( \" +\n                            \"SELECT \\\"cls\\\".\\\"oid\\\" FROM \\\"pg_catalog\\\".\\\"pg_class\\\" AS \\\"cls\\\" \" +\n                            \"LEFT JOIN \\\"pg_catalog\\\".\\\"pg_namespace\\\" AS \\\"ns\\\" ON \\\"ns\\\".\\\"oid\\\" = \\\"cls\\\".\\\"relnamespace\\\" \" +\n                            \"WHERE \\\"cls\\\".\\\"relname\\\" = \\\"columns\\\".\\\"table_name\\\" \" +\n                            \"AND \\\"ns\\\".\\\"nspname\\\" = \\\"columns\\\".\\\"table_schema\\\" \" +\n                            \") \" +\n                            \"WHERE \" + columnsCondition;\n                        constraintsCondition = dbTables.map(function (_a) {\n                            var table_schema = _a.table_schema, table_name = _a.table_name;\n                            return \"(\\\"ns\\\".\\\"nspname\\\" = '\" + table_schema + \"' AND \\\"t\\\".\\\"relname\\\" = '\" + table_name + \"')\";\n                        }).join(\" OR \");\n                        constraintsSql = \"SELECT \\\"ns\\\".\\\"nspname\\\" AS \\\"table_schema\\\", \\\"t\\\".\\\"relname\\\" AS \\\"table_name\\\", \\\"cnst\\\".\\\"conname\\\" AS \\\"constraint_name\\\", \" +\n                            \"pg_get_constraintdef(\\\"cnst\\\".\\\"oid\\\") AS \\\"expression\\\", \" +\n                            \"CASE \\\"cnst\\\".\\\"contype\\\" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS \\\"constraint_type\\\", \\\"a\\\".\\\"attname\\\" AS \\\"column_name\\\" \" +\n                            \"FROM \\\"pg_constraint\\\" \\\"cnst\\\" \" +\n                            \"INNER JOIN \\\"pg_class\\\" \\\"t\\\" ON \\\"t\\\".\\\"oid\\\" = \\\"cnst\\\".\\\"conrelid\\\" \" +\n                            \"INNER JOIN \\\"pg_namespace\\\" \\\"ns\\\" ON \\\"ns\\\".\\\"oid\\\" = \\\"cnst\\\".\\\"connamespace\\\" \" +\n                            \"LEFT JOIN \\\"pg_attribute\\\" \\\"a\\\" ON \\\"a\\\".\\\"attrelid\\\" = \\\"cnst\\\".\\\"conrelid\\\" AND \\\"a\\\".\\\"attnum\\\" = ANY (\\\"cnst\\\".\\\"conkey\\\") \" +\n                            (\"WHERE \\\"t\\\".\\\"relkind\\\" IN ('r', 'p') AND (\" + constraintsCondition + \")\");\n                        indicesSql = \"SELECT \\\"ns\\\".\\\"nspname\\\" AS \\\"table_schema\\\", \\\"t\\\".\\\"relname\\\" AS \\\"table_name\\\", \\\"i\\\".\\\"relname\\\" AS \\\"constraint_name\\\", \\\"a\\\".\\\"attname\\\" AS \\\"column_name\\\", \" +\n                            \"CASE \\\"ix\\\".\\\"indisunique\\\" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS \\\"is_unique\\\", pg_get_expr(\\\"ix\\\".\\\"indpred\\\", \\\"ix\\\".\\\"indrelid\\\") AS \\\"condition\\\", \" +\n                            \"\\\"types\\\".\\\"typname\\\" AS \\\"type_name\\\" \" +\n                            \"FROM \\\"pg_class\\\" \\\"t\\\" \" +\n                            \"INNER JOIN \\\"pg_index\\\" \\\"ix\\\" ON \\\"ix\\\".\\\"indrelid\\\" = \\\"t\\\".\\\"oid\\\" \" +\n                            \"INNER JOIN \\\"pg_attribute\\\" \\\"a\\\" ON \\\"a\\\".\\\"attrelid\\\" = \\\"t\\\".\\\"oid\\\"  AND \\\"a\\\".\\\"attnum\\\" = ANY (\\\"ix\\\".\\\"indkey\\\") \" +\n                            \"INNER JOIN \\\"pg_namespace\\\" \\\"ns\\\" ON \\\"ns\\\".\\\"oid\\\" = \\\"t\\\".\\\"relnamespace\\\" \" +\n                            \"INNER JOIN \\\"pg_class\\\" \\\"i\\\" ON \\\"i\\\".\\\"oid\\\" = \\\"ix\\\".\\\"indexrelid\\\" \" +\n                            \"INNER JOIN \\\"pg_type\\\" \\\"types\\\" ON \\\"types\\\".\\\"oid\\\" = \\\"a\\\".\\\"atttypid\\\" \" +\n                            \"LEFT JOIN \\\"pg_constraint\\\" \\\"cnst\\\" ON \\\"cnst\\\".\\\"conname\\\" = \\\"i\\\".\\\"relname\\\" \" +\n                            (\"WHERE \\\"t\\\".\\\"relkind\\\" IN ('r', 'p') AND \\\"cnst\\\".\\\"contype\\\" IS NULL AND (\" + constraintsCondition + \")\");\n                        foreignKeysCondition = dbTables.map(function (_a) {\n                            var table_schema = _a.table_schema, table_name = _a.table_name;\n                            return \"(\\\"ns\\\".\\\"nspname\\\" = '\" + table_schema + \"' AND \\\"cl\\\".\\\"relname\\\" = '\" + table_name + \"')\";\n                        }).join(\" OR \");\n                        return [4 /*yield*/, this.hasSupportForPartitionedTables()];\n                    case 7:\n                        hasRelispartitionColumn = _k.sent();\n                        isPartitionCondition = hasRelispartitionColumn ? \" AND \\\"cl\\\".\\\"relispartition\\\" = 'f'\" : \"\";\n                        foreignKeysSql = \"SELECT \\\"con\\\".\\\"conname\\\" AS \\\"constraint_name\\\", \\\"con\\\".\\\"nspname\\\" AS \\\"table_schema\\\", \\\"con\\\".\\\"relname\\\" AS \\\"table_name\\\", \\\"att2\\\".\\\"attname\\\" AS \\\"column_name\\\", \" +\n                            \"\\\"ns\\\".\\\"nspname\\\" AS \\\"referenced_table_schema\\\", \\\"cl\\\".\\\"relname\\\" AS \\\"referenced_table_name\\\", \\\"att\\\".\\\"attname\\\" AS \\\"referenced_column_name\\\", \\\"con\\\".\\\"confdeltype\\\" AS \\\"on_delete\\\", \" +\n                            \"\\\"con\\\".\\\"confupdtype\\\" AS \\\"on_update\\\", \\\"con\\\".\\\"condeferrable\\\" AS \\\"deferrable\\\", \\\"con\\\".\\\"condeferred\\\" AS \\\"deferred\\\" \" +\n                            \"FROM ( \" +\n                            \"SELECT UNNEST (\\\"con1\\\".\\\"conkey\\\") AS \\\"parent\\\", UNNEST (\\\"con1\\\".\\\"confkey\\\") AS \\\"child\\\", \\\"con1\\\".\\\"confrelid\\\", \\\"con1\\\".\\\"conrelid\\\", \\\"con1\\\".\\\"conname\\\", \\\"con1\\\".\\\"contype\\\", \\\"ns\\\".\\\"nspname\\\", \" +\n                            \"\\\"cl\\\".\\\"relname\\\", \\\"con1\\\".\\\"condeferrable\\\", \" +\n                            \"CASE WHEN \\\"con1\\\".\\\"condeferred\\\" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, \" +\n                            \"CASE \\\"con1\\\".\\\"confdeltype\\\" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as \\\"confdeltype\\\", \" +\n                            \"CASE \\\"con1\\\".\\\"confupdtype\\\" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as \\\"confupdtype\\\" \" +\n                            \"FROM \\\"pg_class\\\" \\\"cl\\\" \" +\n                            \"INNER JOIN \\\"pg_namespace\\\" \\\"ns\\\" ON \\\"cl\\\".\\\"relnamespace\\\" = \\\"ns\\\".\\\"oid\\\" \" +\n                            \"INNER JOIN \\\"pg_constraint\\\" \\\"con1\\\" ON \\\"con1\\\".\\\"conrelid\\\" = \\\"cl\\\".\\\"oid\\\" \" +\n                            (\"WHERE \\\"con1\\\".\\\"contype\\\" = 'f' AND (\" + foreignKeysCondition + \") \") +\n                            \") \\\"con\\\" \" +\n                            \"INNER JOIN \\\"pg_attribute\\\" \\\"att\\\" ON \\\"att\\\".\\\"attrelid\\\" = \\\"con\\\".\\\"confrelid\\\" AND \\\"att\\\".\\\"attnum\\\" = \\\"con\\\".\\\"child\\\" \" +\n                            (\"INNER JOIN \\\"pg_class\\\" \\\"cl\\\" ON \\\"cl\\\".\\\"oid\\\" = \\\"con\\\".\\\"confrelid\\\" \" + isPartitionCondition) +\n                            \"INNER JOIN \\\"pg_namespace\\\" \\\"ns\\\" ON \\\"cl\\\".\\\"relnamespace\\\" = \\\"ns\\\".\\\"oid\\\" \" +\n                            \"INNER JOIN \\\"pg_attribute\\\" \\\"att2\\\" ON \\\"att2\\\".\\\"attrelid\\\" = \\\"con\\\".\\\"conrelid\\\" AND \\\"att2\\\".\\\"attnum\\\" = \\\"con\\\".\\\"parent\\\"\";\n                        return [4 /*yield*/, Promise.all([\n                                this.query(columnsSql),\n                                this.query(constraintsSql),\n                                this.query(indicesSql),\n                                this.query(foreignKeysSql),\n                            ])];\n                    case 8:\n                        _j = __read.apply(void 0, [_k.sent(), 4]), dbColumns = _j[0], dbConstraints = _j[1], dbIndices = _j[2], dbForeignKeys = _j[3];\n                        // create tables for loaded tables\n                        return [2 /*return*/, Promise.all(dbTables.map(function (dbTable) { return __awaiter(_this, void 0, void 0, function () {\n                                var table, getSchemaFromKey, schema, _a, tableUniqueConstraints, tableCheckConstraints, tableExclusionConstraints, tableForeignKeyConstraints, tableIndexConstraints;\n                                var _this = this;\n                                return __generator(this, function (_b) {\n                                    switch (_b.label) {\n                                        case 0:\n                                            table = new Table();\n                                            getSchemaFromKey = function (dbObject, key) {\n                                                return dbObject[key] === currentSchema && (!_this.driver.options.schema || _this.driver.options.schema === currentSchema)\n                                                    ? undefined\n                                                    : dbObject[key];\n                                            };\n                                            schema = getSchemaFromKey(dbTable, \"table_schema\");\n                                            table.database = currentDatabase;\n                                            table.schema = dbTable[\"table_schema\"];\n                                            table.name = this.driver.buildTableName(dbTable[\"table_name\"], schema);\n                                            // create columns from the loaded columns\n                                            _a = table;\n                                            return [4 /*yield*/, Promise.all(dbColumns\n                                                    .filter(function (dbColumn) { return (dbColumn[\"table_name\"] === dbTable[\"table_name\"] && dbColumn[\"table_schema\"] === dbTable[\"table_schema\"]); })\n                                                    .map(function (dbColumn) { return __awaiter(_this, void 0, void 0, function () {\n                                                    var columnConstraints, tableColumn, name_1, builtEnumName, enumName, sql, results, type, geometryColumnSql, results, geographyColumnSql, results, length_1, match, uniqueConstraint, isConstraintComposite, serialDefaultName, serialDefaultPath, defaultWithoutQuotes;\n                                                    return __generator(this, function (_a) {\n                                                        switch (_a.label) {\n                                                            case 0:\n                                                                columnConstraints = dbConstraints.filter(function (dbConstraint) {\n                                                                    return (dbConstraint[\"table_name\"] === dbColumn[\"table_name\"] &&\n                                                                        dbConstraint[\"table_schema\"] === dbColumn[\"table_schema\"] &&\n                                                                        dbConstraint[\"column_name\"] === dbColumn[\"column_name\"]);\n                                                                });\n                                                                tableColumn = new TableColumn();\n                                                                tableColumn.name = dbColumn[\"column_name\"];\n                                                                tableColumn.type = dbColumn[\"regtype\"].toLowerCase();\n                                                                if (tableColumn.type === \"numeric\" || tableColumn.type === \"decimal\" || tableColumn.type === \"float\") {\n                                                                    // If one of these properties was set, and another was not, Postgres sets '0' in to unspecified property\n                                                                    // we set 'undefined' in to unspecified property to avoid changing column on sync\n                                                                    if (dbColumn[\"numeric_precision\"] !== null && !this.isDefaultColumnPrecision(table, tableColumn, dbColumn[\"numeric_precision\"])) {\n                                                                        tableColumn.precision = dbColumn[\"numeric_precision\"];\n                                                                    }\n                                                                    else if (dbColumn[\"numeric_scale\"] !== null && !this.isDefaultColumnScale(table, tableColumn, dbColumn[\"numeric_scale\"])) {\n                                                                        tableColumn.precision = undefined;\n                                                                    }\n                                                                    if (dbColumn[\"numeric_scale\"] !== null && !this.isDefaultColumnScale(table, tableColumn, dbColumn[\"numeric_scale\"])) {\n                                                                        tableColumn.scale = dbColumn[\"numeric_scale\"];\n                                                                    }\n                                                                    else if (dbColumn[\"numeric_precision\"] !== null && !this.isDefaultColumnPrecision(table, tableColumn, dbColumn[\"numeric_precision\"])) {\n                                                                        tableColumn.scale = undefined;\n                                                                    }\n                                                                }\n                                                                if (tableColumn.type === \"interval\"\n                                                                    || tableColumn.type === \"time without time zone\"\n                                                                    || tableColumn.type === \"time with time zone\"\n                                                                    || tableColumn.type === \"timestamp without time zone\"\n                                                                    || tableColumn.type === \"timestamp with time zone\") {\n                                                                    tableColumn.precision = !this.isDefaultColumnPrecision(table, tableColumn, dbColumn[\"datetime_precision\"]) ? dbColumn[\"datetime_precision\"] : undefined;\n                                                                }\n                                                                if (!(dbColumn[\"data_type\"] === \"USER-DEFINED\" || dbColumn[\"data_type\"] === \"ARRAY\")) return [3 /*break*/, 3];\n                                                                return [4 /*yield*/, this.getUserDefinedTypeName(table, tableColumn)\n                                                                    // check if `enumName` is specified by user\n                                                                ];\n                                                            case 1:\n                                                                name_1 = (_a.sent()).name;\n                                                                builtEnumName = this.buildEnumName(table, tableColumn, false, true);\n                                                                enumName = builtEnumName !== name_1 ? name_1 : undefined;\n                                                                sql = \"SELECT \\\"e\\\".\\\"enumlabel\\\" AS \\\"value\\\" FROM \\\"pg_enum\\\" \\\"e\\\" \" +\n                                                                    \"INNER JOIN \\\"pg_type\\\" \\\"t\\\" ON \\\"t\\\".\\\"oid\\\" = \\\"e\\\".\\\"enumtypid\\\" \" +\n                                                                    \"INNER JOIN \\\"pg_namespace\\\" \\\"n\\\" ON \\\"n\\\".\\\"oid\\\" = \\\"t\\\".\\\"typnamespace\\\" \" +\n                                                                    (\"WHERE \\\"n\\\".\\\"nspname\\\" = '\" + dbTable[\"table_schema\"] + \"' AND \\\"t\\\".\\\"typname\\\" = '\" + (enumName || name_1) + \"'\");\n                                                                return [4 /*yield*/, this.query(sql)];\n                                                            case 2:\n                                                                results = _a.sent();\n                                                                if (results.length) {\n                                                                    tableColumn.type = \"enum\";\n                                                                    tableColumn.enum = results.map(function (result) { return result[\"value\"]; });\n                                                                    tableColumn.enumName = enumName;\n                                                                }\n                                                                if (dbColumn[\"data_type\"] === \"ARRAY\") {\n                                                                    tableColumn.isArray = true;\n                                                                    type = tableColumn.type.replace(\"[]\", \"\");\n                                                                    tableColumn.type = this.connection.driver.normalizeType({ type: type });\n                                                                }\n                                                                _a.label = 3;\n                                                            case 3:\n                                                                if (!(tableColumn.type === \"geometry\")) return [3 /*break*/, 5];\n                                                                geometryColumnSql = \"SELECT * FROM (\\n                        SELECT\\n                          \\\"f_table_schema\\\" \\\"table_schema\\\",\\n                          \\\"f_table_name\\\" \\\"table_name\\\",\\n                          \\\"f_geometry_column\\\" \\\"column_name\\\",\\n                          \\\"srid\\\",\\n                          \\\"type\\\"\\n                        FROM \\\"geometry_columns\\\"\\n                      ) AS _\\n                      WHERE\\n                          \\\"column_name\\\" = '\" + dbColumn[\"column_name\"] + \"' AND\\n                          \\\"table_schema\\\" = '\" + dbColumn[\"table_schema\"] + \"' AND\\n                          \\\"table_name\\\" = '\" + dbColumn[\"table_name\"] + \"'\";\n                                                                return [4 /*yield*/, this.query(geometryColumnSql)];\n                                                            case 4:\n                                                                results = _a.sent();\n                                                                if (results.length > 0) {\n                                                                    tableColumn.spatialFeatureType = results[0].type;\n                                                                    tableColumn.srid = results[0].srid;\n                                                                }\n                                                                _a.label = 5;\n                                                            case 5:\n                                                                if (!(tableColumn.type === \"geography\")) return [3 /*break*/, 7];\n                                                                geographyColumnSql = \"SELECT * FROM (\\n                        SELECT\\n                          \\\"f_table_schema\\\" \\\"table_schema\\\",\\n                          \\\"f_table_name\\\" \\\"table_name\\\",\\n                          \\\"f_geography_column\\\" \\\"column_name\\\",\\n                          \\\"srid\\\",\\n                          \\\"type\\\"\\n                        FROM \\\"geography_columns\\\"\\n                      ) AS _\\n                      WHERE\\n                          \\\"column_name\\\" = '\" + dbColumn[\"column_name\"] + \"' AND\\n                          \\\"table_schema\\\" = '\" + dbColumn[\"table_schema\"] + \"' AND\\n                          \\\"table_name\\\" = '\" + dbColumn[\"table_name\"] + \"'\";\n                                                                return [4 /*yield*/, this.query(geographyColumnSql)];\n                                                            case 6:\n                                                                results = _a.sent();\n                                                                if (results.length > 0) {\n                                                                    tableColumn.spatialFeatureType = results[0].type;\n                                                                    tableColumn.srid = results[0].srid;\n                                                                }\n                                                                _a.label = 7;\n                                                            case 7:\n                                                                // check only columns that have length property\n                                                                if (this.driver.withLengthColumnTypes.indexOf(tableColumn.type) !== -1) {\n                                                                    if (tableColumn.isArray) {\n                                                                        match = /\\((\\d+)\\)/.exec(dbColumn[\"format_type\"]);\n                                                                        length_1 = match ? match[1] : undefined;\n                                                                    }\n                                                                    else if (dbColumn[\"character_maximum_length\"]) {\n                                                                        length_1 = dbColumn[\"character_maximum_length\"].toString();\n                                                                    }\n                                                                    if (length_1) {\n                                                                        tableColumn.length = !this.isDefaultColumnLength(table, tableColumn, length_1) ? length_1 : \"\";\n                                                                    }\n                                                                }\n                                                                tableColumn.isNullable = dbColumn[\"is_nullable\"] === \"YES\";\n                                                                tableColumn.isPrimary = !!columnConstraints.find(function (constraint) { return constraint[\"constraint_type\"] === \"PRIMARY\"; });\n                                                                uniqueConstraint = columnConstraints.find(function (constraint) { return constraint[\"constraint_type\"] === \"UNIQUE\"; });\n                                                                isConstraintComposite = uniqueConstraint\n                                                                    ? !!dbConstraints.find(function (dbConstraint) { return dbConstraint[\"constraint_type\"] === \"UNIQUE\"\n                                                                        && dbConstraint[\"constraint_name\"] === uniqueConstraint[\"constraint_name\"]\n                                                                        && dbConstraint[\"column_name\"] !== dbColumn[\"column_name\"]; })\n                                                                    : false;\n                                                                tableColumn.isUnique = !!uniqueConstraint && !isConstraintComposite;\n                                                                if (dbColumn.is_identity === \"YES\") { // Postgres 10+ Identity column\n                                                                    tableColumn.isGenerated = true;\n                                                                    tableColumn.generationStrategy = \"identity\";\n                                                                }\n                                                                else if (dbColumn[\"column_default\"] !== null && dbColumn[\"column_default\"] !== undefined) {\n                                                                    serialDefaultName = \"nextval('\" + this.buildSequenceName(table, dbColumn[\"column_name\"]) + \"'::regclass)\";\n                                                                    serialDefaultPath = \"nextval('\" + this.buildSequencePath(table, dbColumn[\"column_name\"]) + \"'::regclass)\";\n                                                                    defaultWithoutQuotes = dbColumn[\"column_default\"].replace(/\"/g, \"\");\n                                                                    if (defaultWithoutQuotes === serialDefaultName || defaultWithoutQuotes === serialDefaultPath) {\n                                                                        tableColumn.isGenerated = true;\n                                                                        tableColumn.generationStrategy = \"increment\";\n                                                                    }\n                                                                    else if (dbColumn[\"column_default\"] === \"gen_random_uuid()\" || /^uuid_generate_v\\d\\(\\)/.test(dbColumn[\"column_default\"])) {\n                                                                        tableColumn.isGenerated = true;\n                                                                        tableColumn.generationStrategy = \"uuid\";\n                                                                    }\n                                                                    else if (dbColumn[\"column_default\"] === \"now()\" || dbColumn[\"column_default\"].indexOf(\"'now'::text\") !== -1) {\n                                                                        tableColumn.default = dbColumn[\"column_default\"];\n                                                                    }\n                                                                    else {\n                                                                        tableColumn.default = dbColumn[\"column_default\"].replace(/::[\\w\\s\\[\\]\\\"]+/g, \"\");\n                                                                        tableColumn.default = tableColumn.default.replace(/^(-?\\d+)$/, \"'$1'\");\n                                                                    }\n                                                                }\n                                                                tableColumn.comment = dbColumn[\"description\"] ? dbColumn[\"description\"] : undefined;\n                                                                if (dbColumn[\"character_set_name\"])\n                                                                    tableColumn.charset = dbColumn[\"character_set_name\"];\n                                                                if (dbColumn[\"collation_name\"])\n                                                                    tableColumn.collation = dbColumn[\"collation_name\"];\n                                                                return [2 /*return*/, tableColumn];\n                                                        }\n                                                    });\n                                                }); }))];\n                                        case 1:\n                                            // create columns from the loaded columns\n                                            _a.columns = _b.sent();\n                                            tableUniqueConstraints = OrmUtils.uniq(dbConstraints.filter(function (dbConstraint) {\n                                                return (dbConstraint[\"table_name\"] === dbTable[\"table_name\"] &&\n                                                    dbConstraint[\"table_schema\"] === dbTable[\"table_schema\"] &&\n                                                    dbConstraint[\"constraint_type\"] === \"UNIQUE\");\n                                            }), function (dbConstraint) { return dbConstraint[\"constraint_name\"]; });\n                                            table.uniques = tableUniqueConstraints.map(function (constraint) {\n                                                var uniques = dbConstraints.filter(function (dbC) { return dbC[\"constraint_name\"] === constraint[\"constraint_name\"]; });\n                                                return new TableUnique({\n                                                    name: constraint[\"constraint_name\"],\n                                                    columnNames: uniques.map(function (u) { return u[\"column_name\"]; })\n                                                });\n                                            });\n                                            tableCheckConstraints = OrmUtils.uniq(dbConstraints.filter(function (dbConstraint) {\n                                                return (dbConstraint[\"table_name\"] === dbTable[\"table_name\"] &&\n                                                    dbConstraint[\"table_schema\"] === dbTable[\"table_schema\"] &&\n                                                    dbConstraint[\"constraint_type\"] === \"CHECK\");\n                                            }), function (dbConstraint) { return dbConstraint[\"constraint_name\"]; });\n                                            table.checks = tableCheckConstraints.map(function (constraint) {\n                                                var checks = dbConstraints.filter(function (dbC) { return dbC[\"constraint_name\"] === constraint[\"constraint_name\"]; });\n                                                return new TableCheck({\n                                                    name: constraint[\"constraint_name\"],\n                                                    columnNames: checks.map(function (c) { return c[\"column_name\"]; }),\n                                                    expression: constraint[\"expression\"].replace(/^\\s*CHECK\\s*\\((.*)\\)\\s*$/i, \"$1\")\n                                                });\n                                            });\n                                            tableExclusionConstraints = OrmUtils.uniq(dbConstraints.filter(function (dbConstraint) {\n                                                return (dbConstraint[\"table_name\"] === dbTable[\"table_name\"] &&\n                                                    dbConstraint[\"table_schema\"] === dbTable[\"table_schema\"] &&\n                                                    dbConstraint[\"constraint_type\"] === \"EXCLUDE\");\n                                            }), function (dbConstraint) { return dbConstraint[\"constraint_name\"]; });\n                                            table.exclusions = tableExclusionConstraints.map(function (constraint) {\n                                                return new TableExclusion({\n                                                    name: constraint[\"constraint_name\"],\n                                                    expression: constraint[\"expression\"].substring(8) // trim EXCLUDE from start of expression\n                                                });\n                                            });\n                                            tableForeignKeyConstraints = OrmUtils.uniq(dbForeignKeys.filter(function (dbForeignKey) {\n                                                return (dbForeignKey[\"table_name\"] === dbTable[\"table_name\"] &&\n                                                    dbForeignKey[\"table_schema\"] === dbTable[\"table_schema\"]);\n                                            }), function (dbForeignKey) { return dbForeignKey[\"constraint_name\"]; });\n                                            table.foreignKeys = tableForeignKeyConstraints.map(function (dbForeignKey) {\n                                                var foreignKeys = dbForeignKeys.filter(function (dbFk) { return dbFk[\"constraint_name\"] === dbForeignKey[\"constraint_name\"]; });\n                                                // if referenced table located in currently used schema, we don't need to concat schema name to table name.\n                                                var schema = getSchemaFromKey(dbForeignKey, \"referenced_table_schema\");\n                                                var referencedTableName = _this.driver.buildTableName(dbForeignKey[\"referenced_table_name\"], schema);\n                                                return new TableForeignKey({\n                                                    name: dbForeignKey[\"constraint_name\"],\n                                                    columnNames: foreignKeys.map(function (dbFk) { return dbFk[\"column_name\"]; }),\n                                                    referencedTableName: referencedTableName,\n                                                    referencedColumnNames: foreignKeys.map(function (dbFk) { return dbFk[\"referenced_column_name\"]; }),\n                                                    onDelete: dbForeignKey[\"on_delete\"],\n                                                    onUpdate: dbForeignKey[\"on_update\"],\n                                                    deferrable: dbForeignKey[\"deferrable\"] ? dbForeignKey[\"deferred\"] : undefined,\n                                                });\n                                            });\n                                            tableIndexConstraints = OrmUtils.uniq(dbIndices.filter(function (dbIndex) {\n                                                return (dbIndex[\"table_name\"] === dbTable[\"table_name\"] &&\n                                                    dbIndex[\"table_schema\"] === dbTable[\"table_schema\"]);\n                                            }), function (dbIndex) { return dbIndex[\"constraint_name\"]; });\n                                            table.indices = tableIndexConstraints.map(function (constraint) {\n                                                var indices = dbIndices.filter(function (index) {\n                                                    return index[\"table_schema\"] === constraint[\"table_schema\"]\n                                                        && index[\"table_name\"] === constraint[\"table_name\"]\n                                                        && index[\"constraint_name\"] === constraint[\"constraint_name\"];\n                                                });\n                                                return new TableIndex({\n                                                    table: table,\n                                                    name: constraint[\"constraint_name\"],\n                                                    columnNames: indices.map(function (i) { return i[\"column_name\"]; }),\n                                                    isUnique: constraint[\"is_unique\"] === \"TRUE\",\n                                                    where: constraint[\"condition\"],\n                                                    isSpatial: indices.every(function (i) { return _this.driver.spatialTypes.indexOf(i[\"type_name\"]) >= 0; }),\n                                                    isFulltext: false\n                                                });\n                                            });\n                                            return [2 /*return*/, table];\n                                    }\n                                });\n                            }); }))];\n                }\n            });\n        });\n    };\n    /**\n     * Builds create table sql.\n     */\n    PostgresQueryRunner.prototype.createTableSql = function (table, createForeignKeys) {\n        var _this = this;\n        var columnDefinitions = table.columns.map(function (column) { return _this.buildCreateColumnSql(table, column); }).join(\", \");\n        var sql = \"CREATE TABLE \" + this.escapePath(table) + \" (\" + columnDefinitions;\n        table.columns\n            .filter(function (column) { return column.isUnique; })\n            .forEach(function (column) {\n            var isUniqueExist = table.uniques.some(function (unique) { return unique.columnNames.length === 1 && unique.columnNames[0] === column.name; });\n            if (!isUniqueExist)\n                table.uniques.push(new TableUnique({\n                    name: _this.connection.namingStrategy.uniqueConstraintName(table, [column.name]),\n                    columnNames: [column.name]\n                }));\n        });\n        if (table.uniques.length > 0) {\n            var uniquesSql = table.uniques.map(function (unique) {\n                var uniqueName = unique.name ? unique.name : _this.connection.namingStrategy.uniqueConstraintName(table, unique.columnNames);\n                var columnNames = unique.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                return \"CONSTRAINT \\\"\" + uniqueName + \"\\\" UNIQUE (\" + columnNames + \")\";\n            }).join(\", \");\n            sql += \", \" + uniquesSql;\n        }\n        if (table.checks.length > 0) {\n            var checksSql = table.checks.map(function (check) {\n                var checkName = check.name ? check.name : _this.connection.namingStrategy.checkConstraintName(table, check.expression);\n                return \"CONSTRAINT \\\"\" + checkName + \"\\\" CHECK (\" + check.expression + \")\";\n            }).join(\", \");\n            sql += \", \" + checksSql;\n        }\n        if (table.exclusions.length > 0) {\n            var exclusionsSql = table.exclusions.map(function (exclusion) {\n                var exclusionName = exclusion.name ? exclusion.name : _this.connection.namingStrategy.exclusionConstraintName(table, exclusion.expression);\n                return \"CONSTRAINT \\\"\" + exclusionName + \"\\\" EXCLUDE \" + exclusion.expression;\n            }).join(\", \");\n            sql += \", \" + exclusionsSql;\n        }\n        if (table.foreignKeys.length > 0 && createForeignKeys) {\n            var foreignKeysSql = table.foreignKeys.map(function (fk) {\n                var columnNames = fk.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                if (!fk.name)\n                    fk.name = _this.connection.namingStrategy.foreignKeyName(table, fk.columnNames, _this.getTablePath(fk), fk.referencedColumnNames);\n                var referencedColumnNames = fk.referencedColumnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n                var constraint = \"CONSTRAINT \\\"\" + fk.name + \"\\\" FOREIGN KEY (\" + columnNames + \") REFERENCES \" + _this.escapePath(_this.getTablePath(fk)) + \" (\" + referencedColumnNames + \")\";\n                if (fk.onDelete)\n                    constraint += \" ON DELETE \" + fk.onDelete;\n                if (fk.onUpdate)\n                    constraint += \" ON UPDATE \" + fk.onUpdate;\n                if (fk.deferrable)\n                    constraint += \" DEFERRABLE \" + fk.deferrable;\n                return constraint;\n            }).join(\", \");\n            sql += \", \" + foreignKeysSql;\n        }\n        var primaryColumns = table.columns.filter(function (column) { return column.isPrimary; });\n        if (primaryColumns.length > 0) {\n            var primaryKeyName = this.connection.namingStrategy.primaryKeyName(table, primaryColumns.map(function (column) { return column.name; }));\n            var columnNames = primaryColumns.map(function (column) { return \"\\\"\" + column.name + \"\\\"\"; }).join(\", \");\n            sql += \", CONSTRAINT \\\"\" + primaryKeyName + \"\\\" PRIMARY KEY (\" + columnNames + \")\";\n        }\n        sql += \")\";\n        table.columns\n            .filter(function (it) { return it.comment; })\n            .forEach(function (it) { return sql += \"; COMMENT ON COLUMN \" + _this.escapePath(table) + \".\\\"\" + it.name + \"\\\" IS \" + _this.escapeComment(it.comment); });\n        return new Query(sql);\n    };\n    /**\n     * Loads Postgres version.\n     */\n    PostgresQueryRunner.prototype.getVersion = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"SHOW SERVER_VERSION\")];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result[0][\"server_version\"]];\n                }\n            });\n        });\n    };\n    /**\n     * Builds drop table sql.\n     */\n    PostgresQueryRunner.prototype.dropTableSql = function (tableOrPath) {\n        return new Query(\"DROP TABLE \" + this.escapePath(tableOrPath));\n    };\n    PostgresQueryRunner.prototype.createViewSql = function (view) {\n        var materializedClause = view.materialized ? \"MATERIALIZED \" : \"\";\n        var viewName = this.escapePath(view);\n        if (typeof view.expression === \"string\") {\n            return new Query(\"CREATE \" + materializedClause + \"VIEW \" + viewName + \" AS \" + view.expression);\n        }\n        else {\n            return new Query(\"CREATE \" + materializedClause + \"VIEW \" + viewName + \" AS \" + view.expression(this.connection).getQuery());\n        }\n    };\n    PostgresQueryRunner.prototype.insertViewDefinitionSql = function (view) {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentSchema, _a, schema, name, type, expression, _b, query, parameters;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.getCurrentSchema()];\n                    case 1:\n                        currentSchema = _c.sent();\n                        _a = this.driver.parseTableName(view), schema = _a.schema, name = _a.tableName;\n                        if (!schema) {\n                            schema = currentSchema;\n                        }\n                        type = view.materialized ? \"MATERIALIZED_VIEW\" : \"VIEW\";\n                        expression = typeof view.expression === \"string\" ? view.expression.trim() : view.expression(this.connection).getQuery();\n                        _b = __read(this.connection.createQueryBuilder()\n                            .insert()\n                            .into(this.getTypeormMetadataTableName())\n                            .values({ type: type, schema: schema, name: name, value: expression })\n                            .getQueryAndParameters(), 2), query = _b[0], parameters = _b[1];\n                        return [2 /*return*/, new Query(query, parameters)];\n                }\n            });\n        });\n    };\n    /**\n     * Builds drop view sql.\n     */\n    PostgresQueryRunner.prototype.dropViewSql = function (view) {\n        var materializedClause = view.materialized ? \"MATERIALIZED \" : \"\";\n        return new Query(\"DROP \" + materializedClause + \"VIEW \" + this.escapePath(view));\n    };\n    /**\n     * Builds remove view sql.\n     */\n    PostgresQueryRunner.prototype.deleteViewDefinitionSql = function (view) {\n        return __awaiter(this, void 0, void 0, function () {\n            var currentSchema, _a, schema, name, type, qb, _b, query, parameters;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this.getCurrentSchema()];\n                    case 1:\n                        currentSchema = _c.sent();\n                        _a = this.driver.parseTableName(view), schema = _a.schema, name = _a.tableName;\n                        if (!schema) {\n                            schema = currentSchema;\n                        }\n                        type = view.materialized ? \"MATERIALIZED_VIEW\" : \"VIEW\";\n                        qb = this.connection.createQueryBuilder();\n                        _b = __read(qb.delete()\n                            .from(this.getTypeormMetadataTableName())\n                            .where(qb.escape(\"type\") + \" = :type\", { type: type })\n                            .andWhere(qb.escape(\"schema\") + \" = :schema\", { schema: schema })\n                            .andWhere(qb.escape(\"name\") + \" = :name\", { name: name })\n                            .getQueryAndParameters(), 2), query = _b[0], parameters = _b[1];\n                        return [2 /*return*/, new Query(query, parameters)];\n                }\n            });\n        });\n    };\n    /**\n     * Drops ENUM type from given schemas.\n     */\n    PostgresQueryRunner.prototype.dropEnumTypes = function (schemaNames) {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectDropsQuery, dropQueries;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        selectDropsQuery = \"SELECT 'DROP TYPE IF EXISTS \\\"' || n.nspname || '\\\".\\\"' || t.typname || '\\\" CASCADE;' as \\\"query\\\" FROM \\\"pg_type\\\" \\\"t\\\" \" +\n                            \"INNER JOIN \\\"pg_enum\\\" \\\"e\\\" ON \\\"e\\\".\\\"enumtypid\\\" = \\\"t\\\".\\\"oid\\\" \" +\n                            \"INNER JOIN \\\"pg_namespace\\\" \\\"n\\\" ON \\\"n\\\".\\\"oid\\\" = \\\"t\\\".\\\"typnamespace\\\" \" +\n                            (\"WHERE \\\"n\\\".\\\"nspname\\\" IN (\" + schemaNames + \") GROUP BY \\\"n\\\".\\\"nspname\\\", \\\"t\\\".\\\"typname\\\"\");\n                        return [4 /*yield*/, this.query(selectDropsQuery)];\n                    case 1:\n                        dropQueries = _a.sent();\n                        return [4 /*yield*/, Promise.all(dropQueries.map(function (q) { return _this.query(q[\"query\"]); }))];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if enum with the given name exist in the database.\n     */\n    PostgresQueryRunner.prototype.hasEnumType = function (table, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var schema, enumName, sql, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        schema = this.driver.parseTableName(table).schema;\n                        if (!!schema) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.getCurrentSchema()];\n                    case 1:\n                        schema = _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        enumName = this.buildEnumName(table, column, false, true);\n                        sql = \"SELECT \\\"n\\\".\\\"nspname\\\", \\\"t\\\".\\\"typname\\\" FROM \\\"pg_type\\\" \\\"t\\\" \" +\n                            \"INNER JOIN \\\"pg_namespace\\\" \\\"n\\\" ON \\\"n\\\".\\\"oid\\\" = \\\"t\\\".\\\"typnamespace\\\" \" +\n                            (\"WHERE \\\"n\\\".\\\"nspname\\\" = '\" + schema + \"' AND \\\"t\\\".\\\"typname\\\" = '\" + enumName + \"'\");\n                        return [4 /*yield*/, this.query(sql)];\n                    case 3:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    /**\n     * Builds create ENUM type sql.\n     */\n    PostgresQueryRunner.prototype.createEnumTypeSql = function (table, column, enumName) {\n        if (!enumName)\n            enumName = this.buildEnumName(table, column);\n        var enumValues = column.enum.map(function (value) { return \"'\" + value.replace(\"'\", \"''\") + \"'\"; }).join(\", \");\n        return new Query(\"CREATE TYPE \" + enumName + \" AS ENUM(\" + enumValues + \")\");\n    };\n    /**\n     * Builds create ENUM type sql.\n     */\n    PostgresQueryRunner.prototype.dropEnumTypeSql = function (table, column, enumName) {\n        if (!enumName)\n            enumName = this.buildEnumName(table, column);\n        return new Query(\"DROP TYPE \" + enumName);\n    };\n    /**\n     * Builds create index sql.\n     */\n    PostgresQueryRunner.prototype.createIndexSql = function (table, index) {\n        var columns = index.columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n        return new Query(\"CREATE \" + (index.isUnique ? \"UNIQUE \" : \"\") + \"INDEX \\\"\" + index.name + \"\\\" ON \" + this.escapePath(table) + \" \" + (index.isSpatial ? \"USING GiST \" : \"\") + \"(\" + columns + \") \" + (index.where ? \"WHERE \" + index.where : \"\"));\n    };\n    /**\n     * Builds drop index sql.\n     */\n    PostgresQueryRunner.prototype.dropIndexSql = function (table, indexOrName) {\n        var indexName = indexOrName instanceof TableIndex ? indexOrName.name : indexOrName;\n        var schema = this.driver.parseTableName(table).schema;\n        return schema ? new Query(\"DROP INDEX \\\"\" + schema + \"\\\".\\\"\" + indexName + \"\\\"\") : new Query(\"DROP INDEX \\\"\" + indexName + \"\\\"\");\n    };\n    /**\n     * Builds create primary key sql.\n     */\n    PostgresQueryRunner.prototype.createPrimaryKeySql = function (table, columnNames) {\n        var primaryKeyName = this.connection.namingStrategy.primaryKeyName(table, columnNames);\n        var columnNamesString = columnNames.map(function (columnName) { return \"\\\"\" + columnName + \"\\\"\"; }).join(\", \");\n        return new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + primaryKeyName + \"\\\" PRIMARY KEY (\" + columnNamesString + \")\");\n    };\n    /**\n     * Builds drop primary key sql.\n     */\n    PostgresQueryRunner.prototype.dropPrimaryKeySql = function (table) {\n        var columnNames = table.primaryColumns.map(function (column) { return column.name; });\n        var primaryKeyName = this.connection.namingStrategy.primaryKeyName(table, columnNames);\n        return new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + primaryKeyName + \"\\\"\");\n    };\n    /**\n     * Builds create unique constraint sql.\n     */\n    PostgresQueryRunner.prototype.createUniqueConstraintSql = function (table, uniqueConstraint) {\n        var columnNames = uniqueConstraint.columnNames.map(function (column) { return \"\\\"\" + column + \"\\\"\"; }).join(\", \");\n        return new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + uniqueConstraint.name + \"\\\" UNIQUE (\" + columnNames + \")\");\n    };\n    /**\n     * Builds drop unique constraint sql.\n     */\n    PostgresQueryRunner.prototype.dropUniqueConstraintSql = function (table, uniqueOrName) {\n        var uniqueName = uniqueOrName instanceof TableUnique ? uniqueOrName.name : uniqueOrName;\n        return new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + uniqueName + \"\\\"\");\n    };\n    /**\n     * Builds create check constraint sql.\n     */\n    PostgresQueryRunner.prototype.createCheckConstraintSql = function (table, checkConstraint) {\n        return new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + checkConstraint.name + \"\\\" CHECK (\" + checkConstraint.expression + \")\");\n    };\n    /**\n     * Builds drop check constraint sql.\n     */\n    PostgresQueryRunner.prototype.dropCheckConstraintSql = function (table, checkOrName) {\n        var checkName = checkOrName instanceof TableCheck ? checkOrName.name : checkOrName;\n        return new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + checkName + \"\\\"\");\n    };\n    /**\n     * Builds create exclusion constraint sql.\n     */\n    PostgresQueryRunner.prototype.createExclusionConstraintSql = function (table, exclusionConstraint) {\n        return new Query(\"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + exclusionConstraint.name + \"\\\" EXCLUDE \" + exclusionConstraint.expression);\n    };\n    /**\n     * Builds drop exclusion constraint sql.\n     */\n    PostgresQueryRunner.prototype.dropExclusionConstraintSql = function (table, exclusionOrName) {\n        var exclusionName = exclusionOrName instanceof TableExclusion ? exclusionOrName.name : exclusionOrName;\n        return new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + exclusionName + \"\\\"\");\n    };\n    /**\n     * Builds create foreign key sql.\n     */\n    PostgresQueryRunner.prototype.createForeignKeySql = function (table, foreignKey) {\n        var columnNames = foreignKey.columnNames.map(function (column) { return \"\\\"\" + column + \"\\\"\"; }).join(\", \");\n        var referencedColumnNames = foreignKey.referencedColumnNames.map(function (column) { return \"\\\"\" + column + \"\\\"\"; }).join(\",\");\n        var sql = \"ALTER TABLE \" + this.escapePath(table) + \" ADD CONSTRAINT \\\"\" + foreignKey.name + \"\\\" FOREIGN KEY (\" + columnNames + \") \" +\n            (\"REFERENCES \" + this.escapePath(this.getTablePath(foreignKey)) + \"(\" + referencedColumnNames + \")\");\n        if (foreignKey.onDelete)\n            sql += \" ON DELETE \" + foreignKey.onDelete;\n        if (foreignKey.onUpdate)\n            sql += \" ON UPDATE \" + foreignKey.onUpdate;\n        if (foreignKey.deferrable)\n            sql += \" DEFERRABLE \" + foreignKey.deferrable;\n        return new Query(sql);\n    };\n    /**\n     * Builds drop foreign key sql.\n     */\n    PostgresQueryRunner.prototype.dropForeignKeySql = function (table, foreignKeyOrName) {\n        var foreignKeyName = foreignKeyOrName instanceof TableForeignKey ? foreignKeyOrName.name : foreignKeyOrName;\n        return new Query(\"ALTER TABLE \" + this.escapePath(table) + \" DROP CONSTRAINT \\\"\" + foreignKeyName + \"\\\"\");\n    };\n    /**\n     * Builds sequence name from given table and column.\n     */\n    PostgresQueryRunner.prototype.buildSequenceName = function (table, columnOrName) {\n        var tableName = this.driver.parseTableName(table).tableName;\n        var columnName = columnOrName instanceof TableColumn ? columnOrName.name : columnOrName;\n        var seqName = tableName + \"_\" + columnName + \"_seq\";\n        if (seqName.length > this.connection.driver.maxAliasLength) {\n            // note doesn't yet handle corner cases where .length differs from number of UTF-8 bytes\n            seqName = tableName.substring(0, 29) + \"_\" + columnName.substring(0, Math.max(29, 63 - (table.name.length) - 5)) + \"_seq\";\n        }\n        return seqName;\n    };\n    PostgresQueryRunner.prototype.buildSequencePath = function (table, columnOrName) {\n        var schema = this.driver.parseTableName(table).schema;\n        return schema ? schema + \".\" + this.buildSequenceName(table, columnOrName) : this.buildSequenceName(table, columnOrName);\n    };\n    /**\n     * Builds ENUM type name from given table and column.\n     */\n    PostgresQueryRunner.prototype.buildEnumName = function (table, column, withSchema, disableEscape, toOld) {\n        if (withSchema === void 0) { withSchema = true; }\n        var _a = this.driver.parseTableName(table), schema = _a.schema, tableName = _a.tableName;\n        var enumName = column.enumName ? column.enumName : tableName + \"_\" + column.name.toLowerCase() + \"_enum\";\n        if (schema && withSchema)\n            enumName = schema + \".\" + enumName;\n        if (toOld)\n            enumName = enumName + \"_old\";\n        return enumName.split(\".\").map(function (i) {\n            return disableEscape ? i : \"\\\"\" + i + \"\\\"\";\n        }).join(\".\");\n    };\n    PostgresQueryRunner.prototype.getUserDefinedTypeName = function (table, column) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, schema, name, result, udtName;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = this.driver.parseTableName(table), schema = _a.schema, name = _a.tableName;\n                        if (!!schema) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.getCurrentSchema()];\n                    case 1:\n                        schema = _b.sent();\n                        _b.label = 2;\n                    case 2: return [4 /*yield*/, this.query(\"SELECT \\\"udt_schema\\\", \\\"udt_name\\\" \" +\n                            (\"FROM \\\"information_schema\\\".\\\"columns\\\" WHERE \\\"table_schema\\\" = '\" + schema + \"' AND \\\"table_name\\\" = '\" + name + \"' AND \\\"column_name\\\"='\" + column.name + \"'\"))];\n                    case 3:\n                        result = _b.sent();\n                        udtName = result[0][\"udt_name\"];\n                        if (udtName.indexOf(\"_\") === 0) {\n                            udtName = udtName.substr(1, udtName.length);\n                        }\n                        return [2 /*return*/, {\n                                schema: result[0][\"udt_schema\"],\n                                name: udtName\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Escapes a given comment so it's safe to include in a query.\n     */\n    PostgresQueryRunner.prototype.escapeComment = function (comment) {\n        if (!comment || comment.length === 0) {\n            return \"NULL\";\n        }\n        comment = comment\n            .replace(/'/g, \"''\")\n            .replace(/\\u0000/g, \"\"); // Null bytes aren't allowed in comments\n        return \"'\" + comment + \"'\";\n    };\n    /**\n     * Escapes given table or view path.\n     */\n    PostgresQueryRunner.prototype.escapePath = function (target) {\n        var _a = this.driver.parseTableName(target), schema = _a.schema, tableName = _a.tableName;\n        if (schema && schema !== this.driver.searchSchema) {\n            return \"\\\"\" + schema + \"\\\".\\\"\" + tableName + \"\\\"\";\n        }\n        return \"\\\"\" + tableName + \"\\\"\";\n    };\n    /**\n     * Builds a query for create column.\n     */\n    PostgresQueryRunner.prototype.buildCreateColumnSql = function (table, column) {\n        var c = \"\\\"\" + column.name + \"\\\"\";\n        if (column.isGenerated === true && column.generationStrategy !== \"uuid\") {\n            if (column.generationStrategy === \"identity\") { // Postgres 10+ Identity generated column\n                c += \" \" + column.type + \" GENERATED BY DEFAULT AS IDENTITY\";\n            }\n            else { // classic SERIAL primary column\n                if (column.type === \"integer\" || column.type === \"int\" || column.type === \"int4\")\n                    c += \" SERIAL\";\n                if (column.type === \"smallint\" || column.type === \"int2\")\n                    c += \" SMALLSERIAL\";\n                if (column.type === \"bigint\" || column.type === \"int8\")\n                    c += \" BIGSERIAL\";\n            }\n        }\n        if (column.type === \"enum\" || column.type === \"simple-enum\") {\n            c += \" \" + this.buildEnumName(table, column);\n            if (column.isArray)\n                c += \" array\";\n        }\n        else if (!column.isGenerated || column.type === \"uuid\") {\n            c += \" \" + this.connection.driver.createFullType(column);\n        }\n        if (column.charset)\n            c += \" CHARACTER SET \\\"\" + column.charset + \"\\\"\";\n        if (column.collation)\n            c += \" COLLATE \\\"\" + column.collation + \"\\\"\";\n        if (column.isNullable !== true)\n            c += \" NOT NULL\";\n        if (column.default !== undefined && column.default !== null)\n            c += \" DEFAULT \" + column.default;\n        if (column.isGenerated && column.generationStrategy === \"uuid\" && !column.default)\n            c += \" DEFAULT \" + this.driver.uuidGenerator;\n        return c;\n    };\n    /**\n     * Checks if the PostgreSQL server has support for partitioned tables\n     */\n    PostgresQueryRunner.prototype.hasSupportForPartitionedTables = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.query(\"SELECT TRUE FROM information_schema.columns WHERE table_name = 'pg_class' and column_name = 'relispartition'\")];\n                    case 1:\n                        result = _a.sent();\n                        return [2 /*return*/, result.length ? true : false];\n                }\n            });\n        });\n    };\n    return PostgresQueryRunner;\n}(BaseQueryRunner));\nexport { PostgresQueryRunner };\n\n//# sourceMappingURL=PostgresQueryRunner.js.map\n","import { __awaiter, __extends, __generator, __read } from \"tslib\";\nimport { QueryRunnerAlreadyReleasedError } from \"../../error/QueryRunnerAlreadyReleasedError\";\nimport { TransactionAlreadyStartedError } from \"../../error/TransactionAlreadyStartedError\";\nimport { TransactionNotStartedError } from \"../../error/TransactionNotStartedError\";\nimport { PostgresQueryRunner } from \"../postgres/PostgresQueryRunner\";\nimport { QueryResult } from \"../../query-runner/QueryResult\";\nvar PostgresQueryRunnerWrapper = /** @class */ (function (_super) {\n    __extends(PostgresQueryRunnerWrapper, _super);\n    function PostgresQueryRunnerWrapper(driver, mode) {\n        return _super.call(this, driver, mode) || this;\n    }\n    return PostgresQueryRunnerWrapper;\n}(PostgresQueryRunner));\n/**\n * Runs queries on a single postgres database connection.\n */\nvar AuroraDataApiPostgresQueryRunner = /** @class */ (function (_super) {\n    __extends(AuroraDataApiPostgresQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function AuroraDataApiPostgresQueryRunner(driver, client, mode) {\n        var _this = _super.call(this, driver, mode) || this;\n        _this.client = client;\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates/uses database connection from the connection pool to perform further operations.\n     * Returns obtained database connection.\n     */\n    AuroraDataApiPostgresQueryRunner.prototype.connect = function () {\n        var _this = this;\n        if (this.databaseConnection)\n            return Promise.resolve(this.databaseConnection);\n        if (this.databaseConnectionPromise)\n            return this.databaseConnectionPromise;\n        if (this.mode === \"slave\" && this.driver.isReplicated) {\n            this.databaseConnectionPromise = this.driver.obtainSlaveConnection().then(function (_a) {\n                var _b = __read(_a, 2), connection = _b[0], release = _b[1];\n                _this.driver.connectedQueryRunners.push(_this);\n                _this.databaseConnection = connection;\n                _this.releaseCallback = release;\n                return _this.databaseConnection;\n            });\n        }\n        else { // master\n            this.databaseConnectionPromise = this.driver.obtainMasterConnection().then(function (_a) {\n                var _b = __read(_a, 2), connection = _b[0], release = _b[1];\n                _this.driver.connectedQueryRunners.push(_this);\n                _this.databaseConnection = connection;\n                _this.releaseCallback = release;\n                return _this.databaseConnection;\n            });\n        }\n        return this.databaseConnectionPromise;\n    };\n    /**\n     * Starts transaction on the current connection.\n     */\n    AuroraDataApiPostgresQueryRunner.prototype.startTransaction = function (isolationLevel) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isTransactionActive)\n                            throw new TransactionAlreadyStartedError();\n                        return [4 /*yield*/, this.broadcaster.broadcast('BeforeTransactionStart')];\n                    case 1:\n                        _a.sent();\n                        this.isTransactionActive = true;\n                        return [4 /*yield*/, this.client.startTransaction()];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.broadcaster.broadcast('AfterTransactionStart')];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Commits transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    AuroraDataApiPostgresQueryRunner.prototype.commitTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive)\n                            throw new TransactionNotStartedError();\n                        return [4 /*yield*/, this.broadcaster.broadcast('BeforeTransactionCommit')];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.client.commitTransaction()];\n                    case 2:\n                        _a.sent();\n                        this.isTransactionActive = false;\n                        return [4 /*yield*/, this.broadcaster.broadcast('AfterTransactionCommit')];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Rollbacks transaction.\n     * Error will be thrown if transaction was not started.\n     */\n    AuroraDataApiPostgresQueryRunner.prototype.rollbackTransaction = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isTransactionActive)\n                            throw new TransactionNotStartedError();\n                        return [4 /*yield*/, this.broadcaster.broadcast('BeforeTransactionRollback')];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.client.rollbackTransaction()];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, this.broadcaster.broadcast('AfterTransactionRollback')];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes a given SQL query.\n     */\n    AuroraDataApiPostgresQueryRunner.prototype.query = function (query, parameters, useStructuredResult) {\n        if (useStructuredResult === void 0) { useStructuredResult = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var raw, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isReleased)\n                            throw new QueryRunnerAlreadyReleasedError();\n                        return [4 /*yield*/, this.client.query(query, parameters)];\n                    case 1:\n                        raw = _a.sent();\n                        result = new QueryResult();\n                        result.raw = raw;\n                        if ((raw === null || raw === void 0 ? void 0 : raw.hasOwnProperty('records')) && Array.isArray(raw.records)) {\n                            result.records = raw.records;\n                        }\n                        if (raw === null || raw === void 0 ? void 0 : raw.hasOwnProperty('numberOfRecordsUpdated')) {\n                            result.affected = raw.numberOfRecordsUpdated;\n                        }\n                        if (!useStructuredResult) {\n                            return [2 /*return*/, result.raw];\n                        }\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    return AuroraDataApiPostgresQueryRunner;\n}(PostgresQueryRunnerWrapper));\nexport { AuroraDataApiPostgresQueryRunner };\n\n//# sourceMappingURL=AuroraDataApiPostgresQueryRunner.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { PostgresDriver } from \"../postgres/PostgresDriver\";\nimport { PlatformTools } from \"../../platform/PlatformTools\";\nimport { AuroraDataApiPostgresQueryRunner } from \"../aurora-data-api-pg/AuroraDataApiPostgresQueryRunner\";\nimport { ApplyValueTransformers } from \"../../util/ApplyValueTransformers\";\nimport { DriverUtils } from \"../DriverUtils\";\nvar PostgresWrapper = /** @class */ (function (_super) {\n    __extends(PostgresWrapper, _super);\n    function PostgresWrapper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PostgresWrapper;\n}(PostgresDriver));\nvar AuroraDataApiPostgresDriver = /** @class */ (function (_super) {\n    __extends(AuroraDataApiPostgresDriver, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function AuroraDataApiPostgresDriver(connection) {\n        var _this = _super.call(this) || this;\n        _this.connection = connection;\n        _this.options = connection.options;\n        _this.isReplicated = false;\n        // load data-api package\n        _this.loadDependencies();\n        _this.client = new _this.DataApiDriver(_this.options.region, _this.options.secretArn, _this.options.resourceArn, _this.options.database, function (query, parameters) { return _this.connection.logger.logQuery(query, parameters); }, _this.options.serviceConfigOptions, _this.options.formatOptions);\n        _this.database = DriverUtils.buildDriverOptions(_this.options).database;\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     * Based on pooling options, it can either create connection immediately,\n     * either create a pool and create connection when needed.\n     */\n    AuroraDataApiPostgresDriver.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Closes connection with database.\n     */\n    AuroraDataApiPostgresDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    AuroraDataApiPostgresDriver.prototype.createQueryRunner = function (mode) {\n        var _this = this;\n        return new AuroraDataApiPostgresQueryRunner(this, new this.DataApiDriver(this.options.region, this.options.secretArn, this.options.resourceArn, this.options.database, function (query, parameters) { return _this.connection.logger.logQuery(query, parameters); }, this.options.serviceConfigOptions, this.options.formatOptions), mode);\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type and metadata.\n     */\n    AuroraDataApiPostgresDriver.prototype.preparePersistentValue = function (value, columnMetadata) {\n        if (this.options.formatOptions && this.options.formatOptions.castParameters === false) {\n            return _super.prototype.preparePersistentValue.call(this, value, columnMetadata);\n        }\n        if (columnMetadata.transformer)\n            value = ApplyValueTransformers.transformTo(columnMetadata.transformer, value);\n        return this.client.preparePersistentValue(value, columnMetadata);\n    };\n    /**\n     * Prepares given value to a value to be persisted, based on its column type and metadata.\n     */\n    AuroraDataApiPostgresDriver.prototype.prepareHydratedValue = function (value, columnMetadata) {\n        if (this.options.formatOptions && this.options.formatOptions.castParameters === false) {\n            return _super.prototype.prepareHydratedValue.call(this, value, columnMetadata);\n        }\n        if (columnMetadata.transformer)\n            value = ApplyValueTransformers.transformFrom(columnMetadata.transformer, value);\n        return this.client.prepareHydratedValue(value, columnMetadata);\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * If driver dependency is not given explicitly, then try to load it via \"require\".\n     */\n    AuroraDataApiPostgresDriver.prototype.loadDependencies = function () {\n        var driver = this.options.driver || PlatformTools.load(\"typeorm-aurora-data-api-driver\");\n        var pg = driver.pg;\n        this.DataApiDriver = pg;\n    };\n    /**\n     * Executes given query.\n     */\n    AuroraDataApiPostgresDriver.prototype.executeQuery = function (connection, query) {\n        return this.connection.query(query);\n    };\n    /**\n     * Makes any action after connection (e.g. create extensions in Postgres driver).\n     */\n    AuroraDataApiPostgresDriver.prototype.afterConnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var extensionsMetadata;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.checkMetadataForExtensions()];\n                    case 1:\n                        extensionsMetadata = _a.sent();\n                        if (!extensionsMetadata.hasExtensions) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.enableExtensions(extensionsMetadata, this.connection)];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3: return [2 /*return*/, Promise.resolve()];\n                }\n            });\n        });\n    };\n    return AuroraDataApiPostgresDriver;\n}(PostgresWrapper));\nexport { AuroraDataApiPostgresDriver };\n\n//# sourceMappingURL=AuroraDataApiPostgresDriver.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { QueryRunnerAlreadyReleasedError } from \"../../error/QueryRunnerAlreadyReleasedError\";\nimport { QueryFailedError } from \"../../error/QueryFailedError\";\nimport { AbstractSqliteQueryRunner } from \"../sqlite-abstract/AbstractSqliteQueryRunner\";\nimport { Broadcaster } from \"../../subscriber/Broadcaster\";\nimport { QueryResult } from \"../../query-runner/QueryResult\";\n/**\n * Runs queries on a single sqlite database connection.\n */\nvar CapacitorQueryRunner = /** @class */ (function (_super) {\n    __extends(CapacitorQueryRunner, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function CapacitorQueryRunner(driver) {\n        var _this = _super.call(this) || this;\n        _this.driver = driver;\n        _this.connection = driver.connection;\n        _this.broadcaster = new Broadcaster(_this);\n        return _this;\n    }\n    CapacitorQueryRunner.prototype.executeSet = function (set) {\n        return __awaiter(this, void 0, void 0, function () {\n            var databaseConnection;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isReleased)\n                            throw new QueryRunnerAlreadyReleasedError();\n                        return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        return [2 /*return*/, databaseConnection.executeSet(set, false)];\n                }\n            });\n        });\n    };\n    /**\n     * Executes a given SQL query.\n     */\n    CapacitorQueryRunner.prototype.query = function (query, parameters, useStructuredResult) {\n        if (useStructuredResult === void 0) { useStructuredResult = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var databaseConnection, command, raw, result, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isReleased)\n                            throw new QueryRunnerAlreadyReleasedError();\n                        return [4 /*yield*/, this.connect()];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        this.driver.connection.logger.logQuery(query, parameters, this);\n                        command = query.substr(0, query.indexOf(\" \"));\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 9, , 10]);\n                        raw = void 0;\n                        if (!([\"BEGIN\", \"ROLLBACK\", \"COMMIT\", \"CREATE\", \"ALTER\", \"DROP\"].indexOf(command) !== -1)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, databaseConnection.execute(query, false)];\n                    case 3:\n                        raw = _a.sent();\n                        return [3 /*break*/, 8];\n                    case 4:\n                        if (!([\"INSERT\", \"UPDATE\", \"DELETE\"].indexOf(command) !== -1)) return [3 /*break*/, 6];\n                        return [4 /*yield*/, databaseConnection.run(query, parameters, false)];\n                    case 5:\n                        raw = _a.sent();\n                        return [3 /*break*/, 8];\n                    case 6: return [4 /*yield*/, databaseConnection.query(query, parameters || [])];\n                    case 7:\n                        raw = _a.sent();\n                        _a.label = 8;\n                    case 8:\n                        result = new QueryResult();\n                        if (raw === null || raw === void 0 ? void 0 : raw.hasOwnProperty('values')) {\n                            result.raw = raw.values;\n                            result.records = raw.values;\n                        }\n                        if (raw === null || raw === void 0 ? void 0 : raw.hasOwnProperty('changes')) {\n                            result.affected = raw.changes.changes;\n                            result.raw = raw.changes.lastId || raw.changes.changes;\n                        }\n                        if (!useStructuredResult) {\n                            return [2 /*return*/, result.raw];\n                        }\n                        return [2 /*return*/, result];\n                    case 9:\n                        err_1 = _a.sent();\n                        this.driver.connection.logger.logQueryError(err_1, query, parameters, this);\n                        throw new QueryFailedError(query, parameters, err_1);\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Parametrizes given object of values. Used to create column=value queries.\n     */\n    CapacitorQueryRunner.prototype.parametrize = function (objectLiteral) {\n        return Object.keys(objectLiteral).map(function (key) { return \"\\\"\" + key + \"\\\"\" + \"=?\"; });\n    };\n    return CapacitorQueryRunner;\n}(AbstractSqliteQueryRunner));\nexport { CapacitorQueryRunner };\n\n//# sourceMappingURL=CapacitorQueryRunner.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { AbstractSqliteDriver } from \"../sqlite-abstract/AbstractSqliteDriver\";\nimport { CapacitorQueryRunner } from \"./CapacitorQueryRunner\";\nimport { DriverOptionNotSetError, DriverPackageNotInstalledError, } from \"../../error\";\nvar CapacitorDriver = /** @class */ (function (_super) {\n    __extends(CapacitorDriver, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function CapacitorDriver(connection) {\n        var _this = _super.call(this, connection) || this;\n        _this.database = _this.options.database;\n        _this.driver = _this.options.driver;\n        // validate options to make sure everything is set\n        if (!_this.options.database)\n            throw new DriverOptionNotSetError(\"database\");\n        if (!_this.options.driver)\n            throw new DriverOptionNotSetError(\"driver\");\n        // load sqlite package\n        _this.sqlite = _this.options.driver;\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     */\n    CapacitorDriver.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.databaseConnection = this.createDatabaseConnection();\n                        return [4 /*yield*/, this.databaseConnection];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Closes connection with database.\n     */\n    CapacitorDriver.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var databaseConnection;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.queryRunner = undefined;\n                        return [4 /*yield*/, this.databaseConnection];\n                    case 1:\n                        databaseConnection = _a.sent();\n                        return [2 /*return*/, databaseConnection.close().then(function () {\n                                _this.databaseConnection = undefined;\n                            })];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a query runner used to execute database queries.\n     */\n    CapacitorDriver.prototype.createQueryRunner = function (mode) {\n        if (!this.queryRunner)\n            this.queryRunner = new CapacitorQueryRunner(this);\n        return this.queryRunner;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates connection with the database.\n     */\n    CapacitorDriver.prototype.createDatabaseConnection = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var databaseMode, isDatabaseEncryted, databaseVersion, connection;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        databaseMode = this.options.mode || \"no-encryption\";\n                        isDatabaseEncryted = databaseMode !== \"no-encryption\";\n                        databaseVersion = typeof this.options.version === \"undefined\"\n                            ? 1\n                            : this.options.version;\n                        return [4 /*yield*/, this.sqlite.createConnection(this.options.database, isDatabaseEncryted, databaseMode, databaseVersion)];\n                    case 1:\n                        connection = _a.sent();\n                        return [4 /*yield*/, connection.open()];\n                    case 2:\n                        _a.sent();\n                        // we need to enable foreign keys in sqlite to make sure all foreign key related features\n                        // working properly. this also makes onDelete to work with sqlite.\n                        return [4 /*yield*/, connection.query(\"PRAGMA foreign_keys = ON\")];\n                    case 3:\n                        // we need to enable foreign keys in sqlite to make sure all foreign key related features\n                        // working properly. this also makes onDelete to work with sqlite.\n                        _a.sent();\n                        if (!(this.options.journalMode &&\n                            [\"DELETE\", \"TRUNCATE\", \"PERSIST\", \"MEMORY\", \"WAL\", \"OFF\"].indexOf(this.options.journalMode) !== -1)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, connection.query(\"PRAGMA journal_mode = \" + this.options.journalMode)];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [2 /*return*/, connection];\n                }\n            });\n        });\n    };\n    CapacitorDriver.prototype.loadDependencies = function () {\n        this.sqlite = this.driver;\n        if (!this.driver) {\n            throw new DriverPackageNotInstalledError(\"Capacitor\", \"@capacitor-community/sqlite\");\n        }\n    };\n    return CapacitorDriver;\n}(AbstractSqliteDriver));\nexport { CapacitorDriver };\n\n//# sourceMappingURL=CapacitorDriver.js.map\n","import { MissingDriverError } from \"../error/MissingDriverError\";\nimport { CockroachDriver } from \"./cockroachdb/CockroachDriver\";\nimport { MongoDriver } from \"./mongodb/MongoDriver\";\nimport { SqlServerDriver } from \"./sqlserver/SqlServerDriver\";\nimport { OracleDriver } from \"./oracle/OracleDriver\";\nimport { SqliteDriver } from \"./sqlite/SqliteDriver\";\nimport { CordovaDriver } from \"./cordova/CordovaDriver\";\nimport { ReactNativeDriver } from \"./react-native/ReactNativeDriver\";\nimport { NativescriptDriver } from \"./nativescript/NativescriptDriver\";\nimport { SqljsDriver } from \"./sqljs/SqljsDriver\";\nimport { MysqlDriver } from \"./mysql/MysqlDriver\";\nimport { PostgresDriver } from \"./postgres/PostgresDriver\";\nimport { ExpoDriver } from \"./expo/ExpoDriver\";\nimport { AuroraDataApiDriver } from \"./aurora-data-api/AuroraDataApiDriver\";\nimport { AuroraDataApiPostgresDriver } from \"./aurora-data-api-pg/AuroraDataApiPostgresDriver\";\nimport { SapDriver } from \"./sap/SapDriver\";\nimport { BetterSqlite3Driver } from \"./better-sqlite3/BetterSqlite3Driver\";\nimport { CapacitorDriver } from \"./capacitor/CapacitorDriver\";\n/**\n * Helps to create drivers.\n */\nvar DriverFactory = /** @class */ (function () {\n    function DriverFactory() {\n    }\n    /**\n     * Creates a new driver depend on a given connection's driver type.\n     */\n    DriverFactory.prototype.create = function (connection) {\n        var type = connection.options.type;\n        switch (type) {\n            case \"mysql\":\n                return new MysqlDriver(connection);\n            case \"postgres\":\n                return new PostgresDriver(connection);\n            case \"cockroachdb\":\n                return new CockroachDriver(connection);\n            case \"sap\":\n                return new SapDriver(connection);\n            case \"mariadb\":\n                return new MysqlDriver(connection);\n            case \"sqlite\":\n                return new SqliteDriver(connection);\n            case \"better-sqlite3\":\n                return new BetterSqlite3Driver(connection);\n            case \"cordova\":\n                return new CordovaDriver(connection);\n            case \"nativescript\":\n                return new NativescriptDriver(connection);\n            case \"react-native\":\n                return new ReactNativeDriver(connection);\n            case \"sqljs\":\n                return new SqljsDriver(connection);\n            case \"oracle\":\n                return new OracleDriver(connection);\n            case \"mssql\":\n                return new SqlServerDriver(connection);\n            case \"mongodb\":\n                return new MongoDriver(connection);\n            case \"expo\":\n                return new ExpoDriver(connection);\n            case \"aurora-data-api\":\n                return new AuroraDataApiDriver(connection);\n            case \"aurora-data-api-pg\":\n                return new AuroraDataApiPostgresDriver(connection);\n            case \"capacitor\":\n                return new CapacitorDriver(connection);\n            default:\n                throw new MissingDriverError(type, [\n                    \"aurora-data-api\",\n                    \"aurora-data-api-pg\",\n                    \"better-sqlite3\",\n                    \"capacitor\",\n                    \"cockroachdb\",\n                    \"cordova\",\n                    \"expo\",\n                    \"mariadb\",\n                    \"mongodb\",\n                    \"mssql\",\n                    \"mysql\",\n                    \"nativescript\",\n                    \"oracle\",\n                    \"postgres\",\n                    \"react-native\",\n                    \"sap\",\n                    \"sqlite\",\n                    \"sqljs\",\n                ]);\n        }\n    };\n    return DriverFactory;\n}());\nexport { DriverFactory };\n\n//# sourceMappingURL=DriverFactory.js.map\n","/**\n * Dummy functions for replacement via `package.json` in browser builds.\n *\n * If we don't include these functions typeorm will throw an error on runtime\n * as well as during webpack builds.\n */\n/**\n * Loads all exported classes from the given directory.\n */\nexport function importClassesFromDirectories(logger, directories, formats) {\n    if (formats === void 0) { formats = [\".js\", \".cjs\", \".ts\"]; }\n    return [];\n}\n/**\n * Loads all json files from the given directory.\n */\nexport function importJsonsFromDirectories(directories, format) {\n    if (format === void 0) { format = \".json\"; }\n    return [];\n}\n\n//# sourceMappingURL=BrowserDirectoryExportedClassesLoader.js.map\n","/**\n * Container to be used by this library for inversion control. If container was not implicitly set then by default\n * container simply creates a new instance of the given class.\n */\nvar defaultContainer = new (/** @class */ (function () {\n    function class_1() {\n        this.instances = [];\n    }\n    class_1.prototype.get = function (someClass) {\n        var instance = this.instances.find(function (i) { return i.type === someClass; });\n        if (!instance) {\n            instance = { type: someClass, object: new someClass() };\n            this.instances.push(instance);\n        }\n        return instance.object;\n    };\n    return class_1;\n}()))();\nvar userContainer;\nvar userContainerOptions;\n/**\n * Sets container to be used by this library.\n */\nexport function useContainer(iocContainer, options) {\n    userContainer = iocContainer;\n    userContainerOptions = options;\n}\n/**\n * Gets the IOC container used by this library.\n */\nexport function getFromContainer(someClass) {\n    if (userContainer) {\n        try {\n            var instance = userContainer.get(someClass);\n            if (instance)\n                return instance;\n            if (!userContainerOptions || !userContainerOptions.fallback)\n                return instance;\n        }\n        catch (error) {\n            if (!userContainerOptions || !userContainerOptions.fallbackOnErrors)\n                throw error;\n        }\n    }\n    return defaultContainer.get(someClass);\n}\n\n//# sourceMappingURL=container.js.map\n","import { TypeORMError } from \"../error\";\n/**\n * Index metadata contains all information about table's index.\n */\nvar IndexMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function IndexMetadata(options) {\n        /**\n         * Indicates if this index must be unique.\n         */\n        this.isUnique = false;\n        /**\n         * The SPATIAL modifier indexes the entire column and does not allow indexed columns to contain NULL values.\n         * Works only in MySQL.\n         */\n        this.isSpatial = false;\n        /**\n         * The FULLTEXT modifier indexes the entire column and does not allow prefixing.\n         * Works only in MySQL.\n         */\n        this.isFulltext = false;\n        /**\n         * Indicates if this index must synchronize with database index.\n         */\n        this.synchronize = true;\n        /**\n         * Indexed columns.\n         */\n        this.columns = [];\n        /**\n         * Map of column names with order set.\n         * Used only by MongoDB driver.\n         */\n        this.columnNamesWithOrderingMap = {};\n        this.entityMetadata = options.entityMetadata;\n        this.embeddedMetadata = options.embeddedMetadata;\n        if (options.columns)\n            this.columns = options.columns;\n        if (options.args) {\n            this.target = options.args.target;\n            if (options.args.synchronize !== null && options.args.synchronize !== undefined)\n                this.synchronize = options.args.synchronize;\n            this.isUnique = !!options.args.unique;\n            this.isSpatial = !!options.args.spatial;\n            this.isFulltext = !!options.args.fulltext;\n            this.parser = options.args.parser;\n            this.where = options.args.where;\n            this.isSparse = options.args.sparse;\n            this.isBackground = options.args.background;\n            this.expireAfterSeconds = options.args.expireAfterSeconds;\n            this.givenName = options.args.name;\n            this.givenColumnNames = options.args.columns;\n        }\n    }\n    // ---------------------------------------------------------------------\n    // Public Build Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend index properties.\n     * Must be called after all entity metadata's properties map, columns and relations are built.\n     */\n    IndexMetadata.prototype.build = function (namingStrategy) {\n        var _this = this;\n        if (this.synchronize === false) {\n            this.name = this.givenName;\n            return this;\n        }\n        var map = {};\n        // if columns already an array of string then simply return it\n        if (this.givenColumnNames) {\n            var columnPropertyPaths = [];\n            if (Array.isArray(this.givenColumnNames)) {\n                columnPropertyPaths = this.givenColumnNames.map(function (columnName) {\n                    if (_this.embeddedMetadata)\n                        return _this.embeddedMetadata.propertyPath + \".\" + columnName;\n                    return columnName.trim();\n                });\n                columnPropertyPaths.forEach(function (propertyPath) { return map[propertyPath] = 1; });\n            }\n            else { // todo: indices in embeds are not implemented in this syntax. deprecate this syntax?\n                // if columns is a function that returns array of field names then execute it and get columns names from it\n                var columnsFnResult_1 = this.givenColumnNames(this.entityMetadata.propertiesMap);\n                if (Array.isArray(columnsFnResult_1)) {\n                    columnPropertyPaths = columnsFnResult_1.map(function (i) { return String(i); });\n                    columnPropertyPaths.forEach(function (name) { return map[name] = 1; });\n                }\n                else {\n                    columnPropertyPaths = Object.keys(columnsFnResult_1).map(function (i) { return String(i); });\n                    Object.keys(columnsFnResult_1).forEach(function (columnName) { return map[columnName] = columnsFnResult_1[columnName]; });\n                }\n            }\n            this.columns = columnPropertyPaths.map(function (propertyPath) {\n                var columnWithSameName = _this.entityMetadata.columns.find(function (column) { return column.propertyPath === propertyPath; });\n                if (columnWithSameName) {\n                    return [columnWithSameName];\n                }\n                var relationWithSameName = _this.entityMetadata.relations.find(function (relation) { return relation.isWithJoinColumn && relation.propertyName === propertyPath; });\n                if (relationWithSameName) {\n                    return relationWithSameName.joinColumns;\n                }\n                var indexName = _this.givenName ? \"\\\"\" + _this.givenName + \"\\\" \" : \"\";\n                var entityName = _this.entityMetadata.targetName;\n                throw new TypeORMError(\"Index \" + indexName + \"contains column that is missing in the entity (\" + entityName + \"): \" + propertyPath);\n            })\n                .reduce(function (a, b) { return a.concat(b); });\n        }\n        this.columnNamesWithOrderingMap = Object.keys(map).reduce(function (updatedMap, key) {\n            var column = _this.entityMetadata.columns.find(function (column) { return column.propertyPath === key; });\n            if (column)\n                updatedMap[column.databasePath] = map[key];\n            return updatedMap;\n        }, {});\n        this.name = this.givenName ? this.givenName : namingStrategy.indexName(this.entityMetadata.tableName, this.columns.map(function (column) { return column.databaseName; }), this.where);\n        return this;\n    };\n    return IndexMetadata;\n}());\nexport { IndexMetadata };\n\n//# sourceMappingURL=IndexMetadata.js.map\n","import { __read, __spreadArray } from \"tslib\";\nimport { EntityMetadata } from \"./EntityMetadata\";\nimport { TypeORMError } from \"../error\";\n/**\n * Contains all information about some entity's relation.\n */\nvar RelationMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function RelationMetadata(options) {\n        /**\n         * Indicates if this is a parent (can be only many-to-one relation) relation in the tree tables.\n         */\n        this.isTreeParent = false;\n        /**\n         * Indicates if this is a children (can be only one-to-many relation) relation in the tree tables.\n         */\n        this.isTreeChildren = false;\n        /**\n         * Indicates if this relation's column is a primary key.\n         * Can be used only for many-to-one and owner one-to-one relations.\n         */\n        this.isPrimary = false;\n        /**\n         * Indicates if this relation is lazily loaded.\n         */\n        this.isLazy = false;\n        /**\n         * Indicates if this relation is eagerly loaded.\n         */\n        this.isEager = false;\n        /**\n         * Indicates if persistence is enabled for the relation.\n         * By default its enabled, but if you want to avoid any changes in the relation to be reflected in the database you can disable it.\n         * If its disabled you can only change a relation from inverse side of a relation or using relation query builder functionality.\n         * This is useful for performance optimization since its disabling avoid multiple extra queries during entity save.\n         */\n        this.persistenceEnabled = true;\n        /**\n         * If set to true then related objects are allowed to be inserted to the database.\n         */\n        this.isCascadeInsert = false;\n        /**\n         * If set to true then related objects are allowed to be updated in the database.\n         */\n        this.isCascadeUpdate = false;\n        /**\n         * If set to true then related objects are allowed to be remove from the database.\n         */\n        this.isCascadeRemove = false;\n        /**\n         * If set to true then related objects are allowed to be soft-removed from the database.\n         */\n        this.isCascadeSoftRemove = false;\n        /**\n         * If set to true then related objects are allowed to be recovered from the database.\n         */\n        this.isCascadeRecover = false;\n        /**\n         * Indicates if relation column value can be nullable or not.\n         */\n        this.isNullable = true;\n        /**\n         * Indicates whether foreign key constraints will be created for join columns.\n         * Can be used only for many-to-one and owner one-to-one relations.\n         * Defaults to true.\n         */\n        this.createForeignKeyConstraints = true;\n        /**\n         * Indicates if this side is an owner of this relation.\n         */\n        this.isOwning = false;\n        /**\n         * Checks if this relation's type is \"one-to-one\".\n         */\n        this.isOneToOne = false;\n        /**\n         * Checks if this relation is owner side of the \"one-to-one\" relation.\n         * Owner side means this side of relation has a join column in the table.\n         */\n        this.isOneToOneOwner = false;\n        /**\n         * Checks if this relation has a join column (e.g. is it many-to-one or one-to-one owner side).\n         */\n        this.isWithJoinColumn = false;\n        /**\n         * Checks if this relation is NOT owner side of the \"one-to-one\" relation.\n         * NOT owner side means this side of relation does not have a join column in the table.\n         */\n        this.isOneToOneNotOwner = false;\n        /**\n         * Checks if this relation's type is \"one-to-many\".\n         */\n        this.isOneToMany = false;\n        /**\n         * Checks if this relation's type is \"many-to-one\".\n         */\n        this.isManyToOne = false;\n        /**\n         * Checks if this relation's type is \"many-to-many\".\n         */\n        this.isManyToMany = false;\n        /**\n         * Checks if this relation's type is \"many-to-many\", and is owner side of the relationship.\n         * Owner side means this side of relation has a join table.\n         */\n        this.isManyToManyOwner = false;\n        /**\n         * Checks if this relation's type is \"many-to-many\", and is NOT owner side of the relationship.\n         * Not owner side means this side of relation does not have a join table.\n         */\n        this.isManyToManyNotOwner = false;\n        /**\n         * Foreign keys created for this relation.\n         */\n        this.foreignKeys = [];\n        /**\n         * Join table columns.\n         * Join columns can be obtained only from owner side of the relation.\n         * From non-owner side of the relation join columns will be empty.\n         * If this relation is a many-to-one/one-to-one then it takes join columns from the current entity.\n         * If this relation is many-to-many then it takes all owner join columns from the junction entity.\n         */\n        this.joinColumns = [];\n        /**\n         * Inverse join table columns.\n         * Inverse join columns are supported only for many-to-many relations\n         * and can be obtained only from owner side of the relation.\n         * From non-owner side of the relation join columns will be undefined.\n         */\n        this.inverseJoinColumns = [];\n        this.entityMetadata = options.entityMetadata;\n        this.embeddedMetadata = options.embeddedMetadata;\n        var args = options.args;\n        this.target = args.target;\n        this.propertyName = args.propertyName;\n        this.relationType = args.relationType;\n        if (args.inverseSideProperty)\n            this.givenInverseSidePropertyFactory = args.inverseSideProperty;\n        this.isLazy = args.isLazy || false;\n        // this.isCascadeInsert = args.options.cascade === true || (args.options.cascade instanceof Array && args.options.cascade.indexOf(\"insert\") !== -1);\n        // this.isCascadeUpdate = args.options.cascade === true || (args.options.cascade instanceof Array && args.options.cascade.indexOf(\"update\") !== -1);\n        // this.isCascadeRemove = args.options.cascade === true || (args.options.cascade instanceof Array && args.options.cascade.indexOf(\"remove\") !== -1);\n        // this.isCascadeSoftRemove = args.options.cascade === true || (args.options.cascade instanceof Array && args.options.cascade.indexOf(\"soft-remove\") !== -1);\n        // this.isCascadeRecover = args.options.cascade === true || (args.options.cascade instanceof Array && args.options.cascade.indexOf(\"recover\") !== -1);\n        this.isCascadeInsert = args.options.cascade === true || (Array.isArray(args.options.cascade) && args.options.cascade.indexOf(\"insert\") !== -1);\n        this.isCascadeUpdate = args.options.cascade === true || (Array.isArray(args.options.cascade) && args.options.cascade.indexOf(\"update\") !== -1);\n        this.isCascadeRemove = args.options.cascade === true || (Array.isArray(args.options.cascade) && args.options.cascade.indexOf(\"remove\") !== -1);\n        this.isCascadeSoftRemove = args.options.cascade === true || (Array.isArray(args.options.cascade) && args.options.cascade.indexOf(\"soft-remove\") !== -1);\n        this.isCascadeRecover = args.options.cascade === true || (Array.isArray(args.options.cascade) && args.options.cascade.indexOf(\"recover\") !== -1);\n        this.isPrimary = args.options.primary || false;\n        this.isNullable = args.options.nullable === false || this.isPrimary ? false : true;\n        this.onDelete = args.options.onDelete;\n        this.onUpdate = args.options.onUpdate;\n        this.deferrable = args.options.deferrable;\n        this.createForeignKeyConstraints = args.options.createForeignKeyConstraints === false ? false : true;\n        this.isEager = args.options.eager || false;\n        this.persistenceEnabled = args.options.persistence === false ? false : true;\n        this.orphanedRowAction = args.options.orphanedRowAction || \"nullify\";\n        this.isTreeParent = args.isTreeParent || false;\n        this.isTreeChildren = args.isTreeChildren || false;\n        this.type = args.type instanceof Function ? args.type() : args.type;\n        this.isOneToOne = this.relationType === \"one-to-one\";\n        this.isOneToMany = this.relationType === \"one-to-many\";\n        this.isManyToOne = this.relationType === \"many-to-one\";\n        this.isManyToMany = this.relationType === \"many-to-many\";\n        this.isOneToOneNotOwner = this.isOneToOne ? true : false;\n        this.isManyToManyNotOwner = this.isManyToMany ? true : false;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Creates join column ids map from the given related entity ids array.\n     */\n    RelationMetadata.prototype.getRelationIdMap = function (entity) {\n        var joinColumns = this.isOwning ? this.joinColumns : this.inverseRelation.joinColumns;\n        var referencedColumns = joinColumns.map(function (joinColumn) { return joinColumn.referencedColumn; });\n        // console.log(\"entity\", entity);\n        // console.log(\"referencedColumns\", referencedColumns);\n        return EntityMetadata.getValueMap(entity, referencedColumns);\n    };\n    /**\n     * Ensures that given object is an entity id map.\n     * If given id is an object then it means its already id map.\n     * If given id isn't an object then it means its a value of the id column\n     * and it creates a new id map with this value and name of the primary column.\n     */\n    RelationMetadata.prototype.ensureRelationIdMap = function (id) {\n        if (id instanceof Object)\n            return id;\n        var joinColumns = this.isOwning ? this.joinColumns : this.inverseRelation.joinColumns;\n        var referencedColumns = joinColumns.map(function (joinColumn) { return joinColumn.referencedColumn; });\n        if (referencedColumns.length > 1)\n            throw new TypeORMError(\"Cannot create relation id map for a single value because relation contains multiple referenced columns.\");\n        return referencedColumns[0].createValueMap(id);\n    };\n    /**\n     * Extracts column value from the given entity.\n     * If column is in embedded (or recursive embedded) it extracts its value from there.\n     */\n    RelationMetadata.prototype.getEntityValue = function (entity, getLazyRelationsPromiseValue) {\n        if (getLazyRelationsPromiseValue === void 0) { getLazyRelationsPromiseValue = false; }\n        if (entity === null || entity === undefined)\n            return undefined;\n        // extract column value from embeddeds of entity if column is in embedded\n        if (this.embeddedMetadata) {\n            // example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeddeds\n            // we need to get value of \"id\" column from the post real entity object\n            // first step - we extract all parent properties of the entity relative to this column, e.g. [data, information, counters]\n            var propertyNames = __spreadArray([], __read(this.embeddedMetadata.parentPropertyNames), false);\n            // next we need to access post[data][information][counters][this.propertyName] to get column value from the counters\n            // this recursive function takes array of generated property names and gets the post[data][information][counters] embed\n            var extractEmbeddedColumnValue_1 = function (propertyNames, value) {\n                var propertyName = propertyNames.shift();\n                if (propertyName) {\n                    if (value[propertyName]) {\n                        return extractEmbeddedColumnValue_1(propertyNames, value[propertyName]);\n                    }\n                    return undefined;\n                }\n                return value;\n            };\n            // once we get nested embed object we get its column, e.g. post[data][information][counters][this.propertyName]\n            var embeddedObject = extractEmbeddedColumnValue_1(propertyNames, entity);\n            if (this.isLazy) {\n                if (embeddedObject[\"__\" + this.propertyName + \"__\"] !== undefined)\n                    return embeddedObject[\"__\" + this.propertyName + \"__\"];\n                if (getLazyRelationsPromiseValue === true)\n                    return embeddedObject[this.propertyName];\n                return undefined;\n            }\n            return embeddedObject ? embeddedObject[this.isLazy ? \"__\" + this.propertyName + \"__\" : this.propertyName] : undefined;\n        }\n        else { // no embeds - no problems. Simply return column name by property name of the entity\n            if (this.isLazy) {\n                if (entity[\"__\" + this.propertyName + \"__\"] !== undefined)\n                    return entity[\"__\" + this.propertyName + \"__\"];\n                if (getLazyRelationsPromiseValue === true)\n                    return entity[this.propertyName];\n                return undefined;\n            }\n            return entity[this.propertyName];\n        }\n    };\n    /**\n     * Sets given entity's relation's value.\n     * Using of this method helps to set entity relation's value of the lazy and non-lazy relations.\n     *\n     * If merge is set to true, it merges given value into currently\n     */\n    RelationMetadata.prototype.setEntityValue = function (entity, value) {\n        var propertyName = this.isLazy ? \"__\" + this.propertyName + \"__\" : this.propertyName;\n        if (this.embeddedMetadata) {\n            // first step - we extract all parent properties of the entity relative to this column, e.g. [data, information, counters]\n            var extractEmbeddedColumnValue_2 = function (embeddedMetadatas, map) {\n                // if (!object[embeddedMetadata.propertyName])\n                //     object[embeddedMetadata.propertyName] = embeddedMetadata.create();\n                var embeddedMetadata = embeddedMetadatas.shift();\n                if (embeddedMetadata) {\n                    if (!map[embeddedMetadata.propertyName])\n                        map[embeddedMetadata.propertyName] = embeddedMetadata.create();\n                    extractEmbeddedColumnValue_2(embeddedMetadatas, map[embeddedMetadata.propertyName]);\n                    return map;\n                }\n                map[propertyName] = value;\n                return map;\n            };\n            return extractEmbeddedColumnValue_2(__spreadArray([], __read(this.embeddedMetadata.embeddedMetadataTree), false), entity);\n        }\n        else {\n            entity[propertyName] = value;\n        }\n    };\n    /**\n     * Creates entity id map from the given entity ids array.\n     */\n    RelationMetadata.prototype.createValueMap = function (value) {\n        var _a;\n        var _this = this;\n        // extract column value from embeds of entity if column is in embedded\n        if (this.embeddedMetadata) {\n            // example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeddeds\n            // we need to get value of \"id\" column from the post real entity object and return it in a\n            // { data: { information: { counters: { id: ... } } } } format\n            // first step - we extract all parent properties of the entity relative to this column, e.g. [data, information, counters]\n            var propertyNames = __spreadArray([], __read(this.embeddedMetadata.parentPropertyNames), false);\n            // now need to access post[data][information][counters] to get column value from the counters\n            // and on each step we need to create complex literal object, e.g. first { data },\n            // then { data: { information } }, then { data: { information: { counters } } },\n            // then { data: { information: { counters: [this.propertyName]: entity[data][information][counters][this.propertyName] } } }\n            // this recursive function helps doing that\n            var extractEmbeddedColumnValue_3 = function (propertyNames, map) {\n                var propertyName = propertyNames.shift();\n                if (propertyName) {\n                    map[propertyName] = {};\n                    extractEmbeddedColumnValue_3(propertyNames, map[propertyName]);\n                    return map;\n                }\n                map[_this.propertyName] = value;\n                return map;\n            };\n            return extractEmbeddedColumnValue_3(propertyNames, {});\n        }\n        else { // no embeds - no problems. Simply return column property name and its value of the entity\n            return _a = {}, _a[this.propertyName] = value, _a;\n        }\n    };\n    // ---------------------------------------------------------------------\n    // Builder Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend relation metadata properties.\n     * This builder method should be used only after embedded metadata tree was build.\n     */\n    RelationMetadata.prototype.build = function () {\n        this.propertyPath = this.buildPropertyPath();\n    };\n    /**\n     * Registers given foreign keys in the relation.\n     * This builder method should be used to register foreign key in the relation.\n     */\n    RelationMetadata.prototype.registerForeignKeys = function () {\n        var _a;\n        var foreignKeys = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            foreignKeys[_i] = arguments[_i];\n        }\n        (_a = this.foreignKeys).push.apply(_a, __spreadArray([], __read(foreignKeys), false));\n    };\n    /**\n     * Registers given join columns in the relation.\n     * This builder method should be used to register join column in the relation.\n     */\n    RelationMetadata.prototype.registerJoinColumns = function (joinColumns, inverseJoinColumns) {\n        if (joinColumns === void 0) { joinColumns = []; }\n        if (inverseJoinColumns === void 0) { inverseJoinColumns = []; }\n        this.joinColumns = joinColumns;\n        this.inverseJoinColumns = inverseJoinColumns;\n        this.isOwning = this.isManyToOne || ((this.isManyToMany || this.isOneToOne) && this.joinColumns.length > 0);\n        this.isOneToOneOwner = this.isOneToOne && this.isOwning;\n        this.isOneToOneNotOwner = this.isOneToOne && !this.isOwning;\n        this.isManyToManyOwner = this.isManyToMany && this.isOwning;\n        this.isManyToManyNotOwner = this.isManyToMany && !this.isOwning;\n        this.isWithJoinColumn = this.isManyToOne || this.isOneToOneOwner;\n    };\n    /**\n     * Registers a given junction entity metadata.\n     * This builder method can be called after junction entity metadata for the many-to-many relation was created.\n     */\n    RelationMetadata.prototype.registerJunctionEntityMetadata = function (junctionEntityMetadata) {\n        this.junctionEntityMetadata = junctionEntityMetadata;\n        this.joinTableName = junctionEntityMetadata.tableName;\n        if (this.inverseRelation) {\n            this.inverseRelation.junctionEntityMetadata = junctionEntityMetadata;\n            this.joinTableName = junctionEntityMetadata.tableName;\n        }\n    };\n    /**\n     * Builds inverse side property path based on given inverse side property factory.\n     * This builder method should be used only after properties map of the inverse entity metadata was build.\n     */\n    RelationMetadata.prototype.buildInverseSidePropertyPath = function () {\n        if (this.givenInverseSidePropertyFactory) {\n            var ownerEntityPropertiesMap = this.inverseEntityMetadata.propertiesMap;\n            if (typeof this.givenInverseSidePropertyFactory === \"function\")\n                return this.givenInverseSidePropertyFactory(ownerEntityPropertiesMap);\n            if (typeof this.givenInverseSidePropertyFactory === \"string\")\n                return this.givenInverseSidePropertyFactory;\n        }\n        else if (this.isTreeParent && this.entityMetadata.treeChildrenRelation) {\n            return this.entityMetadata.treeChildrenRelation.propertyName;\n        }\n        else if (this.isTreeChildren && this.entityMetadata.treeParentRelation) {\n            return this.entityMetadata.treeParentRelation.propertyName;\n        }\n        return \"\";\n    };\n    /**\n     * Builds relation's property path based on its embedded tree.\n     */\n    RelationMetadata.prototype.buildPropertyPath = function () {\n        if (!this.embeddedMetadata || !this.embeddedMetadata.parentPropertyNames.length)\n            return this.propertyName;\n        return this.embeddedMetadata.parentPropertyNames.join(\".\") + \".\" + this.propertyName;\n    };\n    return RelationMetadata;\n}());\nexport { RelationMetadata };\n\n//# sourceMappingURL=RelationMetadata.js.map\n","import { __read, __spreadArray } from \"tslib\";\nimport { MongoDriver } from \"../driver/mongodb/MongoDriver\";\nimport { TypeORMError } from \"../error\";\n/**\n * Contains all information about entity's embedded property.\n */\nvar EmbeddedMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function EmbeddedMetadata(options) {\n        /**\n         * Columns inside this embed.\n         */\n        this.columns = [];\n        /**\n         * Relations inside this embed.\n         */\n        this.relations = [];\n        /**\n         * Entity listeners inside this embed.\n         */\n        this.listeners = [];\n        /**\n         * Indices applied to the embed columns.\n         */\n        this.indices = [];\n        /**\n         * Uniques applied to the embed columns.\n         */\n        this.uniques = [];\n        /**\n         * Relation ids inside this embed.\n         */\n        this.relationIds = [];\n        /**\n         * Relation counts inside this embed.\n         */\n        this.relationCounts = [];\n        /**\n         * Nested embeddable in this embeddable (which has current embedded as parent embedded).\n         */\n        this.embeddeds = [];\n        /**\n         * Indicates if the entity should be instantiated using the constructor\n         * or via allocating a new object via `Object.create()`.\n         */\n        this.isAlwaysUsingConstructor = true;\n        /**\n         * Indicates if this embedded is in array mode.\n         *\n         * This option works only in mongodb.\n         */\n        this.isArray = false;\n        /**\n         * Returns array of property names of current embed and all its parent embeds.\n         *\n         * example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeds\n         * we need to get value of \"id\" column from the post real entity object.\n         * this method will return [\"data\", \"information\", \"counters\"]\n         */\n        this.parentPropertyNames = [];\n        /**\n         * Returns array of prefixes of current embed and all its parent embeds.\n         */\n        this.parentPrefixes = [];\n        /**\n         * Returns embed metadatas from all levels of the parent tree.\n         *\n         * example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeds\n         * this method will return [embed metadata of data, embed metadata of information, embed metadata of counters]\n         */\n        this.embeddedMetadataTree = [];\n        /**\n         * Embed metadatas from all levels of the parent tree.\n         *\n         * example: post[data][information][counters].id where \"data\", \"information\" and \"counters\" are embeds\n         * this method will return [embed metadata of data, embed metadata of information, embed metadata of counters]\n         */\n        this.columnsFromTree = [];\n        /**\n         * Relations of this embed and all relations from its child embeds.\n         */\n        this.relationsFromTree = [];\n        /**\n         * Relations of this embed and all relations from its child embeds.\n         */\n        this.listenersFromTree = [];\n        /**\n         * Indices of this embed and all indices from its child embeds.\n         */\n        this.indicesFromTree = [];\n        /**\n         * Uniques of this embed and all uniques from its child embeds.\n         */\n        this.uniquesFromTree = [];\n        /**\n         * Relation ids of this embed and all relation ids from its child embeds.\n         */\n        this.relationIdsFromTree = [];\n        /**\n         * Relation counts of this embed and all relation counts from its child embeds.\n         */\n        this.relationCountsFromTree = [];\n        this.entityMetadata = options.entityMetadata;\n        this.type = options.args.type();\n        this.propertyName = options.args.propertyName;\n        this.customPrefix = options.args.prefix;\n        this.isArray = options.args.isArray;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Creates a new embedded object.\n     */\n    EmbeddedMetadata.prototype.create = function (options) {\n        if (!(options === null || options === void 0 ? void 0 : options.fromDeserializer) || this.isAlwaysUsingConstructor) {\n            return new this.type;\n        }\n        else {\n            return Object.create(this.type.prototype);\n        }\n    };\n    // ---------------------------------------------------------------------\n    // Builder Methods\n    // ---------------------------------------------------------------------\n    EmbeddedMetadata.prototype.build = function (connection) {\n        this.embeddeds.forEach(function (embedded) { return embedded.build(connection); });\n        this.prefix = this.buildPrefix(connection);\n        this.parentPropertyNames = this.buildParentPropertyNames();\n        this.parentPrefixes = this.buildParentPrefixes();\n        this.propertyPath = this.parentPropertyNames.join(\".\");\n        this.embeddedMetadataTree = this.buildEmbeddedMetadataTree();\n        this.columnsFromTree = this.buildColumnsFromTree();\n        this.relationsFromTree = this.buildRelationsFromTree();\n        this.listenersFromTree = this.buildListenersFromTree();\n        this.indicesFromTree = this.buildIndicesFromTree();\n        this.uniquesFromTree = this.buildUniquesFromTree();\n        this.relationIdsFromTree = this.buildRelationIdsFromTree();\n        this.relationCountsFromTree = this.buildRelationCountsFromTree();\n        if (connection.options.entitySkipConstructor) {\n            this.isAlwaysUsingConstructor = !connection.options.entitySkipConstructor;\n        }\n        return this;\n    };\n    // ---------------------------------------------------------------------\n    // Protected Methods\n    // ---------------------------------------------------------------------\n    EmbeddedMetadata.prototype.buildPartialPrefix = function () {\n        // if prefix option was not set or explicitly set to true - default prefix\n        if (this.customPrefix === undefined || this.customPrefix === true) {\n            return [this.propertyName];\n        }\n        // if prefix option was set to empty string or explicity set to false - disable prefix\n        if (this.customPrefix === \"\" || this.customPrefix === false) {\n            return [];\n        }\n        // use custom prefix\n        if (typeof this.customPrefix === \"string\") {\n            return [this.customPrefix];\n        }\n        throw new TypeORMError(\"Invalid prefix option given for \" + this.entityMetadata.targetName + \"#\" + this.propertyName);\n    };\n    EmbeddedMetadata.prototype.buildPrefix = function (connection) {\n        if (connection.driver instanceof MongoDriver)\n            return this.propertyName;\n        var prefixes = [];\n        if (this.parentEmbeddedMetadata)\n            prefixes.push(this.parentEmbeddedMetadata.buildPrefix(connection));\n        prefixes.push.apply(prefixes, __spreadArray([], __read(this.buildPartialPrefix()), false));\n        return prefixes.join(\"_\"); // todo: use naming strategy instead of \"_\"  !!!\n    };\n    EmbeddedMetadata.prototype.buildParentPropertyNames = function () {\n        return this.parentEmbeddedMetadata ? this.parentEmbeddedMetadata.buildParentPropertyNames().concat(this.propertyName) : [this.propertyName];\n    };\n    EmbeddedMetadata.prototype.buildParentPrefixes = function () {\n        return this.parentEmbeddedMetadata ? this.parentEmbeddedMetadata.buildParentPrefixes().concat(this.buildPartialPrefix()) : this.buildPartialPrefix();\n    };\n    EmbeddedMetadata.prototype.buildEmbeddedMetadataTree = function () {\n        return this.parentEmbeddedMetadata ? this.parentEmbeddedMetadata.buildEmbeddedMetadataTree().concat(this) : [this];\n    };\n    EmbeddedMetadata.prototype.buildColumnsFromTree = function () {\n        return this.embeddeds.reduce(function (columns, embedded) { return columns.concat(embedded.buildColumnsFromTree()); }, this.columns);\n    };\n    EmbeddedMetadata.prototype.buildRelationsFromTree = function () {\n        return this.embeddeds.reduce(function (relations, embedded) { return relations.concat(embedded.buildRelationsFromTree()); }, this.relations);\n    };\n    EmbeddedMetadata.prototype.buildListenersFromTree = function () {\n        return this.embeddeds.reduce(function (relations, embedded) { return relations.concat(embedded.buildListenersFromTree()); }, this.listeners);\n    };\n    EmbeddedMetadata.prototype.buildIndicesFromTree = function () {\n        return this.embeddeds.reduce(function (relations, embedded) { return relations.concat(embedded.buildIndicesFromTree()); }, this.indices);\n    };\n    EmbeddedMetadata.prototype.buildUniquesFromTree = function () {\n        return this.embeddeds.reduce(function (relations, embedded) { return relations.concat(embedded.buildUniquesFromTree()); }, this.uniques);\n    };\n    EmbeddedMetadata.prototype.buildRelationIdsFromTree = function () {\n        return this.embeddeds.reduce(function (relations, embedded) { return relations.concat(embedded.buildRelationIdsFromTree()); }, this.relationIds);\n    };\n    EmbeddedMetadata.prototype.buildRelationCountsFromTree = function () {\n        return this.embeddeds.reduce(function (relations, embedded) { return relations.concat(embedded.buildRelationCountsFromTree()); }, this.relationCounts);\n    };\n    return EmbeddedMetadata;\n}());\nexport { EmbeddedMetadata };\n\n//# sourceMappingURL=EmbeddedMetadata.js.map\n","import { TypeORMError } from \"../error\";\n/**\n * Contains all information about entity's relation count.\n */\nvar RelationIdMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function RelationIdMetadata(options) {\n        this.entityMetadata = options.entityMetadata;\n        this.target = options.args.target;\n        this.propertyName = options.args.propertyName;\n        this.relationNameOrFactory = options.args.relation;\n        this.alias = options.args.alias;\n        this.queryBuilderFactory = options.args.queryBuilderFactory;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Sets relation id value from the given entity.\n     *\n     * todo: make it to work in embeds as well.\n     */\n    RelationIdMetadata.prototype.setValue = function (entity) {\n        var _this = this;\n        var inverseEntity = this.relation.getEntityValue(entity);\n        if (Array.isArray(inverseEntity)) {\n            entity[this.propertyName] = inverseEntity.map(function (item) {\n                return _this.relation.inverseEntityMetadata.getEntityIdMixedMap(item);\n            }).filter(function (item) { return item !== null && item !== undefined; });\n        }\n        else {\n            var value = this.relation.inverseEntityMetadata.getEntityIdMixedMap(inverseEntity);\n            if (value !== undefined)\n                entity[this.propertyName] = value;\n        }\n    };\n    // ---------------------------------------------------------------------\n    // Public Builder Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend relation id properties.\n     * This builder method should be used only after entity metadata, its properties map and all relations are build.\n     */\n    RelationIdMetadata.prototype.build = function () {\n        var propertyPath = this.relationNameOrFactory instanceof Function ? this.relationNameOrFactory(this.entityMetadata.propertiesMap) : this.relationNameOrFactory;\n        var relation = this.entityMetadata.findRelationWithPropertyPath(propertyPath);\n        if (!relation)\n            throw new TypeORMError(\"Cannot find relation \" + propertyPath + \". Wrong relation specified for @RelationId decorator.\");\n        this.relation = relation;\n    };\n    return RelationIdMetadata;\n}());\nexport { RelationIdMetadata };\n\n//# sourceMappingURL=RelationIdMetadata.js.map\n","import { TypeORMError } from \"../error\";\n/**\n * Contains all information about entity's relation count.\n */\nvar RelationCountMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function RelationCountMetadata(options) {\n        this.entityMetadata = options.entityMetadata;\n        this.target = options.args.target;\n        this.propertyName = options.args.propertyName;\n        this.relationNameOrFactory = options.args.relation;\n        this.alias = options.args.alias;\n        this.queryBuilderFactory = options.args.queryBuilderFactory;\n    }\n    // ---------------------------------------------------------------------\n    // Public Builder Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend relation count metadata properties.\n     * This builder method should be used only after entity metadata, its properties map and all relations are build.\n     */\n    RelationCountMetadata.prototype.build = function () {\n        var propertyPath = this.relationNameOrFactory instanceof Function ? this.relationNameOrFactory(this.entityMetadata.propertiesMap) : this.relationNameOrFactory;\n        var relation = this.entityMetadata.findRelationWithPropertyPath(propertyPath);\n        if (!relation)\n            throw new TypeORMError(\"Cannot find relation \" + propertyPath + \". Wrong relation specified for @RelationCount decorator.\");\n        this.relation = relation;\n    };\n    return RelationCountMetadata;\n}());\nexport { RelationCountMetadata };\n\n//# sourceMappingURL=RelationCountMetadata.js.map\n","/**\n * Provides a constants for each entity listener type.\n */\nvar EventListenerTypes = /** @class */ (function () {\n    function EventListenerTypes() {\n    }\n    EventListenerTypes.AFTER_LOAD = \"after-load\";\n    EventListenerTypes.BEFORE_INSERT = \"before-insert\";\n    EventListenerTypes.AFTER_INSERT = \"after-insert\";\n    EventListenerTypes.BEFORE_UPDATE = \"before-update\";\n    EventListenerTypes.AFTER_UPDATE = \"after-update\";\n    EventListenerTypes.BEFORE_REMOVE = \"before-remove\";\n    EventListenerTypes.AFTER_REMOVE = \"after-remove\";\n    return EventListenerTypes;\n}());\nexport { EventListenerTypes };\n\n//# sourceMappingURL=EventListenerTypes.js.map\n","/**\n * Contains all information about entity's foreign key.\n */\nvar ForeignKeyMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function ForeignKeyMetadata(options) {\n        /**\n         * Array of columns of this foreign key.\n         */\n        this.columns = [];\n        /**\n         * Array of referenced columns.\n         */\n        this.referencedColumns = [];\n        /**\n         * Gets array of column names.\n         */\n        this.columnNames = [];\n        /**\n         * Gets array of referenced column names.\n         */\n        this.referencedColumnNames = [];\n        this.entityMetadata = options.entityMetadata;\n        this.referencedEntityMetadata = options.referencedEntityMetadata;\n        this.columns = options.columns;\n        this.referencedColumns = options.referencedColumns;\n        this.onDelete = options.onDelete || \"NO ACTION\";\n        this.onUpdate = options.onUpdate || \"NO ACTION\";\n        this.deferrable = options.deferrable;\n        if (options.namingStrategy)\n            this.build(options.namingStrategy);\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend foreign key properties.\n     * Must be called after all entity metadatas and their columns are built.\n     */\n    ForeignKeyMetadata.prototype.build = function (namingStrategy) {\n        this.columnNames = this.columns.map(function (column) { return column.databaseName; });\n        this.referencedColumnNames = this.referencedColumns.map(function (column) { return column.databaseName; });\n        this.referencedTablePath = this.referencedEntityMetadata.tablePath;\n        this.name = namingStrategy.foreignKeyName(this.entityMetadata.tableName, this.columnNames, this.referencedEntityMetadata.tableName, this.referencedColumnNames);\n    };\n    return ForeignKeyMetadata;\n}());\nexport { ForeignKeyMetadata };\n\n//# sourceMappingURL=ForeignKeyMetadata.js.map\n","import { __read, __spreadArray } from \"tslib\";\nimport { MysqlDriver } from \"../driver/mysql/MysqlDriver\";\nimport { ColumnMetadata } from \"../metadata/ColumnMetadata\";\nimport { EntityMetadata } from \"../metadata/EntityMetadata\";\nimport { ForeignKeyMetadata } from \"../metadata/ForeignKeyMetadata\";\nimport { IndexMetadata } from \"../metadata/IndexMetadata\";\nimport { AuroraDataApiDriver } from \"../driver/aurora-data-api/AuroraDataApiDriver\";\nimport { OracleDriver } from \"../driver/oracle/OracleDriver\";\nimport { TypeORMError } from \"../error\";\n/**\n * Creates EntityMetadata for junction tables.\n * Junction tables are tables generated by many-to-many relations.\n */\nvar JunctionEntityMetadataBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function JunctionEntityMetadataBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds EntityMetadata for the junction of the given many-to-many relation.\n     */\n    JunctionEntityMetadataBuilder.prototype.build = function (relation, joinTable) {\n        var _this = this;\n        var referencedColumns = this.collectReferencedColumns(relation, joinTable);\n        var inverseReferencedColumns = this.collectInverseReferencedColumns(relation, joinTable);\n        var joinTableName = joinTable.name || this.connection.namingStrategy.joinTableName(relation.entityMetadata.tableNameWithoutPrefix, relation.inverseEntityMetadata.tableNameWithoutPrefix, relation.propertyPath, relation.inverseRelation ? relation.inverseRelation.propertyName : \"\");\n        var entityMetadata = new EntityMetadata({\n            connection: this.connection,\n            args: {\n                target: \"\",\n                name: joinTableName,\n                type: \"junction\",\n                database: joinTable.database || relation.entityMetadata.database,\n                schema: joinTable.schema || relation.entityMetadata.schema,\n            }\n        });\n        entityMetadata.build();\n        // create original side junction columns\n        var junctionColumns = referencedColumns.map(function (referencedColumn) {\n            var joinColumn = joinTable.joinColumns ? joinTable.joinColumns.find(function (joinColumnArgs) {\n                return (!joinColumnArgs.referencedColumnName || joinColumnArgs.referencedColumnName === referencedColumn.propertyName) &&\n                    !!joinColumnArgs.name;\n            }) : undefined;\n            var columnName = joinColumn && joinColumn.name ? joinColumn.name\n                : _this.connection.namingStrategy.joinTableColumnName(relation.entityMetadata.tableNameWithoutPrefix, referencedColumn.propertyName, referencedColumn.databaseName);\n            return new ColumnMetadata({\n                connection: _this.connection,\n                entityMetadata: entityMetadata,\n                referencedColumn: referencedColumn,\n                args: {\n                    target: \"\",\n                    mode: \"virtual\",\n                    propertyName: columnName,\n                    options: {\n                        name: columnName,\n                        length: !referencedColumn.length\n                            && (_this.connection.driver instanceof MysqlDriver || _this.connection.driver instanceof AuroraDataApiDriver)\n                            && (referencedColumn.generationStrategy === \"uuid\" || referencedColumn.type === \"uuid\")\n                            ? \"36\"\n                            : referencedColumn.length,\n                        width: referencedColumn.width,\n                        type: referencedColumn.type,\n                        precision: referencedColumn.precision,\n                        scale: referencedColumn.scale,\n                        charset: referencedColumn.charset,\n                        collation: referencedColumn.collation,\n                        zerofill: referencedColumn.zerofill,\n                        unsigned: referencedColumn.zerofill ? true : referencedColumn.unsigned,\n                        enum: referencedColumn.enum,\n                        enumName: referencedColumn.enumName,\n                        nullable: false,\n                        primary: true,\n                    }\n                }\n            });\n        });\n        // create inverse side junction columns\n        var inverseJunctionColumns = inverseReferencedColumns.map(function (inverseReferencedColumn) {\n            var joinColumn = joinTable.inverseJoinColumns ? joinTable.inverseJoinColumns.find(function (joinColumnArgs) {\n                return (!joinColumnArgs.referencedColumnName || joinColumnArgs.referencedColumnName === inverseReferencedColumn.propertyName) &&\n                    !!joinColumnArgs.name;\n            }) : undefined;\n            var columnName = joinColumn && joinColumn.name ? joinColumn.name\n                : _this.connection.namingStrategy.joinTableInverseColumnName(relation.inverseEntityMetadata.tableNameWithoutPrefix, inverseReferencedColumn.propertyName, inverseReferencedColumn.databaseName);\n            return new ColumnMetadata({\n                connection: _this.connection,\n                entityMetadata: entityMetadata,\n                referencedColumn: inverseReferencedColumn,\n                args: {\n                    target: \"\",\n                    mode: \"virtual\",\n                    propertyName: columnName,\n                    options: {\n                        length: !inverseReferencedColumn.length\n                            && (_this.connection.driver instanceof MysqlDriver || _this.connection.driver instanceof AuroraDataApiDriver)\n                            && (inverseReferencedColumn.generationStrategy === \"uuid\" || inverseReferencedColumn.type === \"uuid\")\n                            ? \"36\"\n                            : inverseReferencedColumn.length,\n                        width: inverseReferencedColumn.width,\n                        type: inverseReferencedColumn.type,\n                        precision: inverseReferencedColumn.precision,\n                        scale: inverseReferencedColumn.scale,\n                        charset: inverseReferencedColumn.charset,\n                        collation: inverseReferencedColumn.collation,\n                        zerofill: inverseReferencedColumn.zerofill,\n                        unsigned: inverseReferencedColumn.zerofill ? true : inverseReferencedColumn.unsigned,\n                        enum: inverseReferencedColumn.enum,\n                        enumName: inverseReferencedColumn.enumName,\n                        name: columnName,\n                        nullable: false,\n                        primary: true,\n                    }\n                }\n            });\n        });\n        this.changeDuplicatedColumnNames(junctionColumns, inverseJunctionColumns);\n        // set junction table columns\n        entityMetadata.ownerColumns = junctionColumns;\n        entityMetadata.inverseColumns = inverseJunctionColumns;\n        entityMetadata.ownColumns = __spreadArray(__spreadArray([], __read(junctionColumns), false), __read(inverseJunctionColumns), false);\n        entityMetadata.ownColumns.forEach(function (column) { return column.relationMetadata = relation; });\n        // create junction table foreign keys\n        // Note: UPDATE CASCADE clause is not supported in Oracle.\n        entityMetadata.foreignKeys = relation.createForeignKeyConstraints ? [\n            new ForeignKeyMetadata({\n                entityMetadata: entityMetadata,\n                referencedEntityMetadata: relation.entityMetadata,\n                columns: junctionColumns,\n                referencedColumns: referencedColumns,\n                onDelete: relation.onDelete || \"CASCADE\",\n                onUpdate: this.connection.driver instanceof OracleDriver ? \"NO ACTION\" : relation.onUpdate || \"CASCADE\",\n            }),\n            new ForeignKeyMetadata({\n                entityMetadata: entityMetadata,\n                referencedEntityMetadata: relation.inverseEntityMetadata,\n                columns: inverseJunctionColumns,\n                referencedColumns: inverseReferencedColumns,\n                onDelete: relation.inverseRelation ? relation.inverseRelation.onDelete : \"CASCADE\",\n                onUpdate: this.connection.driver instanceof OracleDriver\n                    ? \"NO ACTION\"\n                    : relation.inverseRelation\n                        ? relation.inverseRelation.onUpdate\n                        : \"CASCADE\",\n            }),\n        ] : [];\n        // create junction table indices\n        entityMetadata.ownIndices = [\n            new IndexMetadata({\n                entityMetadata: entityMetadata,\n                columns: junctionColumns,\n                args: {\n                    target: entityMetadata.target,\n                    synchronize: true\n                }\n            }),\n            new IndexMetadata({\n                entityMetadata: entityMetadata,\n                columns: inverseJunctionColumns,\n                args: {\n                    target: entityMetadata.target,\n                    synchronize: true\n                }\n            })\n        ];\n        // finally return entity metadata\n        return entityMetadata;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Collects referenced columns from the given join column args.\n     */\n    JunctionEntityMetadataBuilder.prototype.collectReferencedColumns = function (relation, joinTable) {\n        var hasAnyReferencedColumnName = joinTable.joinColumns ? joinTable.joinColumns.find(function (joinColumn) { return !!joinColumn.referencedColumnName; }) : false;\n        if (!joinTable.joinColumns || (joinTable.joinColumns && !hasAnyReferencedColumnName)) {\n            return relation.entityMetadata.columns.filter(function (column) { return column.isPrimary; });\n        }\n        else {\n            return joinTable.joinColumns.map(function (joinColumn) {\n                var referencedColumn = relation.entityMetadata.columns.find(function (column) { return column.propertyName === joinColumn.referencedColumnName; });\n                if (!referencedColumn)\n                    throw new TypeORMError(\"Referenced column \" + joinColumn.referencedColumnName + \" was not found in entity \" + relation.entityMetadata.name);\n                return referencedColumn;\n            });\n        }\n    };\n    /**\n     * Collects inverse referenced columns from the given join column args.\n     */\n    JunctionEntityMetadataBuilder.prototype.collectInverseReferencedColumns = function (relation, joinTable) {\n        var hasInverseJoinColumns = !!joinTable.inverseJoinColumns;\n        var hasAnyInverseReferencedColumnName = hasInverseJoinColumns ? joinTable.inverseJoinColumns.find(function (joinColumn) { return !!joinColumn.referencedColumnName; }) : false;\n        if (!hasInverseJoinColumns || (hasInverseJoinColumns && !hasAnyInverseReferencedColumnName)) {\n            return relation.inverseEntityMetadata.primaryColumns;\n        }\n        else {\n            return joinTable.inverseJoinColumns.map(function (joinColumn) {\n                var referencedColumn = relation.inverseEntityMetadata.ownColumns.find(function (column) { return column.propertyName === joinColumn.referencedColumnName; });\n                if (!referencedColumn)\n                    throw new TypeORMError(\"Referenced column \" + joinColumn.referencedColumnName + \" was not found in entity \" + relation.inverseEntityMetadata.name);\n                return referencedColumn;\n            });\n        }\n    };\n    JunctionEntityMetadataBuilder.prototype.changeDuplicatedColumnNames = function (junctionColumns, inverseJunctionColumns) {\n        var _this = this;\n        junctionColumns.forEach(function (junctionColumn) {\n            inverseJunctionColumns.forEach(function (inverseJunctionColumn) {\n                if (junctionColumn.givenDatabaseName === inverseJunctionColumn.givenDatabaseName) {\n                    var junctionColumnName = _this.connection.namingStrategy.joinTableColumnDuplicationPrefix(junctionColumn.propertyName, 1);\n                    junctionColumn.propertyName = junctionColumnName;\n                    junctionColumn.givenDatabaseName = junctionColumnName;\n                    var inverseJunctionColumnName = _this.connection.namingStrategy.joinTableColumnDuplicationPrefix(inverseJunctionColumn.propertyName, 2);\n                    inverseJunctionColumn.propertyName = inverseJunctionColumnName;\n                    inverseJunctionColumn.givenDatabaseName = inverseJunctionColumnName;\n                }\n            });\n        });\n    };\n    return JunctionEntityMetadataBuilder;\n}());\nexport { JunctionEntityMetadataBuilder };\n\n//# sourceMappingURL=JunctionEntityMetadataBuilder.js.map\n","import { EntityMetadata } from \"../metadata/EntityMetadata\";\nimport { ColumnMetadata } from \"../metadata/ColumnMetadata\";\nimport { ForeignKeyMetadata } from \"../metadata/ForeignKeyMetadata\";\nimport { IndexMetadata } from \"../metadata/IndexMetadata\";\nimport { SqlServerDriver } from \"../driver/sqlserver/SqlServerDriver\";\n/**\n * Creates EntityMetadata for junction tables of the closure entities.\n * Closure junction tables are tables generated by closure entities.\n */\nvar ClosureJunctionEntityMetadataBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ClosureJunctionEntityMetadataBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds EntityMetadata for the closure junction of the given closure entity.\n     */\n    ClosureJunctionEntityMetadataBuilder.prototype.build = function (parentClosureEntityMetadata) {\n        var _this = this;\n        // create entity metadata itself\n        var entityMetadata = new EntityMetadata({\n            parentClosureEntityMetadata: parentClosureEntityMetadata,\n            connection: this.connection,\n            args: {\n                target: \"\",\n                name: parentClosureEntityMetadata.treeOptions && parentClosureEntityMetadata.treeOptions.closureTableName ? parentClosureEntityMetadata.treeOptions.closureTableName : parentClosureEntityMetadata.tableNameWithoutPrefix,\n                type: \"closure-junction\"\n            }\n        });\n        entityMetadata.build();\n        // create ancestor and descendant columns for new closure junction table\n        parentClosureEntityMetadata.primaryColumns.forEach(function (primaryColumn) {\n            entityMetadata.ownColumns.push(new ColumnMetadata({\n                connection: _this.connection,\n                entityMetadata: entityMetadata,\n                closureType: \"ancestor\",\n                referencedColumn: primaryColumn,\n                args: {\n                    target: \"\",\n                    mode: \"virtual\",\n                    propertyName: parentClosureEntityMetadata.treeOptions && parentClosureEntityMetadata.treeOptions.ancestorColumnName ? parentClosureEntityMetadata.treeOptions.ancestorColumnName(primaryColumn) : primaryColumn.propertyName + \"_ancestor\",\n                    options: {\n                        primary: true,\n                        length: primaryColumn.length,\n                        type: primaryColumn.type\n                    }\n                }\n            }));\n            entityMetadata.ownColumns.push(new ColumnMetadata({\n                connection: _this.connection,\n                entityMetadata: entityMetadata,\n                closureType: \"descendant\",\n                referencedColumn: primaryColumn,\n                args: {\n                    target: \"\",\n                    mode: \"virtual\",\n                    propertyName: parentClosureEntityMetadata.treeOptions && parentClosureEntityMetadata.treeOptions.descendantColumnName ? parentClosureEntityMetadata.treeOptions.descendantColumnName(primaryColumn) : primaryColumn.propertyName + \"_descendant\",\n                    options: {\n                        primary: true,\n                        length: primaryColumn.length,\n                        type: primaryColumn.type,\n                    }\n                }\n            }));\n        });\n        entityMetadata.ownIndices = [\n            new IndexMetadata({\n                entityMetadata: entityMetadata,\n                columns: [entityMetadata.ownColumns[0]],\n                args: {\n                    target: entityMetadata.target,\n                    synchronize: true\n                }\n            }),\n            new IndexMetadata({\n                entityMetadata: entityMetadata,\n                columns: [entityMetadata.ownColumns[1]],\n                args: {\n                    target: entityMetadata.target,\n                    synchronize: true\n                }\n            })\n        ];\n        // if tree level column was defined by a closure entity then add it to the junction columns as well\n        if (parentClosureEntityMetadata.treeLevelColumn) {\n            entityMetadata.ownColumns.push(new ColumnMetadata({\n                connection: this.connection,\n                entityMetadata: entityMetadata,\n                args: {\n                    target: \"\",\n                    mode: \"virtual\",\n                    propertyName: \"level\",\n                    options: {\n                        type: this.connection.driver.mappedDataTypes.treeLevel,\n                    }\n                }\n            }));\n        }\n        // create junction table foreign keys\n        // Note: CASCADE is not applied to mssql because it does not support multi cascade paths\n        entityMetadata.foreignKeys = [\n            new ForeignKeyMetadata({\n                entityMetadata: entityMetadata,\n                referencedEntityMetadata: parentClosureEntityMetadata,\n                columns: [entityMetadata.ownColumns[0]],\n                referencedColumns: parentClosureEntityMetadata.primaryColumns,\n                onDelete: this.connection.driver instanceof SqlServerDriver ? \"NO ACTION\" : \"CASCADE\"\n            }),\n            new ForeignKeyMetadata({\n                entityMetadata: entityMetadata,\n                referencedEntityMetadata: parentClosureEntityMetadata,\n                columns: [entityMetadata.ownColumns[1]],\n                referencedColumns: parentClosureEntityMetadata.primaryColumns,\n                onDelete: this.connection.driver instanceof SqlServerDriver ? \"NO ACTION\" : \"CASCADE\"\n            }),\n        ];\n        return entityMetadata;\n    };\n    return ClosureJunctionEntityMetadataBuilder;\n}());\nexport { ClosureJunctionEntityMetadataBuilder };\n\n//# sourceMappingURL=ClosureJunctionEntityMetadataBuilder.js.map\n","import { TypeORMError } from \"../error\";\n/**\n * Unique metadata contains all information about table's unique constraints.\n */\nvar UniqueMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function UniqueMetadata(options) {\n        /**\n         * Unique columns.\n         */\n        this.columns = [];\n        /**\n         * Map of column names with order set.\n         * Used only by MongoDB driver.\n         */\n        this.columnNamesWithOrderingMap = {};\n        this.entityMetadata = options.entityMetadata;\n        this.embeddedMetadata = options.embeddedMetadata;\n        if (options.columns)\n            this.columns = options.columns;\n        if (options.args) {\n            this.target = options.args.target;\n            this.givenName = options.args.name;\n            this.givenColumnNames = options.args.columns;\n        }\n    }\n    // ---------------------------------------------------------------------\n    // Public Build Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend unique constraint properties.\n     * Must be called after all entity metadata's properties map, columns and relations are built.\n     */\n    UniqueMetadata.prototype.build = function (namingStrategy) {\n        var _this = this;\n        var map = {};\n        // if columns already an array of string then simply return it\n        if (this.givenColumnNames) {\n            var columnPropertyPaths = [];\n            if (Array.isArray(this.givenColumnNames)) {\n                columnPropertyPaths = this.givenColumnNames.map(function (columnName) {\n                    if (_this.embeddedMetadata)\n                        return _this.embeddedMetadata.propertyPath + \".\" + columnName;\n                    return columnName.trim();\n                });\n                columnPropertyPaths.forEach(function (propertyPath) { return map[propertyPath] = 1; });\n            }\n            else {\n                // if columns is a function that returns array of field names then execute it and get columns names from it\n                var columnsFnResult_1 = this.givenColumnNames(this.entityMetadata.propertiesMap);\n                if (Array.isArray(columnsFnResult_1)) {\n                    columnPropertyPaths = columnsFnResult_1.map(function (i) { return String(i); });\n                    columnPropertyPaths.forEach(function (name) { return map[name] = 1; });\n                }\n                else {\n                    columnPropertyPaths = Object.keys(columnsFnResult_1).map(function (i) { return String(i); });\n                    Object.keys(columnsFnResult_1).forEach(function (columnName) { return map[columnName] = columnsFnResult_1[columnName]; });\n                }\n            }\n            this.columns = columnPropertyPaths.map(function (propertyName) {\n                var columnWithSameName = _this.entityMetadata.columns.find(function (column) { return column.propertyPath === propertyName; });\n                if (columnWithSameName) {\n                    return [columnWithSameName];\n                }\n                var relationWithSameName = _this.entityMetadata.relations.find(function (relation) { return relation.isWithJoinColumn && relation.propertyName === propertyName; });\n                if (relationWithSameName) {\n                    return relationWithSameName.joinColumns;\n                }\n                var indexName = _this.givenName ? \"\\\"\" + _this.givenName + \"\\\" \" : \"\";\n                var entityName = _this.entityMetadata.targetName;\n                throw new TypeORMError(\"Unique constraint \" + indexName + \"contains column that is missing in the entity (\" + entityName + \"): \" + propertyName);\n            })\n                .reduce(function (a, b) { return a.concat(b); });\n        }\n        this.columnNamesWithOrderingMap = Object.keys(map).reduce(function (updatedMap, key) {\n            var column = _this.entityMetadata.columns.find(function (column) { return column.propertyPath === key; });\n            if (column)\n                updatedMap[column.databasePath] = map[key];\n            return updatedMap;\n        }, {});\n        this.name = this.givenName ? this.givenName : namingStrategy.uniqueConstraintName(this.entityMetadata.tableName, this.columns.map(function (column) { return column.databaseName; }));\n        return this;\n    };\n    return UniqueMetadata;\n}());\nexport { UniqueMetadata };\n\n//# sourceMappingURL=UniqueMetadata.js.map\n","import { MysqlDriver } from \"../driver/mysql/MysqlDriver\";\nimport { ColumnMetadata } from \"../metadata/ColumnMetadata\";\nimport { UniqueMetadata } from \"../metadata/UniqueMetadata\";\nimport { ForeignKeyMetadata } from \"../metadata/ForeignKeyMetadata\";\nimport { OracleDriver } from \"../driver/oracle/OracleDriver\";\nimport { AuroraDataApiDriver } from \"../driver/aurora-data-api/AuroraDataApiDriver\";\nimport { TypeORMError } from \"../error\";\n/**\n * Builds join column for the many-to-one and one-to-one owner relations.\n *\n * Cases it should cover:\n * 1. when join column is set with custom name and without referenced column name\n * we need automatically set referenced column name - primary ids by default\n * @JoinColumn({ name: \"custom_name\" })\n *\n * 2. when join column is set with only referenced column name\n * we need automatically set join column name - relation name + referenced column name\n * @JoinColumn({ referencedColumnName: \"title\" })\n *\n * 3. when join column is set without both referenced column name and join column name\n * we need to automatically set both of them\n * @JoinColumn()\n *\n * 4. when join column is not set at all (as in case of @ManyToOne relation)\n * we need to create join column for it with proper referenced column name and join column name\n *\n * 5. when multiple join columns set none of referencedColumnName and name can be optional\n * both options are required\n * @JoinColumn([\n *      { name: \"category_title\", referencedColumnName: \"type\" },\n *      { name: \"category_title\", referencedColumnName: \"name\" },\n * ])\n *\n * Since for many-to-one relations having JoinColumn decorator is not required,\n * we need to go thought each many-to-one relation without join column decorator set\n * and create join column metadata args for them.\n */\nvar RelationJoinColumnBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationJoinColumnBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds a foreign key of the many-to-one or one-to-one owner relations.\n     */\n    RelationJoinColumnBuilder.prototype.build = function (joinColumns, relation) {\n        var referencedColumns = this.collectReferencedColumns(joinColumns, relation);\n        var columns = this.collectColumns(joinColumns, relation, referencedColumns);\n        if (!referencedColumns.length || !relation.createForeignKeyConstraints)\n            return { foreignKey: undefined, columns: columns, uniqueConstraint: undefined }; // this case is possible for one-to-one non owning side and relations with createForeignKeyConstraints = false\n        var foreignKey = new ForeignKeyMetadata({\n            entityMetadata: relation.entityMetadata,\n            referencedEntityMetadata: relation.inverseEntityMetadata,\n            namingStrategy: this.connection.namingStrategy,\n            columns: columns,\n            referencedColumns: referencedColumns,\n            onDelete: relation.onDelete,\n            onUpdate: relation.onUpdate,\n            deferrable: relation.deferrable,\n        });\n        // Oracle does not allow both primary and unique constraints on the same column\n        if (this.connection.driver instanceof OracleDriver && columns.every(function (column) { return column.isPrimary; }))\n            return { foreignKey: foreignKey, columns: columns, uniqueConstraint: undefined };\n        // CockroachDB requires UNIQUE constraints on referenced columns\n        if (referencedColumns.length > 0 && relation.isOneToOne) {\n            var uniqueConstraint = new UniqueMetadata({\n                entityMetadata: relation.entityMetadata,\n                columns: foreignKey.columns,\n                args: {\n                    name: this.connection.namingStrategy.relationConstraintName(relation.entityMetadata.tableName, foreignKey.columns.map(function (c) { return c.databaseName; })),\n                    target: relation.entityMetadata.target,\n                }\n            });\n            uniqueConstraint.build(this.connection.namingStrategy);\n            return { foreignKey: foreignKey, columns: columns, uniqueConstraint: uniqueConstraint };\n        }\n        return { foreignKey: foreignKey, columns: columns, uniqueConstraint: undefined };\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Collects referenced columns from the given join column args.\n     */\n    RelationJoinColumnBuilder.prototype.collectReferencedColumns = function (joinColumns, relation) {\n        var hasAnyReferencedColumnName = joinColumns.find(function (joinColumnArgs) { return !!joinColumnArgs.referencedColumnName; });\n        var manyToOneWithoutJoinColumn = joinColumns.length === 0 && relation.isManyToOne;\n        var hasJoinColumnWithoutAnyReferencedColumnName = joinColumns.length > 0 && !hasAnyReferencedColumnName;\n        if (manyToOneWithoutJoinColumn || hasJoinColumnWithoutAnyReferencedColumnName) { // covers case3 and case1\n            return relation.inverseEntityMetadata.primaryColumns;\n        }\n        else { // cases with referenced columns defined\n            return joinColumns.map(function (joinColumn) {\n                var referencedColumn = relation.inverseEntityMetadata.ownColumns.find(function (column) { return column.propertyName === joinColumn.referencedColumnName; }); // todo: can we also search in relations?\n                if (!referencedColumn)\n                    throw new TypeORMError(\"Referenced column \" + joinColumn.referencedColumnName + \" was not found in entity \" + relation.inverseEntityMetadata.name);\n                return referencedColumn;\n            });\n        }\n    };\n    /**\n     * Collects columns from the given join column args.\n     */\n    RelationJoinColumnBuilder.prototype.collectColumns = function (joinColumns, relation, referencedColumns) {\n        var _this = this;\n        return referencedColumns.map(function (referencedColumn) {\n            // in the case if relation has join column with only name set we need this check\n            var joinColumnMetadataArg = joinColumns.find(function (joinColumn) {\n                return (!joinColumn.referencedColumnName || joinColumn.referencedColumnName === referencedColumn.propertyName) &&\n                    !!joinColumn.name;\n            });\n            var joinColumnName = joinColumnMetadataArg ? joinColumnMetadataArg.name : _this.connection.namingStrategy.joinColumnName(relation.propertyName, referencedColumn.propertyName);\n            var relationalColumn = relation.entityMetadata.ownColumns.find(function (column) { return column.databaseName === joinColumnName; });\n            if (!relationalColumn) {\n                relationalColumn = new ColumnMetadata({\n                    connection: _this.connection,\n                    entityMetadata: relation.entityMetadata,\n                    args: {\n                        target: \"\",\n                        mode: \"virtual\",\n                        propertyName: relation.propertyName,\n                        options: {\n                            name: joinColumnName,\n                            type: referencedColumn.type,\n                            length: !referencedColumn.length\n                                && (_this.connection.driver instanceof MysqlDriver || _this.connection.driver instanceof AuroraDataApiDriver)\n                                && (referencedColumn.generationStrategy === \"uuid\" || referencedColumn.type === \"uuid\")\n                                ? \"36\"\n                                : referencedColumn.length,\n                            width: referencedColumn.width,\n                            charset: referencedColumn.charset,\n                            collation: referencedColumn.collation,\n                            precision: referencedColumn.precision,\n                            scale: referencedColumn.scale,\n                            zerofill: referencedColumn.zerofill,\n                            unsigned: referencedColumn.unsigned,\n                            comment: referencedColumn.comment,\n                            enum: referencedColumn.enum,\n                            enumName: referencedColumn.enumName,\n                            primary: relation.isPrimary,\n                            nullable: relation.isNullable,\n                        }\n                    }\n                });\n                relation.entityMetadata.registerColumn(relationalColumn);\n            }\n            relationalColumn.referencedColumn = referencedColumn; // its important to set it here because we need to set referenced column for user defined join column\n            relationalColumn.type = referencedColumn.type; // also since types of relational column and join column must be equal we override user defined column type\n            relationalColumn.relationMetadata = relation;\n            relationalColumn.build(_this.connection);\n            return relationalColumn;\n        });\n    };\n    return RelationJoinColumnBuilder;\n}());\nexport { RelationJoinColumnBuilder };\n\n//# sourceMappingURL=RelationJoinColumnBuilder.js.map\n","/**\n * This metadata contains all information about entity's listeners.\n */\nvar EntityListenerMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function EntityListenerMetadata(options) {\n        this.entityMetadata = options.entityMetadata;\n        this.embeddedMetadata = options.embeddedMetadata;\n        this.target = options.args.target;\n        this.propertyName = options.args.propertyName;\n        this.type = options.args.type;\n    }\n    // ---------------------------------------------------------------------\n    // Public Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Checks if entity listener is allowed to be executed on the given entity.\n     */\n    EntityListenerMetadata.prototype.isAllowed = function (entity) {\n        return this.entityMetadata.target === entity.constructor || // todo: .constructor won't work for entity schemas, but there are no entity listeners in schemas since there are no objects, right?\n            (this.entityMetadata.target instanceof Function && entity.constructor.prototype instanceof this.entityMetadata.target); // todo: also need to implement entity schema inheritance\n    };\n    /**\n     * Executes listener method of the given entity.\n     */\n    EntityListenerMetadata.prototype.execute = function (entity) {\n        if (!this.embeddedMetadata)\n            return entity[this.propertyName]();\n        this.callEntityEmbeddedMethod(entity, this.embeddedMetadata.propertyPath.split(\".\"));\n    };\n    // ---------------------------------------------------------------------\n    // Protected Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Calls embedded entity listener method no matter how nested it is.\n     */\n    EntityListenerMetadata.prototype.callEntityEmbeddedMethod = function (entity, propertyPaths) {\n        var _this = this;\n        var propertyPath = propertyPaths.shift();\n        if (!propertyPath || !entity[propertyPath])\n            return;\n        if (propertyPaths.length === 0) {\n            if (entity[propertyPath] instanceof Array) {\n                entity[propertyPath].map(function (embedded) { return embedded[_this.propertyName](); });\n            }\n            else {\n                entity[propertyPath][this.propertyName]();\n            }\n        }\n        else {\n            if (entity[propertyPath])\n                this.callEntityEmbeddedMethod(entity[propertyPath], propertyPaths);\n        }\n    };\n    return EntityListenerMetadata;\n}());\nexport { EntityListenerMetadata };\n\n//# sourceMappingURL=EntityListenerMetadata.js.map\n","/**\n * Check metadata contains all information about table's check constraints.\n */\nvar CheckMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function CheckMetadata(options) {\n        this.entityMetadata = options.entityMetadata;\n        if (options.args) {\n            this.target = options.args.target;\n            this.expression = options.args.expression;\n            this.givenName = options.args.name;\n        }\n    }\n    // ---------------------------------------------------------------------\n    // Public Build Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend check constraint properties.\n     * Must be called after all entity metadata's properties map, columns and relations are built.\n     */\n    CheckMetadata.prototype.build = function (namingStrategy) {\n        this.name = this.givenName ? this.givenName : namingStrategy.checkConstraintName(this.entityMetadata.tableName, this.expression);\n        return this;\n    };\n    return CheckMetadata;\n}());\nexport { CheckMetadata };\n\n//# sourceMappingURL=CheckMetadata.js.map\n","/**\n * Exclusion metadata contains all information about table's exclusion constraints.\n */\nvar ExclusionMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function ExclusionMetadata(options) {\n        this.entityMetadata = options.entityMetadata;\n        if (options.args) {\n            this.target = options.args.target;\n            this.expression = options.args.expression;\n            this.givenName = options.args.name;\n        }\n    }\n    // ---------------------------------------------------------------------\n    // Public Build Methods\n    // ---------------------------------------------------------------------\n    /**\n     * Builds some depend exclusion constraint properties.\n     * Must be called after all entity metadata's properties map, columns and relations are built.\n     */\n    ExclusionMetadata.prototype.build = function (namingStrategy) {\n        this.name = this.givenName ? this.givenName : namingStrategy.exclusionConstraintName(this.entityMetadata.tableName, this.expression);\n        return this;\n    };\n    return ExclusionMetadata;\n}());\nexport { ExclusionMetadata };\n\n//# sourceMappingURL=ExclusionMetadata.js.map\n","import { __read, __spreadArray } from \"tslib\";\nimport { CockroachDriver } from \"../driver/cockroachdb/CockroachDriver\";\nimport { SapDriver } from \"../driver/sap/SapDriver\";\nimport { EntityMetadata } from \"../metadata/EntityMetadata\";\nimport { ColumnMetadata } from \"../metadata/ColumnMetadata\";\nimport { IndexMetadata } from \"../metadata/IndexMetadata\";\nimport { RelationMetadata } from \"../metadata/RelationMetadata\";\nimport { EmbeddedMetadata } from \"../metadata/EmbeddedMetadata\";\nimport { RelationIdMetadata } from \"../metadata/RelationIdMetadata\";\nimport { RelationCountMetadata } from \"../metadata/RelationCountMetadata\";\nimport { EventListenerTypes } from \"../metadata/types/EventListenerTypes\";\nimport { MetadataUtils } from \"./MetadataUtils\";\nimport { JunctionEntityMetadataBuilder } from \"./JunctionEntityMetadataBuilder\";\nimport { ClosureJunctionEntityMetadataBuilder } from \"./ClosureJunctionEntityMetadataBuilder\";\nimport { RelationJoinColumnBuilder } from \"./RelationJoinColumnBuilder\";\nimport { EntityListenerMetadata } from \"../metadata/EntityListenerMetadata\";\nimport { UniqueMetadata } from \"../metadata/UniqueMetadata\";\nimport { MysqlDriver } from \"../driver/mysql/MysqlDriver\";\nimport { CheckMetadata } from \"../metadata/CheckMetadata\";\nimport { SqlServerDriver } from \"../driver/sqlserver/SqlServerDriver\";\nimport { PostgresDriver } from \"../driver/postgres/PostgresDriver\";\nimport { ExclusionMetadata } from \"../metadata/ExclusionMetadata\";\nimport { AuroraDataApiDriver } from \"../driver/aurora-data-api/AuroraDataApiDriver\";\nimport { TypeORMError } from \"../error\";\n/**\n * Builds EntityMetadata objects and all its sub-metadatas.\n */\nvar EntityMetadataBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function EntityMetadataBuilder(connection, metadataArgsStorage) {\n        this.connection = connection;\n        this.metadataArgsStorage = metadataArgsStorage;\n        this.junctionEntityMetadataBuilder = new JunctionEntityMetadataBuilder(connection);\n        this.closureJunctionEntityMetadataBuilder = new ClosureJunctionEntityMetadataBuilder(connection);\n        this.relationJoinColumnBuilder = new RelationJoinColumnBuilder(connection);\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds a complete entity metadatas for the given entity classes.\n     */\n    EntityMetadataBuilder.prototype.build = function (entityClasses) {\n        var _this = this;\n        // if entity classes to filter entities by are given then do filtering, otherwise use all\n        var allTables = entityClasses ? this.metadataArgsStorage.filterTables(entityClasses) : this.metadataArgsStorage.tables;\n        // filter out table metadata args for those we really create entity metadatas and tables in the db\n        var realTables = allTables.filter(function (table) { return table.type === \"regular\" || table.type === \"closure\" || table.type === \"entity-child\" || table.type === \"view\"; });\n        // create entity metadatas for a user defined entities (marked with @Entity decorator or loaded from entity schemas)\n        var entityMetadatas = realTables.map(function (tableArgs) { return _this.createEntityMetadata(tableArgs); });\n        // compute parent entity metadatas for table inheritance\n        entityMetadatas.forEach(function (entityMetadata) { return _this.computeParentEntityMetadata(entityMetadatas, entityMetadata); });\n        // after all metadatas created we set child entity metadatas for table inheritance\n        entityMetadatas.forEach(function (metadata) {\n            metadata.childEntityMetadatas = entityMetadatas.filter(function (childMetadata) {\n                return metadata.target instanceof Function\n                    && childMetadata.target instanceof Function\n                    && MetadataUtils.isInherited(childMetadata.target, metadata.target);\n            });\n        });\n        // build entity metadata (step0), first for non-single-table-inherited entity metadatas (dependant)\n        entityMetadatas\n            .filter(function (entityMetadata) { return entityMetadata.tableType !== \"entity-child\"; })\n            .forEach(function (entityMetadata) { return entityMetadata.build(); });\n        // build entity metadata (step0), now for single-table-inherited entity metadatas (dependant)\n        entityMetadatas\n            .filter(function (entityMetadata) { return entityMetadata.tableType === \"entity-child\"; })\n            .forEach(function (entityMetadata) { return entityMetadata.build(); });\n        // compute entity metadata columns, relations, etc. first for the regular, non-single-table-inherited entity metadatas\n        entityMetadatas\n            .filter(function (entityMetadata) { return entityMetadata.tableType !== \"entity-child\"; })\n            .forEach(function (entityMetadata) { return _this.computeEntityMetadataStep1(entityMetadatas, entityMetadata); });\n        // then do it for single table inheritance children (since they are depend on their parents to be built)\n        entityMetadatas\n            .filter(function (entityMetadata) { return entityMetadata.tableType === \"entity-child\"; })\n            .forEach(function (entityMetadata) { return _this.computeEntityMetadataStep1(entityMetadatas, entityMetadata); });\n        // calculate entity metadata computed properties and all its sub-metadatas\n        entityMetadatas.forEach(function (entityMetadata) { return _this.computeEntityMetadataStep2(entityMetadata); });\n        // calculate entity metadata's inverse properties\n        entityMetadatas.forEach(function (entityMetadata) { return _this.computeInverseProperties(entityMetadata, entityMetadatas); });\n        // go through all entity metadatas and create foreign keys / junction entity metadatas for their relations\n        entityMetadatas\n            .filter(function (entityMetadata) { return entityMetadata.tableType !== \"entity-child\"; })\n            .forEach(function (entityMetadata) {\n            // create entity's relations join columns (for many-to-one and one-to-one owner)\n            entityMetadata.relations.filter(function (relation) { return relation.isOneToOne || relation.isManyToOne; }).forEach(function (relation) {\n                var joinColumns = _this.metadataArgsStorage.filterJoinColumns(relation.target, relation.propertyName);\n                var _a = _this.relationJoinColumnBuilder.build(joinColumns, relation), foreignKey = _a.foreignKey, columns = _a.columns, uniqueConstraint = _a.uniqueConstraint; // create a foreign key based on its metadata args\n                if (foreignKey) {\n                    relation.registerForeignKeys(foreignKey); // push it to the relation and thus register there a join column\n                    entityMetadata.foreignKeys.push(foreignKey);\n                }\n                if (columns) {\n                    relation.registerJoinColumns(columns);\n                }\n                if (uniqueConstraint) {\n                    if (_this.connection.driver instanceof MysqlDriver || _this.connection.driver instanceof AuroraDataApiDriver\n                        || _this.connection.driver instanceof SqlServerDriver || _this.connection.driver instanceof SapDriver) {\n                        var index = new IndexMetadata({\n                            entityMetadata: uniqueConstraint.entityMetadata,\n                            columns: uniqueConstraint.columns,\n                            args: {\n                                target: uniqueConstraint.target,\n                                name: uniqueConstraint.name,\n                                unique: true,\n                                synchronize: true\n                            }\n                        });\n                        if (_this.connection.driver instanceof SqlServerDriver) {\n                            index.where = index.columns.map(function (column) {\n                                return _this.connection.driver.escape(column.databaseName) + \" IS NOT NULL\";\n                            }).join(\" AND \");\n                        }\n                        if (relation.embeddedMetadata) {\n                            relation.embeddedMetadata.indices.push(index);\n                        }\n                        else {\n                            relation.entityMetadata.ownIndices.push(index);\n                        }\n                        _this.computeEntityMetadataStep2(entityMetadata);\n                    }\n                    else {\n                        if (relation.embeddedMetadata) {\n                            relation.embeddedMetadata.uniques.push(uniqueConstraint);\n                        }\n                        else {\n                            relation.entityMetadata.ownUniques.push(uniqueConstraint);\n                        }\n                        _this.computeEntityMetadataStep2(entityMetadata);\n                    }\n                }\n                if (foreignKey && _this.connection.driver instanceof CockroachDriver) {\n                    var index = new IndexMetadata({\n                        entityMetadata: relation.entityMetadata,\n                        columns: foreignKey.columns,\n                        args: {\n                            target: relation.entityMetadata.target,\n                            synchronize: true\n                        }\n                    });\n                    if (relation.embeddedMetadata) {\n                        relation.embeddedMetadata.indices.push(index);\n                    }\n                    else {\n                        relation.entityMetadata.ownIndices.push(index);\n                    }\n                    _this.computeEntityMetadataStep2(entityMetadata);\n                }\n            });\n            // create junction entity metadatas for entity many-to-many relations\n            entityMetadata.relations.filter(function (relation) { return relation.isManyToMany; }).forEach(function (relation) {\n                var joinTable = _this.metadataArgsStorage.findJoinTable(relation.target, relation.propertyName);\n                if (!joinTable)\n                    return; // no join table set - no need to do anything (it means this is many-to-many inverse side)\n                // here we create a junction entity metadata for a new junction table of many-to-many relation\n                var junctionEntityMetadata = _this.junctionEntityMetadataBuilder.build(relation, joinTable);\n                relation.registerForeignKeys.apply(relation, __spreadArray([], __read(junctionEntityMetadata.foreignKeys), false));\n                relation.registerJoinColumns(junctionEntityMetadata.ownIndices[0].columns, junctionEntityMetadata.ownIndices[1].columns);\n                relation.registerJunctionEntityMetadata(junctionEntityMetadata);\n                // compute new entity metadata properties and push it to entity metadatas pool\n                _this.computeEntityMetadataStep2(junctionEntityMetadata);\n                _this.computeInverseProperties(junctionEntityMetadata, entityMetadatas);\n                entityMetadatas.push(junctionEntityMetadata);\n            });\n        });\n        // update entity metadata depend properties\n        entityMetadatas\n            .forEach(function (entityMetadata) {\n            entityMetadata.relationsWithJoinColumns = entityMetadata.relations.filter(function (relation) { return relation.isWithJoinColumn; });\n            entityMetadata.hasNonNullableRelations = entityMetadata.relationsWithJoinColumns.some(function (relation) { return !relation.isNullable || relation.isPrimary; });\n        });\n        // generate closure junction tables for all closure tables\n        entityMetadatas\n            .filter(function (metadata) { return metadata.treeType === \"closure-table\"; })\n            .forEach(function (entityMetadata) {\n            var closureJunctionEntityMetadata = _this.closureJunctionEntityMetadataBuilder.build(entityMetadata);\n            entityMetadata.closureJunctionTable = closureJunctionEntityMetadata;\n            _this.computeEntityMetadataStep2(closureJunctionEntityMetadata);\n            _this.computeInverseProperties(closureJunctionEntityMetadata, entityMetadatas);\n            entityMetadatas.push(closureJunctionEntityMetadata);\n        });\n        // generate keys for tables with single-table inheritance\n        entityMetadatas\n            .filter(function (metadata) { return metadata.inheritancePattern === \"STI\" && metadata.discriminatorColumn; })\n            .forEach(function (entityMetadata) { return _this.createKeysForTableInheritance(entityMetadata); });\n        // build all indices (need to do it after relations and their join columns are built)\n        entityMetadatas.forEach(function (entityMetadata) {\n            entityMetadata.indices.forEach(function (index) { return index.build(_this.connection.namingStrategy); });\n        });\n        // build all unique constraints (need to do it after relations and their join columns are built)\n        entityMetadatas.forEach(function (entityMetadata) {\n            entityMetadata.uniques.forEach(function (unique) { return unique.build(_this.connection.namingStrategy); });\n        });\n        // build all check constraints\n        entityMetadatas.forEach(function (entityMetadata) {\n            entityMetadata.checks.forEach(function (check) { return check.build(_this.connection.namingStrategy); });\n        });\n        // build all exclusion constraints\n        entityMetadatas.forEach(function (entityMetadata) {\n            entityMetadata.exclusions.forEach(function (exclusion) { return exclusion.build(_this.connection.namingStrategy); });\n        });\n        // add lazy initializer for entity relations\n        entityMetadatas\n            .filter(function (metadata) { return metadata.target instanceof Function; })\n            .forEach(function (entityMetadata) {\n            entityMetadata.relations\n                .filter(function (relation) { return relation.isLazy; })\n                .forEach(function (relation) {\n                _this.connection.relationLoader.enableLazyLoad(relation, entityMetadata.target.prototype);\n            });\n        });\n        entityMetadatas.forEach(function (entityMetadata) {\n            entityMetadata.columns.forEach(function (column) {\n                // const target = column.embeddedMetadata ? column.embeddedMetadata.type : column.target;\n                var generated = _this.metadataArgsStorage.findGenerated(column.target, column.propertyName);\n                if (generated) {\n                    column.isGenerated = true;\n                    column.generationStrategy = generated.strategy;\n                    if (generated.strategy === \"uuid\") {\n                        column.type = \"uuid\";\n                    }\n                    else if (generated.strategy === \"rowid\") {\n                        column.type = \"int\";\n                    }\n                    else {\n                        column.type = column.type || Number;\n                    }\n                    column.build(_this.connection);\n                    _this.computeEntityMetadataStep2(entityMetadata);\n                }\n            });\n        });\n        return entityMetadatas;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates entity metadata from the given table args.\n     * Creates column, relation, etc. metadatas for everything this entity metadata owns.\n     */\n    EntityMetadataBuilder.prototype.createEntityMetadata = function (tableArgs) {\n        // we take all \"inheritance tree\" from a target entity to collect all stored metadata args\n        // (by decorators or inside entity schemas). For example for target Post < ContentModel < Unit\n        // it will be an array of [Post, ContentModel, Unit] and we can then get all metadata args of those classes\n        var inheritanceTree = tableArgs.target instanceof Function\n            ? MetadataUtils.getInheritanceTree(tableArgs.target)\n            : [tableArgs.target]; // todo: implement later here inheritance for string-targets\n        var tableInheritance = this.metadataArgsStorage.findInheritanceType(tableArgs.target);\n        var tableTree = this.metadataArgsStorage.findTree(tableArgs.target);\n        // if single table inheritance used, we need to copy all children columns in to parent table\n        var singleTableChildrenTargets;\n        if ((tableInheritance && tableInheritance.pattern === \"STI\") || tableArgs.type === \"entity-child\") {\n            singleTableChildrenTargets = this.metadataArgsStorage\n                .filterSingleTableChildren(tableArgs.target)\n                .map(function (args) { return args.target; })\n                .filter(function (target) { return target instanceof Function; });\n            inheritanceTree.push.apply(inheritanceTree, __spreadArray([], __read(singleTableChildrenTargets), false));\n        }\n        return new EntityMetadata({\n            connection: this.connection,\n            args: tableArgs,\n            inheritanceTree: inheritanceTree,\n            tableTree: tableTree,\n            inheritancePattern: tableInheritance ? tableInheritance.pattern : undefined\n        });\n    };\n    EntityMetadataBuilder.prototype.computeParentEntityMetadata = function (allEntityMetadatas, entityMetadata) {\n        // after all metadatas created we set parent entity metadata for table inheritance\n        if (entityMetadata.tableType === \"entity-child\") {\n            entityMetadata.parentEntityMetadata = allEntityMetadatas.find(function (allEntityMetadata) {\n                return allEntityMetadata.inheritanceTree.indexOf(entityMetadata.target) !== -1 && allEntityMetadata.inheritancePattern === \"STI\";\n            });\n        }\n    };\n    EntityMetadataBuilder.prototype.computeEntityMetadataStep1 = function (allEntityMetadatas, entityMetadata) {\n        var _a, _b, _c;\n        var _this = this;\n        var entityInheritance = this.metadataArgsStorage.findInheritanceType(entityMetadata.target);\n        var discriminatorValue = this.metadataArgsStorage.findDiscriminatorValue(entityMetadata.target);\n        if (typeof discriminatorValue !== \"undefined\") {\n            entityMetadata.discriminatorValue = discriminatorValue.value;\n        }\n        else {\n            entityMetadata.discriminatorValue = entityMetadata.target.name;\n        }\n        // if single table inheritance is used, we need to mark all embedded columns as nullable\n        entityMetadata.embeddeds = this.createEmbeddedsRecursively(entityMetadata, this.metadataArgsStorage.filterEmbeddeds(entityMetadata.inheritanceTree))\n            .map(function (embedded) {\n            if (entityMetadata.inheritancePattern === \"STI\") {\n                embedded.columns = embedded.columns.map(function (column) {\n                    column.isNullable = true;\n                    return column;\n                });\n            }\n            return embedded;\n        });\n        entityMetadata.ownColumns = this.metadataArgsStorage\n            .filterColumns(entityMetadata.inheritanceTree)\n            .map(function (args) {\n            // for single table children we reuse columns created for their parents\n            if (entityMetadata.tableType === \"entity-child\")\n                return entityMetadata.parentEntityMetadata.ownColumns.find(function (column) { return column.propertyName === args.propertyName; });\n            var column = new ColumnMetadata({ connection: _this.connection, entityMetadata: entityMetadata, args: args });\n            // if single table inheritance used, we need to mark all inherit table columns as nullable\n            var columnInSingleTableInheritedChild = allEntityMetadatas.find(function (otherEntityMetadata) { return otherEntityMetadata.tableType === \"entity-child\" && otherEntityMetadata.target === args.target; });\n            if (columnInSingleTableInheritedChild)\n                column.isNullable = true;\n            return column;\n        });\n        // for table inheritance we need to add a discriminator column\n        //\n        if (entityInheritance && entityInheritance.column) {\n            var discriminatorColumnName_1 = entityInheritance.column && entityInheritance.column.name ? entityInheritance.column.name : \"type\";\n            var discriminatorColumn = entityMetadata.ownColumns.find(function (column) { return column.propertyName === discriminatorColumnName_1; });\n            if (!discriminatorColumn) {\n                discriminatorColumn = new ColumnMetadata({\n                    connection: this.connection,\n                    entityMetadata: entityMetadata,\n                    args: {\n                        target: entityMetadata.target,\n                        mode: \"virtual\",\n                        propertyName: discriminatorColumnName_1,\n                        options: entityInheritance.column || {\n                            name: discriminatorColumnName_1,\n                            type: \"varchar\",\n                            nullable: false\n                        }\n                    }\n                });\n                discriminatorColumn.isVirtual = true;\n                discriminatorColumn.isDiscriminator = true;\n                entityMetadata.ownColumns.push(discriminatorColumn);\n            }\n            else {\n                discriminatorColumn.isDiscriminator = true;\n            }\n        }\n        // add discriminator column to the child entity metadatas\n        // discriminator column will not be there automatically since we are creating it in the code above\n        if (entityMetadata.tableType === \"entity-child\") {\n            var discriminatorColumn_1 = entityMetadata.parentEntityMetadata.ownColumns.find(function (column) { return column.isDiscriminator; });\n            if (discriminatorColumn_1 && !entityMetadata.ownColumns.find(function (column) { return column === discriminatorColumn_1; })) {\n                entityMetadata.ownColumns.push(discriminatorColumn_1);\n            }\n        }\n        var namingStrategy = this.connection.namingStrategy;\n        // check if tree is used then we need to add extra columns for specific tree types\n        if (entityMetadata.treeType === \"materialized-path\") {\n            entityMetadata.ownColumns.push(new ColumnMetadata({\n                connection: this.connection,\n                entityMetadata: entityMetadata,\n                materializedPath: true,\n                args: {\n                    target: entityMetadata.target,\n                    mode: \"virtual\",\n                    propertyName: \"mpath\",\n                    options: /*tree.column || */ {\n                        name: namingStrategy.materializedPathColumnName,\n                        type: \"varchar\",\n                        nullable: true,\n                        default: \"\"\n                    }\n                }\n            }));\n        }\n        else if (entityMetadata.treeType === \"nested-set\") {\n            var _d = namingStrategy.nestedSetColumnNames, left = _d.left, right = _d.right;\n            entityMetadata.ownColumns.push(new ColumnMetadata({\n                connection: this.connection,\n                entityMetadata: entityMetadata,\n                nestedSetLeft: true,\n                args: {\n                    target: entityMetadata.target,\n                    mode: \"virtual\",\n                    propertyName: left,\n                    options: /*tree.column || */ {\n                        name: left,\n                        type: \"integer\",\n                        nullable: false,\n                        default: 1\n                    }\n                }\n            }));\n            entityMetadata.ownColumns.push(new ColumnMetadata({\n                connection: this.connection,\n                entityMetadata: entityMetadata,\n                nestedSetRight: true,\n                args: {\n                    target: entityMetadata.target,\n                    mode: \"virtual\",\n                    propertyName: right,\n                    options: /*tree.column || */ {\n                        name: right,\n                        type: \"integer\",\n                        nullable: false,\n                        default: 2\n                    }\n                }\n            }));\n        }\n        entityMetadata.ownRelations = this.metadataArgsStorage.filterRelations(entityMetadata.inheritanceTree).map(function (args) {\n            // for single table children we reuse relations created for their parents\n            if (entityMetadata.tableType === \"entity-child\") {\n                var parentRelation = entityMetadata.parentEntityMetadata.ownRelations.find(function (relation) { return relation.propertyName === args.propertyName; });\n                var type = args.type instanceof Function ? args.type() : args.type;\n                if (parentRelation.type !== type) {\n                    var clone = Object.create(parentRelation);\n                    clone.type = type;\n                    return clone;\n                }\n                return parentRelation;\n            }\n            return new RelationMetadata({ entityMetadata: entityMetadata, args: args });\n        });\n        entityMetadata.relationIds = this.metadataArgsStorage.filterRelationIds(entityMetadata.inheritanceTree).map(function (args) {\n            // for single table children we reuse relation ids created for their parents\n            if (entityMetadata.tableType === \"entity-child\")\n                return entityMetadata.parentEntityMetadata.relationIds.find(function (relationId) { return relationId.propertyName === args.propertyName; });\n            return new RelationIdMetadata({ entityMetadata: entityMetadata, args: args });\n        });\n        entityMetadata.relationCounts = this.metadataArgsStorage.filterRelationCounts(entityMetadata.inheritanceTree).map(function (args) {\n            // for single table children we reuse relation counts created for their parents\n            if (entityMetadata.tableType === \"entity-child\")\n                return entityMetadata.parentEntityMetadata.relationCounts.find(function (relationCount) { return relationCount.propertyName === args.propertyName; });\n            return new RelationCountMetadata({ entityMetadata: entityMetadata, args: args });\n        });\n        entityMetadata.ownListeners = this.metadataArgsStorage.filterListeners(entityMetadata.inheritanceTree).map(function (args) {\n            return new EntityListenerMetadata({ entityMetadata: entityMetadata, args: args });\n        });\n        entityMetadata.checks = this.metadataArgsStorage.filterChecks(entityMetadata.inheritanceTree).map(function (args) {\n            return new CheckMetadata({ entityMetadata: entityMetadata, args: args });\n        });\n        // Only PostgreSQL supports exclusion constraints.\n        if (this.connection.driver instanceof PostgresDriver) {\n            entityMetadata.exclusions = this.metadataArgsStorage.filterExclusions(entityMetadata.inheritanceTree).map(function (args) {\n                return new ExclusionMetadata({ entityMetadata: entityMetadata, args: args });\n            });\n        }\n        if (this.connection.driver instanceof CockroachDriver) {\n            entityMetadata.ownIndices = this.metadataArgsStorage.filterIndices(entityMetadata.inheritanceTree)\n                .filter(function (args) { return !args.unique; })\n                .map(function (args) {\n                return new IndexMetadata({ entityMetadata: entityMetadata, args: args });\n            });\n            var uniques = this.metadataArgsStorage.filterIndices(entityMetadata.inheritanceTree)\n                .filter(function (args) { return args.unique; })\n                .map(function (args) {\n                return new UniqueMetadata({\n                    entityMetadata: entityMetadata,\n                    args: {\n                        target: args.target,\n                        name: args.name,\n                        columns: args.columns,\n                    }\n                });\n            });\n            (_a = entityMetadata.ownUniques).push.apply(_a, __spreadArray([], __read(uniques), false));\n        }\n        else {\n            entityMetadata.ownIndices = this.metadataArgsStorage.filterIndices(entityMetadata.inheritanceTree).map(function (args) {\n                return new IndexMetadata({ entityMetadata: entityMetadata, args: args });\n            });\n        }\n        // Mysql and SAP HANA stores unique constraints as unique indices.\n        if (this.connection.driver instanceof MysqlDriver || this.connection.driver instanceof AuroraDataApiDriver || this.connection.driver instanceof SapDriver) {\n            var indices = this.metadataArgsStorage.filterUniques(entityMetadata.inheritanceTree).map(function (args) {\n                return new IndexMetadata({\n                    entityMetadata: entityMetadata,\n                    args: {\n                        target: args.target,\n                        name: args.name,\n                        columns: args.columns,\n                        unique: true,\n                        synchronize: true\n                    }\n                });\n            });\n            (_b = entityMetadata.ownIndices).push.apply(_b, __spreadArray([], __read(indices), false));\n        }\n        else {\n            var uniques = this.metadataArgsStorage.filterUniques(entityMetadata.inheritanceTree).map(function (args) {\n                return new UniqueMetadata({ entityMetadata: entityMetadata, args: args });\n            });\n            (_c = entityMetadata.ownUniques).push.apply(_c, __spreadArray([], __read(uniques), false));\n        }\n    };\n    /**\n     * Creates from the given embedded metadata args real embedded metadatas with its columns and relations,\n     * and does the same for all its sub-embeddeds (goes recursively).\n     */\n    EntityMetadataBuilder.prototype.createEmbeddedsRecursively = function (entityMetadata, embeddedArgs) {\n        var _this = this;\n        return embeddedArgs.map(function (embeddedArgs) {\n            var embeddedMetadata = new EmbeddedMetadata({ entityMetadata: entityMetadata, args: embeddedArgs });\n            var targets = MetadataUtils.getInheritanceTree(embeddedMetadata.type);\n            embeddedMetadata.columns = _this.metadataArgsStorage.filterColumns(targets).map(function (args) {\n                return new ColumnMetadata({ connection: _this.connection, entityMetadata: entityMetadata, embeddedMetadata: embeddedMetadata, args: args });\n            });\n            embeddedMetadata.relations = _this.metadataArgsStorage.filterRelations(targets).map(function (args) {\n                return new RelationMetadata({ entityMetadata: entityMetadata, embeddedMetadata: embeddedMetadata, args: args });\n            });\n            embeddedMetadata.listeners = _this.metadataArgsStorage.filterListeners(targets).map(function (args) {\n                return new EntityListenerMetadata({ entityMetadata: entityMetadata, embeddedMetadata: embeddedMetadata, args: args });\n            });\n            embeddedMetadata.indices = _this.metadataArgsStorage.filterIndices(targets).map(function (args) {\n                return new IndexMetadata({ entityMetadata: entityMetadata, embeddedMetadata: embeddedMetadata, args: args });\n            });\n            embeddedMetadata.uniques = _this.metadataArgsStorage.filterUniques(targets).map(function (args) {\n                return new UniqueMetadata({ entityMetadata: entityMetadata, embeddedMetadata: embeddedMetadata, args: args });\n            });\n            embeddedMetadata.relationIds = _this.metadataArgsStorage.filterRelationIds(targets).map(function (args) {\n                return new RelationIdMetadata({ entityMetadata: entityMetadata, args: args });\n            });\n            embeddedMetadata.relationCounts = _this.metadataArgsStorage.filterRelationCounts(targets).map(function (args) {\n                return new RelationCountMetadata({ entityMetadata: entityMetadata, args: args });\n            });\n            embeddedMetadata.embeddeds = _this.createEmbeddedsRecursively(entityMetadata, _this.metadataArgsStorage.filterEmbeddeds(targets));\n            embeddedMetadata.embeddeds.forEach(function (subEmbedded) { return subEmbedded.parentEmbeddedMetadata = embeddedMetadata; });\n            entityMetadata.allEmbeddeds.push(embeddedMetadata);\n            return embeddedMetadata;\n        });\n    };\n    /**\n     * Computes all entity metadata's computed properties, and all its sub-metadatas (relations, columns, embeds, etc).\n     */\n    EntityMetadataBuilder.prototype.computeEntityMetadataStep2 = function (entityMetadata) {\n        var _this = this;\n        entityMetadata.embeddeds.forEach(function (embedded) { return embedded.build(_this.connection); });\n        entityMetadata.embeddeds.forEach(function (embedded) {\n            embedded.columnsFromTree.forEach(function (column) { return column.build(_this.connection); });\n            embedded.relationsFromTree.forEach(function (relation) { return relation.build(); });\n        });\n        entityMetadata.ownColumns.forEach(function (column) { return column.build(_this.connection); });\n        entityMetadata.ownRelations.forEach(function (relation) { return relation.build(); });\n        entityMetadata.relations = entityMetadata.embeddeds.reduce(function (relations, embedded) { return relations.concat(embedded.relationsFromTree); }, entityMetadata.ownRelations);\n        entityMetadata.eagerRelations = entityMetadata.relations.filter(function (relation) { return relation.isEager; });\n        entityMetadata.lazyRelations = entityMetadata.relations.filter(function (relation) { return relation.isLazy; });\n        entityMetadata.oneToOneRelations = entityMetadata.relations.filter(function (relation) { return relation.isOneToOne; });\n        entityMetadata.oneToManyRelations = entityMetadata.relations.filter(function (relation) { return relation.isOneToMany; });\n        entityMetadata.manyToOneRelations = entityMetadata.relations.filter(function (relation) { return relation.isManyToOne; });\n        entityMetadata.manyToManyRelations = entityMetadata.relations.filter(function (relation) { return relation.isManyToMany; });\n        entityMetadata.ownerOneToOneRelations = entityMetadata.relations.filter(function (relation) { return relation.isOneToOneOwner; });\n        entityMetadata.ownerManyToManyRelations = entityMetadata.relations.filter(function (relation) { return relation.isManyToManyOwner; });\n        entityMetadata.treeParentRelation = entityMetadata.relations.find(function (relation) { return relation.isTreeParent; });\n        entityMetadata.treeChildrenRelation = entityMetadata.relations.find(function (relation) { return relation.isTreeChildren; });\n        entityMetadata.columns = entityMetadata.embeddeds.reduce(function (columns, embedded) { return columns.concat(embedded.columnsFromTree); }, entityMetadata.ownColumns);\n        entityMetadata.listeners = entityMetadata.embeddeds.reduce(function (listeners, embedded) { return listeners.concat(embedded.listenersFromTree); }, entityMetadata.ownListeners);\n        entityMetadata.afterLoadListeners = entityMetadata.listeners.filter(function (listener) { return listener.type === EventListenerTypes.AFTER_LOAD; });\n        entityMetadata.afterInsertListeners = entityMetadata.listeners.filter(function (listener) { return listener.type === EventListenerTypes.AFTER_INSERT; });\n        entityMetadata.afterUpdateListeners = entityMetadata.listeners.filter(function (listener) { return listener.type === EventListenerTypes.AFTER_UPDATE; });\n        entityMetadata.afterRemoveListeners = entityMetadata.listeners.filter(function (listener) { return listener.type === EventListenerTypes.AFTER_REMOVE; });\n        entityMetadata.beforeInsertListeners = entityMetadata.listeners.filter(function (listener) { return listener.type === EventListenerTypes.BEFORE_INSERT; });\n        entityMetadata.beforeUpdateListeners = entityMetadata.listeners.filter(function (listener) { return listener.type === EventListenerTypes.BEFORE_UPDATE; });\n        entityMetadata.beforeRemoveListeners = entityMetadata.listeners.filter(function (listener) { return listener.type === EventListenerTypes.BEFORE_REMOVE; });\n        entityMetadata.indices = entityMetadata.embeddeds.reduce(function (indices, embedded) { return indices.concat(embedded.indicesFromTree); }, entityMetadata.ownIndices);\n        entityMetadata.uniques = entityMetadata.embeddeds.reduce(function (uniques, embedded) { return uniques.concat(embedded.uniquesFromTree); }, entityMetadata.ownUniques);\n        entityMetadata.primaryColumns = entityMetadata.columns.filter(function (column) { return column.isPrimary; });\n        entityMetadata.nonVirtualColumns = entityMetadata.columns.filter(function (column) { return !column.isVirtual; });\n        entityMetadata.ancestorColumns = entityMetadata.columns.filter(function (column) { return column.closureType === \"ancestor\"; });\n        entityMetadata.descendantColumns = entityMetadata.columns.filter(function (column) { return column.closureType === \"descendant\"; });\n        entityMetadata.hasMultiplePrimaryKeys = entityMetadata.primaryColumns.length > 1;\n        entityMetadata.generatedColumns = entityMetadata.columns.filter(function (column) { return column.isGenerated || column.isObjectId; });\n        entityMetadata.hasUUIDGeneratedColumns = entityMetadata.columns.filter(function (column) { return column.isGenerated || column.generationStrategy === \"uuid\"; }).length > 0;\n        entityMetadata.createDateColumn = entityMetadata.columns.find(function (column) { return column.isCreateDate; });\n        entityMetadata.updateDateColumn = entityMetadata.columns.find(function (column) { return column.isUpdateDate; });\n        entityMetadata.deleteDateColumn = entityMetadata.columns.find(function (column) { return column.isDeleteDate; });\n        entityMetadata.versionColumn = entityMetadata.columns.find(function (column) { return column.isVersion; });\n        entityMetadata.discriminatorColumn = entityMetadata.columns.find(function (column) { return column.isDiscriminator; });\n        entityMetadata.treeLevelColumn = entityMetadata.columns.find(function (column) { return column.isTreeLevel; });\n        entityMetadata.nestedSetLeftColumn = entityMetadata.columns.find(function (column) { return column.isNestedSetLeft; });\n        entityMetadata.nestedSetRightColumn = entityMetadata.columns.find(function (column) { return column.isNestedSetRight; });\n        entityMetadata.materializedPathColumn = entityMetadata.columns.find(function (column) { return column.isMaterializedPath; });\n        entityMetadata.objectIdColumn = entityMetadata.columns.find(function (column) { return column.isObjectId; });\n        entityMetadata.foreignKeys.forEach(function (foreignKey) { return foreignKey.build(_this.connection.namingStrategy); });\n        entityMetadata.propertiesMap = entityMetadata.createPropertiesMap();\n        entityMetadata.relationIds.forEach(function (relationId) { return relationId.build(); });\n        entityMetadata.relationCounts.forEach(function (relationCount) { return relationCount.build(); });\n        entityMetadata.embeddeds.forEach(function (embedded) {\n            embedded.relationIdsFromTree.forEach(function (relationId) { return relationId.build(); });\n            embedded.relationCountsFromTree.forEach(function (relationCount) { return relationCount.build(); });\n        });\n    };\n    /**\n     * Computes entity metadata's relations inverse side properties.\n     */\n    EntityMetadataBuilder.prototype.computeInverseProperties = function (entityMetadata, entityMetadatas) {\n        entityMetadata.relations.forEach(function (relation) {\n            // compute inverse side (related) entity metadatas for all relation metadatas\n            var inverseEntityMetadata = entityMetadatas.find(function (m) { return m.target === relation.type || (typeof relation.type === \"string\" && (m.targetName === relation.type || m.givenTableName === relation.type)); });\n            if (!inverseEntityMetadata)\n                throw new TypeORMError(\"Entity metadata for \" + entityMetadata.name + \"#\" + relation.propertyPath + \" was not found. Check if you specified a correct entity object and if it's connected in the connection options.\");\n            relation.inverseEntityMetadata = inverseEntityMetadata;\n            relation.inverseSidePropertyPath = relation.buildInverseSidePropertyPath();\n            // and compute inverse relation and mark if it has such\n            relation.inverseRelation = inverseEntityMetadata.relations.find(function (foundRelation) { return foundRelation.propertyPath === relation.inverseSidePropertyPath; });\n        });\n    };\n    /**\n     * Creates indices for the table of single table inheritance.\n     */\n    EntityMetadataBuilder.prototype.createKeysForTableInheritance = function (entityMetadata) {\n        entityMetadata.indices.push(new IndexMetadata({\n            entityMetadata: entityMetadata,\n            columns: [entityMetadata.discriminatorColumn],\n            args: {\n                target: entityMetadata.target,\n                unique: false\n            }\n        }));\n    };\n    return EntityMetadataBuilder;\n}());\nexport { EntityMetadataBuilder };\n\n//# sourceMappingURL=EntityMetadataBuilder.js.map\n","import { __values } from \"tslib\";\nimport { MetadataArgsStorage } from \"../metadata-args/MetadataArgsStorage\";\n/**\n * Transforms entity schema into metadata args storage.\n * The result will be just like entities read from decorators.\n */\nvar EntitySchemaTransformer = /** @class */ (function () {\n    function EntitySchemaTransformer() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Transforms entity schema into new metadata args storage object.\n     */\n    EntitySchemaTransformer.prototype.transform = function (schemas) {\n        var metadataArgsStorage = new MetadataArgsStorage();\n        schemas.forEach(function (entitySchema) {\n            var options = entitySchema.options;\n            // add table metadata args from the schema\n            var tableMetadata = {\n                target: options.target || options.name,\n                name: options.tableName,\n                database: options.database,\n                schema: options.schema,\n                type: options.type || \"regular\",\n                orderBy: options.orderBy,\n                synchronize: options.synchronize,\n                expression: options.expression\n            };\n            metadataArgsStorage.tables.push(tableMetadata);\n            // add columns metadata args from the schema\n            Object.keys(options.columns).forEach(function (columnName) {\n                var column = options.columns[columnName];\n                var mode = \"regular\";\n                if (column.createDate)\n                    mode = \"createDate\";\n                if (column.updateDate)\n                    mode = \"updateDate\";\n                if (column.deleteDate)\n                    mode = \"deleteDate\";\n                if (column.version)\n                    mode = \"version\";\n                if (column.treeChildrenCount)\n                    mode = \"treeChildrenCount\";\n                if (column.treeLevel)\n                    mode = \"treeLevel\";\n                if (column.objectId)\n                    mode = \"objectId\";\n                var columnAgrs = {\n                    target: options.target || options.name,\n                    mode: mode,\n                    propertyName: columnName,\n                    options: {\n                        type: column.type,\n                        name: column.objectId ? \"_id\" : column.name,\n                        length: column.length,\n                        width: column.width,\n                        nullable: column.nullable,\n                        readonly: column.readonly,\n                        update: column.update,\n                        select: column.select,\n                        insert: column.insert,\n                        primary: column.primary,\n                        unique: column.unique,\n                        comment: column.comment,\n                        default: column.default,\n                        onUpdate: column.onUpdate,\n                        precision: column.precision,\n                        scale: column.scale,\n                        zerofill: column.zerofill,\n                        unsigned: column.unsigned,\n                        charset: column.charset,\n                        collation: column.collation,\n                        enum: column.enum,\n                        asExpression: column.asExpression,\n                        generatedType: column.generatedType,\n                        hstoreType: column.hstoreType,\n                        array: column.array,\n                        transformer: column.transformer,\n                        spatialFeatureType: column.spatialFeatureType,\n                        srid: column.srid\n                    }\n                };\n                metadataArgsStorage.columns.push(columnAgrs);\n                if (column.generated) {\n                    var generationArgs = {\n                        target: options.target || options.name,\n                        propertyName: columnName,\n                        strategy: typeof column.generated === \"string\" ? column.generated : \"increment\"\n                    };\n                    metadataArgsStorage.generations.push(generationArgs);\n                }\n                if (column.unique)\n                    metadataArgsStorage.uniques.push({ target: options.target || options.name, columns: [columnName] });\n            });\n            // add relation metadata args from the schema\n            if (options.relations) {\n                Object.keys(options.relations).forEach(function (relationName) {\n                    var e_1, _a;\n                    var relationSchema = options.relations[relationName];\n                    var relation = {\n                        target: options.target || options.name,\n                        propertyName: relationName,\n                        relationType: relationSchema.type,\n                        isLazy: relationSchema.lazy || false,\n                        type: relationSchema.target,\n                        inverseSideProperty: relationSchema.inverseSide,\n                        isTreeParent: relationSchema.treeParent,\n                        isTreeChildren: relationSchema.treeChildren,\n                        options: {\n                            eager: relationSchema.eager || false,\n                            cascade: relationSchema.cascade,\n                            nullable: relationSchema.nullable,\n                            onDelete: relationSchema.onDelete,\n                            onUpdate: relationSchema.onUpdate,\n                            deferrable: relationSchema.deferrable,\n                            primary: relationSchema.primary,\n                            persistence: relationSchema.persistence,\n                            orphanedRowAction: relationSchema.orphanedRowAction\n                        }\n                    };\n                    metadataArgsStorage.relations.push(relation);\n                    // add join column\n                    if (relationSchema.joinColumn) {\n                        if (typeof relationSchema.joinColumn === \"boolean\") {\n                            var joinColumn = {\n                                target: options.target || options.name,\n                                propertyName: relationName\n                            };\n                            metadataArgsStorage.joinColumns.push(joinColumn);\n                        }\n                        else {\n                            var joinColumnsOptions = Array.isArray(relationSchema.joinColumn) ? relationSchema.joinColumn : [relationSchema.joinColumn];\n                            try {\n                                for (var joinColumnsOptions_1 = __values(joinColumnsOptions), joinColumnsOptions_1_1 = joinColumnsOptions_1.next(); !joinColumnsOptions_1_1.done; joinColumnsOptions_1_1 = joinColumnsOptions_1.next()) {\n                                    var joinColumnOption = joinColumnsOptions_1_1.value;\n                                    var joinColumn = {\n                                        target: options.target || options.name,\n                                        propertyName: relationName,\n                                        name: joinColumnOption.name,\n                                        referencedColumnName: joinColumnOption.referencedColumnName\n                                    };\n                                    metadataArgsStorage.joinColumns.push(joinColumn);\n                                }\n                            }\n                            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                            finally {\n                                try {\n                                    if (joinColumnsOptions_1_1 && !joinColumnsOptions_1_1.done && (_a = joinColumnsOptions_1.return)) _a.call(joinColumnsOptions_1);\n                                }\n                                finally { if (e_1) throw e_1.error; }\n                            }\n                        }\n                    }\n                    // add join table\n                    if (relationSchema.joinTable) {\n                        if (typeof relationSchema.joinTable === \"boolean\") {\n                            var joinTable = {\n                                target: options.target || options.name,\n                                propertyName: relationName\n                            };\n                            metadataArgsStorage.joinTables.push(joinTable);\n                        }\n                        else {\n                            var joinTable = {\n                                target: options.target || options.name,\n                                propertyName: relationName,\n                                name: relationSchema.joinTable.name,\n                                database: relationSchema.joinTable.database,\n                                schema: relationSchema.joinTable.schema,\n                                joinColumns: (relationSchema.joinTable.joinColumn ? [relationSchema.joinTable.joinColumn] : relationSchema.joinTable.joinColumns),\n                                inverseJoinColumns: (relationSchema.joinTable.inverseJoinColumn ? [relationSchema.joinTable.inverseJoinColumn] : relationSchema.joinTable.inverseJoinColumns),\n                            };\n                            metadataArgsStorage.joinTables.push(joinTable);\n                        }\n                    }\n                });\n            }\n            // add index metadata args from the schema\n            if (options.indices) {\n                options.indices.forEach(function (index) {\n                    var indexAgrs = {\n                        target: options.target || options.name,\n                        name: index.name,\n                        unique: index.unique === true ? true : false,\n                        spatial: index.spatial === true ? true : false,\n                        fulltext: index.fulltext === true ? true : false,\n                        parser: index.parser,\n                        synchronize: index.synchronize === false ? false : true,\n                        where: index.where,\n                        sparse: index.sparse,\n                        columns: index.columns\n                    };\n                    metadataArgsStorage.indices.push(indexAgrs);\n                });\n            }\n            // add unique metadata args from the schema\n            if (options.uniques) {\n                options.uniques.forEach(function (unique) {\n                    var uniqueAgrs = {\n                        target: options.target || options.name,\n                        name: unique.name,\n                        columns: unique.columns\n                    };\n                    metadataArgsStorage.uniques.push(uniqueAgrs);\n                });\n            }\n            // add check metadata args from the schema\n            if (options.checks) {\n                options.checks.forEach(function (check) {\n                    var checkAgrs = {\n                        target: options.target || options.name,\n                        name: check.name,\n                        expression: check.expression\n                    };\n                    metadataArgsStorage.checks.push(checkAgrs);\n                });\n            }\n            // add exclusion metadata args from the schema\n            if (options.exclusions) {\n                options.exclusions.forEach(function (exclusion) {\n                    var exclusionArgs = {\n                        target: options.target || options.name,\n                        name: exclusion.name,\n                        expression: exclusion.expression\n                    };\n                    metadataArgsStorage.exclusions.push(exclusionArgs);\n                });\n            }\n        });\n        return metadataArgsStorage;\n    };\n    return EntitySchemaTransformer;\n}());\nexport { EntitySchemaTransformer };\n\n//# sourceMappingURL=EntitySchemaTransformer.js.map\n","import { __read, __spreadArray } from \"tslib\";\nimport { importClassesFromDirectories } from \"../util/DirectoryExportedClassesLoader\";\nimport { OrmUtils } from \"../util/OrmUtils\";\nimport { getFromContainer } from \"../container\";\nimport { getMetadataArgsStorage } from \"../globals\";\nimport { EntityMetadataBuilder } from \"../metadata-builder/EntityMetadataBuilder\";\nimport { EntitySchemaTransformer } from \"../entity-schema/EntitySchemaTransformer\";\nimport { EntitySchema } from \"../entity-schema/EntitySchema\";\n/**\n * Builds migration instances, subscriber instances and entity metadatas for the given classes.\n */\nvar ConnectionMetadataBuilder = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ConnectionMetadataBuilder(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Builds migration instances for the given classes or directories.\n     */\n    ConnectionMetadataBuilder.prototype.buildMigrations = function (migrations) {\n        var _a = __read(OrmUtils.splitClassesAndStrings(migrations), 2), migrationClasses = _a[0], migrationDirectories = _a[1];\n        var allMigrationClasses = __spreadArray(__spreadArray([], __read(migrationClasses), false), __read(importClassesFromDirectories(this.connection.logger, migrationDirectories)), false);\n        return allMigrationClasses.map(function (migrationClass) { return getFromContainer(migrationClass); });\n    };\n    /**\n     * Builds subscriber instances for the given classes or directories.\n     */\n    ConnectionMetadataBuilder.prototype.buildSubscribers = function (subscribers) {\n        var _a = __read(OrmUtils.splitClassesAndStrings(subscribers || []), 2), subscriberClasses = _a[0], subscriberDirectories = _a[1];\n        var allSubscriberClasses = __spreadArray(__spreadArray([], __read(subscriberClasses), false), __read(importClassesFromDirectories(this.connection.logger, subscriberDirectories)), false);\n        return getMetadataArgsStorage()\n            .filterSubscribers(allSubscriberClasses)\n            .map(function (metadata) { return getFromContainer(metadata.target); });\n    };\n    /**\n     * Builds entity metadatas for the given classes or directories.\n     */\n    ConnectionMetadataBuilder.prototype.buildEntityMetadatas = function (entities) {\n        // todo: instead we need to merge multiple metadata args storages\n        var _a = __read(OrmUtils.splitClassesAndStrings(entities || []), 2), entityClassesOrSchemas = _a[0], entityDirectories = _a[1];\n        var entityClasses = entityClassesOrSchemas.filter(function (entityClass) { return (entityClass instanceof EntitySchema) === false; });\n        var entitySchemas = entityClassesOrSchemas.filter(function (entityClass) { return entityClass instanceof EntitySchema; });\n        var allEntityClasses = __spreadArray(__spreadArray([], __read(entityClasses), false), __read(importClassesFromDirectories(this.connection.logger, entityDirectories)), false);\n        allEntityClasses.forEach(function (entityClass) {\n            if (entityClass instanceof EntitySchema) {\n                entitySchemas.push(entityClass);\n            }\n        });\n        var decoratorEntityMetadatas = new EntityMetadataBuilder(this.connection, getMetadataArgsStorage()).build(allEntityClasses);\n        var metadataArgsStorageFromSchema = new EntitySchemaTransformer().transform(entitySchemas);\n        var schemaEntityMetadatas = new EntityMetadataBuilder(this.connection, metadataArgsStorageFromSchema).build();\n        return __spreadArray(__spreadArray([], __read(decoratorEntityMetadatas), false), __read(schemaEntityMetadatas), false);\n    };\n    return ConnectionMetadataBuilder;\n}());\nexport { ConnectionMetadataBuilder };\n\n//# sourceMappingURL=ConnectionMetadataBuilder.js.map\n","/**\n * Performs logging of the events in TypeORM.\n * This version of logger uses console to log events and does not use syntax highlighting.\n */\nvar SimpleConsoleLogger = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SimpleConsoleLogger(options) {\n        this.options = options;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Logs query and parameters used in it.\n     */\n    SimpleConsoleLogger.prototype.logQuery = function (query, parameters, queryRunner) {\n        if (this.options === \"all\" || this.options === true || (Array.isArray(this.options) && this.options.indexOf(\"query\") !== -1)) {\n            var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n            console.log(\"query\" + \": \" + sql);\n        }\n    };\n    /**\n     * Logs query that is failed.\n     */\n    SimpleConsoleLogger.prototype.logQueryError = function (error, query, parameters, queryRunner) {\n        if (this.options === \"all\" || this.options === true || (Array.isArray(this.options) && this.options.indexOf(\"error\") !== -1)) {\n            var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n            console.log(\"query failed: \" + sql);\n            console.log(\"error:\", error);\n        }\n    };\n    /**\n     * Logs query that is slow.\n     */\n    SimpleConsoleLogger.prototype.logQuerySlow = function (time, query, parameters, queryRunner) {\n        var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n        console.log(\"query is slow: \" + sql);\n        console.log(\"execution time: \" + time);\n    };\n    /**\n     * Logs events from the schema build process.\n     */\n    SimpleConsoleLogger.prototype.logSchemaBuild = function (message, queryRunner) {\n        if (this.options === \"all\" || (Array.isArray(this.options) && this.options.indexOf(\"schema\") !== -1)) {\n            console.log(message);\n        }\n    };\n    /**\n     * Logs events from the migrations run process.\n     */\n    SimpleConsoleLogger.prototype.logMigration = function (message, queryRunner) {\n        console.log(message);\n    };\n    /**\n     * Perform logging using given logger, or by default to the console.\n     * Log has its own level and message.\n     */\n    SimpleConsoleLogger.prototype.log = function (level, message, queryRunner) {\n        switch (level) {\n            case \"log\":\n                if (this.options === \"all\" || (Array.isArray(this.options) && this.options.indexOf(\"log\") !== -1))\n                    console.log(message);\n                break;\n            case \"info\":\n                if (this.options === \"all\" || (Array.isArray(this.options) && this.options.indexOf(\"info\") !== -1))\n                    console.info(message);\n                break;\n            case \"warn\":\n                if (this.options === \"all\" || (Array.isArray(this.options) && this.options.indexOf(\"warn\") !== -1))\n                    console.warn(message);\n                break;\n        }\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Converts parameters to a string.\n     * Sometimes parameters can have circular objects and therefor we are handle this case too.\n     */\n    SimpleConsoleLogger.prototype.stringifyParams = function (parameters) {\n        try {\n            return JSON.stringify(parameters);\n        }\n        catch (error) { // most probably circular objects in parameters\n            return parameters;\n        }\n    };\n    return SimpleConsoleLogger;\n}());\nexport { SimpleConsoleLogger };\n\n//# sourceMappingURL=SimpleConsoleLogger.js.map\n","import { PlatformTools } from \"../platform/PlatformTools\";\n/**\n * Performs logging of the events in TypeORM.\n * This version of logger uses console to log events and use syntax highlighting.\n */\nvar AdvancedConsoleLogger = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function AdvancedConsoleLogger(options) {\n        this.options = options;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Logs query and parameters used in it.\n     */\n    AdvancedConsoleLogger.prototype.logQuery = function (query, parameters, queryRunner) {\n        if (this.options === \"all\" || this.options === true || (Array.isArray(this.options) && this.options.indexOf(\"query\") !== -1)) {\n            var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n            PlatformTools.logInfo(\"query:\", PlatformTools.highlightSql(sql));\n        }\n    };\n    /**\n     * Logs query that is failed.\n     */\n    AdvancedConsoleLogger.prototype.logQueryError = function (error, query, parameters, queryRunner) {\n        if (this.options === \"all\" || this.options === true || (Array.isArray(this.options) && this.options.indexOf(\"error\") !== -1)) {\n            var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n            PlatformTools.logError(\"query failed:\", PlatformTools.highlightSql(sql));\n            PlatformTools.logError(\"error:\", error);\n        }\n    };\n    /**\n     * Logs query that is slow.\n     */\n    AdvancedConsoleLogger.prototype.logQuerySlow = function (time, query, parameters, queryRunner) {\n        var sql = query + (parameters && parameters.length ? \" -- PARAMETERS: \" + this.stringifyParams(parameters) : \"\");\n        PlatformTools.logWarn(\"query is slow:\", PlatformTools.highlightSql(sql));\n        PlatformTools.logWarn(\"execution time:\", time);\n    };\n    /**\n     * Logs events from the schema build process.\n     */\n    AdvancedConsoleLogger.prototype.logSchemaBuild = function (message, queryRunner) {\n        if (this.options === \"all\" || (Array.isArray(this.options) && this.options.indexOf(\"schema\") !== -1)) {\n            PlatformTools.log(message);\n        }\n    };\n    /**\n     * Logs events from the migration run process.\n     */\n    AdvancedConsoleLogger.prototype.logMigration = function (message, queryRunner) {\n        PlatformTools.log(message);\n    };\n    /**\n     * Perform logging using given logger, or by default to the console.\n     * Log has its own level and message.\n     */\n    AdvancedConsoleLogger.prototype.log = function (level, message, queryRunner) {\n        switch (level) {\n            case \"log\":\n                if (this.options === \"all\" || (Array.isArray(this.options) && this.options.indexOf(\"log\") !== -1))\n                    PlatformTools.log(message);\n                break;\n            case \"info\":\n                if (this.options === \"all\" || (Array.isArray(this.options) && this.options.indexOf(\"info\") !== -1))\n                    PlatformTools.logInfo(\"INFO:\", message);\n                break;\n            case \"warn\":\n                if (this.options === \"all\" || (Array.isArray(this.options) && this.options.indexOf(\"warn\") !== -1))\n                    console.warn(PlatformTools.warn(message));\n                break;\n        }\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Converts parameters to a string.\n     * Sometimes parameters can have circular objects and therefor we are handle this case too.\n     */\n    AdvancedConsoleLogger.prototype.stringifyParams = function (parameters) {\n        try {\n            return JSON.stringify(parameters);\n        }\n        catch (error) { // most probably circular objects in parameters\n            return parameters;\n        }\n    };\n    return AdvancedConsoleLogger;\n}());\nexport { AdvancedConsoleLogger };\n\n//# sourceMappingURL=AdvancedConsoleLogger.js.map\n","import { __extends } from \"tslib\";\n/**\n * Performs logging of the events in TypeORM.\n * This version of logger logs everything into ormlogs.log file.\n */\nvar DummyLogger = /** @class */ (function () {\n    function DummyLogger() {\n    }\n    /**\n     * Logs query and parameters used in it.\n     */\n    DummyLogger.prototype.logQuery = function () {\n        throw new Error('This logger is not applicable in a browser context');\n    };\n    /**\n     * Logs query that is failed.\n     */\n    DummyLogger.prototype.logQueryError = function () {\n        throw new Error('This logger is not applicable in a browser context');\n    };\n    /**\n     * Logs query that is slow.\n     */\n    DummyLogger.prototype.logQuerySlow = function () {\n        throw new Error('This logger is not applicable in a browser context');\n    };\n    /**\n     * Logs events from the schema build process.\n     */\n    DummyLogger.prototype.logSchemaBuild = function () {\n        throw new Error('This logger is not applicable in a browser context');\n    };\n    /**\n     * Logs events from the migrations run process.\n     */\n    DummyLogger.prototype.logMigration = function () {\n        throw new Error('This logger is not applicable in a browser context');\n    };\n    /**\n     * Perform logging using given logger, or by default to the console.\n     * Log has its own level and message.\n     */\n    DummyLogger.prototype.log = function () {\n        throw new Error('This logger is not applicable in a browser context');\n    };\n    return DummyLogger;\n}());\nexport { DummyLogger };\nvar FileLogger = /** @class */ (function (_super) {\n    __extends(FileLogger, _super);\n    function FileLogger() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FileLogger;\n}(DummyLogger));\nexport { FileLogger };\n\n//# sourceMappingURL=BrowserFileLoggerDummy.js.map\n","import debug from \"debug\";\nimport { PlatformTools } from \"../platform/PlatformTools\";\n/**\n * Performs logging of the events in TypeORM via debug library.\n */\nvar DebugLogger = /** @class */ (function () {\n    function DebugLogger() {\n        this.debugQueryLog = debug(\"typeorm:query:log\");\n        this.debugQueryError = debug(\"typeorm:query:error\");\n        this.debugQuerySlow = debug(\"typeorm:query:slow\");\n        this.debugSchemaBuild = debug(\"typeorm:schema\");\n        this.debugMigration = debug(\"typeorm:migration\");\n        this.debugLog = debug(\"typeorm:log\");\n        this.debugInfo = debug(\"typeorm:info\");\n        this.debugWarn = debug(\"typeorm:warn\");\n    }\n    /**\n     * Logs query and parameters used in it.\n     */\n    DebugLogger.prototype.logQuery = function (query, parameters, queryRunner) {\n        if (this.debugQueryLog.enabled) {\n            this.debugQueryLog(PlatformTools.highlightSql(query) + \";\");\n            if (parameters && parameters.length) {\n                this.debugQueryLog(\"parameters:\", parameters);\n            }\n        }\n    };\n    /**\n     * Logs query that failed.\n     */\n    DebugLogger.prototype.logQueryError = function (error, query, parameters, queryRunner) {\n        if (this.debugQueryError.enabled) {\n            this.debugQueryError(PlatformTools.highlightSql(query) + \";\");\n            if (parameters && parameters.length) {\n                this.debugQueryError(\"parameters:\", parameters);\n            }\n            this.debugQueryError(\"error: \", error);\n        }\n    };\n    /**\n     * Logs query that is slow.\n     */\n    DebugLogger.prototype.logQuerySlow = function (time, query, parameters, queryRunner) {\n        if (this.debugQuerySlow.enabled) {\n            this.debugQuerySlow(PlatformTools.highlightSql(query) + \";\");\n            if (parameters && parameters.length) {\n                this.debugQuerySlow(\"parameters:\", parameters);\n            }\n            this.debugQuerySlow(\"execution time:\", time);\n        }\n    };\n    /**\n     * Logs events from the schema build process.\n     */\n    DebugLogger.prototype.logSchemaBuild = function (message, queryRunner) {\n        if (this.debugSchemaBuild.enabled) {\n            this.debugSchemaBuild(message);\n        }\n    };\n    /**\n     * Logs events from the migration run process.\n     */\n    DebugLogger.prototype.logMigration = function (message, queryRunner) {\n        if (this.debugMigration.enabled) {\n            this.debugMigration(message);\n        }\n    };\n    /**\n     * Perform logging using given logger.\n     * Log has its own level and message.\n     */\n    DebugLogger.prototype.log = function (level, message, queryRunner) {\n        switch (level) {\n            case \"log\":\n                if (this.debugLog.enabled) {\n                    this.debugLog(message);\n                }\n                break;\n            case \"info\":\n                if (this.debugInfo.enabled) {\n                    this.debugInfo(message);\n                }\n                break;\n            case \"warn\":\n                if (this.debugWarn.enabled) {\n                    this.debugWarn(message);\n                }\n                break;\n        }\n    };\n    return DebugLogger;\n}());\nexport { DebugLogger };\n\n//# sourceMappingURL=DebugLogger.js.map\n","import { SimpleConsoleLogger } from \"./SimpleConsoleLogger\";\nimport { AdvancedConsoleLogger } from \"./AdvancedConsoleLogger\";\nimport { FileLogger } from \"./FileLogger\";\nimport { DebugLogger } from \"./DebugLogger\";\n/**\n * Helps to create logger instances.\n */\nvar LoggerFactory = /** @class */ (function () {\n    function LoggerFactory() {\n    }\n    /**\n     * Creates a new logger depend on a given connection's driver.\n     */\n    LoggerFactory.prototype.create = function (logger, options) {\n        if (logger instanceof Object)\n            return logger;\n        if (logger) {\n            switch (logger) {\n                case \"simple-console\":\n                    return new SimpleConsoleLogger(options);\n                case \"file\":\n                    return new FileLogger(options);\n                case \"advanced-console\":\n                    return new AdvancedConsoleLogger(options);\n                case \"debug\":\n                    return new DebugLogger();\n            }\n        }\n        return new AdvancedConsoleLogger(options);\n    };\n    return LoggerFactory;\n}());\nexport { LoggerFactory };\n\n//# sourceMappingURL=LoggerFactory.js.map\n","import { __awaiter, __generator } from \"tslib\";\nimport { PlatformTools } from \"../platform/PlatformTools\";\nimport { TypeORMError } from \"../error/TypeORMError\";\n/**\n * Caches query result into Redis database.\n */\nvar RedisQueryResultCache = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RedisQueryResultCache(connection, clientType) {\n        this.connection = connection;\n        this.clientType = clientType;\n        this.redis = this.loadRedis();\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a connection with given cache provider.\n     */\n    RedisQueryResultCache.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var cacheOptions;\n            return __generator(this, function (_a) {\n                cacheOptions = this.connection.options.cache;\n                if (this.clientType === \"redis\") {\n                    if (cacheOptions && cacheOptions.options) {\n                        this.client = this.redis.createClient(cacheOptions.options);\n                    }\n                    else {\n                        this.client = this.redis.createClient();\n                    }\n                }\n                else if (this.clientType === \"ioredis\") {\n                    if (cacheOptions && cacheOptions.port) {\n                        if (cacheOptions.options) {\n                            this.client = new this.redis(cacheOptions.port, cacheOptions.options);\n                        }\n                        else {\n                            this.client = new this.redis(cacheOptions.port);\n                        }\n                    }\n                    else if (cacheOptions && cacheOptions.options) {\n                        this.client = new this.redis(cacheOptions.options);\n                    }\n                    else {\n                        this.client = new this.redis();\n                    }\n                }\n                else if (this.clientType === \"ioredis/cluster\") {\n                    if (cacheOptions && cacheOptions.options && Array.isArray(cacheOptions.options)) {\n                        this.client = new this.redis.Cluster(cacheOptions.options);\n                    }\n                    else if (cacheOptions && cacheOptions.options && cacheOptions.options.startupNodes) {\n                        this.client = new this.redis.Cluster(cacheOptions.options.startupNodes, cacheOptions.options.options);\n                    }\n                    else {\n                        throw new TypeORMError(\"options.startupNodes required for \" + this.clientType + \".\");\n                    }\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Disconnects the connection\n     */\n    RedisQueryResultCache.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.client.quit(function (err, result) {\n                            if (err)\n                                return fail(err);\n                            ok();\n                            _this.client = undefined;\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Creates table for storing cache if it does not exist yet.\n     */\n    RedisQueryResultCache.prototype.synchronize = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Caches given query result.\n     * Returns cache result if found.\n     * Returns undefined if result is not cached.\n     */\n    RedisQueryResultCache.prototype.getFromCache = function (options, queryRunner) {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            if (options.identifier) {\n                _this.client.get(options.identifier, function (err, result) {\n                    if (err)\n                        return fail(err);\n                    ok(JSON.parse(result));\n                });\n            }\n            else if (options.query) {\n                _this.client.get(options.query, function (err, result) {\n                    if (err)\n                        return fail(err);\n                    ok(JSON.parse(result));\n                });\n            }\n            else {\n                ok(undefined);\n            }\n        });\n    };\n    /**\n     * Checks if cache is expired or not.\n     */\n    RedisQueryResultCache.prototype.isExpired = function (savedCache) {\n        return (savedCache.time + savedCache.duration) < new Date().getTime();\n    };\n    /**\n     * Stores given query result in the cache.\n     */\n    RedisQueryResultCache.prototype.storeInCache = function (options, savedCache, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        if (options.identifier) {\n                            _this.client.set(options.identifier, JSON.stringify(options), \"PX\", options.duration, function (err, result) {\n                                if (err)\n                                    return fail(err);\n                                ok();\n                            });\n                        }\n                        else if (options.query) {\n                            _this.client.set(options.query, JSON.stringify(options), \"PX\", options.duration, function (err, result) {\n                                if (err)\n                                    return fail(err);\n                                ok();\n                            });\n                        }\n                    })];\n            });\n        });\n    };\n    /**\n     * Clears everything stored in the cache.\n     */\n    RedisQueryResultCache.prototype.clear = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (ok, fail) {\n                        _this.client.flushdb(function (err, result) {\n                            if (err)\n                                return fail(err);\n                            ok();\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Removes all cached results by given identifiers from cache.\n     */\n    RedisQueryResultCache.prototype.remove = function (identifiers, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(identifiers.map(function (identifier) {\n                            return _this.deleteKey(identifier);\n                        }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Removes a single key from redis database.\n     */\n    RedisQueryResultCache.prototype.deleteKey = function (key) {\n        var _this = this;\n        return new Promise(function (ok, fail) {\n            _this.client.del(key, function (err, result) {\n                if (err)\n                    return fail(err);\n                ok();\n            });\n        });\n    };\n    /**\n     * Loads redis dependency.\n     */\n    RedisQueryResultCache.prototype.loadRedis = function () {\n        try {\n            if (this.clientType === \"ioredis/cluster\") {\n                return PlatformTools.load(\"ioredis\");\n            }\n            else {\n                return PlatformTools.load(this.clientType);\n            }\n        }\n        catch (e) {\n            throw new TypeORMError(\"Cannot use cache because \" + this.clientType + \" is not installed. Please run \\\"npm i \" + this.clientType + \" --save\\\".\");\n        }\n    };\n    return RedisQueryResultCache;\n}());\nexport { RedisQueryResultCache };\n\n//# sourceMappingURL=RedisQueryResultCache.js.map\n","import { __awaiter, __generator } from \"tslib\";\nimport { OracleDriver } from \"../driver/oracle/OracleDriver\";\nimport { MssqlParameter } from \"../driver/sqlserver/MssqlParameter\";\nimport { SqlServerDriver } from \"../driver/sqlserver/SqlServerDriver\";\nimport { Table } from \"../schema-builder/table/Table\";\n/**\n * Caches query result into current database, into separate table called \"query-result-cache\".\n */\nvar DbQueryResultCache = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function DbQueryResultCache(connection) {\n        this.connection = connection;\n        var schema = this.connection.driver.options.schema;\n        var database = this.connection.driver.database;\n        var cacheOptions = typeof this.connection.options.cache === \"object\" ? this.connection.options.cache : {};\n        var cacheTableName = cacheOptions.tableName || \"query-result-cache\";\n        this.queryResultCacheDatabase = database;\n        this.queryResultCacheSchema = schema;\n        this.queryResultCacheTable = this.connection.driver.buildTableName(cacheTableName, schema, database);\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a connection with given cache provider.\n     */\n    DbQueryResultCache.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Disconnects with given cache provider.\n     */\n    DbQueryResultCache.prototype.disconnect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Creates table for storing cache if it does not exist yet.\n     */\n    DbQueryResultCache.prototype.synchronize = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var driver, tableExist;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.getQueryRunner(queryRunner);\n                        driver = this.connection.driver;\n                        return [4 /*yield*/, queryRunner.hasTable(this.queryResultCacheTable)];\n                    case 1:\n                        tableExist = _a.sent();\n                        if (tableExist)\n                            return [2 /*return*/];\n                        return [4 /*yield*/, queryRunner.createTable(new Table({\n                                database: this.queryResultCacheDatabase,\n                                schema: this.queryResultCacheSchema,\n                                name: this.queryResultCacheTable,\n                                columns: [\n                                    {\n                                        name: \"id\",\n                                        isPrimary: true,\n                                        isNullable: false,\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheId }),\n                                        generationStrategy: \"increment\",\n                                        isGenerated: true\n                                    },\n                                    {\n                                        name: \"identifier\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheIdentifier }),\n                                        isNullable: true\n                                    },\n                                    {\n                                        name: \"time\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheTime }),\n                                        isPrimary: false,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"duration\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheDuration }),\n                                        isPrimary: false,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"query\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheQuery }),\n                                        isPrimary: false,\n                                        isNullable: false\n                                    },\n                                    {\n                                        name: \"result\",\n                                        type: driver.normalizeType({ type: driver.mappedDataTypes.cacheResult }),\n                                        isNullable: false\n                                    },\n                                ]\n                            }))];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Caches given query result.\n     * Returns cache result if found.\n     * Returns undefined if result is not cached.\n     */\n    DbQueryResultCache.prototype.getFromCache = function (options, queryRunner) {\n        queryRunner = this.getQueryRunner(queryRunner);\n        var qb = this.connection\n            .createQueryBuilder(queryRunner)\n            .select()\n            .from(this.queryResultCacheTable, \"cache\");\n        if (options.identifier) {\n            return qb\n                .where(qb.escape(\"cache\") + \".\" + qb.escape(\"identifier\") + \" = :identifier\")\n                .setParameters({ identifier: this.connection.driver instanceof SqlServerDriver ? new MssqlParameter(options.identifier, \"nvarchar\") : options.identifier })\n                .getRawOne();\n        }\n        else if (options.query) {\n            if (this.connection.driver instanceof OracleDriver) {\n                return qb\n                    .where(\"dbms_lob.compare(\" + qb.escape(\"cache\") + \".\" + qb.escape(\"query\") + \", :query) = 0\", { query: options.query })\n                    .getRawOne();\n            }\n            return qb\n                .where(qb.escape(\"cache\") + \".\" + qb.escape(\"query\") + \" = :query\")\n                .setParameters({ query: this.connection.driver instanceof SqlServerDriver ? new MssqlParameter(options.query, \"nvarchar\") : options.query })\n                .getRawOne();\n        }\n        return Promise.resolve(undefined);\n    };\n    /**\n     * Checks if cache is expired or not.\n     */\n    DbQueryResultCache.prototype.isExpired = function (savedCache) {\n        var duration = typeof savedCache.duration === \"string\" ? parseInt(savedCache.duration) : savedCache.duration;\n        return ((typeof savedCache.time === \"string\" ? parseInt(savedCache.time) : savedCache.time) + duration) < new Date().getTime();\n    };\n    /**\n     * Stores given query result in the cache.\n     */\n    DbQueryResultCache.prototype.storeInCache = function (options, savedCache, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var insertedValues, qb, qb;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.getQueryRunner(queryRunner);\n                        insertedValues = options;\n                        if (this.connection.driver instanceof SqlServerDriver) { // todo: bad abstraction, re-implement this part, probably better if we create an entity metadata for cache table\n                            insertedValues = {\n                                identifier: new MssqlParameter(options.identifier, \"nvarchar\"),\n                                time: new MssqlParameter(options.time, \"bigint\"),\n                                duration: new MssqlParameter(options.duration, \"int\"),\n                                query: new MssqlParameter(options.query, \"nvarchar\"),\n                                result: new MssqlParameter(options.result, \"nvarchar\"),\n                            };\n                        }\n                        if (!(savedCache && savedCache.identifier)) return [3 /*break*/, 2];\n                        qb = queryRunner.manager\n                            .createQueryBuilder()\n                            .update(this.queryResultCacheTable)\n                            .set(insertedValues);\n                        qb.where(qb.escape(\"identifier\") + \" = :condition\", { condition: insertedValues.identifier });\n                        return [4 /*yield*/, qb.execute()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 2:\n                        if (!(savedCache && savedCache.query)) return [3 /*break*/, 4];\n                        qb = queryRunner.manager\n                            .createQueryBuilder()\n                            .update(this.queryResultCacheTable)\n                            .set(insertedValues);\n                        if (this.connection.driver instanceof OracleDriver) {\n                            qb.where(\"dbms_lob.compare(\\\"query\\\", :condition) = 0\", { condition: insertedValues.query });\n                        }\n                        else {\n                            qb.where(qb.escape(\"query\") + \" = :condition\", { condition: insertedValues.query });\n                        }\n                        return [4 /*yield*/, qb.execute()];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 4: // otherwise insert\n                    return [4 /*yield*/, queryRunner.manager\n                            .createQueryBuilder()\n                            .insert()\n                            .into(this.queryResultCacheTable)\n                            .values(insertedValues)\n                            .execute()];\n                    case 5:\n                        _a.sent();\n                        _a.label = 6;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Clears everything stored in the cache.\n     */\n    DbQueryResultCache.prototype.clear = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.getQueryRunner(queryRunner).clearTable(this.queryResultCacheTable)];\n            });\n        });\n    };\n    /**\n     * Removes all cached results by given identifiers from cache.\n     */\n    DbQueryResultCache.prototype.remove = function (identifiers, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all(identifiers.map(function (identifier) {\n                            var qb = _this.getQueryRunner(queryRunner).manager.createQueryBuilder();\n                            return qb.delete()\n                                .from(_this.queryResultCacheTable)\n                                .where(qb.escape(\"identifier\") + \" = :identifier\", { identifier: identifier })\n                                .execute();\n                        }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets a query runner to work with.\n     */\n    DbQueryResultCache.prototype.getQueryRunner = function (queryRunner) {\n        if (queryRunner)\n            return queryRunner;\n        return this.connection.createQueryRunner();\n    };\n    return DbQueryResultCache;\n}());\nexport { DbQueryResultCache };\n\n//# sourceMappingURL=DbQueryResultCache.js.map\n","import { RedisQueryResultCache } from \"./RedisQueryResultCache\";\nimport { DbQueryResultCache } from \"./DbQueryResultCache\";\nimport { TypeORMError } from \"../error/TypeORMError\";\n/**\n * Caches query result into Redis database.\n */\nvar QueryResultCacheFactory = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function QueryResultCacheFactory(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new query result cache based on connection options.\n     */\n    QueryResultCacheFactory.prototype.create = function () {\n        if (!this.connection.options.cache)\n            throw new TypeORMError(\"To use cache you need to enable it in connection options by setting cache: true or providing some caching options. Example: { host: ..., username: ..., cache: true }\");\n        var cache = this.connection.options.cache;\n        if (cache.provider && typeof cache.provider === \"function\") {\n            return cache.provider(this.connection);\n        }\n        if (cache.type === \"redis\" || cache.type === \"ioredis\" || cache.type === \"ioredis/cluster\") {\n            return new RedisQueryResultCache(this.connection, cache.type);\n        }\n        else {\n            return new DbQueryResultCache(this.connection);\n        }\n    };\n    return QueryResultCacheFactory;\n}());\nexport { QueryResultCacheFactory };\n\n//# sourceMappingURL=QueryResultCacheFactory.js.map\n","import { __read, __spreadArray } from \"tslib\";\n/**\n * Wraps entities and creates getters/setters for their relations\n * to be able to lazily load relations when accessing these relations.\n */\nvar RelationLoader = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationLoader(connection) {\n        this.connection = connection;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Loads relation data for the given entity and its relation.\n     */\n    RelationLoader.prototype.load = function (relation, entityOrEntities, queryRunner) {\n        if (queryRunner && queryRunner.isReleased)\n            queryRunner = undefined; // get new one if already closed\n        if (relation.isManyToOne || relation.isOneToOneOwner) {\n            return this.loadManyToOneOrOneToOneOwner(relation, entityOrEntities, queryRunner);\n        }\n        else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n            return this.loadOneToManyOrOneToOneNotOwner(relation, entityOrEntities, queryRunner);\n        }\n        else if (relation.isManyToManyOwner) {\n            return this.loadManyToManyOwner(relation, entityOrEntities, queryRunner);\n        }\n        else { // many-to-many non owner\n            return this.loadManyToManyNotOwner(relation, entityOrEntities, queryRunner);\n        }\n    };\n    /**\n     * Loads data for many-to-one and one-to-one owner relations.\n     *\n     * (ow) post.category<=>category.post\n     * loaded: category from post\n     * example: SELECT category.id AS category_id, category.name AS category_name FROM category category\n     *              INNER JOIN post Post ON Post.category=category.id WHERE Post.id=1\n     */\n    RelationLoader.prototype.loadManyToOneOrOneToOneOwner = function (relation, entityOrEntities, queryRunner) {\n        var entities = Array.isArray(entityOrEntities) ? entityOrEntities : [entityOrEntities];\n        var columns = relation.entityMetadata.primaryColumns;\n        var joinColumns = relation.isOwning ? relation.joinColumns : relation.inverseRelation.joinColumns;\n        var conditions = joinColumns.map(function (joinColumn) {\n            return relation.entityMetadata.name + \".\" + joinColumn.propertyName + \" = \" + relation.propertyName + \".\" + joinColumn.referencedColumn.propertyName;\n        }).join(\" AND \");\n        var joinAliasName = relation.entityMetadata.name;\n        var qb = this.connection\n            .createQueryBuilder(queryRunner)\n            .select(relation.propertyName) // category\n            .from(relation.type, relation.propertyName) // Category, category\n            .innerJoin(relation.entityMetadata.target, joinAliasName, conditions);\n        if (columns.length === 1) {\n            qb.where(joinAliasName + \".\" + columns[0].propertyPath + \" IN (:...\" + (joinAliasName + \"_\" + columns[0].propertyName) + \")\");\n            qb.setParameter(joinAliasName + \"_\" + columns[0].propertyName, entities.map(function (entity) { return columns[0].getEntityValue(entity); }));\n        }\n        else {\n            var condition = entities.map(function (entity, entityIndex) {\n                return columns.map(function (column, columnIndex) {\n                    var paramName = joinAliasName + \"_entity_\" + entityIndex + \"_\" + columnIndex;\n                    qb.setParameter(paramName, column.getEntityValue(entity));\n                    return joinAliasName + \".\" + column.propertyPath + \" = :\" + paramName;\n                }).join(\" AND \");\n            }).map(function (condition) { return \"(\" + condition + \")\"; }).join(\" OR \");\n            qb.where(condition);\n        }\n        return qb.getMany();\n        // return qb.getOne(); todo: fix all usages\n    };\n    /**\n     * Loads data for one-to-many and one-to-one not owner relations.\n     *\n     * SELECT post\n     * FROM post post\n     * WHERE post.[joinColumn.name] = entity[joinColumn.referencedColumn]\n     */\n    RelationLoader.prototype.loadOneToManyOrOneToOneNotOwner = function (relation, entityOrEntities, queryRunner) {\n        var entities = Array.isArray(entityOrEntities) ? entityOrEntities : [entityOrEntities];\n        var aliasName = relation.propertyName;\n        var columns = relation.inverseRelation.joinColumns;\n        var qb = this.connection\n            .createQueryBuilder(queryRunner)\n            .select(aliasName)\n            .from(relation.inverseRelation.entityMetadata.target, aliasName);\n        if (columns.length === 1) {\n            qb.where(aliasName + \".\" + columns[0].propertyPath + \" IN (:...\" + (aliasName + \"_\" + columns[0].propertyName) + \")\");\n            qb.setParameter(aliasName + \"_\" + columns[0].propertyName, entities.map(function (entity) { return columns[0].referencedColumn.getEntityValue(entity); }));\n        }\n        else {\n            var condition = entities.map(function (entity, entityIndex) {\n                return columns.map(function (column, columnIndex) {\n                    var paramName = aliasName + \"_entity_\" + entityIndex + \"_\" + columnIndex;\n                    qb.setParameter(paramName, column.referencedColumn.getEntityValue(entity));\n                    return aliasName + \".\" + column.propertyPath + \" = :\" + paramName;\n                }).join(\" AND \");\n            }).map(function (condition) { return \"(\" + condition + \")\"; }).join(\" OR \");\n            qb.where(condition);\n        }\n        return qb.getMany();\n        // return relation.isOneToMany ? qb.getMany() : qb.getOne(); todo: fix all usages\n    };\n    /**\n     * Loads data for many-to-many owner relations.\n     *\n     * SELECT category\n     * FROM category category\n     * INNER JOIN post_categories post_categories\n     * ON post_categories.postId = :postId\n     * AND post_categories.categoryId = category.id\n     */\n    RelationLoader.prototype.loadManyToManyOwner = function (relation, entityOrEntities, queryRunner) {\n        var entities = Array.isArray(entityOrEntities) ? entityOrEntities : [entityOrEntities];\n        var mainAlias = relation.propertyName;\n        var joinAlias = relation.junctionEntityMetadata.tableName;\n        var joinColumnConditions = relation.joinColumns.map(function (joinColumn) {\n            return joinAlias + \".\" + joinColumn.propertyName + \" IN (:...\" + joinColumn.propertyName + \")\";\n        });\n        var inverseJoinColumnConditions = relation.inverseJoinColumns.map(function (inverseJoinColumn) {\n            return joinAlias + \".\" + inverseJoinColumn.propertyName + \"=\" + mainAlias + \".\" + inverseJoinColumn.referencedColumn.propertyName;\n        });\n        var parameters = relation.joinColumns.reduce(function (parameters, joinColumn) {\n            parameters[joinColumn.propertyName] = entities.map(function (entity) { return joinColumn.referencedColumn.getEntityValue(entity); });\n            return parameters;\n        }, {});\n        return this.connection\n            .createQueryBuilder(queryRunner)\n            .select(mainAlias)\n            .from(relation.type, mainAlias)\n            .innerJoin(joinAlias, joinAlias, __spreadArray(__spreadArray([], __read(joinColumnConditions), false), __read(inverseJoinColumnConditions), false).join(\" AND \"))\n            .setParameters(parameters)\n            .getMany();\n    };\n    /**\n     * Loads data for many-to-many not owner relations.\n     *\n     * SELECT post\n     * FROM post post\n     * INNER JOIN post_categories post_categories\n     * ON post_categories.postId = post.id\n     * AND post_categories.categoryId = post_categories.categoryId\n     */\n    RelationLoader.prototype.loadManyToManyNotOwner = function (relation, entityOrEntities, queryRunner) {\n        var entities = Array.isArray(entityOrEntities) ? entityOrEntities : [entityOrEntities];\n        var mainAlias = relation.propertyName;\n        var joinAlias = relation.junctionEntityMetadata.tableName;\n        var joinColumnConditions = relation.inverseRelation.joinColumns.map(function (joinColumn) {\n            return joinAlias + \".\" + joinColumn.propertyName + \" = \" + mainAlias + \".\" + joinColumn.referencedColumn.propertyName;\n        });\n        var inverseJoinColumnConditions = relation.inverseRelation.inverseJoinColumns.map(function (inverseJoinColumn) {\n            return joinAlias + \".\" + inverseJoinColumn.propertyName + \" IN (:...\" + inverseJoinColumn.propertyName + \")\";\n        });\n        var parameters = relation.inverseRelation.inverseJoinColumns.reduce(function (parameters, joinColumn) {\n            parameters[joinColumn.propertyName] = entities.map(function (entity) { return joinColumn.referencedColumn.getEntityValue(entity); });\n            return parameters;\n        }, {});\n        return this.connection\n            .createQueryBuilder(queryRunner)\n            .select(mainAlias)\n            .from(relation.type, mainAlias)\n            .innerJoin(joinAlias, joinAlias, __spreadArray(__spreadArray([], __read(joinColumnConditions), false), __read(inverseJoinColumnConditions), false).join(\" AND \"))\n            .setParameters(parameters)\n            .getMany();\n    };\n    /**\n     * Wraps given entity and creates getters/setters for its given relation\n     * to be able to lazily load data when accessing this relation.\n     */\n    RelationLoader.prototype.enableLazyLoad = function (relation, entity, queryRunner) {\n        var relationLoader = this;\n        var dataIndex = \"__\" + relation.propertyName + \"__\"; // in what property of the entity loaded data will be stored\n        var promiseIndex = \"__promise_\" + relation.propertyName + \"__\"; // in what property of the entity loading promise will be stored\n        var resolveIndex = \"__has_\" + relation.propertyName + \"__\"; // indicates if relation data already was loaded or not, we need this flag if loaded data is empty\n        var setData = function (entity, value) {\n            entity[dataIndex] = value;\n            entity[resolveIndex] = true;\n            delete entity[promiseIndex];\n            return value;\n        };\n        var setPromise = function (entity, value) {\n            delete entity[resolveIndex];\n            delete entity[dataIndex];\n            entity[promiseIndex] = value;\n            value.then(\n            // ensure different value is not assigned yet\n            function (result) { return entity[promiseIndex] === value ? setData(entity, result) : result; });\n            return value;\n        };\n        Object.defineProperty(entity, relation.propertyName, {\n            get: function () {\n                if (this[resolveIndex] === true || this[dataIndex] !== undefined) // if related data already was loaded then simply return it\n                    return Promise.resolve(this[dataIndex]);\n                if (this[promiseIndex]) // if related data is loading then return a promise relationLoader loads it\n                    return this[promiseIndex];\n                // nothing is loaded yet, load relation data and save it in the model once they are loaded\n                var loader = relationLoader.load(relation, this, queryRunner).then(function (result) { return relation.isOneToOne || relation.isManyToOne ? (result.length === 0 ? null : result[0]) : result; });\n                return setPromise(this, loader);\n            },\n            set: function (value) {\n                if (value instanceof Promise) { // if set data is a promise then wait for its resolve and save in the object\n                    setPromise(this, value);\n                }\n                else { // if its direct data set (non promise, probably not safe-typed)\n                    setData(this, value);\n                }\n            },\n            configurable: true\n        });\n    };\n    return RelationLoader;\n}());\nexport { RelationLoader };\n\n//# sourceMappingURL=RelationLoader.js.map\n","import { __awaiter, __generator, __values } from \"tslib\";\nimport { DefaultNamingStrategy } from \"../naming-strategy/DefaultNamingStrategy\";\nimport { CannotExecuteNotConnectedError } from \"../error/CannotExecuteNotConnectedError\";\nimport { CannotConnectAlreadyConnectedError } from \"../error/CannotConnectAlreadyConnectedError\";\nimport { EntityMetadataNotFoundError } from \"../error/EntityMetadataNotFoundError\";\nimport { MigrationExecutor } from \"../migration/MigrationExecutor\";\nimport { MongoDriver } from \"../driver/mongodb/MongoDriver\";\nimport { MongoEntityManager } from \"../entity-manager/MongoEntityManager\";\nimport { EntityMetadataValidator } from \"../metadata-builder/EntityMetadataValidator\";\nimport { QueryRunnerProviderAlreadyReleasedError } from \"../error/QueryRunnerProviderAlreadyReleasedError\";\nimport { EntityManagerFactory } from \"../entity-manager/EntityManagerFactory\";\nimport { DriverFactory } from \"../driver/DriverFactory\";\nimport { ConnectionMetadataBuilder } from \"./ConnectionMetadataBuilder\";\nimport { SelectQueryBuilder } from \"../query-builder/SelectQueryBuilder\";\nimport { LoggerFactory } from \"../logger/LoggerFactory\";\nimport { QueryResultCacheFactory } from \"../cache/QueryResultCacheFactory\";\nimport { SqljsEntityManager } from \"../entity-manager/SqljsEntityManager\";\nimport { RelationLoader } from \"../query-builder/RelationLoader\";\nimport { EntitySchema } from \"../entity-schema/EntitySchema\";\nimport { SqlServerDriver } from \"../driver/sqlserver/SqlServerDriver\";\nimport { MysqlDriver } from \"../driver/mysql/MysqlDriver\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\nimport { AuroraDataApiDriver } from \"../driver/aurora-data-api/AuroraDataApiDriver\";\nimport { TypeORMError } from \"../error/TypeORMError\";\n/**\n * Connection is a single database ORM connection to a specific database.\n * Its not required to be a database connection, depend on database type it can create connection pool.\n * You can have multiple connections to multiple databases in your application.\n */\nvar Connection = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function Connection(options) {\n        /**\n         * Migration instances that are registered for this connection.\n         */\n        this.migrations = [];\n        /**\n         * Entity subscriber instances that are registered for this connection.\n         */\n        this.subscribers = [];\n        /**\n         * All entity metadatas that are registered for this connection.\n         */\n        this.entityMetadatas = [];\n        this.name = options.name || \"default\";\n        this.options = options;\n        this.logger = new LoggerFactory().create(this.options.logger, this.options.logging);\n        this.driver = new DriverFactory().create(this);\n        this.manager = this.createEntityManager();\n        this.namingStrategy = options.namingStrategy || new DefaultNamingStrategy();\n        this.queryResultCache = options.cache ? new QueryResultCacheFactory(this).create() : undefined;\n        this.relationLoader = new RelationLoader(this);\n        this.isConnected = false;\n    }\n    Object.defineProperty(Connection.prototype, \"mongoManager\", {\n        // -------------------------------------------------------------------------\n        // Public Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Gets the mongodb entity manager that allows to perform mongodb-specific repository operations\n         * with any entity in this connection.\n         *\n         * Available only in mongodb connections.\n         */\n        get: function () {\n            if (!(this.manager instanceof MongoEntityManager))\n                throw new TypeORMError(\"MongoEntityManager is only available for MongoDB databases.\");\n            return this.manager;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"sqljsManager\", {\n        /**\n         * Gets a sql.js specific Entity Manager that allows to perform special load and save operations\n         *\n         * Available only in connection with the sqljs driver.\n         */\n        get: function () {\n            if (!(this.manager instanceof SqljsEntityManager))\n                throw new TypeORMError(\"SqljsEntityManager is only available for Sqljs databases.\");\n            return this.manager;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs connection to the database.\n     * This method should be called once on application bootstrap.\n     * This method not necessarily creates database connection (depend on database type),\n     * but it also can setup a connection pool with database to use.\n     */\n    Connection.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.isConnected)\n                            throw new CannotConnectAlreadyConnectedError(this.name);\n                        // connect to the database via its driver\n                        return [4 /*yield*/, this.driver.connect()];\n                    case 1:\n                        // connect to the database via its driver\n                        _a.sent();\n                        if (!this.queryResultCache) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.queryResultCache.connect()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        // set connected status for the current connection\n                        ObjectUtils.assign(this, { isConnected: true });\n                        _a.label = 4;\n                    case 4:\n                        _a.trys.push([4, 12, , 14]);\n                        // build all metadatas registered in the current connection\n                        this.buildMetadatas();\n                        return [4 /*yield*/, this.driver.afterConnect()];\n                    case 5:\n                        _a.sent();\n                        if (!this.options.dropSchema) return [3 /*break*/, 7];\n                        return [4 /*yield*/, this.dropDatabase()];\n                    case 6:\n                        _a.sent();\n                        _a.label = 7;\n                    case 7:\n                        if (!this.options.synchronize) return [3 /*break*/, 9];\n                        return [4 /*yield*/, this.synchronize()];\n                    case 8:\n                        _a.sent();\n                        _a.label = 9;\n                    case 9:\n                        if (!this.options.migrationsRun) return [3 /*break*/, 11];\n                        return [4 /*yield*/, this.runMigrations({ transaction: this.options.migrationsTransactionMode })];\n                    case 10:\n                        _a.sent();\n                        _a.label = 11;\n                    case 11: return [3 /*break*/, 14];\n                    case 12:\n                        error_1 = _a.sent();\n                        // if for some reason build metadata fail (for example validation error during entity metadata check)\n                        // connection needs to be closed\n                        return [4 /*yield*/, this.close()];\n                    case 13:\n                        // if for some reason build metadata fail (for example validation error during entity metadata check)\n                        // connection needs to be closed\n                        _a.sent();\n                        throw error_1;\n                    case 14: return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     * Closes connection with the database.\n     * Once connection is closed, you cannot use repositories or perform any operations except opening connection again.\n     */\n    Connection.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError(this.name);\n                        return [4 /*yield*/, this.driver.disconnect()];\n                    case 1:\n                        _a.sent();\n                        if (!this.queryResultCache) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.queryResultCache.disconnect()];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        ObjectUtils.assign(this, { isConnected: false });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates database schema for all entities registered in this connection.\n     * Can be used only after connection to the database is established.\n     *\n     * @param dropBeforeSync If set to true then it drops the database with all its tables and data\n     */\n    Connection.prototype.synchronize = function (dropBeforeSync) {\n        if (dropBeforeSync === void 0) { dropBeforeSync = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var schemaBuilder;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError(this.name);\n                        if (!dropBeforeSync) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.dropDatabase()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        schemaBuilder = this.driver.createSchemaBuilder();\n                        return [4 /*yield*/, schemaBuilder.build()];\n                    case 3:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Drops the database and all its data.\n     * Be careful with this method on production since this method will erase all your database tables and their data.\n     * Can be used only after connection to the database is established.\n     */\n    // TODO rename\n    Connection.prototype.dropDatabase = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, databases_2, databases_1, databases_1_1, database, e_1_1;\n            var e_1, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        queryRunner = this.createQueryRunner();\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, , 13, 15]);\n                        if (!(this.driver instanceof SqlServerDriver || this.driver instanceof MysqlDriver || this.driver instanceof AuroraDataApiDriver)) return [3 /*break*/, 10];\n                        databases_2 = this.driver.database ? [this.driver.database] : [];\n                        this.entityMetadatas.forEach(function (metadata) {\n                            if (metadata.database && databases_2.indexOf(metadata.database) === -1)\n                                databases_2.push(metadata.database);\n                        });\n                        _b.label = 2;\n                    case 2:\n                        _b.trys.push([2, 7, 8, 9]);\n                        databases_1 = __values(databases_2), databases_1_1 = databases_1.next();\n                        _b.label = 3;\n                    case 3:\n                        if (!!databases_1_1.done) return [3 /*break*/, 6];\n                        database = databases_1_1.value;\n                        return [4 /*yield*/, queryRunner.clearDatabase(database)];\n                    case 4:\n                        _b.sent();\n                        _b.label = 5;\n                    case 5:\n                        databases_1_1 = databases_1.next();\n                        return [3 /*break*/, 3];\n                    case 6: return [3 /*break*/, 9];\n                    case 7:\n                        e_1_1 = _b.sent();\n                        e_1 = { error: e_1_1 };\n                        return [3 /*break*/, 9];\n                    case 8:\n                        try {\n                            if (databases_1_1 && !databases_1_1.done && (_a = databases_1.return)) _a.call(databases_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                        return [7 /*endfinally*/];\n                    case 9: return [3 /*break*/, 12];\n                    case 10: return [4 /*yield*/, queryRunner.clearDatabase()];\n                    case 11:\n                        _b.sent();\n                        _b.label = 12;\n                    case 12: return [3 /*break*/, 15];\n                    case 13: return [4 /*yield*/, queryRunner.release()];\n                    case 14:\n                        _b.sent();\n                        return [7 /*endfinally*/];\n                    case 15: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Runs all pending migrations.\n     * Can be used only after connection to the database is established.\n     */\n    Connection.prototype.runMigrations = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var migrationExecutor, successMigrations;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError(this.name);\n                        migrationExecutor = new MigrationExecutor(this);\n                        migrationExecutor.transaction = (options && options.transaction) || \"all\";\n                        return [4 /*yield*/, migrationExecutor.executePendingMigrations()];\n                    case 1:\n                        successMigrations = _a.sent();\n                        return [2 /*return*/, successMigrations];\n                }\n            });\n        });\n    };\n    /**\n     * Reverts last executed migration.\n     * Can be used only after connection to the database is established.\n     */\n    Connection.prototype.undoLastMigration = function (options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var migrationExecutor;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected)\n                            throw new CannotExecuteNotConnectedError(this.name);\n                        migrationExecutor = new MigrationExecutor(this);\n                        migrationExecutor.transaction = (options && options.transaction) || \"all\";\n                        return [4 /*yield*/, migrationExecutor.undoLastMigration()];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Lists all migrations and whether they have been run.\n     * Returns true if there are pending migrations\n     */\n    Connection.prototype.showMigrations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var migrationExecutor;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.isConnected) {\n                            throw new CannotExecuteNotConnectedError(this.name);\n                        }\n                        migrationExecutor = new MigrationExecutor(this);\n                        return [4 /*yield*/, migrationExecutor.showMigrations()];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Checks if entity metadata exist for the given entity class, target name or table name.\n     */\n    Connection.prototype.hasMetadata = function (target) {\n        return !!this.findMetadata(target);\n    };\n    /**\n     * Gets entity metadata for the given entity class or schema name.\n     */\n    Connection.prototype.getMetadata = function (target) {\n        var metadata = this.findMetadata(target);\n        if (!metadata)\n            throw new EntityMetadataNotFoundError(target);\n        return metadata;\n    };\n    /**\n     * Gets repository for the given entity.\n     */\n    Connection.prototype.getRepository = function (target) {\n        return this.manager.getRepository(target);\n    };\n    /**\n     * Gets tree repository for the given entity class or name.\n     * Only tree-type entities can have a TreeRepository, like ones decorated with @Tree decorator.\n     */\n    Connection.prototype.getTreeRepository = function (target) {\n        return this.manager.getTreeRepository(target);\n    };\n    /**\n     * Gets mongodb-specific repository for the given entity class or name.\n     * Works only if connection is mongodb-specific.\n     */\n    Connection.prototype.getMongoRepository = function (target) {\n        if (!(this.driver instanceof MongoDriver))\n            throw new TypeORMError(\"You can use getMongoRepository only for MongoDB connections.\");\n        return this.manager.getRepository(target);\n    };\n    /**\n     * Gets custom entity repository marked with @EntityRepository decorator.\n     */\n    Connection.prototype.getCustomRepository = function (customRepository) {\n        return this.manager.getCustomRepository(customRepository);\n    };\n    Connection.prototype.transaction = function (isolationOrRunInTransaction, runInTransactionParam) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.manager.transaction(isolationOrRunInTransaction, runInTransactionParam)];\n            });\n        });\n    };\n    /**\n     * Executes raw SQL query and returns raw database results.\n     */\n    Connection.prototype.query = function (query, parameters, queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var usedQueryRunner;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this instanceof MongoEntityManager)\n                            throw new TypeORMError(\"Queries aren't supported by MongoDB.\");\n                        if (queryRunner && queryRunner.isReleased)\n                            throw new QueryRunnerProviderAlreadyReleasedError();\n                        usedQueryRunner = queryRunner || this.createQueryRunner();\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 3, 6]);\n                        return [4 /*yield*/, usedQueryRunner.query(query, parameters)];\n                    case 2: return [2 /*return*/, _a.sent()]; // await is needed here because we are using finally\n                    case 3:\n                        if (!!queryRunner) return [3 /*break*/, 5];\n                        return [4 /*yield*/, usedQueryRunner.release()];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [7 /*endfinally*/];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a new query builder that can be used to build a sql query.\n     */\n    Connection.prototype.createQueryBuilder = function (entityOrRunner, alias, queryRunner) {\n        if (this instanceof MongoEntityManager)\n            throw new TypeORMError(\"Query Builder is not supported by MongoDB.\");\n        if (alias) {\n            var metadata = this.getMetadata(entityOrRunner);\n            return new SelectQueryBuilder(this, queryRunner)\n                .select(alias)\n                .from(metadata.target, alias);\n        }\n        else {\n            return new SelectQueryBuilder(this, entityOrRunner);\n        }\n    };\n    /**\n     * Creates a query runner used for perform queries on a single database connection.\n     * Using query runners you can control your queries to execute using single database connection and\n     * manually control your database transaction.\n     *\n     * Mode is used in replication mode and indicates whatever you want to connect\n     * to master database or any of slave databases.\n     * If you perform writes you must use master database,\n     * if you perform reads you can use slave databases.\n     */\n    Connection.prototype.createQueryRunner = function (mode) {\n        if (mode === void 0) { mode = \"master\"; }\n        var queryRunner = this.driver.createQueryRunner(mode);\n        var manager = this.createEntityManager(queryRunner);\n        Object.assign(queryRunner, { manager: manager });\n        return queryRunner;\n    };\n    /**\n     * Gets entity metadata of the junction table (many-to-many table).\n     */\n    Connection.prototype.getManyToManyMetadata = function (entityTarget, relationPropertyPath) {\n        var relationMetadata = this.getMetadata(entityTarget).findRelationWithPropertyPath(relationPropertyPath);\n        if (!relationMetadata)\n            throw new TypeORMError(\"Relation \\\"\" + relationPropertyPath + \"\\\" was not found in \" + entityTarget + \" entity.\");\n        if (!relationMetadata.isManyToMany)\n            throw new TypeORMError(\"Relation \\\"\" + entityTarget + \"#\" + relationPropertyPath + \"\\\" does not have a many-to-many relationship.\" +\n                \"You can use this method only on many-to-many relations.\");\n        return relationMetadata.junctionEntityMetadata;\n    };\n    /**\n     * Creates an Entity Manager for the current connection with the help of the EntityManagerFactory.\n     */\n    Connection.prototype.createEntityManager = function (queryRunner) {\n        return new EntityManagerFactory().create(this, queryRunner);\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Finds exist entity metadata by the given entity class, target name or table name.\n     */\n    Connection.prototype.findMetadata = function (target) {\n        return this.entityMetadatas.find(function (metadata) {\n            if (metadata.target === target)\n                return true;\n            if (target instanceof EntitySchema) {\n                return metadata.name === target.options.name;\n            }\n            if (typeof target === \"string\") {\n                if (target.indexOf(\".\") !== -1) {\n                    return metadata.tablePath === target;\n                }\n                else {\n                    return metadata.name === target || metadata.tableName === target;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Builds metadatas for all registered classes inside this connection.\n     */\n    Connection.prototype.buildMetadatas = function () {\n        var connectionMetadataBuilder = new ConnectionMetadataBuilder(this);\n        var entityMetadataValidator = new EntityMetadataValidator();\n        // create subscribers instances if they are not disallowed from high-level (for example they can disallowed from migrations run process)\n        var subscribers = connectionMetadataBuilder.buildSubscribers(this.options.subscribers || []);\n        ObjectUtils.assign(this, { subscribers: subscribers });\n        // build entity metadatas\n        var entityMetadatas = connectionMetadataBuilder.buildEntityMetadatas(this.options.entities || []);\n        ObjectUtils.assign(this, { entityMetadatas: entityMetadatas });\n        // create migration instances\n        var migrations = connectionMetadataBuilder.buildMigrations(this.options.migrations || []);\n        ObjectUtils.assign(this, { migrations: migrations });\n        // validate all created entity metadatas to make sure user created entities are valid and correct\n        entityMetadataValidator.validateMany(this.entityMetadatas.filter(function (metadata) { return metadata.tableType !== \"view\"; }), this.driver);\n    };\n    return Connection;\n}());\nexport { Connection };\n\n//# sourceMappingURL=Connection.js.map\n","import { Connection } from \"./Connection\";\nimport { ConnectionNotFoundError } from \"../error/ConnectionNotFoundError\";\nimport { AlreadyHasActiveConnectionError } from \"../error/AlreadyHasActiveConnectionError\";\n/**\n * ConnectionManager is used to store and manage multiple orm connections.\n * It also provides useful factory methods to simplify connection creation.\n */\nvar ConnectionManager = /** @class */ (function () {\n    function ConnectionManager() {\n        /**\n         * Internal lookup to quickly get from a connection name to the Connection object.\n         */\n        this.connectionMap = new Map();\n    }\n    Object.defineProperty(ConnectionManager.prototype, \"connections\", {\n        /**\n         * List of connections registered in this connection manager.\n         */\n        get: function () {\n            return Array.from(this.connectionMap.values());\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Checks if connection with the given name exist in the manager.\n     */\n    ConnectionManager.prototype.has = function (name) {\n        return this.connectionMap.has(name);\n    };\n    /**\n     * Gets registered connection with the given name.\n     * If connection name is not given then it will get a default connection.\n     * Throws error if connection with the given name was not found.\n     */\n    ConnectionManager.prototype.get = function (name) {\n        if (name === void 0) { name = \"default\"; }\n        var connection = this.connectionMap.get(name);\n        if (!connection)\n            throw new ConnectionNotFoundError(name);\n        return connection;\n    };\n    /**\n     * Creates a new connection based on the given connection options and registers it in the manager.\n     * Connection won't be established, you'll need to manually call connect method to establish connection.\n     */\n    ConnectionManager.prototype.create = function (options) {\n        // check if such connection is already registered\n        var existConnection = this.connectionMap.get(options.name || \"default\");\n        if (existConnection) {\n            // if connection is registered and its not closed then throw an error\n            if (existConnection.isConnected)\n                throw new AlreadyHasActiveConnectionError(options.name || \"default\");\n        }\n        // create a new connection\n        var connection = new Connection(options);\n        this.connectionMap.set(connection.name, connection);\n        return connection;\n    };\n    return ConnectionManager;\n}());\nexport { ConnectionManager };\n\n//# sourceMappingURL=ConnectionManager.js.map\n","import { __awaiter, __generator } from \"tslib\";\nimport { MetadataArgsStorage } from \"./metadata-args/MetadataArgsStorage\";\nimport { PlatformTools } from \"./platform/PlatformTools\";\nimport { ConnectionOptionsReader } from \"./connection/ConnectionOptionsReader\";\nimport { ConnectionManager } from \"./connection/ConnectionManager\";\nimport { getFromContainer } from \"./container\";\n/**\n * Gets metadata args storage.\n */\nexport function getMetadataArgsStorage() {\n    // we should store metadata storage in a global variable otherwise it brings too much problems\n    // one of the problem is that if any entity (or any other) will be imported before consumer will call\n    // useContainer method with his own container implementation, that entity will be registered in the\n    // old old container (default one post probably) and consumer will his entity.\n    // calling useContainer before he imports any entity (or any other) is not always convenient.\n    // another reason is that when we run migrations typeorm is being called from a global package\n    // and it may load entities which register decorators in typeorm of local package\n    // this leads to impossibility of usage of entities in migrations and cli related operations\n    var globalScope = PlatformTools.getGlobalVariable();\n    if (!globalScope.typeormMetadataArgsStorage)\n        globalScope.typeormMetadataArgsStorage = new MetadataArgsStorage();\n    return globalScope.typeormMetadataArgsStorage;\n}\n/**\n * Reads connection options stored in ormconfig configuration file.\n */\nexport function getConnectionOptions(connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n            return [2 /*return*/, new ConnectionOptionsReader().get(connectionName)];\n        });\n    });\n}\n/**\n * Gets a ConnectionManager which creates connections.\n */\nexport function getConnectionManager() {\n    return getFromContainer(ConnectionManager);\n}\n/**\n * Creates a new connection and registers it in the manager.\n *\n * If connection options were not specified, then it will try to create connection automatically,\n * based on content of ormconfig (json/js/yml/xml/env) file or environment variables.\n * Only one connection from ormconfig will be created (name \"default\" or connection without name).\n */\nexport function createConnection(optionsOrName) {\n    return __awaiter(this, void 0, void 0, function () {\n        var connectionName, options, _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    connectionName = typeof optionsOrName === \"string\" ? optionsOrName : \"default\";\n                    if (!(optionsOrName instanceof Object)) return [3 /*break*/, 1];\n                    _a = optionsOrName;\n                    return [3 /*break*/, 3];\n                case 1: return [4 /*yield*/, getConnectionOptions(connectionName)];\n                case 2:\n                    _a = _b.sent();\n                    _b.label = 3;\n                case 3:\n                    options = _a;\n                    return [2 /*return*/, getConnectionManager().create(options).connect()];\n            }\n        });\n    });\n}\n/**\n * Creates new connections and registers them in the manager.\n *\n * If connection options were not specified, then it will try to create connection automatically,\n * based on content of ormconfig (json/js/yml/xml/env) file or environment variables.\n * All connections from the ormconfig will be created.\n */\nexport function createConnections(options) {\n    return __awaiter(this, void 0, void 0, function () {\n        var connections;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!!options) return [3 /*break*/, 2];\n                    return [4 /*yield*/, new ConnectionOptionsReader().all()];\n                case 1:\n                    options = _a.sent();\n                    _a.label = 2;\n                case 2:\n                    connections = options.map(function (options) { return getConnectionManager().create(options); });\n                    return [2 /*return*/, Promise.all(connections.map(function (connection) { return connection.connect(); }))];\n            }\n        });\n    });\n}\n/**\n * Gets connection from the connection manager.\n * If connection name wasn't specified, then \"default\" connection will be retrieved.\n */\nexport function getConnection(connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName);\n}\n/**\n * Gets entity manager from the connection.\n * If connection name wasn't specified, then \"default\" connection will be retrieved.\n */\nexport function getManager(connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName).manager;\n}\n/**\n * Gets MongoDB entity manager from the connection.\n * If connection name wasn't specified, then \"default\" connection will be retrieved.\n */\nexport function getMongoManager(connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName).manager;\n}\n/**\n * Gets Sqljs entity manager from connection name.\n * \"default\" connection is used, when no name is specified.\n * Only works when Sqljs driver is used.\n */\nexport function getSqljsManager(connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName).manager;\n}\n/**\n * Gets repository for the given entity class.\n */\nexport function getRepository(entityClass, connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName).getRepository(entityClass);\n}\n/**\n * Gets tree repository for the given entity class.\n */\nexport function getTreeRepository(entityClass, connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName).getTreeRepository(entityClass);\n}\n/**\n * Gets tree repository for the given entity class.\n */\nexport function getCustomRepository(customRepository, connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName).getCustomRepository(customRepository);\n}\n/**\n * Gets mongodb repository for the given entity class or name.\n */\nexport function getMongoRepository(entityClass, connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    return getConnectionManager().get(connectionName).getMongoRepository(entityClass);\n}\n/**\n * Creates a new query builder.\n */\nexport function createQueryBuilder(entityClass, alias, connectionName) {\n    if (connectionName === void 0) { connectionName = \"default\"; }\n    if (entityClass) {\n        return getRepository(entityClass, connectionName).createQueryBuilder(alias);\n    }\n    return getConnection(connectionName).createQueryBuilder();\n}\n\n//# sourceMappingURL=globals.js.map\n","import { getMetadataArgsStorage } from \"../../globals\";\nimport { ColumnTypeUndefinedError } from \"../../error/ColumnTypeUndefinedError\";\n/**\n * Column decorator is used to mark a specific class property as a table column.\n * Only properties decorated with this decorator will be persisted to the database when entity be saved.\n */\nexport function Column(typeOrOptions, options) {\n    return function (object, propertyName) {\n        // normalize parameters\n        var type;\n        if (typeof typeOrOptions === \"string\" || typeOrOptions instanceof Function) {\n            type = typeOrOptions;\n        }\n        else if (typeOrOptions) {\n            options = typeOrOptions;\n            type = typeOrOptions.type;\n        }\n        if (!options)\n            options = {};\n        // if type is not given explicitly then try to guess it\n        var reflectMetadataType = Reflect && Reflect.getMetadata ? Reflect.getMetadata(\"design:type\", object, propertyName) : undefined;\n        if (!type && reflectMetadataType) // if type is not given explicitly then try to guess it\n            type = reflectMetadataType;\n        // check if there is no type in column options then set type from first function argument, or guessed one\n        if (!options.type && type)\n            options.type = type;\n        // specify HSTORE type if column is HSTORE\n        if (options.type === \"hstore\" && !options.hstoreType)\n            options.hstoreType = reflectMetadataType === Object ? \"object\" : \"string\";\n        if (typeOrOptions instanceof Function) { // register an embedded\n            getMetadataArgsStorage().embeddeds.push({\n                target: object.constructor,\n                propertyName: propertyName,\n                isArray: reflectMetadataType === Array || options.array === true,\n                prefix: options.prefix !== undefined ? options.prefix : undefined,\n                type: typeOrOptions\n            });\n        }\n        else { // register a regular column\n            // if we still don't have a type then we need to give error to user that type is required\n            if (!options.type)\n                throw new ColumnTypeUndefinedError(object, propertyName);\n            // create unique\n            if (options.unique === true)\n                getMetadataArgsStorage().uniques.push({ target: object.constructor, columns: [propertyName] });\n            getMetadataArgsStorage().columns.push({\n                target: object.constructor,\n                propertyName: propertyName,\n                mode: \"regular\",\n                options: options\n            });\n            if (options.generated) {\n                getMetadataArgsStorage().generations.push({\n                    target: object.constructor,\n                    propertyName: propertyName,\n                    strategy: typeof options.generated === \"string\" ? options.generated : \"increment\"\n                });\n            }\n        }\n    };\n}\n\n//# sourceMappingURL=Column.js.map\n","import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * This column will store a creation date of the inserted object.\n * Creation date is generated and inserted only once,\n * at the first time when you create an object, the value is inserted into the table, and is never touched again.\n */\nexport function CreateDateColumn(options) {\n    return function (object, propertyName) {\n        getMetadataArgsStorage().columns.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"createDate\",\n            options: options || {}\n        });\n    };\n}\n\n//# sourceMappingURL=CreateDateColumn.js.map\n","import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * Column decorator is used to mark a specific class property as a table column.\n * Only properties decorated with this decorator will be persisted to the database when entity be saved.\n * This column creates an integer PRIMARY COLUMN with generated set to true.\n */\nexport function PrimaryGeneratedColumn(strategyOrOptions, maybeOptions) {\n    // normalize parameters\n    var options = {};\n    var strategy;\n    if (strategyOrOptions) {\n        if (typeof strategyOrOptions === \"string\")\n            strategy = strategyOrOptions;\n        if (strategyOrOptions instanceof Object) {\n            strategy = \"increment\";\n            Object.assign(options, strategyOrOptions);\n        }\n    }\n    else {\n        strategy = \"increment\";\n    }\n    if (maybeOptions instanceof Object)\n        Object.assign(options, maybeOptions);\n    return function (object, propertyName) {\n        // if column type is not explicitly set then determine it based on generation strategy\n        if (!options.type) {\n            if (strategy === \"increment\" || strategy === \"identity\") {\n                options.type = Number;\n            }\n            else if (strategy === \"uuid\") {\n                options.type = \"uuid\";\n            }\n            else if (strategy === \"rowid\") {\n                options.type = \"int\";\n            }\n        }\n        // explicitly set a primary and generated to column options\n        options.primary = true;\n        // register column metadata args\n        getMetadataArgsStorage().columns.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"regular\",\n            options: options\n        });\n        // register generated metadata args\n        getMetadataArgsStorage().generations.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            strategy: strategy\n        });\n    };\n}\n\n//# sourceMappingURL=PrimaryGeneratedColumn.js.map\n","import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * This column will store an update date of the updated object.\n * This date is being updated each time you persist the object.\n */\nexport function UpdateDateColumn(options) {\n    return function (object, propertyName) {\n        getMetadataArgsStorage().columns.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"updateDate\",\n            options: options ? options : {}\n        });\n    };\n}\n\n//# sourceMappingURL=UpdateDateColumn.js.map\n","import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * JoinColumn decorator used on one-to-one relations to specify owner side of relationship.\n * It also can be used on both one-to-one and many-to-one relations to specify custom column name\n * or custom referenced column.\n */\nexport function JoinColumn(optionsOrOptionsArray) {\n    return function (object, propertyName) {\n        var options = Array.isArray(optionsOrOptionsArray) ? optionsOrOptionsArray : [optionsOrOptionsArray || {}];\n        options.forEach(function (options) {\n            getMetadataArgsStorage().joinColumns.push({\n                target: object.constructor,\n                propertyName: propertyName,\n                name: options.name,\n                referencedColumnName: options.referencedColumnName\n            });\n        });\n    };\n}\n\n//# sourceMappingURL=JoinColumn.js.map\n","import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * A many-to-one relation allows creating the type of relation where Entity1 can have a single instance of Entity2, but\n * Entity2 can have multiple instances of Entity1. Entity1 is the owner of the relationship, and stores the id of\n * Entity2 on its side of the relation.\n */\nexport function ManyToOne(typeFunctionOrTarget, inverseSideOrOptions, options) {\n    // Normalize parameters.\n    var inverseSideProperty;\n    if (typeof inverseSideOrOptions === \"object\") {\n        options = inverseSideOrOptions;\n    }\n    else {\n        inverseSideProperty = inverseSideOrOptions;\n    }\n    return function (object, propertyName) {\n        if (!options)\n            options = {};\n        // Now try to determine if it is a lazy relation.\n        var isLazy = options && options.lazy === true;\n        if (!isLazy && Reflect && Reflect.getMetadata) { // automatic determination\n            var reflectedType = Reflect.getMetadata(\"design:type\", object, propertyName);\n            if (reflectedType && typeof reflectedType.name === \"string\" && reflectedType.name.toLowerCase() === \"promise\")\n                isLazy = true;\n        }\n        getMetadataArgsStorage().relations.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            // propertyType: reflectedType,\n            relationType: \"many-to-one\",\n            isLazy: isLazy,\n            type: typeFunctionOrTarget,\n            inverseSideProperty: inverseSideProperty,\n            options: options\n        });\n    };\n}\n\n//# sourceMappingURL=ManyToOne.js.map\n","import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * A one-to-many relation allows creating the type of relation where Entity1 can have multiple instances of Entity2,\n * but Entity2 has only one Entity1. Entity2 is the owner of the relationship, and stores the id of Entity1 on its\n * side of the relation.\n */\nexport function OneToMany(typeFunctionOrTarget, inverseSide, options) {\n    return function (object, propertyName) {\n        if (!options)\n            options = {};\n        // Now try to determine if it is a lazy relation.\n        var isLazy = options && options.lazy === true;\n        if (!isLazy && Reflect && Reflect.getMetadata) { // automatic determination\n            var reflectedType = Reflect.getMetadata(\"design:type\", object, propertyName);\n            if (reflectedType && typeof reflectedType.name === \"string\" && reflectedType.name.toLowerCase() === \"promise\")\n                isLazy = true;\n        }\n        getMetadataArgsStorage().relations.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            // propertyType: reflectedType,\n            isLazy: isLazy,\n            relationType: \"one-to-many\",\n            type: typeFunctionOrTarget,\n            inverseSideProperty: inverseSide,\n            options: options\n        });\n    };\n}\n\n//# sourceMappingURL=OneToMany.js.map\n","import { getMetadataArgsStorage } from \"../../globals\";\n/**\n * This decorator is used to mark classes that will be an entity (table or document depend on database type).\n * Database schema will be created for all classes decorated with it, and Repository can be retrieved and used for it.\n */\nexport function Entity(nameOrOptions, maybeOptions) {\n    var options = (typeof nameOrOptions === \"object\" ? nameOrOptions : maybeOptions) || {};\n    var name = typeof nameOrOptions === \"string\" ? nameOrOptions : options.name;\n    return function (target) {\n        getMetadataArgsStorage().tables.push({\n            target: target,\n            name: name,\n            type: \"regular\",\n            orderBy: options.orderBy ? options.orderBy : undefined,\n            engine: options.engine ? options.engine : undefined,\n            database: options.database ? options.database : undefined,\n            schema: options.schema ? options.schema : undefined,\n            synchronize: options.synchronize,\n            withoutRowid: options.withoutRowid\n        });\n    };\n}\n\n//# sourceMappingURL=Entity.js.map\n","import { __awaiter, __generator, __read, __spreadArray } from \"tslib\";\nimport { getConnection } from \"../globals\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\n/**\n * Base abstract entity for all entities, used in ActiveRecord patterns.\n */\nvar BaseEntity = /** @class */ (function () {\n    function BaseEntity() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Checks if entity has an id.\n     * If entity composite compose ids, it will check them all.\n     */\n    BaseEntity.prototype.hasId = function () {\n        return this.constructor.getRepository().hasId(this);\n    };\n    /**\n     * Saves current entity in the database.\n     * If entity does not exist in the database then inserts, otherwise updates.\n     */\n    BaseEntity.prototype.save = function (options) {\n        return this.constructor.getRepository().save(this, options);\n    };\n    /**\n     * Removes current entity from the database.\n     */\n    BaseEntity.prototype.remove = function (options) {\n        return this.constructor.getRepository().remove(this, options);\n    };\n    /**\n     * Records the delete date of current entity.\n     */\n    BaseEntity.prototype.softRemove = function (options) {\n        return this.constructor.getRepository().softRemove(this, options);\n    };\n    /**\n     * Recovers a given entity in the database.\n     */\n    BaseEntity.prototype.recover = function (options) {\n        return this.constructor.getRepository().recover(this, options);\n    };\n    /**\n     * Reloads entity data from the database.\n     */\n    BaseEntity.prototype.reload = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var base, newestEntity;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        base = this.constructor;\n                        return [4 /*yield*/, base.getRepository().findOneOrFail(base.getId(this))];\n                    case 1:\n                        newestEntity = _a.sent();\n                        ObjectUtils.assign(this, newestEntity);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Public Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Sets connection to be used by entity.\n     */\n    BaseEntity.useConnection = function (connection) {\n        this.usedConnection = connection;\n    };\n    /**\n     * Gets current entity's Repository.\n     */\n    BaseEntity.getRepository = function () {\n        var connection = this.usedConnection || getConnection();\n        return connection.getRepository(this);\n    };\n    Object.defineProperty(BaseEntity, \"target\", {\n        /**\n         * Returns object that is managed by this repository.\n         * If this repository manages entity from schema,\n         * then it returns a name of that schema instead.\n         */\n        get: function () {\n            return this.getRepository().target;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Checks entity has an id.\n     * If entity composite compose ids, it will check them all.\n     */\n    BaseEntity.hasId = function (entity) {\n        return this.getRepository().hasId(entity);\n    };\n    /**\n     * Gets entity mixed id.\n     */\n    BaseEntity.getId = function (entity) {\n        return this.getRepository().getId(entity);\n    };\n    /**\n     * Creates a new query builder that can be used to build a sql query.\n     */\n    BaseEntity.createQueryBuilder = function (alias) {\n        return this.getRepository().createQueryBuilder(alias);\n    };\n    /**\n      * Creates a new entity instance and copies all entity properties from this object into a new entity.\n      * Note that it copies only properties that present in entity schema.\n      */\n    BaseEntity.create = function (entityOrEntities) {\n        return this.getRepository().create(entityOrEntities);\n    };\n    /**\n     * Merges multiple entities (or entity-like objects) into a given entity.\n     */\n    BaseEntity.merge = function (mergeIntoEntity) {\n        var _a;\n        var entityLikes = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            entityLikes[_i - 1] = arguments[_i];\n        }\n        return (_a = this.getRepository()).merge.apply(_a, __spreadArray([mergeIntoEntity], __read(entityLikes), false));\n    };\n    /**\n     * Creates a new entity from the given plain javascript object. If entity already exist in the database, then\n     * it loads it (and everything related to it), replaces all values with the new ones from the given object\n     * and returns this new entity. This new entity is actually a loaded from the db entity with all properties\n     * replaced from the new object.\n     *\n     * Note that given entity-like object must have an entity id / primary key to find entity by.\n     * Returns undefined if entity with given id was not found.\n     */\n    BaseEntity.preload = function (entityLike) {\n        return this.getRepository().preload(entityLike);\n    };\n    /**\n     * Saves one or many given entities.\n     */\n    BaseEntity.save = function (entityOrEntities, options) {\n        return this.getRepository().save(entityOrEntities, options);\n    };\n    /**\n     * Removes one or many given entities.\n     */\n    BaseEntity.remove = function (entityOrEntities, options) {\n        return this.getRepository().remove(entityOrEntities, options);\n    };\n    /**\n     * Records the delete date of one or many given entities.\n     */\n    BaseEntity.softRemove = function (entityOrEntities, options) {\n        return this.getRepository().softRemove(entityOrEntities, options);\n    };\n    /**\n     * Inserts a given entity into the database.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient INSERT query.\n     * Does not check if entity exist in the database, so query will fail if duplicate entity is being inserted.\n     */\n    BaseEntity.insert = function (entity, options) {\n        return this.getRepository().insert(entity, options);\n    };\n    /**\n     * Updates entity partially. Entity can be found by a given conditions.\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient UPDATE query.\n     * Does not check if entity exist in the database.\n     */\n    BaseEntity.update = function (criteria, partialEntity, options) {\n        return this.getRepository().update(criteria, partialEntity, options);\n    };\n    /**\n     * Inserts a given entity into the database, unless a unique constraint conflicts then updates the entity\n     * Unlike save method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient INSERT ... ON CONFLICT DO UPDATE/ON DUPLICATE KEY UPDATE query.\n     */\n    BaseEntity.upsert = function (entityOrEntities, conflictPathsOrOptions) {\n        return this.getRepository().upsert(entityOrEntities, conflictPathsOrOptions);\n    };\n    /**\n     * Deletes entities by a given criteria.\n     * Unlike remove method executes a primitive operation without cascades, relations and other operations included.\n     * Executes fast and efficient DELETE query.\n     * Does not check if entity exist in the database.\n     */\n    BaseEntity.delete = function (criteria, options) {\n        return this.getRepository().delete(criteria, options);\n    };\n    /**\n     * Counts entities that match given find options or conditions.\n     */\n    BaseEntity.count = function (optionsOrConditions) {\n        return this.getRepository().count(optionsOrConditions);\n    };\n    /**\n     * Finds entities that match given find options or conditions.\n     */\n    BaseEntity.find = function (optionsOrConditions) {\n        return this.getRepository().find(optionsOrConditions);\n    };\n    /**\n     * Finds entities that match given find options or conditions.\n     * Also counts all entities that match given conditions,\n     * but ignores pagination settings (from and take options).\n     */\n    BaseEntity.findAndCount = function (optionsOrConditions) {\n        return this.getRepository().findAndCount(optionsOrConditions);\n    };\n    /**\n     * Finds entities by ids.\n     * Optionally find options can be applied.\n     */\n    BaseEntity.findByIds = function (ids, optionsOrConditions) {\n        return this.getRepository().findByIds(ids, optionsOrConditions);\n    };\n    /**\n     * Finds first entity that matches given conditions.\n     */\n    BaseEntity.findOne = function (optionsOrConditions, maybeOptions) {\n        return this.getRepository().findOne(optionsOrConditions, maybeOptions);\n    };\n    /**\n     * Finds first entity that matches given conditions.\n     */\n    BaseEntity.findOneOrFail = function (optionsOrConditions, maybeOptions) {\n        return this.getRepository().findOneOrFail(optionsOrConditions, maybeOptions);\n    };\n    /**\n     * Executes a raw SQL query and returns a raw database results.\n     * Raw query execution is supported only by relational databases (MongoDB is not supported).\n     */\n    BaseEntity.query = function (query, parameters) {\n        return this.getRepository().query(query, parameters);\n    };\n    /**\n     * Clears all the data from the given table/collection (truncates/drops it).\n     */\n    BaseEntity.clear = function () {\n        return this.getRepository().clear();\n    };\n    return BaseEntity;\n}());\nexport { BaseEntity };\n\n//# sourceMappingURL=BaseEntity.js.map\n","import { __read, __spreadArray } from \"tslib\";\nimport { EntityColumnNotFound } from \"..\";\nimport { CannotCreateEntityIdMapError } from \"../error/CannotCreateEntityIdMapError\";\nimport { OrmUtils } from \"../util/OrmUtils\";\nimport { shorten } from \"../util/StringUtils\";\n/**\n * Contains all entity metadata.\n */\nvar EntityMetadata = /** @class */ (function () {\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n    function EntityMetadata(options) {\n        /**\n         * Children entity metadatas. Used in inheritance patterns.\n         */\n        this.childEntityMetadatas = [];\n        /**\n         * All \"inheritance tree\" from a target entity.\n         * For example for target Post < ContentModel < Unit it will be an array of [Post, ContentModel, Unit].\n         * It also contains child entities for single table inheritance.\n         */\n        this.inheritanceTree = [];\n        /**\n         * Table type. Tables can be closure, junction, etc.\n         */\n        this.tableType = \"regular\";\n        /**\n         * Enables Sqlite \"WITHOUT ROWID\" modifier for the \"CREATE TABLE\" statement\n         */\n        this.withoutRowid = false;\n        /**\n         * Indicates if schema will be synchronized for this entity or not.\n         */\n        this.synchronize = true;\n        /**\n         * Checks if there any non-nullable column exist in this entity.\n         */\n        this.hasNonNullableRelations = false;\n        /**\n         * Indicates if this entity metadata of a junction table, or not.\n         * Junction table is a table created by many-to-many relationship.\n         *\n         * Its also possible to understand if entity is junction via tableType.\n         */\n        this.isJunction = false;\n        /**\n         * Indicates if the entity should be instantiated using the constructor\n         * or via allocating a new object via `Object.create()`.\n         */\n        this.isAlwaysUsingConstructor = true;\n        /**\n         * Checks if this table is a junction table of the closure table.\n         * This type is for tables that contain junction metadata of the closure tables.\n         */\n        this.isClosureJunction = false;\n        /**\n         * Checks if entity's table has multiple primary columns.\n         */\n        this.hasMultiplePrimaryKeys = false;\n        /**\n         * Indicates if this entity metadata has uuid generated columns.\n         */\n        this.hasUUIDGeneratedColumns = false;\n        /**\n         * Entity's column metadatas defined by user.\n         */\n        this.ownColumns = [];\n        /**\n         * Columns of the entity, including columns that are coming from the embeddeds of this entity.\n         */\n        this.columns = [];\n        /**\n         * Ancestor columns used only in closure junction tables.\n         */\n        this.ancestorColumns = [];\n        /**\n         * Descendant columns used only in closure junction tables.\n         */\n        this.descendantColumns = [];\n        /**\n         * All columns except for virtual columns.\n         */\n        this.nonVirtualColumns = [];\n        /**\n         * In the case if this entity metadata is junction table's entity metadata,\n         * this will contain all referenced columns of owner entity.\n         */\n        this.ownerColumns = [];\n        /**\n         * In the case if this entity metadata is junction table's entity metadata,\n         * this will contain all referenced columns of inverse entity.\n         */\n        this.inverseColumns = [];\n        /**\n         * Gets the column with generated flag.\n         */\n        this.generatedColumns = [];\n        /**\n         * Gets the primary columns.\n         */\n        this.primaryColumns = [];\n        /**\n         * Entity's relation metadatas.\n         */\n        this.ownRelations = [];\n        /**\n         * Relations of the entity, including relations that are coming from the embeddeds of this entity.\n         */\n        this.relations = [];\n        /**\n         * List of eager relations this metadata has.\n         */\n        this.eagerRelations = [];\n        /**\n         * List of eager relations this metadata has.\n         */\n        this.lazyRelations = [];\n        /**\n         * Gets only one-to-one relations of the entity.\n         */\n        this.oneToOneRelations = [];\n        /**\n         * Gets only owner one-to-one relations of the entity.\n         */\n        this.ownerOneToOneRelations = [];\n        /**\n         * Gets only one-to-many relations of the entity.\n         */\n        this.oneToManyRelations = [];\n        /**\n         * Gets only many-to-one relations of the entity.\n         */\n        this.manyToOneRelations = [];\n        /**\n         * Gets only many-to-many relations of the entity.\n         */\n        this.manyToManyRelations = [];\n        /**\n         * Gets only owner many-to-many relations of the entity.\n         */\n        this.ownerManyToManyRelations = [];\n        /**\n         * Gets only owner one-to-one and many-to-one relations.\n         */\n        this.relationsWithJoinColumns = [];\n        /**\n         * Entity's relation id metadatas.\n         */\n        this.relationIds = [];\n        /**\n         * Entity's relation id metadatas.\n         */\n        this.relationCounts = [];\n        /**\n         * Entity's foreign key metadatas.\n         */\n        this.foreignKeys = [];\n        /**\n         * Entity's embedded metadatas.\n         */\n        this.embeddeds = [];\n        /**\n         * All embeddeds - embeddeds from this entity metadata and from all child embeddeds, etc.\n         */\n        this.allEmbeddeds = [];\n        /**\n         * Entity's own indices.\n         */\n        this.ownIndices = [];\n        /**\n         * Entity's index metadatas.\n         */\n        this.indices = [];\n        /**\n         * Entity's unique metadatas.\n         */\n        this.uniques = [];\n        /**\n         * Entity's own uniques.\n         */\n        this.ownUniques = [];\n        /**\n         * Entity's check metadatas.\n         */\n        this.checks = [];\n        /**\n         * Entity's exclusion metadatas.\n         */\n        this.exclusions = [];\n        /**\n         * Entity's own listener metadatas.\n         */\n        this.ownListeners = [];\n        /**\n         * Entity listener metadatas.\n         */\n        this.listeners = [];\n        /**\n         * Listener metadatas with \"AFTER LOAD\" type.\n         */\n        this.afterLoadListeners = [];\n        /**\n         * Listener metadatas with \"AFTER INSERT\" type.\n         */\n        this.beforeInsertListeners = [];\n        /**\n         * Listener metadatas with \"AFTER INSERT\" type.\n         */\n        this.afterInsertListeners = [];\n        /**\n         * Listener metadatas with \"AFTER UPDATE\" type.\n         */\n        this.beforeUpdateListeners = [];\n        /**\n         * Listener metadatas with \"AFTER UPDATE\" type.\n         */\n        this.afterUpdateListeners = [];\n        /**\n         * Listener metadatas with \"AFTER REMOVE\" type.\n         */\n        this.beforeRemoveListeners = [];\n        /**\n         * Listener metadatas with \"AFTER REMOVE\" type.\n         */\n        this.afterRemoveListeners = [];\n        this.connection = options.connection;\n        this.inheritanceTree = options.inheritanceTree || [];\n        this.inheritancePattern = options.inheritancePattern;\n        this.treeType = options.tableTree ? options.tableTree.type : undefined;\n        this.treeOptions = options.tableTree ? options.tableTree.options : undefined;\n        this.parentClosureEntityMetadata = options.parentClosureEntityMetadata;\n        this.tableMetadataArgs = options.args;\n        this.target = this.tableMetadataArgs.target;\n        this.tableType = this.tableMetadataArgs.type;\n        this.expression = this.tableMetadataArgs.expression;\n        this.withoutRowid = this.tableMetadataArgs.withoutRowid;\n        this.dependsOn = this.tableMetadataArgs.dependsOn;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new entity.\n     */\n    EntityMetadata.prototype.create = function (queryRunner, options) {\n        var _this = this;\n        // if target is set to a function (e.g. class) that can be created then create it\n        var ret;\n        if (this.target instanceof Function) {\n            if (!(options === null || options === void 0 ? void 0 : options.fromDeserializer) || this.isAlwaysUsingConstructor) {\n                ret = new this.target();\n            }\n            else {\n                ret = Object.create(this.target.prototype);\n            }\n            this.lazyRelations.forEach(function (relation) { return _this.connection.relationLoader.enableLazyLoad(relation, ret, queryRunner); });\n            return ret;\n        }\n        // otherwise simply return a new empty object\n        var newObject = {};\n        this.lazyRelations.forEach(function (relation) { return _this.connection.relationLoader.enableLazyLoad(relation, newObject, queryRunner); });\n        return newObject;\n    };\n    /**\n     * Checks if given entity has an id.\n     */\n    EntityMetadata.prototype.hasId = function (entity) {\n        if (!entity)\n            return false;\n        return this.primaryColumns.every(function (primaryColumn) {\n            var value = primaryColumn.getEntityValue(entity);\n            return value !== null && value !== undefined && value !== \"\";\n        });\n    };\n    /**\n     * Checks if given entity / object contains ALL primary keys entity must have.\n     * Returns true if it contains all of them, false if at least one of them is not defined.\n     */\n    EntityMetadata.prototype.hasAllPrimaryKeys = function (entity) {\n        return this.primaryColumns.every(function (primaryColumn) {\n            var value = primaryColumn.getEntityValue(entity);\n            return value !== null && value !== undefined;\n        });\n    };\n    /**\n     * Ensures that given object is an entity id map.\n     * If given id is an object then it means its already id map.\n     * If given id isn't an object then it means its a value of the id column\n     * and it creates a new id map with this value and name of the primary column.\n     */\n    EntityMetadata.prototype.ensureEntityIdMap = function (id) {\n        if (id instanceof Object)\n            return id;\n        if (this.hasMultiplePrimaryKeys)\n            throw new CannotCreateEntityIdMapError(this, id);\n        return this.primaryColumns[0].createValueMap(id);\n    };\n    /**\n     * Gets primary keys of the entity and returns them in a literal object.\n     * For example, for Post{ id: 1, title: \"hello\" } where id is primary it will return { id: 1 }\n     * For multiple primary keys it returns multiple keys in object.\n     * For primary keys inside embeds it returns complex object literal with keys in them.\n     */\n    EntityMetadata.prototype.getEntityIdMap = function (entity) {\n        if (!entity)\n            return undefined;\n        return EntityMetadata.getValueMap(entity, this.primaryColumns, { skipNulls: true });\n    };\n    /**\n     * Creates a \"mixed id map\".\n     * If entity has multiple primary keys (ids) then it will return just regular id map, like what getEntityIdMap returns.\n     * But if entity has a single primary key then it will return just value of the id column of the entity, just value.\n     * This is called mixed id map.\n     */\n    EntityMetadata.prototype.getEntityIdMixedMap = function (entity) {\n        if (!entity)\n            return entity;\n        var idMap = this.getEntityIdMap(entity);\n        if (this.hasMultiplePrimaryKeys) {\n            return idMap;\n        }\n        else if (idMap) {\n            return this.primaryColumns[0].getEntityValue(idMap); // todo: what about parent primary column?\n        }\n        return idMap;\n    };\n    /**\n     * Compares two different entities by their ids.\n     * Returns true if they match, false otherwise.\n     */\n    EntityMetadata.prototype.compareEntities = function (firstEntity, secondEntity) {\n        var firstEntityIdMap = this.getEntityIdMap(firstEntity);\n        if (!firstEntityIdMap)\n            return false;\n        var secondEntityIdMap = this.getEntityIdMap(secondEntity);\n        if (!secondEntityIdMap)\n            return false;\n        return OrmUtils.compareIds(firstEntityIdMap, secondEntityIdMap);\n    };\n    /**\n     * Finds column with a given property name.\n     */\n    EntityMetadata.prototype.findColumnWithPropertyName = function (propertyName) {\n        return this.columns.find(function (column) { return column.propertyName === propertyName; });\n    };\n    /**\n     * Finds column with a given database name.\n     */\n    EntityMetadata.prototype.findColumnWithDatabaseName = function (databaseName) {\n        return this.columns.find(function (column) { return column.databaseName === databaseName; });\n    };\n    /**\n     * Checks if there is a column or relationship with a given property path.\n     */\n    EntityMetadata.prototype.hasColumnWithPropertyPath = function (propertyPath) {\n        var hasColumn = this.columns.some(function (column) { return column.propertyPath === propertyPath; });\n        return hasColumn || this.hasRelationWithPropertyPath(propertyPath);\n    };\n    /**\n     * Finds column with a given property path.\n     */\n    EntityMetadata.prototype.findColumnWithPropertyPath = function (propertyPath) {\n        var column = this.columns.find(function (column) { return column.propertyPath === propertyPath; });\n        if (column)\n            return column;\n        // in the case if column with property path was not found, try to find a relation with such property path\n        // if we find relation and it has a single join column then its the column user was seeking\n        var relation = this.relations.find(function (relation) { return relation.propertyPath === propertyPath; });\n        if (relation && relation.joinColumns.length === 1)\n            return relation.joinColumns[0];\n        return undefined;\n    };\n    /**\n     * Finds columns with a given property path.\n     * Property path can match a relation, and relations can contain multiple columns.\n     */\n    EntityMetadata.prototype.findColumnsWithPropertyPath = function (propertyPath) {\n        var column = this.columns.find(function (column) { return column.propertyPath === propertyPath; });\n        if (column)\n            return [column];\n        // in the case if column with property path was not found, try to find a relation with such property path\n        // if we find relation and it has a single join column then its the column user was seeking\n        var relation = this.findRelationWithPropertyPath(propertyPath);\n        if (relation && relation.joinColumns)\n            return relation.joinColumns;\n        return [];\n    };\n    /**\n     * Checks if there is a relation with the given property path.\n     */\n    EntityMetadata.prototype.hasRelationWithPropertyPath = function (propertyPath) {\n        return this.relations.some(function (relation) { return relation.propertyPath === propertyPath; });\n    };\n    /**\n     * Finds relation with the given property path.\n     */\n    EntityMetadata.prototype.findRelationWithPropertyPath = function (propertyPath) {\n        return this.relations.find(function (relation) { return relation.propertyPath === propertyPath; });\n    };\n    /**\n     * Checks if there is an embedded with a given property path.\n     */\n    EntityMetadata.prototype.hasEmbeddedWithPropertyPath = function (propertyPath) {\n        return this.allEmbeddeds.some(function (embedded) { return embedded.propertyPath === propertyPath; });\n    };\n    /**\n     * Finds embedded with a given property path.\n     */\n    EntityMetadata.prototype.findEmbeddedWithPropertyPath = function (propertyPath) {\n        return this.allEmbeddeds.find(function (embedded) { return embedded.propertyPath === propertyPath; });\n    };\n    /**\n     * Returns an array of databaseNames mapped from provided propertyPaths\n     */\n    EntityMetadata.prototype.mapPropertyPathsToColumns = function (propertyPaths) {\n        var _this = this;\n        return propertyPaths.map(function (propertyPath) {\n            var column = _this.findColumnWithPropertyPath(propertyPath);\n            if (column == null) {\n                throw new EntityColumnNotFound(propertyPath);\n            }\n            return column;\n        });\n    };\n    /**\n     * Iterates through entity and finds and extracts all values from relations in the entity.\n     * If relation value is an array its being flattened.\n     */\n    EntityMetadata.prototype.extractRelationValuesFromEntity = function (entity, relations) {\n        var _this = this;\n        var relationsAndValues = [];\n        relations.forEach(function (relation) {\n            var value = relation.getEntityValue(entity);\n            if (Array.isArray(value)) {\n                value.forEach(function (subValue) { return relationsAndValues.push([relation, subValue, _this.getInverseEntityMetadata(subValue, relation)]); });\n            }\n            else if (value) {\n                relationsAndValues.push([relation, value, _this.getInverseEntityMetadata(value, relation)]);\n            }\n        });\n        return relationsAndValues;\n    };\n    EntityMetadata.prototype.getInverseEntityMetadata = function (value, relation) {\n        var childEntityMetadata = relation.inverseEntityMetadata.childEntityMetadatas.find(function (metadata) {\n            return metadata.target === value.constructor;\n        });\n        return childEntityMetadata ? childEntityMetadata : relation.inverseEntityMetadata;\n    };\n    // -------------------------------------------------------------------------\n    // Public Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a property paths for a given entity.\n     *\n     * @deprecated\n     */\n    EntityMetadata.createPropertyPath = function (metadata, entity, prefix) {\n        var _this = this;\n        if (prefix === void 0) { prefix = \"\"; }\n        var paths = [];\n        Object.keys(entity).forEach(function (key) {\n            // check for function is needed in the cases when createPropertyPath used on values containg a function as a value\n            // example: .update().set({ name: () => `SUBSTR('', 1, 2)` })\n            var parentPath = prefix ? prefix + \".\" + key : key;\n            if (metadata.hasEmbeddedWithPropertyPath(parentPath)) {\n                var subPaths = _this.createPropertyPath(metadata, entity[key], parentPath);\n                paths.push.apply(paths, __spreadArray([], __read(subPaths), false));\n            }\n            else {\n                var path = prefix ? prefix + \".\" + key : key;\n                paths.push(path);\n            }\n        });\n        return paths;\n    };\n    /**\n     * Finds difference between two entity id maps.\n     * Returns items that exist in the first array and absent in the second array.\n     */\n    EntityMetadata.difference = function (firstIdMaps, secondIdMaps) {\n        return firstIdMaps.filter(function (firstIdMap) {\n            return !secondIdMaps.find(function (secondIdMap) { return OrmUtils.compareIds(firstIdMap, secondIdMap); });\n        });\n    };\n    /**\n     * Creates value map from the given values and columns.\n     * Examples of usages are primary columns map and join columns map.\n     */\n    EntityMetadata.getValueMap = function (entity, columns, options) {\n        return columns.reduce(function (map, column) {\n            var value = column.getEntityValueMap(entity, options);\n            // make sure that none of the values of the columns are not missing\n            if (map === undefined || value === null || value === undefined)\n                return undefined;\n            return OrmUtils.mergeDeep(map, value);\n        }, {});\n    };\n    // ---------------------------------------------------------------------\n    // Public Builder Methods\n    // ---------------------------------------------------------------------\n    EntityMetadata.prototype.build = function () {\n        var _a;\n        var namingStrategy = this.connection.namingStrategy;\n        var entityPrefix = this.connection.options.entityPrefix;\n        var entitySkipConstructor = this.connection.options.entitySkipConstructor;\n        this.engine = this.tableMetadataArgs.engine;\n        this.database = this.tableMetadataArgs.type === \"entity-child\" && this.parentEntityMetadata ? this.parentEntityMetadata.database : this.tableMetadataArgs.database;\n        if (this.tableMetadataArgs.schema) {\n            this.schema = this.tableMetadataArgs.schema;\n        }\n        else if ((this.tableMetadataArgs.type === \"entity-child\") && this.parentEntityMetadata) {\n            this.schema = this.parentEntityMetadata.schema;\n        }\n        else if ((_a = this.connection.options) === null || _a === void 0 ? void 0 : _a.hasOwnProperty(\"schema\")) {\n            this.schema = this.connection.options.schema;\n        }\n        this.givenTableName = this.tableMetadataArgs.type === \"entity-child\" && this.parentEntityMetadata ? this.parentEntityMetadata.givenTableName : this.tableMetadataArgs.name;\n        this.synchronize = this.tableMetadataArgs.synchronize === false ? false : true;\n        this.targetName = this.tableMetadataArgs.target instanceof Function ? this.tableMetadataArgs.target.name : this.tableMetadataArgs.target;\n        if (this.tableMetadataArgs.type === \"closure-junction\") {\n            this.tableNameWithoutPrefix = namingStrategy.closureJunctionTableName(this.givenTableName);\n        }\n        else if (this.tableMetadataArgs.type === \"entity-child\" && this.parentEntityMetadata) {\n            this.tableNameWithoutPrefix = namingStrategy.tableName(this.parentEntityMetadata.targetName, this.parentEntityMetadata.givenTableName);\n        }\n        else {\n            this.tableNameWithoutPrefix = namingStrategy.tableName(this.targetName, this.givenTableName);\n            if (this.connection.driver.maxAliasLength && this.connection.driver.maxAliasLength > 0 && this.tableNameWithoutPrefix.length > this.connection.driver.maxAliasLength) {\n                this.tableNameWithoutPrefix = shorten(this.tableNameWithoutPrefix, { separator: \"_\", segmentLength: 3 });\n            }\n        }\n        this.tableName = entityPrefix ? namingStrategy.prefixTableName(entityPrefix, this.tableNameWithoutPrefix) : this.tableNameWithoutPrefix;\n        this.target = this.target ? this.target : this.tableName;\n        this.name = this.targetName ? this.targetName : this.tableName;\n        this.expression = this.tableMetadataArgs.expression;\n        this.withoutRowid = this.tableMetadataArgs.withoutRowid === true ? true : false;\n        this.tablePath = this.connection.driver.buildTableName(this.tableName, this.schema, this.database);\n        this.orderBy = (this.tableMetadataArgs.orderBy instanceof Function) ? this.tableMetadataArgs.orderBy(this.propertiesMap) : this.tableMetadataArgs.orderBy; // todo: is propertiesMap available here? Looks like its not\n        if (entitySkipConstructor !== undefined) {\n            this.isAlwaysUsingConstructor = !entitySkipConstructor;\n        }\n        this.isJunction = this.tableMetadataArgs.type === \"closure-junction\" || this.tableMetadataArgs.type === \"junction\";\n        this.isClosureJunction = this.tableMetadataArgs.type === \"closure-junction\";\n    };\n    /**\n     * Registers a new column in the entity and recomputes all depend properties.\n     */\n    EntityMetadata.prototype.registerColumn = function (column) {\n        if (this.ownColumns.indexOf(column) !== -1)\n            return;\n        this.ownColumns.push(column);\n        this.columns = this.embeddeds.reduce(function (columns, embedded) { return columns.concat(embedded.columnsFromTree); }, this.ownColumns);\n        this.primaryColumns = this.columns.filter(function (column) { return column.isPrimary; });\n        this.hasMultiplePrimaryKeys = this.primaryColumns.length > 1;\n        this.hasUUIDGeneratedColumns = this.columns.filter(function (column) { return column.isGenerated || column.generationStrategy === \"uuid\"; }).length > 0;\n        this.propertiesMap = this.createPropertiesMap();\n        if (this.childEntityMetadatas)\n            this.childEntityMetadatas.forEach(function (entityMetadata) { return entityMetadata.registerColumn(column); });\n    };\n    /**\n     * Creates a special object - all columns and relations of the object (plus columns and relations from embeds)\n     * in a special format - { propertyName: propertyName }.\n     *\n     * example: Post{ id: number, name: string, counterEmbed: { count: number }, category: Category }.\n     * This method will create following object:\n     * { id: \"id\", counterEmbed: { count: \"counterEmbed.count\" }, category: \"category\" }\n     */\n    EntityMetadata.prototype.createPropertiesMap = function () {\n        var map = {};\n        this.columns.forEach(function (column) { return OrmUtils.mergeDeep(map, column.createValueMap(column.propertyPath)); });\n        this.relations.forEach(function (relation) { return OrmUtils.mergeDeep(map, relation.createValueMap(relation.propertyPath)); });\n        return map;\n    };\n    return EntityMetadata;\n}());\nexport { EntityMetadata };\n\n//# sourceMappingURL=EntityMetadata.js.map\n","/**\n * Dummy driver classes for replacement via `package.json` in browser builds.\n * Using those classes reduces the build size by one third.\n *\n * If we don't include those dummy classes (and just disable the driver import\n * with `false` in `package.json`) typeorm will throw an error on runtime and\n * during webpack builds even if those driver are not used.\n */\n/**\n * DO NOT IMPORT THIS CLASS -\n * This is a dummy class for replacement via `package.json` in browser builds\n */\nvar MongoDriver = /** @class */ (function () {\n    function MongoDriver() {\n    }\n    return MongoDriver;\n}());\nexport { MongoDriver };\n/**\n * DO NOT IMPORT THIS CLASS -\n * This is a dummy class for replacement via `package.json` in browser builds\n */\nvar MongoQueryRunner = /** @class */ (function () {\n    function MongoQueryRunner() {\n    }\n    return MongoQueryRunner;\n}());\nexport { MongoQueryRunner };\n/**\n * DO NOT IMPORT THIS CLASS -\n * This is a dummy class for replacement via `package.json` in browser builds\n */\nvar MongoEntityManager = /** @class */ (function () {\n    function MongoEntityManager() {\n    }\n    return MongoEntityManager;\n}());\nexport { MongoEntityManager };\n/**\n * DO NOT IMPORT THIS CLASS -\n * This is a dummy class for replacement via `package.json` in browser builds\n */\nvar MongoRepository = /** @class */ (function () {\n    function MongoRepository() {\n    }\n    return MongoRepository;\n}());\nexport { MongoRepository };\n/**\n * DO NOT IMPORT THIS CLASS -\n * This is a dummy class for replacement via `package.json` in browser builds\n */\nvar PostgresDriver = /** @class */ (function () {\n    function PostgresDriver() {\n    }\n    return PostgresDriver;\n}());\nexport { PostgresDriver };\n/**\n * DO NOT IMPORT THIS CLASS -\n * This is a dummy class for replacement via `package.json` in browser builds\n */\nvar AuroraDataApiDriver = /** @class */ (function () {\n    function AuroraDataApiDriver() {\n    }\n    return AuroraDataApiDriver;\n}());\nexport { AuroraDataApiDriver };\n/**\n * DO NOT IMPORT THIS CLASS -\n * This is a dummy class for replacement via `package.json` in browser builds\n */\nvar CockroachDriver = /** @class */ (function () {\n    function CockroachDriver() {\n    }\n    return CockroachDriver;\n}());\nexport { CockroachDriver };\n/**\n * DO NOT IMPORT THIS CLASS -\n * This is a dummy class for replacement via `package.json` in browser builds\n */\nvar AuroraDataApiPostgresDriver = /** @class */ (function () {\n    function AuroraDataApiPostgresDriver() {\n    }\n    return AuroraDataApiPostgresDriver;\n}());\nexport { AuroraDataApiPostgresDriver };\n/**\n * DO NOT IMPORT THIS CLASS -\n * This is a dummy class for replacement via `package.json` in browser builds\n */\nvar SqlServerDriver = /** @class */ (function () {\n    function SqlServerDriver() {\n    }\n    return SqlServerDriver;\n}());\nexport { SqlServerDriver };\n/**\n * DO NOT IMPORT THIS CLASS -\n * This is a dummy class for replacement via `package.json` in browser builds\n */\nvar SapDriver = /** @class */ (function () {\n    function SapDriver() {\n    }\n    return SapDriver;\n}());\nexport { SapDriver };\n/**\n * DO NOT IMPORT THIS CLASS -\n * This is a dummy class for replacement via `package.json` in browser builds\n */\nvar MysqlDriver = /** @class */ (function () {\n    function MysqlDriver() {\n    }\n    return MysqlDriver;\n}());\nexport { MysqlDriver };\n/**\n * DO NOT IMPORT THIS CLASS -\n * This is a dummy class for replacement via `package.json` in browser builds\n */\nvar OracleDriver = /** @class */ (function () {\n    function OracleDriver() {\n    }\n    return OracleDriver;\n}());\nexport { OracleDriver };\n/**\n * DO NOT IMPORT THIS CLASS -\n * This is a dummy class for replacement via `package.json` in browser builds\n */\nvar SqliteDriver = /** @class */ (function () {\n    function SqliteDriver() {\n    }\n    return SqliteDriver;\n}());\nexport { SqliteDriver };\n/**\n * DO NOT IMPORT THIS CLASS -\n * This is a dummy class for replacement via `package.json` in browser builds\n */\nvar BetterSqlite3Driver = /** @class */ (function () {\n    function BetterSqlite3Driver() {\n    }\n    return BetterSqlite3Driver;\n}());\nexport { BetterSqlite3Driver };\n\n//# sourceMappingURL=BrowserDisabledDriversDummy.js.map\n","/**\n * Syntax sugar.\n * Allows to use brackets in WHERE expressions for better syntax.\n */\nvar Brackets = /** @class */ (function () {\n    /**\n     * Given WHERE query builder that will build a WHERE expression that will be taken into brackets.\n     */\n    function Brackets(whereFactory) {\n        this.whereFactory = whereFactory;\n    }\n    return Brackets;\n}());\nexport { Brackets };\n\n//# sourceMappingURL=Brackets.js.map\n","import { __awaiter, __extends, __generator, __read } from \"tslib\";\nimport { CockroachDriver } from \"../driver/cockroachdb/CockroachDriver\";\nimport { QueryBuilder } from \"./QueryBuilder\";\nimport { SqlServerDriver } from \"../driver/sqlserver/SqlServerDriver\";\nimport { PostgresDriver } from \"../driver/postgres/PostgresDriver\";\nimport { DeleteResult } from \"./result/DeleteResult\";\nimport { ReturningStatementNotSupportedError } from \"../error/ReturningStatementNotSupportedError\";\nimport { EntitySchema } from \"../entity-schema/EntitySchema\";\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nvar DeleteQueryBuilder = /** @class */ (function (_super) {\n    __extends(DeleteQueryBuilder, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function DeleteQueryBuilder(connectionOrQueryBuilder, queryRunner) {\n        var _this = _super.call(this, connectionOrQueryBuilder, queryRunner) || this;\n        _this.expressionMap.aliasNamePrefixingEnabled = false;\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated sql query without parameters being replaced.\n     */\n    DeleteQueryBuilder.prototype.getQuery = function () {\n        var sql = this.createComment();\n        sql += this.createDeleteExpression();\n        return sql.trim();\n    };\n    /**\n     * Executes sql generated by query builder and returns raw database results.\n     */\n    DeleteQueryBuilder.prototype.execute = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, sql, parameters, queryRunner, transactionStartedByUs, queryResult, deleteResult, error_1, rollbackError_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = __read(this.getQueryAndParameters(), 2), sql = _a[0], parameters = _a[1];\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 11, 16, 19]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _b.sent();\n                        transactionStartedByUs = true;\n                        _b.label = 3;\n                    case 3:\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, queryRunner.broadcaster.broadcast(\"BeforeRemove\", this.expressionMap.mainAlias.metadata)];\n                    case 4:\n                        _b.sent();\n                        _b.label = 5;\n                    case 5: return [4 /*yield*/, queryRunner.query(sql, parameters, true)];\n                    case 6:\n                        queryResult = _b.sent();\n                        deleteResult = DeleteResult.from(queryResult);\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 8];\n                        return [4 /*yield*/, queryRunner.broadcaster.broadcast(\"AfterRemove\", this.expressionMap.mainAlias.metadata)];\n                    case 7:\n                        _b.sent();\n                        _b.label = 8;\n                    case 8:\n                        if (!transactionStartedByUs) return [3 /*break*/, 10];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 9:\n                        _b.sent();\n                        _b.label = 10;\n                    case 10: return [2 /*return*/, deleteResult];\n                    case 11:\n                        error_1 = _b.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 15];\n                        _b.label = 12;\n                    case 12:\n                        _b.trys.push([12, 14, , 15]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 13:\n                        _b.sent();\n                        return [3 /*break*/, 15];\n                    case 14:\n                        rollbackError_1 = _b.sent();\n                        return [3 /*break*/, 15];\n                    case 15: throw error_1;\n                    case 16:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 18];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 17:\n                        _b.sent();\n                        _b.label = 18;\n                    case 18: return [7 /*endfinally*/];\n                    case 19: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Specifies FROM which entity's table select/update/delete will be executed.\n     * Also sets a main string alias of the selection data.\n     */\n    DeleteQueryBuilder.prototype.from = function (entityTarget, aliasName) {\n        entityTarget = entityTarget instanceof EntitySchema ? entityTarget.options.name : entityTarget;\n        var mainAlias = this.createFromAlias(entityTarget, aliasName);\n        this.expressionMap.setMainAlias(mainAlias);\n        return this;\n    };\n    /**\n     * Sets WHERE condition in the query builder.\n     * If you had previously WHERE expression defined,\n     * calling this function will override previously set WHERE conditions.\n     * Additionally you can add parameters used in where expression.\n     */\n    DeleteQueryBuilder.prototype.where = function (where, parameters) {\n        this.expressionMap.wheres = []; // don't move this block below since computeWhereParameter can add where expressions\n        var condition = this.getWhereCondition(where);\n        if (condition)\n            this.expressionMap.wheres = [{ type: \"simple\", condition: condition }];\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    DeleteQueryBuilder.prototype.andWhere = function (where, parameters) {\n        this.expressionMap.wheres.push({ type: \"and\", condition: this.getWhereCondition(where) });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new OR WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    DeleteQueryBuilder.prototype.orWhere = function (where, parameters) {\n        this.expressionMap.wheres.push({ type: \"or\", condition: this.getWhereCondition(where) });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     */\n    DeleteQueryBuilder.prototype.whereInIds = function (ids) {\n        return this.where(this.getWhereInIdsCondition(ids));\n    };\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     */\n    DeleteQueryBuilder.prototype.andWhereInIds = function (ids) {\n        return this.andWhere(this.getWhereInIdsCondition(ids));\n    };\n    /**\n     * Adds new OR WHERE with conditions for the given ids.\n     */\n    DeleteQueryBuilder.prototype.orWhereInIds = function (ids) {\n        return this.orWhere(this.getWhereInIdsCondition(ids));\n    };\n    /**\n     * Optional returning/output clause.\n     */\n    DeleteQueryBuilder.prototype.output = function (output) {\n        return this.returning(output);\n    };\n    /**\n     * Optional returning/output clause.\n     */\n    DeleteQueryBuilder.prototype.returning = function (returning) {\n        // not all databases support returning/output cause\n        if (!this.connection.driver.isReturningSqlSupported())\n            throw new ReturningStatementNotSupportedError();\n        this.expressionMap.returning = returning;\n        return this;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates DELETE express used to perform query.\n     */\n    DeleteQueryBuilder.prototype.createDeleteExpression = function () {\n        var tableName = this.getTableName(this.getMainTableName());\n        var whereExpression = this.createWhereExpression();\n        var returningExpression = this.createReturningExpression();\n        if (returningExpression && (this.connection.driver instanceof PostgresDriver || this.connection.driver instanceof CockroachDriver)) {\n            return \"DELETE FROM \" + tableName + whereExpression + \" RETURNING \" + returningExpression;\n        }\n        else if (returningExpression !== \"\" && this.connection.driver instanceof SqlServerDriver) {\n            return \"DELETE FROM \" + tableName + \" OUTPUT \" + returningExpression + whereExpression;\n        }\n        else {\n            return \"DELETE FROM \" + tableName + whereExpression;\n        }\n    };\n    return DeleteQueryBuilder;\n}(QueryBuilder));\nexport { DeleteQueryBuilder };\n\n//# sourceMappingURL=DeleteQueryBuilder.js.map\n","import { __awaiter, __extends, __generator, __read, __spreadArray, __values } from \"tslib\";\nimport { CockroachDriver } from \"../driver/cockroachdb/CockroachDriver\";\nimport { SapDriver } from \"../driver/sap/SapDriver\";\nimport { QueryBuilder } from \"./QueryBuilder\";\nimport { SqlServerDriver } from \"../driver/sqlserver/SqlServerDriver\";\nimport { PostgresDriver } from \"../driver/postgres/PostgresDriver\";\nimport { MysqlDriver } from \"../driver/mysql/MysqlDriver\";\nimport { RandomGenerator } from \"../util/RandomGenerator\";\nimport { InsertResult } from \"./result/InsertResult\";\nimport { ReturningStatementNotSupportedError } from \"../error/ReturningStatementNotSupportedError\";\nimport { InsertValuesMissingError } from \"../error/InsertValuesMissingError\";\nimport { ReturningResultsEntityUpdator } from \"./ReturningResultsEntityUpdator\";\nimport { AbstractSqliteDriver } from \"../driver/sqlite-abstract/AbstractSqliteDriver\";\nimport { BroadcasterResult } from \"../subscriber/BroadcasterResult\";\nimport { EntitySchema } from \"../entity-schema/EntitySchema\";\nimport { OracleDriver } from \"../driver/oracle/OracleDriver\";\nimport { AuroraDataApiDriver } from \"../driver/aurora-data-api/AuroraDataApiDriver\";\nimport { TypeORMError } from \"../error\";\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nvar InsertQueryBuilder = /** @class */ (function (_super) {\n    __extends(InsertQueryBuilder, _super);\n    function InsertQueryBuilder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated sql query without parameters being replaced.\n     */\n    InsertQueryBuilder.prototype.getQuery = function () {\n        var sql = this.createComment();\n        sql += this.createInsertExpression();\n        return sql.trim();\n    };\n    /**\n     * Executes sql generated by query builder and returns raw database results.\n     */\n    InsertQueryBuilder.prototype.execute = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var valueSets, queryRunner, transactionStartedByUs, broadcastResult_1, declareSql, selectOutputSql, returningResultsEntityUpdator, returningColumns_1, _a, _b, columnPath, _c, insertSql, parameters, statements, sql, queryResult, insertResult, broadcastResult_2, error_1, rollbackError_1;\n            var e_1, _d;\n            var _this = this;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        valueSets = this.getValueSets();\n                        // console.timeEnd(\".value sets\");\n                        // If user passed empty array of entities then we don't need to do\n                        // anything.\n                        //\n                        // Fixes GitHub issues #3111 and #5734. If we were to let this through\n                        // we would run into problems downstream, like subscribers getting\n                        // invoked with the empty array where they expect an entity, and SQL\n                        // queries with an empty VALUES clause.\n                        if (valueSets.length === 0)\n                            return [2 /*return*/, new InsertResult()];\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _e.label = 1;\n                    case 1:\n                        _e.trys.push([1, 13, 18, 21]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _e.sent();\n                        transactionStartedByUs = true;\n                        _e.label = 3;\n                    case 3:\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 5];\n                        broadcastResult_1 = new BroadcasterResult();\n                        valueSets.forEach(function (valueSet) {\n                            queryRunner.broadcaster.broadcastBeforeInsertEvent(broadcastResult_1, _this.expressionMap.mainAlias.metadata, valueSet);\n                        });\n                        return [4 /*yield*/, broadcastResult_1.wait()];\n                    case 4:\n                        _e.sent();\n                        _e.label = 5;\n                    case 5:\n                        declareSql = null;\n                        selectOutputSql = null;\n                        returningResultsEntityUpdator = new ReturningResultsEntityUpdator(queryRunner, this.expressionMap);\n                        returningColumns_1 = [];\n                        if (Array.isArray(this.expressionMap.returning) && this.expressionMap.mainAlias.hasMetadata) {\n                            try {\n                                for (_a = __values(this.expressionMap.returning), _b = _a.next(); !_b.done; _b = _a.next()) {\n                                    columnPath = _b.value;\n                                    returningColumns_1.push.apply(returningColumns_1, __spreadArray([], __read(this.expressionMap.mainAlias.metadata.findColumnsWithPropertyPath(columnPath)), false));\n                                }\n                            }\n                            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                            finally {\n                                try {\n                                    if (_b && !_b.done && (_d = _a.return)) _d.call(_a);\n                                }\n                                finally { if (e_1) throw e_1.error; }\n                            }\n                        }\n                        if (this.expressionMap.updateEntity === true && this.expressionMap.mainAlias.hasMetadata) {\n                            if (!(valueSets.length > 1 && this.connection.driver instanceof OracleDriver)) {\n                                this.expressionMap.extraReturningColumns = returningResultsEntityUpdator.getInsertionReturningColumns();\n                            }\n                            returningColumns_1.push.apply(returningColumns_1, __spreadArray([], __read(this.expressionMap.extraReturningColumns.filter(function (c) { return !returningColumns_1.includes(c); })), false));\n                        }\n                        if (returningColumns_1.length > 0 && this.connection.driver instanceof SqlServerDriver) {\n                            declareSql = this.connection.driver.buildTableVariableDeclaration(\"@OutputTable\", returningColumns_1);\n                            selectOutputSql = \"SELECT * FROM @OutputTable\";\n                        }\n                        _c = __read(this.getQueryAndParameters(), 2), insertSql = _c[0], parameters = _c[1];\n                        statements = [declareSql, insertSql, selectOutputSql];\n                        sql = statements.filter(function (s) { return s != null; }).join(\";\\n\\n\");\n                        return [4 /*yield*/, queryRunner.query(sql, parameters, true)];\n                    case 6:\n                        queryResult = _e.sent();\n                        insertResult = InsertResult.from(queryResult);\n                        if (!(this.expressionMap.updateEntity === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 8];\n                        // console.time(\".updating entity\");\n                        return [4 /*yield*/, returningResultsEntityUpdator.insert(insertResult, valueSets)];\n                    case 7:\n                        // console.time(\".updating entity\");\n                        _e.sent();\n                        _e.label = 8;\n                    case 8:\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 10];\n                        broadcastResult_2 = new BroadcasterResult();\n                        valueSets.forEach(function (valueSet) {\n                            queryRunner.broadcaster.broadcastAfterInsertEvent(broadcastResult_2, _this.expressionMap.mainAlias.metadata, valueSet);\n                        });\n                        return [4 /*yield*/, broadcastResult_2.wait()];\n                    case 9:\n                        _e.sent();\n                        _e.label = 10;\n                    case 10:\n                        if (!transactionStartedByUs) return [3 /*break*/, 12];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 11:\n                        _e.sent();\n                        _e.label = 12;\n                    case 12: \n                    // console.timeEnd(\".commit\");\n                    return [2 /*return*/, insertResult];\n                    case 13:\n                        error_1 = _e.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 17];\n                        _e.label = 14;\n                    case 14:\n                        _e.trys.push([14, 16, , 17]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 15:\n                        _e.sent();\n                        return [3 /*break*/, 17];\n                    case 16:\n                        rollbackError_1 = _e.sent();\n                        return [3 /*break*/, 17];\n                    case 17: throw error_1;\n                    case 18:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 20];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 19:\n                        _e.sent();\n                        _e.label = 20;\n                    case 20: return [7 /*endfinally*/];\n                    case 21: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Specifies INTO which entity's table insertion will be executed.\n     */\n    InsertQueryBuilder.prototype.into = function (entityTarget, columns) {\n        entityTarget = entityTarget instanceof EntitySchema ? entityTarget.options.name : entityTarget;\n        var mainAlias = this.createFromAlias(entityTarget);\n        this.expressionMap.setMainAlias(mainAlias);\n        this.expressionMap.insertColumns = columns || [];\n        return this;\n    };\n    /**\n     * Values needs to be inserted into table.\n     */\n    InsertQueryBuilder.prototype.values = function (values) {\n        this.expressionMap.valuesSet = values;\n        return this;\n    };\n    /**\n     * Optional returning/output clause.\n     */\n    InsertQueryBuilder.prototype.output = function (output) {\n        return this.returning(output);\n    };\n    /**\n     * Optional returning/output clause.\n     */\n    InsertQueryBuilder.prototype.returning = function (returning) {\n        // not all databases support returning/output cause\n        if (!this.connection.driver.isReturningSqlSupported())\n            throw new ReturningStatementNotSupportedError();\n        this.expressionMap.returning = returning;\n        return this;\n    };\n    /**\n     * Indicates if entity must be updated after insertion operations.\n     * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n     * Enabled by default.\n     */\n    InsertQueryBuilder.prototype.updateEntity = function (enabled) {\n        this.expressionMap.updateEntity = enabled;\n        return this;\n    };\n    /**\n     * Adds additional ON CONFLICT statement supported in postgres and cockroach.\n     *\n     * @deprecated Use `orIgnore` or `orUpdate`\n     */\n    InsertQueryBuilder.prototype.onConflict = function (statement) {\n        this.expressionMap.onConflict = statement;\n        return this;\n    };\n    /**\n     * Adds additional ignore statement supported in databases.\n     */\n    InsertQueryBuilder.prototype.orIgnore = function (statement) {\n        if (statement === void 0) { statement = true; }\n        this.expressionMap.onIgnore = !!statement;\n        return this;\n    };\n    /**\n     * Adds additional update statement supported in databases.\n     */\n    InsertQueryBuilder.prototype.orUpdate = function (statementOrOverwrite, conflictTarget) {\n        if (!Array.isArray(statementOrOverwrite)) {\n            this.expressionMap.onUpdate = {\n                conflict: statementOrOverwrite === null || statementOrOverwrite === void 0 ? void 0 : statementOrOverwrite.conflict_target,\n                columns: statementOrOverwrite === null || statementOrOverwrite === void 0 ? void 0 : statementOrOverwrite.columns,\n                overwrite: statementOrOverwrite === null || statementOrOverwrite === void 0 ? void 0 : statementOrOverwrite.overwrite,\n            };\n            return this;\n        }\n        this.expressionMap.onUpdate = {\n            overwrite: statementOrOverwrite,\n            conflict: conflictTarget,\n        };\n        return this;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates INSERT express used to perform insert query.\n     */\n    InsertQueryBuilder.prototype.createInsertExpression = function () {\n        var _this = this;\n        var tableName = this.getTableName(this.getMainTableName());\n        var valuesExpression = this.createValuesExpression(); // its important to get values before returning expression because oracle rely on native parameters and ordering of them is important\n        var returningExpression = (this.connection.driver instanceof OracleDriver && this.getValueSets().length > 1) ? null : this.createReturningExpression(); // oracle doesnt support returning with multi-row insert\n        var columnsExpression = this.createColumnNamesExpression();\n        var query = \"INSERT \";\n        if (this.connection.driver instanceof MysqlDriver || this.connection.driver instanceof AuroraDataApiDriver) {\n            query += \"\" + (this.expressionMap.onIgnore ? \" IGNORE \" : \"\");\n        }\n        query += \"INTO \" + tableName;\n        // add columns expression\n        if (columnsExpression) {\n            query += \"(\" + columnsExpression + \")\";\n        }\n        else {\n            if (!valuesExpression && (this.connection.driver instanceof MysqlDriver || this.connection.driver instanceof AuroraDataApiDriver)) // special syntax for mysql DEFAULT VALUES insertion\n                query += \"()\";\n        }\n        // add OUTPUT expression\n        if (returningExpression && this.connection.driver instanceof SqlServerDriver) {\n            query += \" OUTPUT \" + returningExpression;\n        }\n        // add VALUES expression\n        if (valuesExpression) {\n            if (this.connection.driver instanceof OracleDriver && this.getValueSets().length > 1) {\n                query += \" \" + valuesExpression;\n            }\n            else {\n                query += \" VALUES \" + valuesExpression;\n            }\n        }\n        else {\n            if (this.connection.driver instanceof MysqlDriver || this.connection.driver instanceof AuroraDataApiDriver) { // special syntax for mysql DEFAULT VALUES insertion\n                query += \" VALUES ()\";\n            }\n            else {\n                query += \" DEFAULT VALUES\";\n            }\n        }\n        if (this.connection.driver.supportedUpsertType === \"on-conflict-do-update\") {\n            if (this.expressionMap.onIgnore) {\n                query += \" ON CONFLICT DO NOTHING \";\n            }\n            else if (this.expressionMap.onConflict) {\n                query += \" ON CONFLICT \" + this.expressionMap.onConflict + \" \";\n            }\n            else if (this.expressionMap.onUpdate) {\n                var _a = this.expressionMap.onUpdate, overwrite = _a.overwrite, columns = _a.columns, conflict = _a.conflict;\n                var conflictTarget = \"ON CONFLICT\";\n                if (Array.isArray(conflict)) {\n                    conflictTarget += \" ( \" + conflict.map(function (column) { return _this.escape(column); }).join(\", \") + \" )\";\n                }\n                else if (conflict) {\n                    conflictTarget += \" ON CONSTRAINT \" + this.escape(conflict);\n                }\n                if (Array.isArray(overwrite)) {\n                    query += \" \" + conflictTarget + \" DO UPDATE SET \";\n                    query += overwrite === null || overwrite === void 0 ? void 0 : overwrite.map(function (column) { return _this.escape(column) + \" = EXCLUDED.\" + _this.escape(column); }).join(\", \");\n                    query += \" \";\n                }\n                else if (columns) {\n                    query += \" \" + conflictTarget + \" DO UPDATE SET \";\n                    query += columns.map(function (column) { return _this.escape(column) + \" = :\" + column; }).join(\", \");\n                    query += \" \";\n                }\n            }\n        }\n        else if (this.connection.driver.supportedUpsertType === \"on-duplicate-key-update\") {\n            if (this.expressionMap.onUpdate) {\n                var _b = this.expressionMap.onUpdate, overwrite = _b.overwrite, columns = _b.columns;\n                if (Array.isArray(overwrite)) {\n                    query += \" ON DUPLICATE KEY UPDATE \";\n                    query += overwrite.map(function (column) { return _this.escape(column) + \" = VALUES(\" + _this.escape(column) + \")\"; }).join(\", \");\n                    query += \" \";\n                }\n                else if (Array.isArray(columns)) {\n                    query += \" ON DUPLICATE KEY UPDATE \";\n                    query += columns.map(function (column) { return _this.escape(column) + \" = :\" + column; }).join(\", \");\n                    query += \" \";\n                }\n            }\n        }\n        else {\n            if (this.expressionMap.onUpdate) {\n                throw new TypeORMError(\"onUpdate is not supported by the current database driver\");\n            }\n        }\n        // add RETURNING expression\n        if (returningExpression && (this.connection.driver instanceof PostgresDriver || this.connection.driver instanceof OracleDriver || this.connection.driver instanceof CockroachDriver)) {\n            query += \" RETURNING \" + returningExpression;\n        }\n        // Inserting a specific value for an auto-increment primary key in mssql requires enabling IDENTITY_INSERT\n        // IDENTITY_INSERT can only be enabled for tables where there is an IDENTITY column and only if there is a value to be inserted (i.e. supplying DEFAULT is prohibited if IDENTITY_INSERT is enabled)\n        if (this.connection.driver instanceof SqlServerDriver\n            && this.expressionMap.mainAlias.hasMetadata\n            && this.expressionMap.mainAlias.metadata.columns\n                .filter(function (column) { return _this.expressionMap.insertColumns.length > 0 ? _this.expressionMap.insertColumns.indexOf(column.propertyPath) !== -1 : column.isInsert; })\n                .some(function (column) { return _this.isOverridingAutoIncrementBehavior(column); })) {\n            query = \"SET IDENTITY_INSERT \" + tableName + \" ON; \" + query + \"; SET IDENTITY_INSERT \" + tableName + \" OFF\";\n        }\n        return query;\n    };\n    /**\n     * Gets list of columns where values must be inserted to.\n     */\n    InsertQueryBuilder.prototype.getInsertedColumns = function () {\n        var _this = this;\n        if (!this.expressionMap.mainAlias.hasMetadata)\n            return [];\n        return this.expressionMap.mainAlias.metadata.columns.filter(function (column) {\n            // if user specified list of columns he wants to insert to, then we filter only them\n            if (_this.expressionMap.insertColumns.length)\n                return _this.expressionMap.insertColumns.indexOf(column.propertyPath) !== -1;\n            // skip columns the user doesn't want included by default\n            if (!column.isInsert) {\n                return false;\n            }\n            // if user did not specified such list then return all columns except auto-increment one\n            // for Oracle we return auto-increment column as well because Oracle does not support DEFAULT VALUES expression\n            if (column.isGenerated && column.generationStrategy === \"increment\"\n                && !(_this.connection.driver instanceof OracleDriver)\n                && !(_this.connection.driver instanceof AbstractSqliteDriver)\n                && !(_this.connection.driver instanceof MysqlDriver)\n                && !(_this.connection.driver instanceof AuroraDataApiDriver)\n                && !(_this.connection.driver instanceof SqlServerDriver && _this.isOverridingAutoIncrementBehavior(column)))\n                return false;\n            return true;\n        });\n    };\n    /**\n     * Creates a columns string where values must be inserted to for INSERT INTO expression.\n     */\n    InsertQueryBuilder.prototype.createColumnNamesExpression = function () {\n        var _this = this;\n        var columns = this.getInsertedColumns();\n        if (columns.length > 0)\n            return columns.map(function (column) { return _this.escape(column.databaseName); }).join(\", \");\n        // in the case if there are no insert columns specified and table without metadata used\n        // we get columns from the inserted value map, in the case if only one inserted map is specified\n        if (!this.expressionMap.mainAlias.hasMetadata && !this.expressionMap.insertColumns.length) {\n            var valueSets = this.getValueSets();\n            if (valueSets.length === 1)\n                return Object.keys(valueSets[0]).map(function (columnName) { return _this.escape(columnName); }).join(\", \");\n        }\n        // get a table name and all column database names\n        return this.expressionMap.insertColumns.map(function (columnName) { return _this.escape(columnName); }).join(\", \");\n    };\n    /**\n     * Creates list of values needs to be inserted in the VALUES expression.\n     */\n    InsertQueryBuilder.prototype.createValuesExpression = function () {\n        var _this = this;\n        var valueSets = this.getValueSets();\n        var columns = this.getInsertedColumns();\n        // if column metadatas are given then apply all necessary operations with values\n        if (columns.length > 0) {\n            var expression_1 = \"\";\n            valueSets.forEach(function (valueSet, valueSetIndex) {\n                columns.forEach(function (column, columnIndex) {\n                    if (columnIndex === 0) {\n                        if (_this.connection.driver instanceof OracleDriver && valueSets.length > 1) {\n                            expression_1 += \" SELECT \";\n                        }\n                        else {\n                            expression_1 += \"(\";\n                        }\n                    }\n                    // extract real value from the entity\n                    var value = column.getEntityValue(valueSet);\n                    // if column is relational and value is an object then get real referenced column value from this object\n                    // for example column value is { question: { id: 1 } }, value will be equal to { id: 1 }\n                    // and we extract \"1\" from this object\n                    /*if (column.referencedColumn && value instanceof Object && !(value instanceof Function)) { // todo: check if we still need it since getEntityValue already has similar code\n                        value = column.referencedColumn.getEntityValue(value);\n                    }*/\n                    if (!(value instanceof Function)) {\n                        // make sure our value is normalized by a driver\n                        value = _this.connection.driver.preparePersistentValue(value, column);\n                    }\n                    // newly inserted entities always have a version equal to 1 (first version)\n                    // also, user-specified version must be empty\n                    if (column.isVersion && value === undefined) {\n                        expression_1 += \"1\";\n                        // } else if (column.isNestedSetLeft) {\n                        //     const tableName = this.connection.driver.escape(column.entityMetadata.tablePath);\n                        //     const rightColumnName = this.connection.driver.escape(column.entityMetadata.nestedSetRightColumn!.databaseName);\n                        //     const subQuery = `(SELECT c.max + 1 FROM (SELECT MAX(${rightColumnName}) as max from ${tableName}) c)`;\n                        //     expression += subQuery;\n                        //\n                        // } else if (column.isNestedSetRight) {\n                        //     const tableName = this.connection.driver.escape(column.entityMetadata.tablePath);\n                        //     const rightColumnName = this.connection.driver.escape(column.entityMetadata.nestedSetRightColumn!.databaseName);\n                        //     const subQuery = `(SELECT c.max + 2 FROM (SELECT MAX(${rightColumnName}) as max from ${tableName}) c)`;\n                        //     expression += subQuery;\n                    }\n                    else if (column.isDiscriminator) {\n                        expression_1 += _this.createParameter(_this.expressionMap.mainAlias.metadata.discriminatorValue);\n                        // return \"1\";\n                        // for create and update dates we insert current date\n                        // no, we don't do it because this constant is already in \"default\" value of the column\n                        // with extended timestamp functionality, like CURRENT_TIMESTAMP(6) for example\n                        // } else if (column.isCreateDate || column.isUpdateDate) {\n                        //     return \"CURRENT_TIMESTAMP\";\n                        // if column is generated uuid and database does not support its generation and custom generated value was not provided by a user - we generate a new uuid value for insertion\n                    }\n                    else if (column.isGenerated && column.generationStrategy === \"uuid\" && !_this.connection.driver.isUUIDGenerationSupported() && value === undefined) {\n                        value = RandomGenerator.uuid4();\n                        expression_1 += _this.createParameter(value);\n                        if (!(valueSetIndex in _this.expressionMap.locallyGenerated)) {\n                            _this.expressionMap.locallyGenerated[valueSetIndex] = {};\n                        }\n                        column.setEntityValue(_this.expressionMap.locallyGenerated[valueSetIndex], value);\n                        // if value for this column was not provided then insert default value\n                    }\n                    else if (value === undefined) {\n                        if ((_this.connection.driver instanceof OracleDriver && valueSets.length > 1) || _this.connection.driver instanceof AbstractSqliteDriver || _this.connection.driver instanceof SapDriver) { // unfortunately sqlite does not support DEFAULT expression in INSERT queries\n                            if (column.default !== undefined && column.default !== null) { // try to use default defined in the column\n                                expression_1 += _this.connection.driver.normalizeDefault(column);\n                            }\n                            else {\n                                expression_1 += \"NULL\"; // otherwise simply use NULL and pray if column is nullable\n                            }\n                        }\n                        else {\n                            expression_1 += \"DEFAULT\";\n                        }\n                        // support for SQL expressions in queries\n                    }\n                    else if (value instanceof Function) {\n                        expression_1 += value();\n                        // just any other regular value\n                    }\n                    else {\n                        if (_this.connection.driver instanceof SqlServerDriver)\n                            value = _this.connection.driver.parametrizeValue(column, value);\n                        // we need to store array values in a special class to make sure parameter replacement will work correctly\n                        // if (value instanceof Array)\n                        //     value = new ArrayParameter(value);\n                        var paramName = _this.createParameter(value);\n                        if ((_this.connection.driver instanceof MysqlDriver || _this.connection.driver instanceof AuroraDataApiDriver) && _this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            var useLegacy = _this.connection.driver.options.legacySpatialSupport;\n                            var geomFromText = useLegacy ? \"GeomFromText\" : \"ST_GeomFromText\";\n                            if (column.srid != null) {\n                                expression_1 += geomFromText + \"(\" + paramName + \", \" + column.srid + \")\";\n                            }\n                            else {\n                                expression_1 += geomFromText + \"(\" + paramName + \")\";\n                            }\n                        }\n                        else if (_this.connection.driver instanceof PostgresDriver && _this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            if (column.srid != null) {\n                                expression_1 += \"ST_SetSRID(ST_GeomFromGeoJSON(\" + paramName + \"), \" + column.srid + \")::\" + column.type;\n                            }\n                            else {\n                                expression_1 += \"ST_GeomFromGeoJSON(\" + paramName + \")::\" + column.type;\n                            }\n                        }\n                        else if (_this.connection.driver instanceof SqlServerDriver && _this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            expression_1 += column.type + \"::STGeomFromText(\" + paramName + \", \" + (column.srid || \"0\") + \")\";\n                        }\n                        else {\n                            expression_1 += paramName;\n                        }\n                    }\n                    if (columnIndex === columns.length - 1) {\n                        if (valueSetIndex === valueSets.length - 1) {\n                            if (_this.connection.driver instanceof OracleDriver && valueSets.length > 1) {\n                                expression_1 += \" FROM DUAL \";\n                            }\n                            else {\n                                expression_1 += \")\";\n                            }\n                        }\n                        else {\n                            if (_this.connection.driver instanceof OracleDriver && valueSets.length > 1) {\n                                expression_1 += \" FROM DUAL UNION ALL \";\n                            }\n                            else {\n                                expression_1 += \"), \";\n                            }\n                        }\n                    }\n                    else {\n                        expression_1 += \", \";\n                    }\n                });\n            });\n            if (expression_1 === \"()\")\n                return \"\";\n            return expression_1;\n        }\n        else { // for tables without metadata\n            // get values needs to be inserted\n            var expression_2 = \"\";\n            valueSets.forEach(function (valueSet, insertionIndex) {\n                var columns = Object.keys(valueSet);\n                columns.forEach(function (columnName, columnIndex) {\n                    if (columnIndex === 0) {\n                        expression_2 += \"(\";\n                    }\n                    var value = valueSet[columnName];\n                    // support for SQL expressions in queries\n                    if (value instanceof Function) {\n                        expression_2 += value();\n                        // if value for this column was not provided then insert default value\n                    }\n                    else if (value === undefined) {\n                        if (_this.connection.driver instanceof AbstractSqliteDriver || _this.connection.driver instanceof SapDriver) {\n                            expression_2 += \"NULL\";\n                        }\n                        else {\n                            expression_2 += \"DEFAULT\";\n                        }\n                        // just any other regular value\n                    }\n                    else {\n                        expression_2 += _this.createParameter(value);\n                    }\n                    if (columnIndex === Object.keys(valueSet).length - 1) {\n                        if (insertionIndex === valueSets.length - 1) {\n                            expression_2 += \")\";\n                        }\n                        else {\n                            expression_2 += \"), \";\n                        }\n                    }\n                    else {\n                        expression_2 += \", \";\n                    }\n                });\n            });\n            if (expression_2 === \"()\")\n                return \"\";\n            return expression_2;\n        }\n    };\n    /**\n     * Gets array of values need to be inserted into the target table.\n     */\n    InsertQueryBuilder.prototype.getValueSets = function () {\n        if (Array.isArray(this.expressionMap.valuesSet))\n            return this.expressionMap.valuesSet;\n        if (this.expressionMap.valuesSet instanceof Object)\n            return [this.expressionMap.valuesSet];\n        throw new InsertValuesMissingError();\n    };\n    /**\n     * Checks if column is an auto-generated primary key, but the current insertion specifies a value for it.\n     *\n     * @param column\n     */\n    InsertQueryBuilder.prototype.isOverridingAutoIncrementBehavior = function (column) {\n        return column.isPrimary\n            && column.isGenerated\n            && column.generationStrategy === \"increment\"\n            && this.getValueSets().some(function (valueSet) {\n                return column.getEntityValue(valueSet) !== undefined\n                    && column.getEntityValue(valueSet) !== null;\n            });\n    };\n    return InsertQueryBuilder;\n}(QueryBuilder));\nexport { InsertQueryBuilder };\n\n//# sourceMappingURL=InsertQueryBuilder.js.map\n","import { __values } from \"tslib\";\nimport { QueryBuilderUtils } from \"./QueryBuilderUtils\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\nimport { TypeORMError } from \"../error\";\n/**\n * Stores all join attributes which will be used to build a JOIN query.\n */\nvar JoinAttribute = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function JoinAttribute(connection, queryExpressionMap, joinAttribute) {\n        this.connection = connection;\n        this.queryExpressionMap = queryExpressionMap;\n        this.isSelectedEvaluated = false;\n        this.relationEvaluated = false;\n        ObjectUtils.assign(this, joinAttribute || {});\n    }\n    Object.defineProperty(JoinAttribute.prototype, \"isMany\", {\n        // -------------------------------------------------------------------------\n        // Public Methods\n        // -------------------------------------------------------------------------\n        get: function () {\n            if (this.isMappingMany !== undefined)\n                return this.isMappingMany;\n            if (this.relation)\n                return this.relation.isManyToMany || this.relation.isOneToMany;\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"isSelected\", {\n        /**\n         * Indicates if this join is selected.\n         */\n        get: function () {\n            var _this = this;\n            if (!this.isSelectedEvaluated) {\n                var getValue = function () {\n                    var e_1, _a;\n                    var _loop_1 = function (select) {\n                        if (select.selection === _this.alias.name)\n                            return { value: true };\n                        if (_this.metadata && !!_this.metadata.columns.find(function (column) { return select.selection === _this.alias.name + \".\" + column.propertyPath; }))\n                            return { value: true };\n                    };\n                    try {\n                        for (var _b = __values(_this.queryExpressionMap.selects), _c = _b.next(); !_c.done; _c = _b.next()) {\n                            var select = _c.value;\n                            var state_1 = _loop_1(select);\n                            if (typeof state_1 === \"object\")\n                                return state_1.value;\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    return false;\n                };\n                this.isSelectedCache = getValue();\n                this.isSelectedEvaluated = true;\n            }\n            return this.isSelectedCache;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"tablePath\", {\n        /**\n         * Name of the table which we should join.\n         */\n        get: function () {\n            return this.metadata ? this.metadata.tablePath : this.entityOrProperty;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"parentAlias\", {\n        /**\n         * Alias of the parent of this join.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"post\" is a parent alias.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils.isAliasProperty(this.entityOrProperty))\n                return undefined;\n            return this.entityOrProperty.substr(0, this.entityOrProperty.indexOf(\".\"));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"relationPropertyPath\", {\n        /**\n         * Relation property name of the parent.\n         * This is used to understand what is joined.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"category\" is a relation property.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils.isAliasProperty(this.entityOrProperty))\n                return undefined;\n            return this.entityOrProperty.substr(this.entityOrProperty.indexOf(\".\") + 1);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"relation\", {\n        /**\n         * Relation of the parent.\n         * This is used to understand what is joined.\n         * This is available when join was made using \"post.category\" syntax.\n         * Relation can be undefined if entityOrProperty is regular entity or custom table.\n         */\n        get: function () {\n            var _this = this;\n            if (!this.relationEvaluated) {\n                var getValue = function () {\n                    if (!QueryBuilderUtils.isAliasProperty(_this.entityOrProperty))\n                        return undefined;\n                    var relationOwnerSelection = _this.queryExpressionMap.findAliasByName(_this.parentAlias);\n                    var relation = relationOwnerSelection.metadata.findRelationWithPropertyPath(_this.relationPropertyPath);\n                    if (relation) {\n                        return relation;\n                    }\n                    if (relationOwnerSelection.metadata.parentEntityMetadata) {\n                        relation = relationOwnerSelection.metadata.parentEntityMetadata.findRelationWithPropertyPath(_this.relationPropertyPath);\n                        if (relation) {\n                            return relation;\n                        }\n                    }\n                    throw new TypeORMError(\"Relation with property path \" + _this.relationPropertyPath + \" in entity was not found.\");\n                };\n                this.relationCache = getValue.bind(this)();\n                this.relationEvaluated = true;\n            }\n            return this.relationCache;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"metadata\", {\n        /**\n         * Metadata of the joined entity.\n         * If table without entity was joined, then it will return undefined.\n         */\n        get: function () {\n            // entityOrProperty is relation, e.g. \"post.category\"\n            if (this.relation)\n                return this.relation.inverseEntityMetadata;\n            // entityOrProperty is Entity class\n            if (this.connection.hasMetadata(this.entityOrProperty))\n                return this.connection.getMetadata(this.entityOrProperty);\n            return undefined;\n            /*if (typeof this.entityOrProperty === \"string\") { // entityOrProperty is a custom table\n    \n                // first try to find entity with such name, this is needed when entity does not have a target class,\n                // and its target is a string name (scenario when plain old javascript is used or entity schema is loaded from files)\n                const metadata = this.connection.entityMetadatas.find(metadata => metadata.name === this.entityOrProperty);\n                if (metadata)\n                    return metadata;\n    \n                // check if we have entity with such table name, and use its metadata if found\n                return this.connection.entityMetadatas.find(metadata => metadata.tableName === this.entityOrProperty);\n            }*/\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"junctionAlias\", {\n        /**\n         * Generates alias of junction table, whose ids we get.\n         */\n        get: function () {\n            if (!this.relation)\n                throw new TypeORMError(\"Cannot get junction table for join without relation.\");\n            return this.relation.isOwning ? this.parentAlias + \"_\" + this.alias.name : this.alias.name + \"_\" + this.parentAlias;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"mapToPropertyParentAlias\", {\n        get: function () {\n            if (!this.mapToProperty)\n                return undefined;\n            return this.mapToProperty.split(\".\")[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(JoinAttribute.prototype, \"mapToPropertyPropertyName\", {\n        get: function () {\n            if (!this.mapToProperty)\n                return undefined;\n            return this.mapToProperty.split(\".\")[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return JoinAttribute;\n}());\nexport { JoinAttribute };\n\n//# sourceMappingURL=JoinAttribute.js.map\n","import { ObjectUtils } from \"../util/ObjectUtils\";\nimport { TypeORMError } from \"../error\";\n/**\n */\nvar Alias = /** @class */ (function () {\n    function Alias(alias) {\n        ObjectUtils.assign(this, alias || {});\n    }\n    Object.defineProperty(Alias.prototype, \"target\", {\n        get: function () {\n            return this.metadata.target;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Alias.prototype, \"hasMetadata\", {\n        get: function () {\n            return !!this._metadata;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Alias.prototype, \"metadata\", {\n        get: function () {\n            if (!this._metadata)\n                throw new TypeORMError(\"Cannot get entity metadata for the given alias \\\"\" + this.name + \"\\\"\");\n            return this._metadata;\n        },\n        set: function (metadata) {\n            this._metadata = metadata;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Alias;\n}());\nexport { Alias };\n\n//# sourceMappingURL=Alias.js.map\n","import { __assign, __read } from \"tslib\";\nimport { Alias } from \"./Alias\";\nimport { JoinAttribute } from \"./JoinAttribute\";\nimport { RelationIdAttribute } from \"./relation-id/RelationIdAttribute\";\nimport { RelationCountAttribute } from \"./relation-count/RelationCountAttribute\";\nimport { TypeORMError } from \"../error\";\n/**\n * Contains all properties of the QueryBuilder that needs to be build a final query.\n */\nvar QueryExpressionMap = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function QueryExpressionMap(connection) {\n        this.connection = connection;\n        // -------------------------------------------------------------------------\n        // Public Properties\n        // -------------------------------------------------------------------------\n        /**\n         * Indicates if QueryBuilder used to select entities and not a raw results.\n         */\n        this.queryEntity = false;\n        /**\n         * All aliases (including main alias) used in the query.\n         */\n        this.aliases = [];\n        /**\n         * Represents query type. QueryBuilder is able to build SELECT, UPDATE and DELETE queries.\n         */\n        this.queryType = \"select\";\n        /**\n         * Data needs to be SELECT-ed.\n         */\n        this.selects = [];\n        /**\n         * Max execution time in millisecond.\n         */\n        this.maxExecutionTime = 0;\n        /**\n         * Whether SELECT is DISTINCT.\n         */\n        this.selectDistinct = false;\n        /**\n         * SELECT DISTINCT ON query (postgres).\n         */\n        this.selectDistinctOn = [];\n        /**\n         * Extra returning columns to be added to the returning statement if driver supports it.\n         */\n        this.extraReturningColumns = [];\n        /**\n         * Optional on conflict statement used in insertion query in postgres.\n         */\n        this.onConflict = \"\";\n        /**\n         * Optional on ignore statement used in insertion query in databases.\n         */\n        this.onIgnore = false;\n        /**\n         * JOIN queries.\n         */\n        this.joinAttributes = [];\n        /**\n         * RelationId queries.\n         */\n        this.relationIdAttributes = [];\n        /**\n         * Relation count queries.\n         */\n        this.relationCountAttributes = [];\n        /**\n         * WHERE queries.\n         */\n        this.wheres = [];\n        /**\n         * HAVING queries.\n         */\n        this.havings = [];\n        /**\n         * ORDER BY queries.\n         */\n        this.orderBys = {};\n        /**\n         * GROUP BY queries.\n         */\n        this.groupBys = [];\n        /**\n         * Indicates if soft-deleted rows should be included in entity result.\n         * By default the soft-deleted rows are not included.\n         */\n        this.withDeleted = false;\n        /**\n         * Parameters used to be escaped in final query.\n         */\n        this.parameters = {};\n        /**\n         * Indicates if alias, table names and column names will be ecaped by driver, or not.\n         *\n         * todo: rename to isQuotingDisabled, also think if it should be named \"escaping\"\n         */\n        this.disableEscaping = true;\n        /**\n         * Indicates if virtual columns should be included in entity result.\n         *\n         * todo: what to do with it? is it properly used? what about persistence?\n         */\n        this.enableRelationIdValues = false;\n        /**\n         * Extra where condition appended to the end of original where conditions with AND keyword.\n         * Original condition will be wrapped into brackets.\n         */\n        this.extraAppendedAndWhereCondition = \"\";\n        /**\n         * Indicates if query builder creates a subquery.\n         */\n        this.subQuery = false;\n        /**\n         * Indicates if property names are prefixed with alias names during property replacement.\n         * By default this is enabled, however we need this because aliases are not supported in UPDATE and DELETE queries,\n         * but user can use them in WHERE expressions.\n         */\n        this.aliasNamePrefixingEnabled = true;\n        /**\n         * Indicates if query result cache is enabled or not.\n         */\n        this.cache = false;\n        /**\n         * Options that define QueryBuilder behaviour.\n         */\n        this.options = [];\n        /**\n         * List of columns where data should be inserted.\n         * Used in INSERT query.\n         */\n        this.insertColumns = [];\n        /**\n         * Used if user wants to update or delete a specific entities.\n         */\n        this.whereEntities = [];\n        /**\n         * Indicates if entity must be updated after insertion / updation.\n         * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n         */\n        this.updateEntity = true;\n        /**\n         * Indicates if listeners and subscribers must be called before and after query execution.\n         */\n        this.callListeners = true;\n        /**\n         * Indicates if query must be wrapped into transaction.\n         */\n        this.useTransaction = false;\n        /**\n         * Extra parameters.\n         *\n         * @deprecated Use standard parameters instead\n         */\n        this.nativeParameters = {};\n        /**\n         * Items from an entity that have been locally generated & are recorded here for later use.\n         * Examples include the UUID generation when the database does not natively support it.\n         * These are included in the entity index order.\n         */\n        this.locallyGenerated = {};\n    }\n    Object.defineProperty(QueryExpressionMap.prototype, \"allOrderBys\", {\n        // -------------------------------------------------------------------------\n        // Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Get all ORDER BY queries - if order by is specified by user then it uses them,\n         * otherwise it uses default entity order by if it was set.\n         */\n        get: function () {\n            var _this = this;\n            if (!Object.keys(this.orderBys).length && this.mainAlias.hasMetadata && this.options.indexOf(\"disable-global-order\") === -1) {\n                var entityOrderBy_1 = this.mainAlias.metadata.orderBy || {};\n                return Object.keys(entityOrderBy_1).reduce(function (orderBy, key) {\n                    orderBy[_this.mainAlias.name + \".\" + key] = entityOrderBy_1[key];\n                    return orderBy;\n                }, {});\n            }\n            return this.orderBys;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a main alias and adds it to the current expression map.\n     */\n    QueryExpressionMap.prototype.setMainAlias = function (alias) {\n        // if main alias is already set then remove it from the array\n        // if (this.mainAlias)\n        //     this.aliases.splice(this.aliases.indexOf(this.mainAlias));\n        // set new main alias\n        this.mainAlias = alias;\n        return alias;\n    };\n    /**\n     * Creates a new alias and adds it to the current expression map.\n     */\n    QueryExpressionMap.prototype.createAlias = function (options) {\n        var aliasName = options.name;\n        if (!aliasName && options.tablePath)\n            aliasName = options.tablePath;\n        if (!aliasName && options.target instanceof Function)\n            aliasName = options.target.name;\n        if (!aliasName && typeof options.target === \"string\")\n            aliasName = options.target;\n        var alias = new Alias();\n        alias.type = options.type;\n        if (aliasName)\n            alias.name = aliasName;\n        if (options.metadata)\n            alias.metadata = options.metadata;\n        if (options.target && !alias.hasMetadata)\n            alias.metadata = this.connection.getMetadata(options.target);\n        if (options.tablePath)\n            alias.tablePath = options.tablePath;\n        if (options.subQuery)\n            alias.subQuery = options.subQuery;\n        this.aliases.push(alias);\n        return alias;\n    };\n    /**\n     * Finds alias with the given name.\n     * If alias was not found it throw an exception.\n     */\n    QueryExpressionMap.prototype.findAliasByName = function (aliasName) {\n        var alias = this.aliases.find(function (alias) { return alias.name === aliasName; });\n        if (!alias)\n            throw new TypeORMError(\"\\\"\" + aliasName + \"\\\" alias was not found. Maybe you forgot to join it?\");\n        return alias;\n    };\n    QueryExpressionMap.prototype.findColumnByAliasExpression = function (aliasExpression) {\n        var _a = __read(aliasExpression.split(\".\"), 2), aliasName = _a[0], propertyPath = _a[1];\n        var alias = this.findAliasByName(aliasName);\n        return alias.metadata.findColumnWithPropertyName(propertyPath);\n    };\n    Object.defineProperty(QueryExpressionMap.prototype, \"relationMetadata\", {\n        /**\n         * Gets relation metadata of the relation this query builder works with.\n         *\n         * todo: add proper exceptions\n         */\n        get: function () {\n            if (!this.mainAlias)\n                throw new TypeORMError(\"Entity to work with is not specified!\"); // todo: better message\n            var relationMetadata = this.mainAlias.metadata.findRelationWithPropertyPath(this.relationPropertyPath);\n            if (!relationMetadata)\n                throw new TypeORMError(\"Relation \" + this.relationPropertyPath + \" was not found in entity \" + this.mainAlias.name); // todo: better message\n            return relationMetadata;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Copies all properties of the current QueryExpressionMap into a new one.\n     * Useful when QueryBuilder needs to create a copy of itself.\n     */\n    QueryExpressionMap.prototype.clone = function () {\n        var _this = this;\n        var map = new QueryExpressionMap(this.connection);\n        map.queryType = this.queryType;\n        map.selects = this.selects.map(function (select) { return select; });\n        map.maxExecutionTime = this.maxExecutionTime;\n        map.selectDistinct = this.selectDistinct;\n        map.selectDistinctOn = this.selectDistinctOn;\n        this.aliases.forEach(function (alias) { return map.aliases.push(new Alias(alias)); });\n        map.mainAlias = this.mainAlias;\n        map.valuesSet = this.valuesSet;\n        map.returning = this.returning;\n        map.onConflict = this.onConflict;\n        map.onIgnore = this.onIgnore;\n        map.onUpdate = this.onUpdate;\n        map.joinAttributes = this.joinAttributes.map(function (join) { return new JoinAttribute(_this.connection, _this, join); });\n        map.relationIdAttributes = this.relationIdAttributes.map(function (relationId) { return new RelationIdAttribute(_this, relationId); });\n        map.relationCountAttributes = this.relationCountAttributes.map(function (relationCount) { return new RelationCountAttribute(_this, relationCount); });\n        map.wheres = this.wheres.map(function (where) { return (__assign({}, where)); });\n        map.havings = this.havings.map(function (having) { return (__assign({}, having)); });\n        map.orderBys = Object.assign({}, this.orderBys);\n        map.groupBys = this.groupBys.map(function (groupBy) { return groupBy; });\n        map.limit = this.limit;\n        map.offset = this.offset;\n        map.skip = this.skip;\n        map.take = this.take;\n        map.lockMode = this.lockMode;\n        map.lockVersion = this.lockVersion;\n        map.lockTables = this.lockTables;\n        map.withDeleted = this.withDeleted;\n        map.parameters = Object.assign({}, this.parameters);\n        map.disableEscaping = this.disableEscaping;\n        map.enableRelationIdValues = this.enableRelationIdValues;\n        map.extraAppendedAndWhereCondition = this.extraAppendedAndWhereCondition;\n        map.subQuery = this.subQuery;\n        map.aliasNamePrefixingEnabled = this.aliasNamePrefixingEnabled;\n        map.cache = this.cache;\n        map.cacheId = this.cacheId;\n        map.cacheDuration = this.cacheDuration;\n        map.relationPropertyPath = this.relationPropertyPath;\n        map.of = this.of;\n        map.insertColumns = this.insertColumns;\n        map.whereEntities = this.whereEntities;\n        map.updateEntity = this.updateEntity;\n        map.callListeners = this.callListeners;\n        map.useTransaction = this.useTransaction;\n        map.nativeParameters = Object.assign({}, this.nativeParameters);\n        map.comment = this.comment;\n        return map;\n    };\n    return QueryExpressionMap;\n}());\nexport { QueryExpressionMap };\n\n//# sourceMappingURL=QueryExpressionMap.js.map\n","import { __awaiter, __generator, __read, __spreadArray, __values } from \"tslib\";\nimport { QueryExpressionMap } from \"./QueryExpressionMap\";\nimport { Brackets } from \"./Brackets\";\nimport { PostgresDriver } from \"../driver/postgres/PostgresDriver\";\nimport { CockroachDriver } from \"../driver/cockroachdb/CockroachDriver\";\nimport { SqlServerDriver } from \"../driver/sqlserver/SqlServerDriver\";\nimport { OracleDriver } from \"../driver/oracle/OracleDriver\";\nimport { EntitySchema } from \"../entity-schema/EntitySchema\";\nimport { FindOperator } from \"../find-options/FindOperator\";\nimport { In } from \"../find-options/operator/In\";\nimport { EntityColumnNotFound } from \"../error/EntityColumnNotFound\";\nimport { TypeORMError } from \"../error\";\n// todo: completely cover query builder with tests\n// todo: entityOrProperty can be target name. implement proper behaviour if it is.\n// todo: check in persistment if id exist on object and throw exception (can be in partial selection?)\n// todo: fix problem with long aliases eg getMaxIdentifierLength\n// todo: fix replacing in .select(\"COUNT(post.id) AS cnt\") statement\n// todo: implement joinAlways in relations and relationId\n// todo: finish partial selection\n// todo: sugar methods like: .addCount and .selectCount, selectCountAndMap, selectSum, selectSumAndMap, ...\n// todo: implement @Select decorator\n// todo: add select and map functions\n// todo: implement relation/entity loading and setting them into properties within a separate query\n// .loadAndMap(\"post.categories\", \"post.categories\", qb => ...)\n// .loadAndMap(\"post.categories\", Category, qb => ...)\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nvar QueryBuilder = /** @class */ (function () {\n    /**\n     * QueryBuilder can be initialized from given Connection and QueryRunner objects or from given other QueryBuilder.\n     */\n    function QueryBuilder(connectionOrQueryBuilder, queryRunner) {\n        /**\n         * Memo to help keep place of current parameter index for `createParameter`\n         */\n        this.parameterIndex = 0;\n        if (connectionOrQueryBuilder instanceof QueryBuilder) {\n            this.connection = connectionOrQueryBuilder.connection;\n            this.queryRunner = connectionOrQueryBuilder.queryRunner;\n            this.expressionMap = connectionOrQueryBuilder.expressionMap.clone();\n        }\n        else {\n            this.connection = connectionOrQueryBuilder;\n            this.queryRunner = queryRunner;\n            this.expressionMap = new QueryExpressionMap(this.connection);\n        }\n    }\n    Object.defineProperty(QueryBuilder.prototype, \"alias\", {\n        // -------------------------------------------------------------------------\n        // Accessors\n        // -------------------------------------------------------------------------\n        /**\n         * Gets the main alias string used in this query builder.\n         */\n        get: function () {\n            if (!this.expressionMap.mainAlias)\n                throw new TypeORMError(\"Main alias is not set\"); // todo: better exception\n            return this.expressionMap.mainAlias.name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Creates SELECT query and selects given data.\n     * Replaces all previous selections if they exist.\n     */\n    QueryBuilder.prototype.select = function (selection, selectionAliasName) {\n        this.expressionMap.queryType = \"select\";\n        if (Array.isArray(selection)) {\n            this.expressionMap.selects = selection.map(function (selection) { return ({ selection: selection }); });\n        }\n        else if (selection) {\n            this.expressionMap.selects = [{ selection: selection, aliasName: selectionAliasName }];\n        }\n        // loading it dynamically because of circular issue\n        var SelectQueryBuilderCls = require(\"./SelectQueryBuilder\").SelectQueryBuilder;\n        if (this instanceof SelectQueryBuilderCls)\n            return this;\n        return new SelectQueryBuilderCls(this);\n    };\n    /**\n     * Creates INSERT query.\n     */\n    QueryBuilder.prototype.insert = function () {\n        this.expressionMap.queryType = \"insert\";\n        // loading it dynamically because of circular issue\n        var InsertQueryBuilderCls = require(\"./InsertQueryBuilder\").InsertQueryBuilder;\n        if (this instanceof InsertQueryBuilderCls)\n            return this;\n        return new InsertQueryBuilderCls(this);\n    };\n    /**\n     * Creates UPDATE query and applies given update values.\n     */\n    QueryBuilder.prototype.update = function (entityOrTableNameUpdateSet, maybeUpdateSet) {\n        var updateSet = maybeUpdateSet ? maybeUpdateSet : entityOrTableNameUpdateSet;\n        entityOrTableNameUpdateSet = entityOrTableNameUpdateSet instanceof EntitySchema ? entityOrTableNameUpdateSet.options.name : entityOrTableNameUpdateSet;\n        if (entityOrTableNameUpdateSet instanceof Function || typeof entityOrTableNameUpdateSet === \"string\") {\n            var mainAlias = this.createFromAlias(entityOrTableNameUpdateSet);\n            this.expressionMap.setMainAlias(mainAlias);\n        }\n        this.expressionMap.queryType = \"update\";\n        this.expressionMap.valuesSet = updateSet;\n        // loading it dynamically because of circular issue\n        var UpdateQueryBuilderCls = require(\"./UpdateQueryBuilder\").UpdateQueryBuilder;\n        if (this instanceof UpdateQueryBuilderCls)\n            return this;\n        return new UpdateQueryBuilderCls(this);\n    };\n    /**\n     * Creates DELETE query.\n     */\n    QueryBuilder.prototype.delete = function () {\n        this.expressionMap.queryType = \"delete\";\n        // loading it dynamically because of circular issue\n        var DeleteQueryBuilderCls = require(\"./DeleteQueryBuilder\").DeleteQueryBuilder;\n        if (this instanceof DeleteQueryBuilderCls)\n            return this;\n        return new DeleteQueryBuilderCls(this);\n    };\n    QueryBuilder.prototype.softDelete = function () {\n        this.expressionMap.queryType = \"soft-delete\";\n        // loading it dynamically because of circular issue\n        var SoftDeleteQueryBuilderCls = require(\"./SoftDeleteQueryBuilder\").SoftDeleteQueryBuilder;\n        if (this instanceof SoftDeleteQueryBuilderCls)\n            return this;\n        return new SoftDeleteQueryBuilderCls(this);\n    };\n    QueryBuilder.prototype.restore = function () {\n        this.expressionMap.queryType = \"restore\";\n        // loading it dynamically because of circular issue\n        var SoftDeleteQueryBuilderCls = require(\"./SoftDeleteQueryBuilder\").SoftDeleteQueryBuilder;\n        if (this instanceof SoftDeleteQueryBuilderCls)\n            return this;\n        return new SoftDeleteQueryBuilderCls(this);\n    };\n    /**\n     * Sets entity's relation with which this query builder gonna work.\n     */\n    QueryBuilder.prototype.relation = function (entityTargetOrPropertyPath, maybePropertyPath) {\n        var entityTarget = arguments.length === 2 ? entityTargetOrPropertyPath : undefined;\n        var propertyPath = arguments.length === 2 ? maybePropertyPath : entityTargetOrPropertyPath;\n        this.expressionMap.queryType = \"relation\";\n        this.expressionMap.relationPropertyPath = propertyPath;\n        if (entityTarget) {\n            var mainAlias = this.createFromAlias(entityTarget);\n            this.expressionMap.setMainAlias(mainAlias);\n        }\n        // loading it dynamically because of circular issue\n        var RelationQueryBuilderCls = require(\"./RelationQueryBuilder\").RelationQueryBuilder;\n        if (this instanceof RelationQueryBuilderCls)\n            return this;\n        return new RelationQueryBuilderCls(this);\n    };\n    /**\n     * Checks if given relation or relations exist in the entity.\n     * Returns true if relation exists, false otherwise.\n     *\n     * todo: move this method to manager? or create a shortcut?\n     */\n    QueryBuilder.prototype.hasRelation = function (target, relation) {\n        var entityMetadata = this.connection.getMetadata(target);\n        var relations = Array.isArray(relation) ? relation : [relation];\n        return relations.every(function (relation) {\n            return !!entityMetadata.findRelationWithPropertyPath(relation);\n        });\n    };\n    /**\n     * Check the existence of a parameter for this query builder.\n     */\n    QueryBuilder.prototype.hasParameter = function (key) {\n        var _a;\n        return ((_a = this.parentQueryBuilder) === null || _a === void 0 ? void 0 : _a.hasParameter(key)) || key in this.expressionMap.parameters;\n    };\n    /**\n     * Sets parameter name and its value.\n     *\n     * The key for this parametere may contain numbers, letters, underscores, or periods.\n     */\n    QueryBuilder.prototype.setParameter = function (key, value) {\n        if (value instanceof Function) {\n            throw new TypeORMError(\"Function parameter isn't supported in the parameters. Please check \\\"\" + key + \"\\\" parameter.\");\n        }\n        if (!key.match(/^([A-Za-z0-9_.]+)$/)) {\n            throw new TypeORMError(\"QueryBuilder parameter keys may only contain numbers, letters, underscores, or periods.\");\n        }\n        if (this.parentQueryBuilder) {\n            this.parentQueryBuilder.setParameter(key, value);\n        }\n        this.expressionMap.parameters[key] = value;\n        return this;\n    };\n    /**\n     * Adds all parameters from the given object.\n     */\n    QueryBuilder.prototype.setParameters = function (parameters) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.entries(parameters)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                this.setParameter(key, value);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    QueryBuilder.prototype.createParameter = function (value) {\n        var parameterName;\n        do {\n            parameterName = \"orm_param_\" + this.parameterIndex++;\n        } while (this.hasParameter(parameterName));\n        this.setParameter(parameterName, value);\n        return \":\" + parameterName;\n    };\n    /**\n     * Adds native parameters from the given object.\n     *\n     * @deprecated Use `setParameters` instead\n     */\n    QueryBuilder.prototype.setNativeParameters = function (parameters) {\n        var _this = this;\n        // set parent query builder parameters as well in sub-query mode\n        if (this.parentQueryBuilder) {\n            this.parentQueryBuilder.setNativeParameters(parameters);\n        }\n        Object.keys(parameters).forEach(function (key) {\n            _this.expressionMap.nativeParameters[key] = parameters[key];\n        });\n        return this;\n    };\n    /**\n     * Gets all parameters.\n     */\n    QueryBuilder.prototype.getParameters = function () {\n        var parameters = Object.assign({}, this.expressionMap.parameters);\n        // add discriminator column parameter if it exist\n        if (this.expressionMap.mainAlias && this.expressionMap.mainAlias.hasMetadata) {\n            var metadata = this.expressionMap.mainAlias.metadata;\n            if (metadata.discriminatorColumn && metadata.parentEntityMetadata) {\n                var values = metadata.childEntityMetadatas\n                    .filter(function (childMetadata) { return childMetadata.discriminatorColumn; })\n                    .map(function (childMetadata) { return childMetadata.discriminatorValue; });\n                values.push(metadata.discriminatorValue);\n                parameters[\"discriminatorColumnValues\"] = values;\n            }\n        }\n        return parameters;\n    };\n    /**\n     * Prints sql to stdout using console.log.\n     */\n    QueryBuilder.prototype.printSql = function () {\n        var _a = __read(this.getQueryAndParameters(), 2), query = _a[0], parameters = _a[1];\n        this.connection.logger.logQuery(query, parameters);\n        return this;\n    };\n    /**\n     * Gets generated sql that will be executed.\n     * Parameters in the query are escaped for the currently used driver.\n     */\n    QueryBuilder.prototype.getSql = function () {\n        return this.getQueryAndParameters()[0];\n    };\n    /**\n     * Gets query to be executed with all parameters used in it.\n     */\n    QueryBuilder.prototype.getQueryAndParameters = function () {\n        // this execution order is important because getQuery method generates this.expressionMap.nativeParameters values\n        var query = this.getQuery();\n        var parameters = this.getParameters();\n        return this.connection.driver.escapeQueryWithParameters(query, parameters, this.expressionMap.nativeParameters);\n    };\n    /**\n     * Executes sql generated by query builder and returns raw database results.\n     */\n    QueryBuilder.prototype.execute = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, sql, parameters, queryRunner;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = __read(this.getQueryAndParameters(), 2), sql = _a[0], parameters = _a[1];\n                        queryRunner = this.obtainQueryRunner();\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, , 3, 6]);\n                        return [4 /*yield*/, queryRunner.query(sql, parameters)];\n                    case 2: return [2 /*return*/, _b.sent()]; // await is needed here because we are using finally\n                    case 3:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 4:\n                        _b.sent();\n                        _b.label = 5;\n                    case 5: return [7 /*endfinally*/];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates a completely new query builder.\n     * Uses same query runner as current QueryBuilder.\n     */\n    QueryBuilder.prototype.createQueryBuilder = function () {\n        return new this.constructor(this.connection, this.queryRunner);\n    };\n    /**\n     * Clones query builder as it is.\n     * Note: it uses new query runner, if you want query builder that uses exactly same query runner,\n     * you can create query builder using its constructor, for example new SelectQueryBuilder(queryBuilder)\n     * where queryBuilder is cloned QueryBuilder.\n     */\n    QueryBuilder.prototype.clone = function () {\n        return new this.constructor(this);\n    };\n    /**\n     * Includes a Query comment in the query builder.  This is helpful for debugging purposes,\n     * such as finding a specific query in the database server's logs, or for categorization using\n     * an APM product.\n     */\n    QueryBuilder.prototype.comment = function (comment) {\n        this.expressionMap.comment = comment;\n        return this;\n    };\n    /**\n     * Disables escaping.\n     */\n    QueryBuilder.prototype.disableEscaping = function () {\n        this.expressionMap.disableEscaping = false;\n        return this;\n    };\n    /**\n     * Escapes table name, column name or alias name using current database's escaping character.\n     */\n    QueryBuilder.prototype.escape = function (name) {\n        if (!this.expressionMap.disableEscaping)\n            return name;\n        return this.connection.driver.escape(name);\n    };\n    /**\n     * Sets or overrides query builder's QueryRunner.\n     */\n    QueryBuilder.prototype.setQueryRunner = function (queryRunner) {\n        this.queryRunner = queryRunner;\n        return this;\n    };\n    /**\n     * Indicates if listeners and subscribers must be called before and after query execution.\n     * Enabled by default.\n     */\n    QueryBuilder.prototype.callListeners = function (enabled) {\n        this.expressionMap.callListeners = enabled;\n        return this;\n    };\n    /**\n     * If set to true the query will be wrapped into a transaction.\n     */\n    QueryBuilder.prototype.useTransaction = function (enabled) {\n        this.expressionMap.useTransaction = enabled;\n        return this;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets escaped table name with schema name if SqlServer driver used with custom\n     * schema name, otherwise returns escaped table name.\n     */\n    QueryBuilder.prototype.getTableName = function (tablePath) {\n        var _this = this;\n        return tablePath.split(\".\")\n            .map(function (i) {\n            // this condition need because in SQL Server driver when custom database name was specified and schema name was not, we got `dbName..tableName` string, and doesn't need to escape middle empty string\n            if (i === \"\")\n                return i;\n            return _this.escape(i);\n        }).join(\".\");\n    };\n    /**\n     * Gets name of the table where insert should be performed.\n     */\n    QueryBuilder.prototype.getMainTableName = function () {\n        if (!this.expressionMap.mainAlias)\n            throw new TypeORMError(\"Entity where values should be inserted is not specified. Call \\\"qb.into(entity)\\\" method to specify it.\");\n        if (this.expressionMap.mainAlias.hasMetadata)\n            return this.expressionMap.mainAlias.metadata.tablePath;\n        return this.expressionMap.mainAlias.tablePath;\n    };\n    /**\n     * Specifies FROM which entity's table select/update/delete will be executed.\n     * Also sets a main string alias of the selection data.\n     */\n    QueryBuilder.prototype.createFromAlias = function (entityTarget, aliasName) {\n        // if table has a metadata then find it to properly escape its properties\n        // const metadata = this.connection.entityMetadatas.find(metadata => metadata.tableName === tableName);\n        if (this.connection.hasMetadata(entityTarget)) {\n            var metadata = this.connection.getMetadata(entityTarget);\n            return this.expressionMap.createAlias({\n                type: \"from\",\n                name: aliasName,\n                metadata: this.connection.getMetadata(entityTarget),\n                tablePath: metadata.tablePath\n            });\n        }\n        else {\n            if (typeof entityTarget === \"string\") {\n                var isSubquery = entityTarget.substr(0, 1) === \"(\" && entityTarget.substr(-1) === \")\";\n                return this.expressionMap.createAlias({\n                    type: \"from\",\n                    name: aliasName,\n                    tablePath: !isSubquery ? entityTarget : undefined,\n                    subQuery: isSubquery ? entityTarget : undefined,\n                });\n            }\n            var subQueryBuilder = entityTarget(this.subQuery());\n            this.setParameters(subQueryBuilder.getParameters());\n            var subquery = subQueryBuilder.getQuery();\n            return this.expressionMap.createAlias({\n                type: \"from\",\n                name: aliasName,\n                subQuery: subquery\n            });\n        }\n    };\n    /**\n     * Replaces all entity's propertyName to name in the given statement.\n     */\n    QueryBuilder.prototype.replacePropertyNames = function (statement) {\n        var e_2, _a;\n        var _this = this;\n        // Escape special characters in regular expressions\n        // Per https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n        var escapeRegExp = function (s) { return s.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, \"\\\\$&\"); };\n        var _loop_1 = function (alias) {\n            var e_3, _d, e_4, _e, e_5, _f, e_6, _g, e_7, _h, e_8, _j;\n            if (!alias.hasMetadata)\n                return \"continue\";\n            var replaceAliasNamePrefix = this_1.expressionMap.aliasNamePrefixingEnabled ? alias.name + \".\" : \"\";\n            var replacementAliasNamePrefix = this_1.expressionMap.aliasNamePrefixingEnabled ? this_1.escape(alias.name) + \".\" : \"\";\n            var replacements = {};\n            try {\n                // Insert & overwrite the replacements from least to most relevant in our replacements object.\n                // To do this we iterate and overwrite in the order of relevance.\n                // Least to Most Relevant:\n                // * Relation Property Path to first join column key\n                // * Relation Property Path + Column Path\n                // * Column Database Name\n                // * Column Propety Name\n                // * Column Property Path\n                for (var _k = (e_3 = void 0, __values(alias.metadata.relations)), _l = _k.next(); !_l.done; _l = _k.next()) {\n                    var relation = _l.value;\n                    if (relation.joinColumns.length > 0)\n                        replacements[relation.propertyPath] = relation.joinColumns[0].databaseName;\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (_l && !_l.done && (_d = _k.return)) _d.call(_k);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            try {\n                for (var _m = (e_4 = void 0, __values(alias.metadata.relations)), _o = _m.next(); !_o.done; _o = _m.next()) {\n                    var relation = _o.value;\n                    try {\n                        for (var _p = (e_5 = void 0, __values(__spreadArray(__spreadArray([], __read(relation.joinColumns), false), __read(relation.inverseJoinColumns), false))), _q = _p.next(); !_q.done; _q = _p.next()) {\n                            var joinColumn = _q.value;\n                            var propertyKey = relation.propertyPath + \".\" + joinColumn.referencedColumn.propertyPath;\n                            replacements[propertyKey] = joinColumn.databaseName;\n                        }\n                    }\n                    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                    finally {\n                        try {\n                            if (_q && !_q.done && (_f = _p.return)) _f.call(_p);\n                        }\n                        finally { if (e_5) throw e_5.error; }\n                    }\n                }\n            }\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n            finally {\n                try {\n                    if (_o && !_o.done && (_e = _m.return)) _e.call(_m);\n                }\n                finally { if (e_4) throw e_4.error; }\n            }\n            try {\n                for (var _r = (e_6 = void 0, __values(alias.metadata.columns)), _s = _r.next(); !_s.done; _s = _r.next()) {\n                    var column = _s.value;\n                    replacements[column.databaseName] = column.databaseName;\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_s && !_s.done && (_g = _r.return)) _g.call(_r);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n            try {\n                for (var _t = (e_7 = void 0, __values(alias.metadata.columns)), _u = _t.next(); !_u.done; _u = _t.next()) {\n                    var column = _u.value;\n                    replacements[column.propertyName] = column.databaseName;\n                }\n            }\n            catch (e_7_1) { e_7 = { error: e_7_1 }; }\n            finally {\n                try {\n                    if (_u && !_u.done && (_h = _t.return)) _h.call(_t);\n                }\n                finally { if (e_7) throw e_7.error; }\n            }\n            try {\n                for (var _v = (e_8 = void 0, __values(alias.metadata.columns)), _w = _v.next(); !_w.done; _w = _v.next()) {\n                    var column = _w.value;\n                    replacements[column.propertyPath] = column.databaseName;\n                }\n            }\n            catch (e_8_1) { e_8 = { error: e_8_1 }; }\n            finally {\n                try {\n                    if (_w && !_w.done && (_j = _v.return)) _j.call(_v);\n                }\n                finally { if (e_8) throw e_8.error; }\n            }\n            var replacementKeys = Object.keys(replacements);\n            if (replacementKeys.length) {\n                statement = statement.replace(new RegExp(\n                // Avoid a lookbehind here since it's not well supported\n                \"([ =(]|^.{0})\" +\n                    (escapeRegExp(replaceAliasNamePrefix) + \"(\" + replacementKeys.map(escapeRegExp).join(\"|\") + \")\") +\n                    \"(?=[ =),]|.{0}$)\", \"gm\"), function (_, pre, p) {\n                    return \"\" + pre + replacementAliasNamePrefix + _this.escape(replacements[p]);\n                });\n            }\n        };\n        var this_1 = this;\n        try {\n            for (var _b = __values(this.expressionMap.aliases), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var alias = _c.value;\n                _loop_1(alias);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return statement;\n    };\n    QueryBuilder.prototype.createComment = function () {\n        if (!this.expressionMap.comment) {\n            return \"\";\n        }\n        // ANSI SQL 2003 support C style comments - comments that start with `/*` and end with `*/`\n        // In some dialects query nesting is available - but not all.  Because of this, we'll need\n        // to scrub \"ending\" characters from the SQL but otherwise we can leave everything else\n        // as-is and it should be valid.\n        return \"/* \" + this.expressionMap.comment.replace(\"*/\", \"\") + \" */ \";\n    };\n    /**\n     * Creates \"WHERE\" expression.\n     */\n    QueryBuilder.prototype.createWhereExpression = function () {\n        var conditionsArray = [];\n        var whereExpression = this.createWhereClausesExpression(this.expressionMap.wheres);\n        if (whereExpression.length > 0 && whereExpression !== \"1=1\") {\n            conditionsArray.push(this.replacePropertyNames(whereExpression));\n        }\n        if (this.expressionMap.mainAlias.hasMetadata) {\n            var metadata = this.expressionMap.mainAlias.metadata;\n            // Adds the global condition of \"non-deleted\" for the entity with delete date columns in select query.\n            if (this.expressionMap.queryType === \"select\" && !this.expressionMap.withDeleted && metadata.deleteDateColumn) {\n                var column = this.expressionMap.aliasNamePrefixingEnabled\n                    ? this.expressionMap.mainAlias.name + \".\" + metadata.deleteDateColumn.propertyName\n                    : metadata.deleteDateColumn.propertyName;\n                var condition = this.replacePropertyNames(column) + \" IS NULL\";\n                conditionsArray.push(condition);\n            }\n            if (metadata.discriminatorColumn && metadata.parentEntityMetadata) {\n                var column = this.expressionMap.aliasNamePrefixingEnabled\n                    ? this.expressionMap.mainAlias.name + \".\" + metadata.discriminatorColumn.databaseName\n                    : metadata.discriminatorColumn.databaseName;\n                var condition = this.replacePropertyNames(column) + \" IN (:...discriminatorColumnValues)\";\n                conditionsArray.push(condition);\n            }\n        }\n        if (this.expressionMap.extraAppendedAndWhereCondition) {\n            var condition = this.replacePropertyNames(this.expressionMap.extraAppendedAndWhereCondition);\n            conditionsArray.push(condition);\n        }\n        if (!conditionsArray.length) {\n            return \"\";\n        }\n        else if (conditionsArray.length === 1) {\n            return \" WHERE \" + conditionsArray[0];\n        }\n        else {\n            return \" WHERE ( \" + conditionsArray.join(\" ) AND ( \") + \" )\";\n        }\n    };\n    /**\n     * Creates \"RETURNING\" / \"OUTPUT\" expression.\n     */\n    QueryBuilder.prototype.createReturningExpression = function () {\n        var _this = this;\n        var columns = this.getReturningColumns();\n        var driver = this.connection.driver;\n        // also add columns we must auto-return to perform entity updation\n        // if user gave his own returning\n        if (typeof this.expressionMap.returning !== \"string\" &&\n            this.expressionMap.extraReturningColumns.length > 0 &&\n            driver.isReturningSqlSupported()) {\n            columns.push.apply(columns, __spreadArray([], __read(this.expressionMap.extraReturningColumns.filter(function (column) {\n                return columns.indexOf(column) === -1;\n            })), false));\n        }\n        if (columns.length) {\n            var columnsExpression = columns.map(function (column) {\n                var name = _this.escape(column.databaseName);\n                if (driver instanceof SqlServerDriver) {\n                    if (_this.expressionMap.queryType === \"insert\" || _this.expressionMap.queryType === \"update\" || _this.expressionMap.queryType === \"soft-delete\" || _this.expressionMap.queryType === \"restore\") {\n                        return \"INSERTED.\" + name;\n                    }\n                    else {\n                        return _this.escape(_this.getMainTableName()) + \".\" + name;\n                    }\n                }\n                else {\n                    return name;\n                }\n            }).join(\", \");\n            if (driver instanceof OracleDriver) {\n                columnsExpression += \" INTO \" + columns.map(function (column) {\n                    return _this.createParameter({ type: driver.columnTypeToNativeParameter(column.type), dir: driver.oracle.BIND_OUT });\n                }).join(\", \");\n            }\n            if (driver instanceof SqlServerDriver) {\n                if (this.expressionMap.queryType === \"insert\" || this.expressionMap.queryType === \"update\") {\n                    columnsExpression += \" INTO @OutputTable\";\n                }\n            }\n            return columnsExpression;\n        }\n        else if (typeof this.expressionMap.returning === \"string\") {\n            return this.expressionMap.returning;\n        }\n        return \"\";\n    };\n    /**\n     * If returning / output cause is set to array of column names,\n     * then this method will return all column metadatas of those column names.\n     */\n    QueryBuilder.prototype.getReturningColumns = function () {\n        var _this = this;\n        var columns = [];\n        if (Array.isArray(this.expressionMap.returning)) {\n            this.expressionMap.returning.forEach(function (columnName) {\n                if (_this.expressionMap.mainAlias.hasMetadata) {\n                    columns.push.apply(columns, __spreadArray([], __read(_this.expressionMap.mainAlias.metadata.findColumnsWithPropertyPath(columnName)), false));\n                }\n            });\n        }\n        return columns;\n    };\n    QueryBuilder.prototype.createWhereClausesExpression = function (clauses) {\n        var _this = this;\n        return clauses.map(function (clause, index) {\n            var expression = _this.createWhereConditionExpression(clause.condition);\n            switch (clause.type) {\n                case \"and\":\n                    return (index > 0 ? \"AND \" : \"\") + expression;\n                case \"or\":\n                    return (index > 0 ? \"OR \" : \"\") + expression;\n            }\n            return expression;\n        }).join(\" \").trim();\n    };\n    /**\n     * Computes given where argument - transforms to a where string all forms it can take.\n     */\n    QueryBuilder.prototype.createWhereConditionExpression = function (condition, alwaysWrap) {\n        if (alwaysWrap === void 0) { alwaysWrap = false; }\n        if (typeof condition === \"string\")\n            return condition;\n        if (Array.isArray(condition)) {\n            if (condition.length === 0) {\n                return \"1=1\";\n            }\n            // In the future we should probably remove this entire condition\n            // but for now to prevent any breaking changes it exists.\n            if (condition.length === 1 && !alwaysWrap) {\n                return this.createWhereClausesExpression(condition);\n            }\n            return \"(\" + this.createWhereClausesExpression(condition) + \")\";\n        }\n        var driver = this.connection.driver;\n        switch (condition.operator) {\n            case \"lessThan\":\n                return condition.parameters[0] + \" < \" + condition.parameters[1];\n            case \"lessThanOrEqual\":\n                return condition.parameters[0] + \" <= \" + condition.parameters[1];\n            case \"moreThan\":\n                return condition.parameters[0] + \" > \" + condition.parameters[1];\n            case \"moreThanOrEqual\":\n                return condition.parameters[0] + \" >= \" + condition.parameters[1];\n            case \"notEqual\":\n                return condition.parameters[0] + \" != \" + condition.parameters[1];\n            case \"equal\":\n                return condition.parameters[0] + \" = \" + condition.parameters[1];\n            case \"ilike\":\n                if (driver instanceof PostgresDriver || driver instanceof CockroachDriver) {\n                    return condition.parameters[0] + \" ILIKE \" + condition.parameters[1];\n                }\n                return \"UPPER(\" + condition.parameters[0] + \") LIKE UPPER(\" + condition.parameters[1] + \")\";\n            case \"like\":\n                return condition.parameters[0] + \" LIKE \" + condition.parameters[1];\n            case \"between\":\n                return condition.parameters[0] + \" BETWEEN \" + condition.parameters[1] + \" AND \" + condition.parameters[2];\n            case \"in\":\n                if (condition.parameters.length <= 1) {\n                    return \"0=1\";\n                }\n                return condition.parameters[0] + \" IN (\" + condition.parameters.slice(1).join(\", \") + \")\";\n            case \"any\":\n                return condition.parameters[0] + \" = ANY(\" + condition.parameters[1] + \")\";\n            case \"isNull\":\n                return condition.parameters[0] + \" IS NULL\";\n            case \"not\":\n                return \"NOT(\" + this.createWhereConditionExpression(condition.condition) + \")\";\n            case \"brackets\":\n                return \"\" + this.createWhereConditionExpression(condition.condition, true);\n        }\n        throw new TypeError(\"Unsupported FindOperator \" + FindOperator.constructor.name);\n    };\n    /**\n     * Creates \"WHERE\" condition for an in-ids condition.\n     */\n    QueryBuilder.prototype.getWhereInIdsCondition = function (ids) {\n        var _a;\n        var metadata = this.expressionMap.mainAlias.metadata;\n        var normalized = (Array.isArray(ids) ? ids : [ids]).map(function (id) { return metadata.ensureEntityIdMap(id); });\n        // using in(...ids) for single primary key entities\n        if (!metadata.hasMultiplePrimaryKeys) {\n            var primaryColumn_1 = metadata.primaryColumns[0];\n            // getEntityValue will try to transform `In`, it is a bug\n            // todo: remove this transformer check after #2390 is fixed\n            // This also fails for embedded & relation, so until that is fixed skip it.\n            if (!primaryColumn_1.transformer && !primaryColumn_1.relationMetadata && !primaryColumn_1.embeddedMetadata) {\n                return _a = {},\n                    _a[primaryColumn_1.propertyName] = In(normalized.map(function (id) { return primaryColumn_1.getEntityValue(id, false); })),\n                    _a;\n            }\n        }\n        return new Brackets(function (qb) {\n            var e_9, _a;\n            var _loop_2 = function (data) {\n                qb.orWhere(new Brackets(function (qb) { return qb.where(data); }));\n            };\n            try {\n                for (var normalized_1 = __values(normalized), normalized_1_1 = normalized_1.next(); !normalized_1_1.done; normalized_1_1 = normalized_1.next()) {\n                    var data = normalized_1_1.value;\n                    _loop_2(data);\n                }\n            }\n            catch (e_9_1) { e_9 = { error: e_9_1 }; }\n            finally {\n                try {\n                    if (normalized_1_1 && !normalized_1_1.done && (_a = normalized_1.return)) _a.call(normalized_1);\n                }\n                finally { if (e_9) throw e_9.error; }\n            }\n        });\n    };\n    QueryBuilder.prototype.findColumnsForPropertyPath = function (propertyPath) {\n        // Make a helper to iterate the entity & relations?\n        // Use that to set the correct alias?  Or the other way around?\n        // Start with the main alias with our property paths\n        var alias = this.expressionMap.mainAlias;\n        var root = [];\n        var propertyPathParts = propertyPath.split(\".\");\n        var _loop_3 = function () {\n            var part = propertyPathParts[0];\n            if (!(alias === null || alias === void 0 ? void 0 : alias.hasMetadata)) {\n                return \"break\";\n            }\n            if (alias.metadata.hasEmbeddedWithPropertyPath(part)) {\n                // If this is an embedded then we should combine the two as part of our lookup.\n                // Instead of just breaking, we keep going with this in case there's an embedded/relation\n                // inside an embedded.\n                propertyPathParts.unshift(propertyPathParts.shift() + \".\" + propertyPathParts.shift());\n                return \"continue\";\n            }\n            if (alias.metadata.hasRelationWithPropertyPath(part)) {\n                // If this is a relation then we should find the aliases\n                // that match the relation & then continue further down\n                // the property path\n                var joinAttr = this_2.expressionMap.joinAttributes.find(function (joinAttr) { return joinAttr.relationPropertyPath === part; });\n                if (!(joinAttr === null || joinAttr === void 0 ? void 0 : joinAttr.alias)) {\n                    var fullRelationPath = root.length > 0 ? root.join(\".\") + \".\" + part : part;\n                    throw new Error(\"Cannot find alias for relation at \" + fullRelationPath);\n                }\n                alias = joinAttr.alias;\n                root.push.apply(root, __spreadArray([], __read(part.split(\".\")), false));\n                propertyPathParts.shift();\n                return \"continue\";\n            }\n            return \"break\";\n        };\n        var this_2 = this;\n        while (propertyPathParts.length > 1) {\n            var state_1 = _loop_3();\n            if (state_1 === \"break\")\n                break;\n        }\n        if (!alias) {\n            throw new Error(\"Cannot find alias for property \" + propertyPath);\n        }\n        // Remaining parts are combined back and used to find the actual property path\n        var aliasPropertyPath = propertyPathParts.join(\".\");\n        var columns = alias.metadata.findColumnsWithPropertyPath(aliasPropertyPath);\n        if (!columns.length) {\n            throw new EntityColumnNotFound(propertyPath);\n        }\n        return [alias, root, columns];\n    };\n    /**\n     * Creates a property paths for a given ObjectLiteral.\n     */\n    QueryBuilder.prototype.createPropertyPath = function (metadata, entity, prefix) {\n        var e_10, _a;\n        if (prefix === void 0) { prefix = \"\"; }\n        var paths = [];\n        var _loop_4 = function (key) {\n            var path = prefix ? prefix + \".\" + key : key;\n            // There's times where we don't actually want to traverse deeper.\n            // If the value is a `FindOperator`, or null, or not an object, then we don't, for example.\n            if (entity[key] === null || typeof entity[key] !== \"object\" || entity[key] instanceof FindOperator) {\n                paths.push(path);\n                return \"continue\";\n            }\n            if (metadata.hasEmbeddedWithPropertyPath(path)) {\n                var subPaths = this_3.createPropertyPath(metadata, entity[key], path);\n                paths.push.apply(paths, __spreadArray([], __read(subPaths), false));\n                return \"continue\";\n            }\n            if (metadata.hasRelationWithPropertyPath(path)) {\n                var relation = metadata.findRelationWithPropertyPath(path);\n                // There's also cases where we don't want to return back all of the properties.\n                // These handles the situation where someone passes the model & we don't need to make\n                // a HUGE `where` to uniquely look up the entity.\n                // In the case of a *-to-one, there's only ever one possible entity on the other side\n                // so if the join columns are all defined we can return just the relation itself\n                // because it will fetch only the join columns and do the lookup.\n                if (relation.relationType === \"one-to-one\" || relation.relationType === \"many-to-one\") {\n                    var joinColumns = relation.joinColumns\n                        .map(function (j) { return j.referencedColumn; })\n                        .filter(function (j) { return !!j; });\n                    var hasAllJoinColumns = joinColumns.length > 0 && joinColumns.every(function (column) { return column.getEntityValue(entity[key], false); });\n                    if (hasAllJoinColumns) {\n                        paths.push(path);\n                        return \"continue\";\n                    }\n                }\n                if (relation.relationType === \"one-to-many\" || relation.relationType === \"many-to-many\") {\n                    throw new Error(\"Cannot query across \" + relation.relationType + \" for property \" + path);\n                }\n                // For any other case, if the `entity[key]` contains all of the primary keys we can do a\n                // lookup via these.  We don't need to look up via any other values 'cause these are\n                // the unique primary keys.\n                // This handles the situation where someone passes the model & we don't need to make\n                // a HUGE where.\n                var primaryColumns = relation.inverseEntityMetadata.primaryColumns;\n                var hasAllPrimaryKeys = primaryColumns.length > 0 && primaryColumns.every(function (column) { return column.getEntityValue(entity[key], false); });\n                if (hasAllPrimaryKeys) {\n                    var subPaths_1 = primaryColumns.map(function (column) { return path + \".\" + column.propertyPath; });\n                    paths.push.apply(paths, __spreadArray([], __read(subPaths_1), false));\n                    return \"continue\";\n                }\n                // If nothing else, just return every property that's being passed to us.\n                var subPaths = this_3.createPropertyPath(relation.inverseEntityMetadata, entity[key])\n                    .map(function (p) { return path + \".\" + p; });\n                paths.push.apply(paths, __spreadArray([], __read(subPaths), false));\n                return \"continue\";\n            }\n            paths.push(path);\n        };\n        var this_3 = this;\n        try {\n            for (var _b = __values(Object.keys(entity)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                _loop_4(key);\n            }\n        }\n        catch (e_10_1) { e_10 = { error: e_10_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_10) throw e_10.error; }\n        }\n        return paths;\n    };\n    QueryBuilder.prototype.getPredicates = function (where) {\n        var propertyPaths, propertyPaths_1, propertyPaths_1_1, propertyPath, _a, alias, aliasPropertyPath, columns, columns_1, columns_1_1, column, containedWhere, aliasPropertyPath_1, aliasPropertyPath_1_1, part, aliasPath, parameterValue, e_11_1, e_12_1, _b, _c, key, parameterValue, aliasPath, e_13_1;\n        var e_12, _d, e_11, _e, e_14, _f, e_13, _g;\n        return __generator(this, function (_h) {\n            switch (_h.label) {\n                case 0:\n                    if (!this.expressionMap.mainAlias.hasMetadata) return [3 /*break*/, 15];\n                    propertyPaths = this.createPropertyPath(this.expressionMap.mainAlias.metadata, where);\n                    _h.label = 1;\n                case 1:\n                    _h.trys.push([1, 12, 13, 14]);\n                    propertyPaths_1 = __values(propertyPaths), propertyPaths_1_1 = propertyPaths_1.next();\n                    _h.label = 2;\n                case 2:\n                    if (!!propertyPaths_1_1.done) return [3 /*break*/, 11];\n                    propertyPath = propertyPaths_1_1.value;\n                    _a = __read(this.findColumnsForPropertyPath(propertyPath), 3), alias = _a[0], aliasPropertyPath = _a[1], columns = _a[2];\n                    _h.label = 3;\n                case 3:\n                    _h.trys.push([3, 8, 9, 10]);\n                    columns_1 = (e_11 = void 0, __values(columns)), columns_1_1 = columns_1.next();\n                    _h.label = 4;\n                case 4:\n                    if (!!columns_1_1.done) return [3 /*break*/, 7];\n                    column = columns_1_1.value;\n                    containedWhere = where;\n                    try {\n                        for (aliasPropertyPath_1 = (e_14 = void 0, __values(aliasPropertyPath)), aliasPropertyPath_1_1 = aliasPropertyPath_1.next(); !aliasPropertyPath_1_1.done; aliasPropertyPath_1_1 = aliasPropertyPath_1.next()) {\n                            part = aliasPropertyPath_1_1.value;\n                            if (!containedWhere || !(part in containedWhere)) {\n                                containedWhere = {};\n                                break;\n                            }\n                            containedWhere = containedWhere[part];\n                        }\n                    }\n                    catch (e_14_1) { e_14 = { error: e_14_1 }; }\n                    finally {\n                        try {\n                            if (aliasPropertyPath_1_1 && !aliasPropertyPath_1_1.done && (_f = aliasPropertyPath_1.return)) _f.call(aliasPropertyPath_1);\n                        }\n                        finally { if (e_14) throw e_14.error; }\n                    }\n                    aliasPath = this.expressionMap.aliasNamePrefixingEnabled ?\n                        alias.name + \".\" + column.propertyPath :\n                        column.propertyPath;\n                    parameterValue = column.getEntityValue(containedWhere, true);\n                    return [4 /*yield*/, [aliasPath, parameterValue]];\n                case 5:\n                    _h.sent();\n                    _h.label = 6;\n                case 6:\n                    columns_1_1 = columns_1.next();\n                    return [3 /*break*/, 4];\n                case 7: return [3 /*break*/, 10];\n                case 8:\n                    e_11_1 = _h.sent();\n                    e_11 = { error: e_11_1 };\n                    return [3 /*break*/, 10];\n                case 9:\n                    try {\n                        if (columns_1_1 && !columns_1_1.done && (_e = columns_1.return)) _e.call(columns_1);\n                    }\n                    finally { if (e_11) throw e_11.error; }\n                    return [7 /*endfinally*/];\n                case 10:\n                    propertyPaths_1_1 = propertyPaths_1.next();\n                    return [3 /*break*/, 2];\n                case 11: return [3 /*break*/, 14];\n                case 12:\n                    e_12_1 = _h.sent();\n                    e_12 = { error: e_12_1 };\n                    return [3 /*break*/, 14];\n                case 13:\n                    try {\n                        if (propertyPaths_1_1 && !propertyPaths_1_1.done && (_d = propertyPaths_1.return)) _d.call(propertyPaths_1);\n                    }\n                    finally { if (e_12) throw e_12.error; }\n                    return [7 /*endfinally*/];\n                case 14: return [3 /*break*/, 22];\n                case 15:\n                    _h.trys.push([15, 20, 21, 22]);\n                    _b = __values(Object.keys(where)), _c = _b.next();\n                    _h.label = 16;\n                case 16:\n                    if (!!_c.done) return [3 /*break*/, 19];\n                    key = _c.value;\n                    parameterValue = where[key];\n                    aliasPath = this.expressionMap.aliasNamePrefixingEnabled ? this.alias + \".\" + key : key;\n                    return [4 /*yield*/, [aliasPath, parameterValue]];\n                case 17:\n                    _h.sent();\n                    _h.label = 18;\n                case 18:\n                    _c = _b.next();\n                    return [3 /*break*/, 16];\n                case 19: return [3 /*break*/, 22];\n                case 20:\n                    e_13_1 = _h.sent();\n                    e_13 = { error: e_13_1 };\n                    return [3 /*break*/, 22];\n                case 21:\n                    try {\n                        if (_c && !_c.done && (_g = _b.return)) _g.call(_b);\n                    }\n                    finally { if (e_13) throw e_13.error; }\n                    return [7 /*endfinally*/];\n                case 22: return [2 /*return*/];\n            }\n        });\n    };\n    QueryBuilder.prototype.getWherePredicateCondition = function (aliasPath, parameterValue) {\n        var e_15, _a;\n        if (parameterValue instanceof FindOperator) {\n            var parameters = [];\n            if (parameterValue.useParameter) {\n                if (parameterValue.objectLiteralParameters) {\n                    this.setParameters(parameterValue.objectLiteralParameters);\n                }\n                else if (parameterValue.multipleParameters) {\n                    try {\n                        for (var _b = __values(parameterValue.value), _c = _b.next(); !_c.done; _c = _b.next()) {\n                            var v = _c.value;\n                            parameters.push(this.createParameter(v));\n                        }\n                    }\n                    catch (e_15_1) { e_15 = { error: e_15_1 }; }\n                    finally {\n                        try {\n                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                        }\n                        finally { if (e_15) throw e_15.error; }\n                    }\n                }\n                else {\n                    parameters.push(this.createParameter(parameterValue.value));\n                }\n            }\n            if (parameterValue.type === \"raw\") {\n                if (parameterValue.getSql) {\n                    return parameterValue.getSql(aliasPath);\n                }\n                else {\n                    return {\n                        operator: \"equal\",\n                        parameters: [\n                            aliasPath,\n                            parameterValue.value,\n                        ]\n                    };\n                }\n            }\n            else if (parameterValue.type === \"not\") {\n                if (parameterValue.child) {\n                    return {\n                        operator: parameterValue.type,\n                        condition: this.getWherePredicateCondition(aliasPath, parameterValue.child),\n                    };\n                }\n                else {\n                    return {\n                        operator: \"notEqual\",\n                        parameters: __spreadArray([\n                            aliasPath\n                        ], __read(parameters), false)\n                    };\n                }\n            }\n            else {\n                return {\n                    operator: parameterValue.type,\n                    parameters: __spreadArray([\n                        aliasPath\n                    ], __read(parameters), false)\n                };\n            }\n        }\n        else if (parameterValue === null) {\n            return {\n                operator: \"isNull\",\n                parameters: [\n                    aliasPath,\n                ]\n            };\n        }\n        else {\n            return {\n                operator: \"equal\",\n                parameters: [\n                    aliasPath,\n                    this.createParameter(parameterValue),\n                ]\n            };\n        }\n    };\n    QueryBuilder.prototype.getWhereCondition = function (where) {\n        var e_16, _a, e_17, _b;\n        if (typeof where === \"string\") {\n            return where;\n        }\n        if (where instanceof Brackets) {\n            var whereQueryBuilder = this.createQueryBuilder();\n            whereQueryBuilder.parentQueryBuilder = this;\n            whereQueryBuilder.expressionMap.mainAlias = this.expressionMap.mainAlias;\n            whereQueryBuilder.expressionMap.aliasNamePrefixingEnabled = this.expressionMap.aliasNamePrefixingEnabled;\n            whereQueryBuilder.expressionMap.parameters = this.expressionMap.parameters;\n            whereQueryBuilder.expressionMap.nativeParameters = this.expressionMap.nativeParameters;\n            whereQueryBuilder.expressionMap.wheres = [];\n            where.whereFactory(whereQueryBuilder);\n            return {\n                operator: \"brackets\",\n                condition: whereQueryBuilder.expressionMap.wheres\n            };\n        }\n        if (where instanceof Function) {\n            return where(this);\n        }\n        var wheres = Array.isArray(where) ? where : [where];\n        var clauses = [];\n        try {\n            for (var wheres_1 = __values(wheres), wheres_1_1 = wheres_1.next(); !wheres_1_1.done; wheres_1_1 = wheres_1.next()) {\n                var where_1 = wheres_1_1.value;\n                var conditions = [];\n                try {\n                    // Filter the conditions and set up the parameter values\n                    for (var _c = (e_17 = void 0, __values(this.getPredicates(where_1))), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var _e = __read(_d.value, 2), aliasPath = _e[0], parameterValue = _e[1];\n                        conditions.push({\n                            type: \"and\",\n                            condition: this.getWherePredicateCondition(aliasPath, parameterValue),\n                        });\n                    }\n                }\n                catch (e_17_1) { e_17 = { error: e_17_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                    }\n                    finally { if (e_17) throw e_17.error; }\n                }\n                clauses.push({ type: \"or\", condition: conditions });\n            }\n        }\n        catch (e_16_1) { e_16 = { error: e_16_1 }; }\n        finally {\n            try {\n                if (wheres_1_1 && !wheres_1_1.done && (_a = wheres_1.return)) _a.call(wheres_1);\n            }\n            finally { if (e_16) throw e_16.error; }\n        }\n        if (clauses.length === 1) {\n            return clauses[0].condition;\n        }\n        return clauses;\n    };\n    /**\n     * Creates a query builder used to execute sql queries inside this query builder.\n     */\n    QueryBuilder.prototype.obtainQueryRunner = function () {\n        return this.queryRunner || this.connection.createQueryRunner();\n    };\n    return QueryBuilder;\n}());\nexport { QueryBuilder };\n\n//# sourceMappingURL=QueryBuilder.js.map\n","import { __read } from \"tslib\";\n/**\n * Helper utility functions for QueryBuilder.\n */\nvar QueryBuilderUtils = /** @class */ (function () {\n    function QueryBuilderUtils() {\n    }\n    /**\n     * Checks if given value is a string representation of alias property,\n     * e.g. \"post.category\" or \"post.id\".\n     */\n    QueryBuilderUtils.isAliasProperty = function (str) {\n        // alias property must be a string and must have a dot separator\n        if (typeof str !== \"string\" || str.indexOf(\".\") === -1)\n            return false;\n        // extra alias and its property relation\n        var _a = __read(str.split(\".\"), 2), aliasName = _a[0], propertyName = _a[1]; // todo: what about relations in embedded?\n        if (!aliasName || !propertyName)\n            return false;\n        // alias and property must be represented in a special format\n        // const aliasNameRegexp = /^[a-zA-Z0-9_-]+$/;\n        // if (!aliasNameRegexp.test(aliasName) || !aliasNameRegexp.test(propertyName))\n        //     return false;\n        // make sure string is not a subquery\n        if (str.indexOf(\"(\") !== -1 || str.indexOf(\")\") !== -1)\n            return false;\n        return true;\n    };\n    return QueryBuilderUtils;\n}());\nexport { QueryBuilderUtils };\n\n//# sourceMappingURL=QueryBuilderUtils.js.map\n","import { __awaiter, __generator } from \"tslib\";\nimport { SapDriver } from \"../driver/sap/SapDriver\";\nimport { OracleDriver } from \"../driver/oracle/OracleDriver\";\nimport { TypeORMError } from \"../error\";\n/**\n * Allows to work with entity relations and perform specific operations with those relations.\n *\n * todo: add transactions everywhere\n */\nvar RelationUpdater = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationUpdater(queryBuilder, expressionMap) {\n        this.queryBuilder = queryBuilder;\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs set or add operation on a relation.\n     */\n    RelationUpdater.prototype.update = function (value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var relation, updateSet, updateSet_1, ofs, parameters_1, conditions_1, condition, of_1, updateSet, junctionMetadata_1, ofs, values, firstColumnValues, secondColumnValues_1, bulkInserted_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        relation = this.expressionMap.relationMetadata;\n                        if (!(relation.isManyToOne || relation.isOneToOneOwner)) return [3 /*break*/, 2];\n                        updateSet = relation.joinColumns.reduce(function (updateSet, joinColumn) {\n                            var relationValue = value instanceof Object ? joinColumn.referencedColumn.getEntityValue(value) : value;\n                            joinColumn.setEntityValue(updateSet, relationValue);\n                            return updateSet;\n                        }, {});\n                        if (!this.expressionMap.of || (Array.isArray(this.expressionMap.of) && !this.expressionMap.of.length))\n                            return [2 /*return*/];\n                        return [4 /*yield*/, this.queryBuilder\n                                .createQueryBuilder()\n                                .update(relation.entityMetadata.target)\n                                .set(updateSet)\n                                .whereInIds(this.expressionMap.of)\n                                .execute()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 10];\n                    case 2:\n                        if (!((relation.isOneToOneNotOwner || relation.isOneToMany) && value === null)) return [3 /*break*/, 4];\n                        updateSet_1 = {};\n                        relation.inverseRelation.joinColumns.forEach(function (column) {\n                            updateSet_1[column.propertyName] = null;\n                        });\n                        ofs = Array.isArray(this.expressionMap.of) ? this.expressionMap.of : [this.expressionMap.of];\n                        parameters_1 = {};\n                        conditions_1 = [];\n                        ofs.forEach(function (of, ofIndex) {\n                            relation.inverseRelation.joinColumns.map(function (column, columnIndex) {\n                                var parameterName = \"joinColumn_\" + ofIndex + \"_\" + columnIndex;\n                                parameters_1[parameterName] = of instanceof Object ? column.referencedColumn.getEntityValue(of) : of;\n                                conditions_1.push(column.propertyPath + \" = :\" + parameterName);\n                            });\n                        });\n                        condition = conditions_1.map(function (str) { return \"(\" + str + \")\"; }).join(\" OR \");\n                        if (!condition)\n                            return [2 /*return*/];\n                        return [4 /*yield*/, this.queryBuilder\n                                .createQueryBuilder()\n                                .update(relation.inverseEntityMetadata.target)\n                                .set(updateSet_1)\n                                .where(condition)\n                                .setParameters(parameters_1)\n                                .execute()];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 10];\n                    case 4:\n                        if (!(relation.isOneToOneNotOwner || relation.isOneToMany)) return [3 /*break*/, 6];\n                        if (Array.isArray(this.expressionMap.of))\n                            throw new TypeORMError(\"You cannot update relations of multiple entities with the same related object. Provide a single entity into .of method.\");\n                        of_1 = this.expressionMap.of;\n                        updateSet = relation.inverseRelation.joinColumns.reduce(function (updateSet, joinColumn) {\n                            var relationValue = of_1 instanceof Object ? joinColumn.referencedColumn.getEntityValue(of_1) : of_1;\n                            joinColumn.setEntityValue(updateSet, relationValue);\n                            return updateSet;\n                        }, {});\n                        if (!value || (Array.isArray(value) && !value.length))\n                            return [2 /*return*/];\n                        return [4 /*yield*/, this.queryBuilder\n                                .createQueryBuilder()\n                                .update(relation.inverseEntityMetadata.target)\n                                .set(updateSet)\n                                .whereInIds(value)\n                                .execute()];\n                    case 5:\n                        _a.sent();\n                        return [3 /*break*/, 10];\n                    case 6:\n                        junctionMetadata_1 = relation.junctionEntityMetadata;\n                        ofs = Array.isArray(this.expressionMap.of) ? this.expressionMap.of : [this.expressionMap.of];\n                        values = Array.isArray(value) ? value : [value];\n                        firstColumnValues = relation.isManyToManyOwner ? ofs : values;\n                        secondColumnValues_1 = relation.isManyToManyOwner ? values : ofs;\n                        bulkInserted_1 = [];\n                        firstColumnValues.forEach(function (firstColumnVal) {\n                            secondColumnValues_1.forEach(function (secondColumnVal) {\n                                var inserted = {};\n                                junctionMetadata_1.ownerColumns.forEach(function (column) {\n                                    inserted[column.databaseName] = firstColumnVal instanceof Object ? column.referencedColumn.getEntityValue(firstColumnVal) : firstColumnVal;\n                                });\n                                junctionMetadata_1.inverseColumns.forEach(function (column) {\n                                    inserted[column.databaseName] = secondColumnVal instanceof Object ? column.referencedColumn.getEntityValue(secondColumnVal) : secondColumnVal;\n                                });\n                                bulkInserted_1.push(inserted);\n                            });\n                        });\n                        if (!bulkInserted_1.length)\n                            return [2 /*return*/];\n                        if (!(this.queryBuilder.connection.driver instanceof OracleDriver || this.queryBuilder.connection.driver instanceof SapDriver)) return [3 /*break*/, 8];\n                        return [4 /*yield*/, Promise.all(bulkInserted_1.map(function (value) {\n                                return _this.queryBuilder\n                                    .createQueryBuilder()\n                                    .insert()\n                                    .into(junctionMetadata_1.tableName)\n                                    .values(value)\n                                    .execute();\n                            }))];\n                    case 7:\n                        _a.sent();\n                        return [3 /*break*/, 10];\n                    case 8: return [4 /*yield*/, this.queryBuilder\n                            .createQueryBuilder()\n                            .insert()\n                            .into(junctionMetadata_1.tableName)\n                            .values(bulkInserted_1)\n                            .execute()];\n                    case 9:\n                        _a.sent();\n                        _a.label = 10;\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return RelationUpdater;\n}());\nexport { RelationUpdater };\n\n//# sourceMappingURL=RelationUpdater.js.map\n","import { __awaiter, __generator, __read, __spreadArray } from \"tslib\";\n/**\n * Allows to work with entity relations and perform specific operations with those relations.\n *\n * todo: add transactions everywhere\n */\nvar RelationRemover = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationRemover(queryBuilder, expressionMap) {\n        this.queryBuilder = queryBuilder;\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Performs remove operation on a relation.\n     */\n    RelationRemover.prototype.remove = function (value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var relation, ofs, values_1, updateSet_1, parameters_1, conditions_1, condition, junctionMetadata_1, ofs, values, firstColumnValues, secondColumnValues_1, parameters_2, conditions_2, condition;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        relation = this.expressionMap.relationMetadata;\n                        if (!relation.isOneToMany) return [3 /*break*/, 2];\n                        ofs = Array.isArray(this.expressionMap.of) ? this.expressionMap.of : [this.expressionMap.of];\n                        values_1 = Array.isArray(value) ? value : [value];\n                        updateSet_1 = {};\n                        relation.inverseRelation.joinColumns.forEach(function (column) {\n                            updateSet_1[column.propertyName] = null;\n                        });\n                        parameters_1 = {};\n                        conditions_1 = [];\n                        ofs.forEach(function (of, ofIndex) {\n                            conditions_1.push.apply(conditions_1, __spreadArray([], __read(values_1.map(function (value, valueIndex) {\n                                return __spreadArray(__spreadArray([], __read(relation.inverseRelation.joinColumns.map(function (column, columnIndex) {\n                                    var parameterName = \"joinColumn_\" + ofIndex + \"_\" + valueIndex + \"_\" + columnIndex;\n                                    parameters_1[parameterName] = of instanceof Object ? column.referencedColumn.getEntityValue(of) : of;\n                                    return column.propertyPath + \" = :\" + parameterName;\n                                })), false), __read(relation.inverseRelation.entityMetadata.primaryColumns.map(function (column, columnIndex) {\n                                    var parameterName = \"primaryColumn_\" + valueIndex + \"_\" + valueIndex + \"_\" + columnIndex;\n                                    parameters_1[parameterName] = value instanceof Object ? column.getEntityValue(value) : value;\n                                    return column.propertyPath + \" = :\" + parameterName;\n                                })), false).join(\" AND \");\n                            })), false));\n                        });\n                        condition = conditions_1.map(function (str) { return \"(\" + str + \")\"; }).join(\" OR \");\n                        if (!condition)\n                            return [2 /*return*/];\n                        return [4 /*yield*/, this.queryBuilder\n                                .createQueryBuilder()\n                                .update(relation.inverseEntityMetadata.target)\n                                .set(updateSet_1)\n                                .where(condition)\n                                .setParameters(parameters_1)\n                                .execute()];\n                    case 1:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 2:\n                        junctionMetadata_1 = relation.junctionEntityMetadata;\n                        ofs = Array.isArray(this.expressionMap.of) ? this.expressionMap.of : [this.expressionMap.of];\n                        values = Array.isArray(value) ? value : [value];\n                        firstColumnValues = relation.isManyToManyOwner ? ofs : values;\n                        secondColumnValues_1 = relation.isManyToManyOwner ? values : ofs;\n                        parameters_2 = {};\n                        conditions_2 = [];\n                        firstColumnValues.forEach(function (firstColumnVal, firstColumnValIndex) {\n                            conditions_2.push.apply(conditions_2, __spreadArray([], __read(secondColumnValues_1.map(function (secondColumnVal, secondColumnValIndex) {\n                                return __spreadArray(__spreadArray([], __read(junctionMetadata_1.ownerColumns.map(function (column, columnIndex) {\n                                    var parameterName = \"firstValue_\" + firstColumnValIndex + \"_\" + secondColumnValIndex + \"_\" + columnIndex;\n                                    parameters_2[parameterName] = firstColumnVal instanceof Object ? column.referencedColumn.getEntityValue(firstColumnVal) : firstColumnVal;\n                                    return column.databaseName + \" = :\" + parameterName;\n                                })), false), __read(junctionMetadata_1.inverseColumns.map(function (column, columnIndex) {\n                                    var parameterName = \"secondValue_\" + firstColumnValIndex + \"_\" + secondColumnValIndex + \"_\" + columnIndex;\n                                    parameters_2[parameterName] = secondColumnVal instanceof Object ? column.referencedColumn.getEntityValue(secondColumnVal) : secondColumnVal;\n                                    return column.databaseName + \" = :\" + parameterName;\n                                })), false).join(\" AND \");\n                            })), false));\n                        });\n                        condition = conditions_2.map(function (str) { return \"(\" + str + \")\"; }).join(\" OR \");\n                        return [4 /*yield*/, this.queryBuilder\n                                .createQueryBuilder()\n                                .delete()\n                                .from(junctionMetadata_1.tableName)\n                                .where(condition)\n                                .setParameters(parameters_2)\n                                .execute()];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return RelationRemover;\n}());\nexport { RelationRemover };\n\n//# sourceMappingURL=RelationRemover.js.map\n","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { QueryBuilder } from \"./QueryBuilder\";\nimport { RelationUpdater } from \"./RelationUpdater\";\nimport { RelationRemover } from \"./RelationRemover\";\nimport { TypeORMError } from \"../error\";\n/**\n * Allows to work with entity relations and perform specific operations with those relations.\n *\n * todo: add transactions everywhere\n */\nvar RelationQueryBuilder = /** @class */ (function (_super) {\n    __extends(RelationQueryBuilder, _super);\n    function RelationQueryBuilder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated sql query without parameters being replaced.\n     */\n    RelationQueryBuilder.prototype.getQuery = function () {\n        return \"\";\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Sets entity (target) which relations will be updated.\n     */\n    RelationQueryBuilder.prototype.of = function (entity) {\n        this.expressionMap.of = entity;\n        return this;\n    };\n    /**\n     * Sets entity relation's value.\n     * Value can be entity, entity id or entity id map (if entity has composite ids).\n     * Works only for many-to-one and one-to-one relations.\n     * For many-to-many and one-to-many relations use #add and #remove methods instead.\n     */\n    RelationQueryBuilder.prototype.set = function (value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var relation, updater;\n            return __generator(this, function (_a) {\n                relation = this.expressionMap.relationMetadata;\n                if (!this.expressionMap.of) // todo: move this check before relation query builder creation?\n                    throw new TypeORMError(\"Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.\");\n                if (relation.isManyToMany || relation.isOneToMany)\n                    throw new TypeORMError(\"Set operation is only supported for many-to-one and one-to-one relations. \" +\n                        (\"However given \\\"\" + relation.propertyPath + \"\\\" has \" + relation.relationType + \" relation. \") +\n                        \"Use .add() method instead.\");\n                // if there are multiple join columns then user must send id map as \"value\" argument. check if he really did it\n                if (relation.joinColumns &&\n                    relation.joinColumns.length > 1 &&\n                    (!(value instanceof Object) || Object.keys(value).length < relation.joinColumns.length))\n                    throw new TypeORMError(\"Value to be set into the relation must be a map of relation ids, for example: .set({ firstName: \\\"...\\\", lastName: \\\"...\\\" })\");\n                updater = new RelationUpdater(this, this.expressionMap);\n                return [2 /*return*/, updater.update(value)];\n            });\n        });\n    };\n    /**\n     * Adds (binds) given value to entity relation.\n     * Value can be entity, entity id or entity id map (if entity has composite ids).\n     * Value also can be array of entities, array of entity ids or array of entity id maps (if entity has composite ids).\n     * Works only for many-to-many and one-to-many relations.\n     * For many-to-one and one-to-one use #set method instead.\n     */\n    RelationQueryBuilder.prototype.add = function (value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var relation, updater;\n            return __generator(this, function (_a) {\n                if (Array.isArray(value) && value.length === 0)\n                    return [2 /*return*/];\n                relation = this.expressionMap.relationMetadata;\n                if (!this.expressionMap.of) // todo: move this check before relation query builder creation?\n                    throw new TypeORMError(\"Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.\");\n                if (relation.isManyToOne || relation.isOneToOne)\n                    throw new TypeORMError(\"Add operation is only supported for many-to-many and one-to-many relations. \" +\n                        (\"However given \\\"\" + relation.propertyPath + \"\\\" has \" + relation.relationType + \" relation. \") +\n                        \"Use .set() method instead.\");\n                // if there are multiple join columns then user must send id map as \"value\" argument. check if he really did it\n                if (relation.joinColumns &&\n                    relation.joinColumns.length > 1 &&\n                    (!(value instanceof Object) || Object.keys(value).length < relation.joinColumns.length))\n                    throw new TypeORMError(\"Value to be set into the relation must be a map of relation ids, for example: .set({ firstName: \\\"...\\\", lastName: \\\"...\\\" })\");\n                updater = new RelationUpdater(this, this.expressionMap);\n                return [2 /*return*/, updater.update(value)];\n            });\n        });\n    };\n    /**\n     * Removes (unbinds) given value from entity relation.\n     * Value can be entity, entity id or entity id map (if entity has composite ids).\n     * Value also can be array of entities, array of entity ids or array of entity id maps (if entity has composite ids).\n     * Works only for many-to-many and one-to-many relations.\n     * For many-to-one and one-to-one use #set method instead.\n     */\n    RelationQueryBuilder.prototype.remove = function (value) {\n        return __awaiter(this, void 0, void 0, function () {\n            var relation, remover;\n            return __generator(this, function (_a) {\n                if (Array.isArray(value) && value.length === 0)\n                    return [2 /*return*/];\n                relation = this.expressionMap.relationMetadata;\n                if (!this.expressionMap.of) // todo: move this check before relation query builder creation?\n                    throw new TypeORMError(\"Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.\");\n                if (relation.isManyToOne || relation.isOneToOne)\n                    throw new TypeORMError(\"Add operation is only supported for many-to-many and one-to-many relations. \" +\n                        (\"However given \\\"\" + relation.propertyPath + \"\\\" has \" + relation.relationType + \" relation. \") +\n                        \"Use .set(null) method instead.\");\n                remover = new RelationRemover(this, this.expressionMap);\n                return [2 /*return*/, remover.remove(value)];\n            });\n        });\n    };\n    /**\n     * Adds (binds) and removes (unbinds) given values to/from entity relation.\n     * Value can be entity, entity id or entity id map (if entity has composite ids).\n     * Value also can be array of entities, array of entity ids or array of entity id maps (if entity has composite ids).\n     * Works only for many-to-many and one-to-many relations.\n     * For many-to-one and one-to-one use #set method instead.\n     */\n    RelationQueryBuilder.prototype.addAndRemove = function (added, removed) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.remove(removed)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, this.add(added)];\n                    case 2:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Gets entity's relation id.\n    async getId(): Promise<any> {\n\n    }*/\n    /**\n     * Gets entity's relation ids.\n    async getIds(): Promise<any[]> {\n        return [];\n    }*/\n    /**\n     * Loads a single entity (relational) from the relation.\n     * You can also provide id of relational entity to filter by.\n     */\n    RelationQueryBuilder.prototype.loadOne = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.loadMany().then(function (results) { return results[0]; })];\n            });\n        });\n    };\n    /**\n     * Loads many entities (relational) from the relation.\n     * You can also provide ids of relational entities to filter by.\n     */\n    RelationQueryBuilder.prototype.loadMany = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var of, metadata;\n            return __generator(this, function (_a) {\n                of = this.expressionMap.of;\n                if (!(of instanceof Object)) {\n                    metadata = this.expressionMap.mainAlias.metadata;\n                    if (metadata.hasMultiplePrimaryKeys)\n                        throw new TypeORMError(\"Cannot load entity because only one primary key was specified, however entity contains multiple primary keys\");\n                    of = metadata.primaryColumns[0].createValueMap(of);\n                }\n                return [2 /*return*/, this.connection.relationLoader.load(this.expressionMap.relationMetadata, of, this.queryRunner)];\n            });\n        });\n    };\n    return RelationQueryBuilder;\n}(QueryBuilder));\nexport { RelationQueryBuilder };\n\n//# sourceMappingURL=RelationQueryBuilder.js.map\n","import { __awaiter, __generator } from \"tslib\";\nimport { OracleDriver } from \"../driver/oracle/OracleDriver\";\nimport { TypeORMError } from \"../error\";\n/**\n * Updates entity with returning results in the entity insert and update operations.\n */\nvar ReturningResultsEntityUpdator = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function ReturningResultsEntityUpdator(queryRunner, expressionMap) {\n        this.queryRunner = queryRunner;\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Updates entities with a special columns after updation query execution.\n     */\n    ReturningResultsEntityUpdator.prototype.update = function (updateResult, entities) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        metadata = this.expressionMap.mainAlias.metadata;\n                        return [4 /*yield*/, Promise.all(entities.map(function (entity, entityIndex) { return __awaiter(_this, void 0, void 0, function () {\n                                var result, returningColumns, updationColumns, entityId, loadedReturningColumns;\n                                var _this = this;\n                                return __generator(this, function (_a) {\n                                    switch (_a.label) {\n                                        case 0:\n                                            if (!this.queryRunner.connection.driver.isReturningSqlSupported()) return [3 /*break*/, 1];\n                                            if (this.queryRunner.connection.driver instanceof OracleDriver && Array.isArray(updateResult.raw) && this.expressionMap.extraReturningColumns.length > 0) {\n                                                updateResult.raw = updateResult.raw.reduce(function (newRaw, rawItem, rawItemIndex) {\n                                                    newRaw[_this.expressionMap.extraReturningColumns[rawItemIndex].databaseName] = rawItem[0];\n                                                    return newRaw;\n                                                }, {});\n                                            }\n                                            result = Array.isArray(updateResult.raw) ? updateResult.raw[entityIndex] : updateResult.raw;\n                                            returningColumns = this.queryRunner.connection.driver.createGeneratedMap(metadata, result);\n                                            if (returningColumns) {\n                                                this.queryRunner.manager.merge(metadata.target, entity, returningColumns);\n                                                updateResult.generatedMaps.push(returningColumns);\n                                            }\n                                            return [3 /*break*/, 3];\n                                        case 1:\n                                            updationColumns = this.getUpdationReturningColumns();\n                                            if (!(updationColumns.length > 0)) return [3 /*break*/, 3];\n                                            entityId = this.expressionMap.mainAlias.metadata.getEntityIdMap(entity);\n                                            if (!entityId)\n                                                throw new TypeORMError(\"Cannot update entity because entity id is not set in the entity.\");\n                                            return [4 /*yield*/, this.queryRunner.manager\n                                                    .createQueryBuilder()\n                                                    .select(metadata.primaryColumns.map(function (column) { return metadata.targetName + \".\" + column.propertyPath; }))\n                                                    .addSelect(this.getUpdationReturningColumns().map(function (column) { return metadata.targetName + \".\" + column.propertyPath; }))\n                                                    .from(metadata.target, metadata.targetName)\n                                                    .where(entityId)\n                                                    .setOption(\"create-pojo\") // use POJO because created object can contain default values, e.g. property = null and those properties maight be overridden by merge process\n                                                    .getOne()];\n                                        case 2:\n                                            loadedReturningColumns = _a.sent();\n                                            if (loadedReturningColumns) {\n                                                this.queryRunner.manager.merge(metadata.target, entity, loadedReturningColumns);\n                                                updateResult.generatedMaps.push(loadedReturningColumns);\n                                            }\n                                            _a.label = 3;\n                                        case 3: return [2 /*return*/];\n                                    }\n                                });\n                            }); }))];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Updates entities with a special columns after insertion query execution.\n     */\n    ReturningResultsEntityUpdator.prototype.insert = function (insertResult, entities) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, insertionColumns, generatedMaps, entityIds, returningResult_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        metadata = this.expressionMap.mainAlias.metadata;\n                        insertionColumns = this.getInsertionReturningColumns();\n                        generatedMaps = entities.map(function (entity, entityIndex) {\n                            if (_this.queryRunner.connection.driver instanceof OracleDriver && Array.isArray(insertResult.raw) && _this.expressionMap.extraReturningColumns.length > 0) {\n                                insertResult.raw = insertResult.raw.reduce(function (newRaw, rawItem, rawItemIndex) {\n                                    newRaw[_this.expressionMap.extraReturningColumns[rawItemIndex].databaseName] = rawItem[0];\n                                    return newRaw;\n                                }, {});\n                            }\n                            // get all values generated by a database for us\n                            var result = Array.isArray(insertResult.raw) ? insertResult.raw[entityIndex] : insertResult.raw;\n                            var generatedMap = _this.queryRunner.connection.driver.createGeneratedMap(metadata, result, entityIndex, entities.length) || {};\n                            if (entityIndex in _this.expressionMap.locallyGenerated) {\n                                _this.queryRunner.manager.merge(metadata.target, generatedMap, _this.expressionMap.locallyGenerated[entityIndex]);\n                            }\n                            _this.queryRunner.manager.merge(metadata.target, entity, generatedMap);\n                            return generatedMap;\n                        });\n                        if (!(this.queryRunner.connection.driver.isReturningSqlSupported() === false && insertionColumns.length > 0)) return [3 /*break*/, 2];\n                        entityIds = entities.map(function (entity) {\n                            var entityId = metadata.getEntityIdMap(entity);\n                            // We have to check for an empty `entityId` - if we don't, the query against the database\n                            // effectively drops the `where` clause entirely and the first record will be returned -\n                            // not what we want at all.\n                            if (!entityId)\n                                throw new TypeORMError(\"Cannot update entity because entity id is not set in the entity.\");\n                            return entityId;\n                        });\n                        return [4 /*yield*/, this.queryRunner.manager\n                                .createQueryBuilder()\n                                .select(metadata.primaryColumns.map(function (column) { return metadata.targetName + \".\" + column.propertyPath; }))\n                                .addSelect(insertionColumns.map(function (column) { return metadata.targetName + \".\" + column.propertyPath; }))\n                                .from(metadata.target, metadata.targetName)\n                                .where(entityIds)\n                                .setOption(\"create-pojo\") // use POJO because created object can contain default values, e.g. property = null and those properties maight be overridden by merge process\n                                .getMany()];\n                    case 1:\n                        returningResult_1 = _a.sent();\n                        entities.forEach(function (entity, entityIndex) {\n                            _this.queryRunner.manager.merge(metadata.target, generatedMaps[entityIndex], returningResult_1[entityIndex]);\n                            _this.queryRunner.manager.merge(metadata.target, entity, returningResult_1[entityIndex]);\n                        });\n                        _a.label = 2;\n                    case 2:\n                        entities.forEach(function (entity, entityIndex) {\n                            var entityId = metadata.getEntityIdMap(entity);\n                            insertResult.identifiers.push(entityId);\n                            insertResult.generatedMaps.push(generatedMaps[entityIndex]);\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Columns we need to be returned from the database when we insert entity.\n     */\n    ReturningResultsEntityUpdator.prototype.getInsertionReturningColumns = function () {\n        // for databases which support returning statement we need to return extra columns like id\n        // for other databases we don't need to return id column since its returned by a driver already\n        var needToCheckGenerated = this.queryRunner.connection.driver.isReturningSqlSupported();\n        // filter out the columns of which we need database inserted values to update our entity\n        return this.expressionMap.mainAlias.metadata.columns.filter(function (column) {\n            return column.default !== undefined ||\n                (needToCheckGenerated && column.isGenerated) ||\n                column.isCreateDate ||\n                column.isUpdateDate ||\n                column.isDeleteDate ||\n                column.isVersion;\n        });\n    };\n    /**\n     * Columns we need to be returned from the database when we update entity.\n     */\n    ReturningResultsEntityUpdator.prototype.getUpdationReturningColumns = function () {\n        return this.expressionMap.mainAlias.metadata.columns.filter(function (column) {\n            return column.isUpdateDate || column.isVersion;\n        });\n    };\n    return ReturningResultsEntityUpdator;\n}());\nexport { ReturningResultsEntityUpdator };\n\n//# sourceMappingURL=ReturningResultsEntityUpdator.js.map\n","import { __read, __spreadArray } from \"tslib\";\nimport { OrmUtils } from \"../../util/OrmUtils\";\nimport { DriverUtils } from \"../../driver/DriverUtils\";\n/**\n * Transforms raw sql results returned from the database into entity object.\n * Entity is constructed based on its entity metadata.\n */\nvar RawSqlResultsToEntityTransformer = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RawSqlResultsToEntityTransformer(expressionMap, driver, rawRelationIdResults, rawRelationCountResults, queryRunner) {\n        this.expressionMap = expressionMap;\n        this.driver = driver;\n        this.rawRelationIdResults = rawRelationIdResults;\n        this.rawRelationCountResults = rawRelationCountResults;\n        this.queryRunner = queryRunner;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Since db returns a duplicated rows of the data where accuracies of the same object can be duplicated\n     * we need to group our result and we must have some unique id (primary key in our case)\n     */\n    RawSqlResultsToEntityTransformer.prototype.transform = function (rawResults, alias) {\n        var _this = this;\n        var group = this.group(rawResults, alias);\n        var entities = [];\n        group.forEach(function (results) {\n            var entity = _this.transformRawResultsGroup(results, alias);\n            if (entity !== undefined && !Object.values(entity).every(function (value) { return value === null; }))\n                entities.push(entity);\n        });\n        return entities;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Groups given raw results by ids of given alias.\n     */\n    RawSqlResultsToEntityTransformer.prototype.group = function (rawResults, alias) {\n        var _this = this;\n        var map = new Map();\n        var keys = [];\n        if (alias.metadata.tableType === \"view\") {\n            keys.push.apply(keys, __spreadArray([], __read(alias.metadata.columns.map(function (column) { return DriverUtils.buildAlias(_this.driver, alias.name, column.databaseName); })), false));\n        }\n        else {\n            keys.push.apply(keys, __spreadArray([], __read(alias.metadata.primaryColumns.map(function (column) { return DriverUtils.buildAlias(_this.driver, alias.name, column.databaseName); })), false));\n        }\n        rawResults.forEach(function (rawResult) {\n            var id = keys.map(function (key) {\n                var keyValue = rawResult[key];\n                if (Buffer.isBuffer(keyValue)) {\n                    return keyValue.toString(\"hex\");\n                }\n                if (typeof keyValue === \"object\") {\n                    return JSON.stringify(keyValue);\n                }\n                return keyValue;\n            }).join(\"_\"); // todo: check partial\n            var items = map.get(id);\n            if (!items) {\n                map.set(id, [rawResult]);\n            }\n            else {\n                items.push(rawResult);\n            }\n        });\n        return map;\n    };\n    /**\n     * Transforms set of data results into single entity.\n     */\n    RawSqlResultsToEntityTransformer.prototype.transformRawResultsGroup = function (rawResults, alias) {\n        var _this = this;\n        // let hasColumns = false; // , hasEmbeddedColumns = false, hasParentColumns = false, hasParentEmbeddedColumns = false;\n        var metadata = alias.metadata;\n        if (metadata.discriminatorColumn) {\n            var discriminatorValues_1 = rawResults.map(function (result) { return result[DriverUtils.buildAlias(_this.driver, alias.name, alias.metadata.discriminatorColumn.databaseName)]; });\n            var discriminatorMetadata = metadata.childEntityMetadatas.find(function (childEntityMetadata) {\n                return typeof discriminatorValues_1.find(function (value) { return value === childEntityMetadata.discriminatorValue; }) !== 'undefined';\n            });\n            if (discriminatorMetadata)\n                metadata = discriminatorMetadata;\n        }\n        var entity = this.expressionMap.options.indexOf(\"create-pojo\") !== -1 ? {} : metadata.create(this.queryRunner, { fromDeserializer: true });\n        // get value from columns selections and put them into newly created entity\n        var hasColumns = this.transformColumns(rawResults, alias, entity, metadata);\n        var hasRelations = this.transformJoins(rawResults, entity, alias, metadata);\n        var hasRelationIds = this.transformRelationIds(rawResults, alias, entity, metadata);\n        var hasRelationCounts = this.transformRelationCounts(rawResults, alias, entity);\n        // if we have at least one selected column then return this entity\n        // since entity must have at least primary columns to be really selected and transformed into entity\n        if (hasColumns)\n            return entity;\n        // if we don't have any selected column we should not return entity,\n        // except for the case when entity only contain a primary column as a relation to another entity\n        // in this case its absolutely possible our entity to not have any columns except a single relation\n        var hasOnlyVirtualPrimaryColumns = metadata.primaryColumns.filter(function (column) { return column.isVirtual === false; }).length === 0; // todo: create metadata.hasOnlyVirtualPrimaryColumns\n        if (hasOnlyVirtualPrimaryColumns && (hasRelations || hasRelationIds || hasRelationCounts))\n            return entity;\n        return undefined;\n    };\n    // get value from columns selections and put them into object\n    RawSqlResultsToEntityTransformer.prototype.transformColumns = function (rawResults, alias, entity, metadata) {\n        var _this = this;\n        var hasData = false;\n        metadata.columns.forEach(function (column) {\n            // if table inheritance is used make sure this column is not child's column\n            if (metadata.childEntityMetadatas.length > 0 && metadata.childEntityMetadatas.map(function (metadata) { return metadata.target; }).indexOf(column.target) !== -1)\n                return;\n            var value = rawResults[0][DriverUtils.buildAlias(_this.driver, alias.name, column.databaseName)];\n            if (value === undefined || column.isVirtual)\n                return;\n            // if user does not selected the whole entity or he used partial selection and does not select this particular column\n            // then we don't add this column and its value into the entity\n            if (!_this.expressionMap.selects.find(function (select) { return select.selection === alias.name || select.selection === alias.name + \".\" + column.propertyPath; }))\n                return;\n            column.setEntityValue(entity, _this.driver.prepareHydratedValue(value, column));\n            if (value !== null) // we don't mark it as has data because if we will have all nulls in our object - we don't need such object\n                hasData = true;\n        });\n        return hasData;\n    };\n    /**\n     * Transforms joined entities in the given raw results by a given alias and stores to the given (parent) entity\n     */\n    RawSqlResultsToEntityTransformer.prototype.transformJoins = function (rawResults, entity, alias, metadata) {\n        var _this = this;\n        var hasData = false;\n        // let discriminatorValue: string = \"\";\n        // if (metadata.discriminatorColumn)\n        //     discriminatorValue = rawResults[0][DriverUtils.buildAlias(this.connection.driver, alias.name, alias.metadata.discriminatorColumn!.databaseName)];\n        this.expressionMap.joinAttributes.forEach(function (join) {\n            // skip joins without metadata\n            if (!join.metadata)\n                return;\n            // if simple left or inner join was performed without selection then we don't need to do anything\n            if (!join.isSelected)\n                return;\n            // this check need to avoid setting properties than not belong to entity when single table inheritance used. (todo: check if we still need it)\n            // const metadata = metadata.childEntityMetadatas.find(childEntityMetadata => discriminatorValue === childEntityMetadata.discriminatorValue);\n            if (join.relation && !metadata.relations.find(function (relation) { return relation === join.relation; }))\n                return;\n            // some checks to make sure this join is for current alias\n            if (join.mapToProperty) {\n                if (join.mapToPropertyParentAlias !== alias.name)\n                    return;\n            }\n            else {\n                if (!join.relation || join.parentAlias !== alias.name || join.relationPropertyPath !== join.relation.propertyPath)\n                    return;\n            }\n            // transform joined data into entities\n            var result = _this.transform(rawResults, join.alias);\n            result = !join.isMany ? result[0] : result;\n            result = !join.isMany && result === undefined ? null : result; // this is needed to make relations to return null when its joined but nothing was found in the database\n            if (result === undefined) // if nothing was joined then simply return\n                return;\n            // if join was mapped to some property then save result to that property\n            if (join.mapToPropertyPropertyName) {\n                entity[join.mapToPropertyPropertyName] = result; // todo: fix embeds\n            }\n            else { // otherwise set to relation\n                join.relation.setEntityValue(entity, result);\n            }\n            hasData = true;\n        });\n        return hasData;\n    };\n    RawSqlResultsToEntityTransformer.prototype.transformRelationIds = function (rawSqlResults, alias, entity, metadata) {\n        var _this = this;\n        var hasData = false;\n        this.rawRelationIdResults.forEach(function (rawRelationIdResult) {\n            if (rawRelationIdResult.relationIdAttribute.parentAlias !== alias.name)\n                return;\n            var relation = rawRelationIdResult.relationIdAttribute.relation;\n            var valueMap = _this.createValueMapFromJoinColumns(relation, rawRelationIdResult.relationIdAttribute.parentAlias, rawSqlResults);\n            if (valueMap === undefined || valueMap === null)\n                return;\n            var idMaps = rawRelationIdResult.results.map(function (result) {\n                var entityPrimaryIds = _this.extractEntityPrimaryIds(relation, result);\n                if (OrmUtils.compareIds(entityPrimaryIds, valueMap) === false)\n                    return;\n                var columns;\n                if (relation.isManyToOne || relation.isOneToOneOwner) {\n                    columns = relation.joinColumns.map(function (joinColumn) { return joinColumn; });\n                }\n                else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n                    columns = relation.inverseEntityMetadata.primaryColumns.map(function (joinColumn) { return joinColumn; });\n                    // columns = relation.inverseRelation!.joinColumns.map(joinColumn => joinColumn.referencedColumn!); //.inverseEntityMetadata.primaryColumns.map(joinColumn => joinColumn);\n                }\n                else { // ManyToMany\n                    if (relation.isOwning) {\n                        columns = relation.inverseJoinColumns.map(function (joinColumn) { return joinColumn; });\n                    }\n                    else {\n                        columns = relation.inverseRelation.joinColumns.map(function (joinColumn) { return joinColumn; });\n                    }\n                }\n                var idMap = columns.reduce(function (idMap, column) {\n                    var value = result[column.databaseName];\n                    if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n                        if (column.isVirtual && column.referencedColumn && column.referencedColumn.propertyName !== column.propertyName) // if column is a relation\n                            value = column.referencedColumn.createValueMap(value);\n                        return OrmUtils.mergeDeep(idMap, column.createValueMap(value));\n                    }\n                    else {\n                        if (column.referencedColumn.referencedColumn) // if column is a relation\n                            value = column.referencedColumn.referencedColumn.createValueMap(value);\n                        return OrmUtils.mergeDeep(idMap, column.referencedColumn.createValueMap(value));\n                    }\n                }, {});\n                if (columns.length === 1 && rawRelationIdResult.relationIdAttribute.disableMixedMap === false) {\n                    if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n                        return columns[0].getEntityValue(idMap);\n                    }\n                    else {\n                        return columns[0].referencedColumn.getEntityValue(idMap);\n                    }\n                }\n                return idMap;\n            }).filter(function (result) { return result !== undefined; });\n            var properties = rawRelationIdResult.relationIdAttribute.mapToPropertyPropertyPath.split(\".\");\n            var mapToProperty = function (properties, map, value) {\n                var property = properties.shift();\n                if (property && properties.length === 0) {\n                    map[property] = value;\n                    return map;\n                }\n                else if (property && properties.length > 0) {\n                    mapToProperty(properties, map[property], value);\n                }\n                else {\n                    return map;\n                }\n            };\n            if (relation.isOneToOne || relation.isManyToOne) {\n                if (idMaps[0] !== undefined) {\n                    mapToProperty(properties, entity, idMaps[0]);\n                    hasData = true;\n                }\n            }\n            else {\n                mapToProperty(properties, entity, idMaps);\n                if (idMaps.length > 0) {\n                    hasData = true;\n                }\n            }\n        });\n        return hasData;\n    };\n    RawSqlResultsToEntityTransformer.prototype.transformRelationCounts = function (rawSqlResults, alias, entity) {\n        var _this = this;\n        var hasData = false;\n        this.rawRelationCountResults\n            .filter(function (rawRelationCountResult) { return rawRelationCountResult.relationCountAttribute.parentAlias === alias.name; })\n            .forEach(function (rawRelationCountResult) {\n            var relation = rawRelationCountResult.relationCountAttribute.relation;\n            var referenceColumnName;\n            if (relation.isOneToMany) {\n                referenceColumnName = relation.inverseRelation.joinColumns[0].referencedColumn.databaseName; // todo: fix joinColumns[0]\n            }\n            else {\n                referenceColumnName = relation.isOwning ? relation.joinColumns[0].referencedColumn.databaseName : relation.inverseRelation.joinColumns[0].referencedColumn.databaseName;\n            }\n            var referenceColumnValue = rawSqlResults[0][DriverUtils.buildAlias(_this.driver, alias.name, referenceColumnName)]; // we use zero index since its grouped data // todo: selection with alias for entity columns wont work\n            if (referenceColumnValue !== undefined && referenceColumnValue !== null) {\n                entity[rawRelationCountResult.relationCountAttribute.mapToPropertyPropertyName] = 0;\n                rawRelationCountResult.results\n                    .filter(function (result) { return result[\"parentId\"] === referenceColumnValue; })\n                    .forEach(function (result) {\n                    entity[rawRelationCountResult.relationCountAttribute.mapToPropertyPropertyName] = parseInt(result[\"cnt\"]);\n                    hasData = true;\n                });\n            }\n        });\n        return hasData;\n    };\n    RawSqlResultsToEntityTransformer.prototype.createValueMapFromJoinColumns = function (relation, parentAlias, rawSqlResults) {\n        var _this = this;\n        var columns;\n        if (relation.isManyToOne || relation.isOneToOneOwner) {\n            columns = relation.entityMetadata.primaryColumns.map(function (joinColumn) { return joinColumn; });\n        }\n        else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n            columns = relation.inverseRelation.joinColumns.map(function (joinColumn) { return joinColumn; });\n        }\n        else {\n            if (relation.isOwning) {\n                columns = relation.joinColumns.map(function (joinColumn) { return joinColumn; });\n            }\n            else {\n                columns = relation.inverseRelation.inverseJoinColumns.map(function (joinColumn) { return joinColumn; });\n            }\n        }\n        return columns.reduce(function (valueMap, column) {\n            rawSqlResults.forEach(function (rawSqlResult) {\n                if (relation.isManyToOne || relation.isOneToOneOwner) {\n                    valueMap[column.databaseName] = _this.driver.prepareHydratedValue(rawSqlResult[DriverUtils.buildAlias(_this.driver, parentAlias, column.databaseName)], column);\n                }\n                else {\n                    valueMap[column.databaseName] = _this.driver.prepareHydratedValue(rawSqlResult[DriverUtils.buildAlias(_this.driver, parentAlias, column.referencedColumn.databaseName)], column);\n                }\n            });\n            return valueMap;\n        }, {});\n    };\n    RawSqlResultsToEntityTransformer.prototype.extractEntityPrimaryIds = function (relation, relationIdRawResult) {\n        var columns;\n        if (relation.isManyToOne || relation.isOneToOneOwner) {\n            columns = relation.entityMetadata.primaryColumns.map(function (joinColumn) { return joinColumn; });\n        }\n        else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n            columns = relation.inverseRelation.joinColumns.map(function (joinColumn) { return joinColumn; });\n        }\n        else {\n            if (relation.isOwning) {\n                columns = relation.joinColumns.map(function (joinColumn) { return joinColumn; });\n            }\n            else {\n                columns = relation.inverseRelation.inverseJoinColumns.map(function (joinColumn) { return joinColumn; });\n            }\n        }\n        return columns.reduce(function (data, column) {\n            data[column.databaseName] = relationIdRawResult[column.databaseName];\n            return data;\n        }, {});\n    };\n    return RawSqlResultsToEntityTransformer;\n}());\nexport { RawSqlResultsToEntityTransformer };\n\n//# sourceMappingURL=RawSqlResultsToEntityTransformer.js.map\n","import { __awaiter, __generator, __read, __spreadArray } from \"tslib\";\nimport { DriverUtils } from \"../../driver/DriverUtils\";\nimport { TypeORMError } from \"../../error/TypeORMError\";\nvar RelationIdLoader = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationIdLoader(connection, queryRunner, relationIdAttributes) {\n        this.connection = connection;\n        this.queryRunner = queryRunner;\n        this.relationIdAttributes = relationIdAttributes;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    RelationIdLoader.prototype.load = function (rawEntities) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promises;\n            var _this = this;\n            return __generator(this, function (_a) {\n                promises = this.relationIdAttributes.map(function (relationIdAttr) { return __awaiter(_this, void 0, void 0, function () {\n                    var duplicates_1, results, relation_1, joinColumns_1, table, tableName, tableAlias_1, duplicates_2, parameters_1, condition, qb_1, results, relation, joinColumns_2, inverseJoinColumns_1, junctionAlias_1, inverseSideTableName, inverseSideTableAlias_1, junctionTableName, mappedColumns, parameters_2, duplicates_3, joinColumnConditions, inverseJoinColumnCondition_1, condition, qb_2, results;\n                    var _this = this;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                if (!(relationIdAttr.relation.isManyToOne || relationIdAttr.relation.isOneToOneOwner)) return [3 /*break*/, 1];\n                                // example: Post and Tag\n                                // loadRelationIdAndMap(\"post.tagId\", \"post.tag\")\n                                // we expect it to load id of tag\n                                if (relationIdAttr.queryBuilderFactory)\n                                    throw new TypeORMError(\"Additional condition can not be used with ManyToOne or OneToOne owner relations.\");\n                                duplicates_1 = [];\n                                results = rawEntities.map(function (rawEntity) {\n                                    var result = {};\n                                    var duplicateParts = [];\n                                    relationIdAttr.relation.joinColumns.forEach(function (joinColumn) {\n                                        result[joinColumn.databaseName] = _this.connection.driver.prepareHydratedValue(rawEntity[DriverUtils.buildAlias(_this.connection.driver, relationIdAttr.parentAlias, joinColumn.databaseName)], joinColumn.referencedColumn);\n                                        var duplicatePart = joinColumn.databaseName + \":\" + result[joinColumn.databaseName];\n                                        if (duplicateParts.indexOf(duplicatePart) === -1) {\n                                            duplicateParts.push(duplicatePart);\n                                        }\n                                    });\n                                    relationIdAttr.relation.entityMetadata.primaryColumns.forEach(function (primaryColumn) {\n                                        result[primaryColumn.databaseName] = _this.connection.driver.prepareHydratedValue(rawEntity[DriverUtils.buildAlias(_this.connection.driver, relationIdAttr.parentAlias, primaryColumn.databaseName)], primaryColumn);\n                                        var duplicatePart = primaryColumn.databaseName + \":\" + result[primaryColumn.databaseName];\n                                        if (duplicateParts.indexOf(duplicatePart) === -1) {\n                                            duplicateParts.push(duplicatePart);\n                                        }\n                                    });\n                                    duplicateParts.sort();\n                                    var duplicate = duplicateParts.join(\"::\");\n                                    if (duplicates_1.indexOf(duplicate) !== -1) {\n                                        return null;\n                                    }\n                                    duplicates_1.push(duplicate);\n                                    return result;\n                                }).filter(function (v) { return v; });\n                                return [2 /*return*/, {\n                                        relationIdAttribute: relationIdAttr,\n                                        results: results\n                                    }];\n                            case 1:\n                                if (!(relationIdAttr.relation.isOneToMany || relationIdAttr.relation.isOneToOneNotOwner)) return [3 /*break*/, 3];\n                                relation_1 = relationIdAttr.relation;\n                                joinColumns_1 = relation_1.isOwning ? relation_1.joinColumns : relation_1.inverseRelation.joinColumns;\n                                table = relation_1.inverseEntityMetadata.target;\n                                tableName = relation_1.inverseEntityMetadata.tableName;\n                                tableAlias_1 = relationIdAttr.alias || tableName;\n                                duplicates_2 = [];\n                                parameters_1 = {};\n                                condition = rawEntities.map(function (rawEntity, index) {\n                                    var duplicateParts = [];\n                                    var parameterParts = {};\n                                    var queryPart = joinColumns_1.map(function (joinColumn) {\n                                        var parameterName = joinColumn.databaseName + index;\n                                        var parameterValue = rawEntity[DriverUtils.buildAlias(_this.connection.driver, relationIdAttr.parentAlias, joinColumn.referencedColumn.databaseName)];\n                                        var duplicatePart = tableAlias_1 + \":\" + joinColumn.propertyPath + \":\" + parameterValue;\n                                        if (duplicateParts.indexOf(duplicatePart) !== -1) {\n                                            return \"\";\n                                        }\n                                        duplicateParts.push(duplicatePart);\n                                        parameterParts[parameterName] = parameterValue;\n                                        return tableAlias_1 + \".\" + joinColumn.propertyPath + \" = :\" + parameterName;\n                                    }).filter(function (v) { return v; }).join(\" AND \");\n                                    duplicateParts.sort();\n                                    var duplicate = duplicateParts.join(\"::\");\n                                    if (duplicates_2.indexOf(duplicate) !== -1) {\n                                        return \"\";\n                                    }\n                                    duplicates_2.push(duplicate);\n                                    Object.assign(parameters_1, parameterParts);\n                                    return queryPart;\n                                }).filter(function (v) { return v; }).map(function (condition) { return \"(\" + condition + \")\"; })\n                                    .join(\" OR \");\n                                // ensure we won't perform redundant queries for joined data which was not found in selection\n                                // example: if post.category was not found in db then no need to execute query for category.imageIds\n                                if (!condition)\n                                    return [2 /*return*/, { relationIdAttribute: relationIdAttr, results: [] }];\n                                qb_1 = this.connection.createQueryBuilder(this.queryRunner);\n                                joinColumns_1.forEach(function (joinColumn) {\n                                    qb_1.addSelect(tableAlias_1 + \".\" + joinColumn.propertyPath, joinColumn.databaseName);\n                                });\n                                relation_1.inverseRelation.entityMetadata.primaryColumns.forEach(function (primaryColumn) {\n                                    qb_1.addSelect(tableAlias_1 + \".\" + primaryColumn.propertyPath, primaryColumn.databaseName);\n                                });\n                                qb_1.from(table, tableAlias_1)\n                                    .where(\"(\" + condition + \")\") // need brackets because if we have additional condition and no brackets, it looks like (a = 1) OR (a = 2) AND b = 1, that is incorrect\n                                    .setParameters(parameters_1);\n                                // apply condition (custom query builder factory)\n                                if (relationIdAttr.queryBuilderFactory)\n                                    relationIdAttr.queryBuilderFactory(qb_1);\n                                return [4 /*yield*/, qb_1.getRawMany()];\n                            case 2:\n                                results = _a.sent();\n                                results.forEach(function (result) {\n                                    joinColumns_1.forEach(function (column) {\n                                        result[column.databaseName] = _this.connection.driver.prepareHydratedValue(result[column.databaseName], column.referencedColumn);\n                                    });\n                                    relation_1.inverseRelation.entityMetadata.primaryColumns.forEach(function (column) {\n                                        result[column.databaseName] = _this.connection.driver.prepareHydratedValue(result[column.databaseName], column);\n                                    });\n                                });\n                                return [2 /*return*/, {\n                                        relationIdAttribute: relationIdAttr,\n                                        results: results\n                                    }];\n                            case 3:\n                                relation = relationIdAttr.relation;\n                                joinColumns_2 = relation.isOwning ? relation.joinColumns : relation.inverseRelation.inverseJoinColumns;\n                                inverseJoinColumns_1 = relation.isOwning ? relation.inverseJoinColumns : relation.inverseRelation.joinColumns;\n                                junctionAlias_1 = relationIdAttr.junctionAlias;\n                                inverseSideTableName = relationIdAttr.joinInverseSideMetadata.tableName;\n                                inverseSideTableAlias_1 = relationIdAttr.alias || inverseSideTableName;\n                                junctionTableName = relation.isOwning ? relation.junctionEntityMetadata.tableName : relation.inverseRelation.junctionEntityMetadata.tableName;\n                                mappedColumns = rawEntities.map(function (rawEntity) {\n                                    return joinColumns_2.reduce(function (map, joinColumn) {\n                                        map[joinColumn.propertyPath] = rawEntity[DriverUtils.buildAlias(_this.connection.driver, relationIdAttr.parentAlias, joinColumn.referencedColumn.databaseName)];\n                                        return map;\n                                    }, {});\n                                });\n                                // ensure we won't perform redundant queries for joined data which was not found in selection\n                                // example: if post.category was not found in db then no need to execute query for category.imageIds\n                                if (mappedColumns.length === 0)\n                                    return [2 /*return*/, { relationIdAttribute: relationIdAttr, results: [] }];\n                                parameters_2 = {};\n                                duplicates_3 = [];\n                                joinColumnConditions = mappedColumns.map(function (mappedColumn, index) {\n                                    var duplicateParts = [];\n                                    var parameterParts = {};\n                                    var queryPart = Object.keys(mappedColumn).map(function (key) {\n                                        var parameterName = key + index;\n                                        var parameterValue = mappedColumn[key];\n                                        var duplicatePart = junctionAlias_1 + \":\" + key + \":\" + parameterValue;\n                                        if (duplicateParts.indexOf(duplicatePart) !== -1) {\n                                            return \"\";\n                                        }\n                                        duplicateParts.push(duplicatePart);\n                                        parameterParts[parameterName] = parameterValue;\n                                        return junctionAlias_1 + \".\" + key + \" = :\" + parameterName;\n                                    }).filter(function (s) { return s; }).join(\" AND \");\n                                    duplicateParts.sort();\n                                    var duplicate = duplicateParts.join(\"::\");\n                                    if (duplicates_3.indexOf(duplicate) !== -1) {\n                                        return \"\";\n                                    }\n                                    duplicates_3.push(duplicate);\n                                    Object.assign(parameters_2, parameterParts);\n                                    return queryPart;\n                                }).filter(function (s) { return s; });\n                                inverseJoinColumnCondition_1 = inverseJoinColumns_1.map(function (joinColumn) {\n                                    return junctionAlias_1 + \".\" + joinColumn.propertyPath + \" = \" + inverseSideTableAlias_1 + \".\" + joinColumn.referencedColumn.propertyPath;\n                                }).join(\" AND \");\n                                condition = joinColumnConditions.map(function (condition) {\n                                    return \"(\" + condition + \" AND \" + inverseJoinColumnCondition_1 + \")\";\n                                }).join(\" OR \");\n                                qb_2 = this.connection.createQueryBuilder(this.queryRunner);\n                                inverseJoinColumns_1.forEach(function (joinColumn) {\n                                    qb_2.addSelect(junctionAlias_1 + \".\" + joinColumn.propertyPath, joinColumn.databaseName)\n                                        .addOrderBy(junctionAlias_1 + \".\" + joinColumn.propertyPath);\n                                });\n                                joinColumns_2.forEach(function (joinColumn) {\n                                    qb_2.addSelect(junctionAlias_1 + \".\" + joinColumn.propertyPath, joinColumn.databaseName)\n                                        .addOrderBy(junctionAlias_1 + \".\" + joinColumn.propertyPath);\n                                });\n                                qb_2.from(inverseSideTableName, inverseSideTableAlias_1)\n                                    .innerJoin(junctionTableName, junctionAlias_1, condition)\n                                    .setParameters(parameters_2);\n                                // apply condition (custom query builder factory)\n                                if (relationIdAttr.queryBuilderFactory)\n                                    relationIdAttr.queryBuilderFactory(qb_2);\n                                return [4 /*yield*/, qb_2.getRawMany()];\n                            case 4:\n                                results = _a.sent();\n                                results.forEach(function (result) {\n                                    __spreadArray(__spreadArray([], __read(joinColumns_2), false), __read(inverseJoinColumns_1), false).forEach(function (column) {\n                                        result[column.databaseName] = _this.connection.driver.prepareHydratedValue(result[column.databaseName], column.referencedColumn);\n                                    });\n                                });\n                                return [2 /*return*/, {\n                                        relationIdAttribute: relationIdAttr,\n                                        results: results\n                                    }];\n                        }\n                    });\n                }); });\n                return [2 /*return*/, Promise.all(promises)];\n            });\n        });\n    };\n    return RelationIdLoader;\n}());\nexport { RelationIdLoader };\n\n//# sourceMappingURL=RelationIdLoader.js.map\n","import { RelationIdAttribute } from \"./RelationIdAttribute\";\nvar RelationIdMetadataToAttributeTransformer = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationIdMetadataToAttributeTransformer(expressionMap) {\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    RelationIdMetadataToAttributeTransformer.prototype.transform = function () {\n        // by example:\n        // post has relation id:\n        // @RelationId(post => post.categories) categoryIds\n        // category has relation id\n        // @RelationId(category => category.images) imageIds\n        // we load post and join category\n        // we expect post.categoryIds and post.category.imageIds to have relation ids\n        var _this = this;\n        // first create relation id attributes for all relation id metadatas of the main selected object (post from example)\n        if (this.expressionMap.mainAlias) {\n            this.expressionMap.mainAlias.metadata.relationIds.forEach(function (relationId) {\n                var attribute = _this.metadataToAttribute(_this.expressionMap.mainAlias.name, relationId);\n                _this.expressionMap.relationIdAttributes.push(attribute);\n            });\n        }\n        // second create relation id attributes for all relation id metadatas of all joined objects (category from example)\n        this.expressionMap.joinAttributes.forEach(function (join) {\n            // ensure this join has a metadata, because relation id can only work for real orm entities\n            if (!join.metadata || join.metadata.isJunction)\n                return;\n            join.metadata.relationIds.forEach(function (relationId) {\n                var attribute = _this.metadataToAttribute(join.alias.name, relationId);\n                _this.expressionMap.relationIdAttributes.push(attribute);\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    RelationIdMetadataToAttributeTransformer.prototype.metadataToAttribute = function (parentAliasName, relationId) {\n        return new RelationIdAttribute(this.expressionMap, {\n            relationName: parentAliasName + \".\" + relationId.relation.propertyName,\n            mapToProperty: parentAliasName + \".\" + relationId.propertyName,\n            alias: relationId.alias,\n            queryBuilderFactory: relationId.queryBuilderFactory\n        });\n    };\n    return RelationIdMetadataToAttributeTransformer;\n}());\nexport { RelationIdMetadataToAttributeTransformer };\n\n//# sourceMappingURL=RelationIdMetadataToAttributeTransformer.js.map\n","import { __awaiter, __generator } from \"tslib\";\nvar RelationCountLoader = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationCountLoader(connection, queryRunner, relationCountAttributes) {\n        this.connection = connection;\n        this.queryRunner = queryRunner;\n        this.relationCountAttributes = relationCountAttributes;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    RelationCountLoader.prototype.load = function (rawEntities) {\n        return __awaiter(this, void 0, void 0, function () {\n            var onlyUnique, promises;\n            var _this = this;\n            return __generator(this, function (_a) {\n                onlyUnique = function (value, index, self) {\n                    return self.indexOf(value) === index;\n                };\n                promises = this.relationCountAttributes.map(function (relationCountAttr) { return __awaiter(_this, void 0, void 0, function () {\n                    var relation, inverseRelation, referenceColumnName_1, inverseSideTable, inverseSideTableName, inverseSideTableAlias, inverseSidePropertyName, referenceColumnValues, qb, joinTableColumnName_1, inverseJoinColumnName, firstJunctionColumn, secondJunctionColumn, referenceColumnValues, junctionAlias, inverseSideTableName, inverseSideTableAlias, junctionTableName, condition, qb;\n                    var _a, _b;\n                    return __generator(this, function (_c) {\n                        switch (_c.label) {\n                            case 0:\n                                if (!relationCountAttr.relation.isOneToMany) return [3 /*break*/, 2];\n                                relation = relationCountAttr.relation;\n                                inverseRelation = relation.inverseRelation;\n                                referenceColumnName_1 = inverseRelation.joinColumns[0].referencedColumn.propertyName;\n                                inverseSideTable = relation.inverseEntityMetadata.target;\n                                inverseSideTableName = relation.inverseEntityMetadata.tableName;\n                                inverseSideTableAlias = relationCountAttr.alias || inverseSideTableName;\n                                inverseSidePropertyName = inverseRelation.propertyName;\n                                referenceColumnValues = rawEntities\n                                    .map(function (rawEntity) { return rawEntity[relationCountAttr.parentAlias + \"_\" + referenceColumnName_1]; })\n                                    .filter(function (value) { return !!value; });\n                                referenceColumnValues = referenceColumnValues.filter(onlyUnique);\n                                // ensure we won't perform redundant queries for joined data which was not found in selection\n                                // example: if post.category was not found in db then no need to execute query for category.imageIds\n                                if (referenceColumnValues.length === 0)\n                                    return [2 /*return*/, { relationCountAttribute: relationCountAttr, results: [] }];\n                                qb = this.connection.createQueryBuilder(this.queryRunner);\n                                qb.select(inverseSideTableAlias + \".\" + inverseSidePropertyName, \"parentId\")\n                                    .addSelect(\"COUNT(*)\", \"cnt\")\n                                    .from(inverseSideTable, inverseSideTableAlias)\n                                    .where(inverseSideTableAlias + \".\" + inverseSidePropertyName + \" IN (:...ids)\")\n                                    .addGroupBy(inverseSideTableAlias + \".\" + inverseSidePropertyName)\n                                    .setParameter(\"ids\", referenceColumnValues);\n                                // apply condition (custom query builder factory)\n                                if (relationCountAttr.queryBuilderFactory)\n                                    relationCountAttr.queryBuilderFactory(qb);\n                                _a = {\n                                    relationCountAttribute: relationCountAttr\n                                };\n                                return [4 /*yield*/, qb.getRawMany()];\n                            case 1: return [2 /*return*/, (_a.results = _c.sent(),\n                                    _a)];\n                            case 2:\n                                inverseJoinColumnName = void 0;\n                                firstJunctionColumn = void 0;\n                                secondJunctionColumn = void 0;\n                                if (relationCountAttr.relation.isOwning) { // todo fix joinColumns[0] and inverseJoinColumns[0].\n                                    joinTableColumnName_1 = relationCountAttr.relation.joinColumns[0].referencedColumn.databaseName;\n                                    inverseJoinColumnName = relationCountAttr.relation.inverseJoinColumns[0].referencedColumn.databaseName;\n                                    firstJunctionColumn = relationCountAttr.relation.junctionEntityMetadata.columns[0];\n                                    secondJunctionColumn = relationCountAttr.relation.junctionEntityMetadata.columns[1];\n                                }\n                                else {\n                                    joinTableColumnName_1 = relationCountAttr.relation.inverseRelation.inverseJoinColumns[0].referencedColumn.databaseName;\n                                    inverseJoinColumnName = relationCountAttr.relation.inverseRelation.joinColumns[0].referencedColumn.databaseName;\n                                    firstJunctionColumn = relationCountAttr.relation.junctionEntityMetadata.columns[1];\n                                    secondJunctionColumn = relationCountAttr.relation.junctionEntityMetadata.columns[0];\n                                }\n                                referenceColumnValues = rawEntities\n                                    .map(function (rawEntity) { return rawEntity[relationCountAttr.parentAlias + \"_\" + joinTableColumnName_1]; })\n                                    .filter(function (value) { return !!value; });\n                                referenceColumnValues = referenceColumnValues.filter(onlyUnique);\n                                // ensure we won't perform redundant queries for joined data which was not found in selection\n                                // example: if post.category was not found in db then no need to execute query for category.imageIds\n                                if (referenceColumnValues.length === 0)\n                                    return [2 /*return*/, { relationCountAttribute: relationCountAttr, results: [] }];\n                                junctionAlias = relationCountAttr.junctionAlias;\n                                inverseSideTableName = relationCountAttr.joinInverseSideMetadata.tableName;\n                                inverseSideTableAlias = relationCountAttr.alias || inverseSideTableName;\n                                junctionTableName = relationCountAttr.relation.junctionEntityMetadata.tableName;\n                                condition = junctionAlias + \".\" + firstJunctionColumn.propertyName + \" IN (\" + referenceColumnValues.map(function (vals) { return isNaN(vals) ? \"'\" + vals + \"'\" : vals; }) + \")\" +\n                                    \" AND \" + junctionAlias + \".\" + secondJunctionColumn.propertyName + \" = \" + inverseSideTableAlias + \".\" + inverseJoinColumnName;\n                                qb = this.connection.createQueryBuilder(this.queryRunner);\n                                qb.select(junctionAlias + \".\" + firstJunctionColumn.propertyName, \"parentId\")\n                                    .addSelect(\"COUNT(\" + qb.escape(inverseSideTableAlias) + \".\" + qb.escape(inverseJoinColumnName) + \")\", \"cnt\")\n                                    .from(inverseSideTableName, inverseSideTableAlias)\n                                    .innerJoin(junctionTableName, junctionAlias, condition)\n                                    .addGroupBy(junctionAlias + \".\" + firstJunctionColumn.propertyName);\n                                // apply condition (custom query builder factory)\n                                if (relationCountAttr.queryBuilderFactory)\n                                    relationCountAttr.queryBuilderFactory(qb);\n                                _b = {\n                                    relationCountAttribute: relationCountAttr\n                                };\n                                return [4 /*yield*/, qb.getRawMany()];\n                            case 3: return [2 /*return*/, (_b.results = _c.sent(),\n                                    _b)];\n                        }\n                    });\n                }); });\n                return [2 /*return*/, Promise.all(promises)];\n            });\n        });\n    };\n    return RelationCountLoader;\n}());\nexport { RelationCountLoader };\n\n//# sourceMappingURL=RelationCountLoader.js.map\n","import { RelationCountAttribute } from \"./RelationCountAttribute\";\nvar RelationCountMetadataToAttributeTransformer = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationCountMetadataToAttributeTransformer(expressionMap) {\n        this.expressionMap = expressionMap;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    RelationCountMetadataToAttributeTransformer.prototype.transform = function () {\n        // by example:\n        // post has relation count:\n        // @RelationCount(post => post.categories) categoryCount\n        // category has relation count\n        // @RelationCount(category => category.images) imageCount\n        // we load post and join category\n        // we expect post.categoryCount and post.category.imageCount to have relation counts\n        var _this = this;\n        // first create relation count attributes for all relation count metadatas of the main selected object (post from example)\n        if (this.expressionMap.mainAlias) {\n            this.expressionMap.mainAlias.metadata.relationCounts.forEach(function (relationCount) {\n                var attribute = _this.metadataToAttribute(_this.expressionMap.mainAlias.name, relationCount);\n                _this.expressionMap.relationCountAttributes.push(attribute);\n            });\n        }\n        // second create relation count attributes for all relation count metadatas of all joined objects (category from example)\n        this.expressionMap.joinAttributes.forEach(function (join) {\n            // ensure this join has a metadata, because relation count can only work for real orm entities\n            if (!join.metadata || join.metadata.isJunction)\n                return;\n            join.metadata.relationCounts.forEach(function (relationCount) {\n                var attribute = _this.metadataToAttribute(join.alias.name, relationCount);\n                _this.expressionMap.relationCountAttributes.push(attribute);\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    RelationCountMetadataToAttributeTransformer.prototype.metadataToAttribute = function (parentAliasName, relationCount) {\n        return new RelationCountAttribute(this.expressionMap, {\n            relationName: parentAliasName + \".\" + relationCount.relation.propertyName,\n            mapToProperty: parentAliasName + \".\" + relationCount.propertyName,\n            alias: relationCount.alias,\n            queryBuilderFactory: relationCount.queryBuilderFactory\n        });\n    };\n    return RelationCountMetadataToAttributeTransformer;\n}());\nexport { RelationCountMetadataToAttributeTransformer };\n\n//# sourceMappingURL=RelationCountMetadataToAttributeTransformer.js.map\n","import { __awaiter, __extends, __generator, __read, __spreadArray } from \"tslib\";\nimport { SapDriver } from \"../driver/sap/SapDriver\";\nimport { RawSqlResultsToEntityTransformer } from \"./transformer/RawSqlResultsToEntityTransformer\";\nimport { SqlServerDriver } from \"../driver/sqlserver/SqlServerDriver\";\nimport { PessimisticLockTransactionRequiredError } from \"../error/PessimisticLockTransactionRequiredError\";\nimport { NoVersionOrUpdateDateColumnError } from \"../error/NoVersionOrUpdateDateColumnError\";\nimport { OptimisticLockVersionMismatchError } from \"../error/OptimisticLockVersionMismatchError\";\nimport { OptimisticLockCanNotBeUsedError } from \"../error/OptimisticLockCanNotBeUsedError\";\nimport { JoinAttribute } from \"./JoinAttribute\";\nimport { RelationIdAttribute } from \"./relation-id/RelationIdAttribute\";\nimport { RelationCountAttribute } from \"./relation-count/RelationCountAttribute\";\nimport { RelationIdLoader } from \"./relation-id/RelationIdLoader\";\nimport { RelationIdMetadataToAttributeTransformer } from \"./relation-id/RelationIdMetadataToAttributeTransformer\";\nimport { RelationCountLoader } from \"./relation-count/RelationCountLoader\";\nimport { RelationCountMetadataToAttributeTransformer } from \"./relation-count/RelationCountMetadataToAttributeTransformer\";\nimport { QueryBuilder } from \"./QueryBuilder\";\nimport { LockNotSupportedOnGivenDriverError } from \"../error/LockNotSupportedOnGivenDriverError\";\nimport { MysqlDriver } from \"../driver/mysql/MysqlDriver\";\nimport { PostgresDriver } from \"../driver/postgres/PostgresDriver\";\nimport { OracleDriver } from \"../driver/oracle/OracleDriver\";\nimport { AbstractSqliteDriver } from \"../driver/sqlite-abstract/AbstractSqliteDriver\";\nimport { OffsetWithoutLimitNotSupportedError } from \"../error/OffsetWithoutLimitNotSupportedError\";\nimport { ObjectUtils } from \"../util/ObjectUtils\";\nimport { DriverUtils } from \"../driver/DriverUtils\";\nimport { AuroraDataApiDriver } from \"../driver/aurora-data-api/AuroraDataApiDriver\";\nimport { CockroachDriver } from \"../driver/cockroachdb/CockroachDriver\";\nimport { EntityNotFoundError } from \"../error/EntityNotFoundError\";\nimport { TypeORMError } from \"../error\";\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nvar SelectQueryBuilder = /** @class */ (function (_super) {\n    __extends(SelectQueryBuilder, _super);\n    function SelectQueryBuilder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated sql query without parameters being replaced.\n     */\n    SelectQueryBuilder.prototype.getQuery = function () {\n        var sql = this.createComment();\n        sql += this.createSelectExpression();\n        sql += this.createJoinExpression();\n        sql += this.createWhereExpression();\n        sql += this.createGroupByExpression();\n        sql += this.createHavingExpression();\n        sql += this.createOrderByExpression();\n        sql += this.createLimitOffsetExpression();\n        sql += this.createLockExpression();\n        sql = sql.trim();\n        if (this.expressionMap.subQuery)\n            sql = \"(\" + sql + \")\";\n        return sql;\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a subquery - query that can be used inside other queries.\n     */\n    SelectQueryBuilder.prototype.subQuery = function () {\n        var qb = this.createQueryBuilder();\n        qb.expressionMap.subQuery = true;\n        qb.parentQueryBuilder = this;\n        return qb;\n    };\n    /**\n     * Creates SELECT query and selects given data.\n     * Replaces all previous selections if they exist.\n     */\n    SelectQueryBuilder.prototype.select = function (selection, selectionAliasName) {\n        this.expressionMap.queryType = \"select\";\n        if (Array.isArray(selection)) {\n            this.expressionMap.selects = selection.map(function (selection) { return ({ selection: selection }); });\n        }\n        else if (selection instanceof Function) {\n            var subQueryBuilder = selection(this.subQuery());\n            this.setParameters(subQueryBuilder.getParameters());\n            this.expressionMap.selects.push({ selection: subQueryBuilder.getQuery(), aliasName: selectionAliasName });\n        }\n        else if (selection) {\n            this.expressionMap.selects = [{ selection: selection, aliasName: selectionAliasName }];\n        }\n        return this;\n    };\n    /**\n     * Adds new selection to the SELECT query.\n     */\n    SelectQueryBuilder.prototype.addSelect = function (selection, selectionAliasName) {\n        if (!selection)\n            return this;\n        if (Array.isArray(selection)) {\n            this.expressionMap.selects = this.expressionMap.selects.concat(selection.map(function (selection) { return ({ selection: selection }); }));\n        }\n        else if (selection instanceof Function) {\n            var subQueryBuilder = selection(this.subQuery());\n            this.setParameters(subQueryBuilder.getParameters());\n            this.expressionMap.selects.push({ selection: subQueryBuilder.getQuery(), aliasName: selectionAliasName });\n        }\n        else if (selection) {\n            this.expressionMap.selects.push({ selection: selection, aliasName: selectionAliasName });\n        }\n        return this;\n    };\n    /**\n     * Set max execution time.\n     * @param milliseconds\n     */\n    SelectQueryBuilder.prototype.maxExecutionTime = function (milliseconds) {\n        this.expressionMap.maxExecutionTime = milliseconds;\n        return this;\n    };\n    /**\n     * Sets whether the selection is DISTINCT.\n     */\n    SelectQueryBuilder.prototype.distinct = function (distinct) {\n        if (distinct === void 0) { distinct = true; }\n        this.expressionMap.selectDistinct = distinct;\n        return this;\n    };\n    /**\n     * Sets the distinct on clause for Postgres.\n     */\n    SelectQueryBuilder.prototype.distinctOn = function (distinctOn) {\n        this.expressionMap.selectDistinctOn = distinctOn;\n        return this;\n    };\n    /**\n     * Specifies FROM which entity's table select/update/delete will be executed.\n     * Also sets a main string alias of the selection data.\n     * Removes all previously set from-s.\n     */\n    SelectQueryBuilder.prototype.from = function (entityTarget, aliasName) {\n        var mainAlias = this.createFromAlias(entityTarget, aliasName);\n        this.expressionMap.setMainAlias(mainAlias);\n        return this;\n    };\n    /**\n     * Specifies FROM which entity's table select/update/delete will be executed.\n     * Also sets a main string alias of the selection data.\n     */\n    SelectQueryBuilder.prototype.addFrom = function (entityTarget, aliasName) {\n        var alias = this.createFromAlias(entityTarget, aliasName);\n        if (!this.expressionMap.mainAlias)\n            this.expressionMap.setMainAlias(alias);\n        return this;\n    };\n    /**\n     * INNER JOINs (without selection).\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.innerJoin = function (entityOrProperty, alias, condition, parameters) {\n        this.join(\"INNER\", entityOrProperty, alias, condition, parameters);\n        return this;\n    };\n    /**\n     * LEFT JOINs (without selection).\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.leftJoin = function (entityOrProperty, alias, condition, parameters) {\n        this.join(\"LEFT\", entityOrProperty, alias, condition, parameters);\n        return this;\n    };\n    /**\n     * INNER JOINs and adds all selection properties to SELECT.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.innerJoinAndSelect = function (entityOrProperty, alias, condition, parameters) {\n        this.addSelect(alias);\n        this.innerJoin(entityOrProperty, alias, condition, parameters);\n        return this;\n    };\n    /**\n     * LEFT JOINs and adds all selection properties to SELECT.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.leftJoinAndSelect = function (entityOrProperty, alias, condition, parameters) {\n        this.addSelect(alias);\n        this.leftJoin(entityOrProperty, alias, condition, parameters);\n        return this;\n    };\n    /**\n     * INNER JOINs, SELECTs the data returned by a join and MAPs all that data to some entity's property.\n     * This is extremely useful when you want to select some data and map it to some virtual property.\n     * It will assume that there are multiple rows of selecting data, and mapped result will be an array.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.innerJoinAndMapMany = function (mapToProperty, entityOrProperty, alias, condition, parameters) {\n        this.addSelect(alias);\n        this.join(\"INNER\", entityOrProperty, alias, condition, parameters, mapToProperty, true);\n        return this;\n    };\n    /**\n     * INNER JOINs, SELECTs the data returned by a join and MAPs all that data to some entity's property.\n     * This is extremely useful when you want to select some data and map it to some virtual property.\n     * It will assume that there is a single row of selecting data, and mapped result will be a single selected value.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.innerJoinAndMapOne = function (mapToProperty, entityOrProperty, alias, condition, parameters) {\n        this.addSelect(alias);\n        this.join(\"INNER\", entityOrProperty, alias, condition, parameters, mapToProperty, false);\n        return this;\n    };\n    /**\n     * LEFT JOINs, SELECTs the data returned by a join and MAPs all that data to some entity's property.\n     * This is extremely useful when you want to select some data and map it to some virtual property.\n     * It will assume that there are multiple rows of selecting data, and mapped result will be an array.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.leftJoinAndMapMany = function (mapToProperty, entityOrProperty, alias, condition, parameters) {\n        this.addSelect(alias);\n        this.join(\"LEFT\", entityOrProperty, alias, condition, parameters, mapToProperty, true);\n        return this;\n    };\n    /**\n     * LEFT JOINs, SELECTs the data returned by a join and MAPs all that data to some entity's property.\n     * This is extremely useful when you want to select some data and map it to some virtual property.\n     * It will assume that there is a single row of selecting data, and mapped result will be a single selected value.\n     * You also need to specify an alias of the joined data.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.leftJoinAndMapOne = function (mapToProperty, entityOrProperty, alias, condition, parameters) {\n        this.addSelect(alias);\n        this.join(\"LEFT\", entityOrProperty, alias, condition, parameters, mapToProperty, false);\n        return this;\n    };\n    /**\n     * LEFT JOINs relation id and maps it into some entity's property.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.loadRelationIdAndMap = function (mapToProperty, relationName, aliasNameOrOptions, queryBuilderFactory) {\n        var relationIdAttribute = new RelationIdAttribute(this.expressionMap);\n        relationIdAttribute.mapToProperty = mapToProperty;\n        relationIdAttribute.relationName = relationName;\n        if (typeof aliasNameOrOptions === \"string\")\n            relationIdAttribute.alias = aliasNameOrOptions;\n        if (aliasNameOrOptions instanceof Object && aliasNameOrOptions.disableMixedMap)\n            relationIdAttribute.disableMixedMap = true;\n        relationIdAttribute.queryBuilderFactory = queryBuilderFactory;\n        this.expressionMap.relationIdAttributes.push(relationIdAttribute);\n        if (relationIdAttribute.relation.junctionEntityMetadata) {\n            this.expressionMap.createAlias({\n                type: \"other\",\n                name: relationIdAttribute.junctionAlias,\n                metadata: relationIdAttribute.relation.junctionEntityMetadata\n            });\n        }\n        return this;\n    };\n    /**\n     * Counts number of entities of entity's relation and maps the value into some entity's property.\n     * Optionally, you can add condition and parameters used in condition.\n     */\n    SelectQueryBuilder.prototype.loadRelationCountAndMap = function (mapToProperty, relationName, aliasName, queryBuilderFactory) {\n        var relationCountAttribute = new RelationCountAttribute(this.expressionMap);\n        relationCountAttribute.mapToProperty = mapToProperty;\n        relationCountAttribute.relationName = relationName;\n        relationCountAttribute.alias = aliasName;\n        relationCountAttribute.queryBuilderFactory = queryBuilderFactory;\n        this.expressionMap.relationCountAttributes.push(relationCountAttribute);\n        this.expressionMap.createAlias({\n            type: \"other\",\n            name: relationCountAttribute.junctionAlias\n        });\n        if (relationCountAttribute.relation.junctionEntityMetadata) {\n            this.expressionMap.createAlias({\n                type: \"other\",\n                name: relationCountAttribute.junctionAlias,\n                metadata: relationCountAttribute.relation.junctionEntityMetadata\n            });\n        }\n        return this;\n    };\n    /**\n     * Loads all relation ids for all relations of the selected entity.\n     * All relation ids will be mapped to relation property themself.\n     * If array of strings is given then loads only relation ids of the given properties.\n     */\n    SelectQueryBuilder.prototype.loadAllRelationIds = function (options) {\n        var _this = this;\n        this.expressionMap.mainAlias.metadata.relations.forEach(function (relation) {\n            if (options !== undefined && options.relations !== undefined && options.relations.indexOf(relation.propertyPath) === -1)\n                return;\n            _this.loadRelationIdAndMap(_this.expressionMap.mainAlias.name + \".\" + relation.propertyPath, _this.expressionMap.mainAlias.name + \".\" + relation.propertyPath, options);\n        });\n        return this;\n    };\n    /**\n     * Sets WHERE condition in the query builder.\n     * If you had previously WHERE expression defined,\n     * calling this function will override previously set WHERE conditions.\n     * Additionally you can add parameters used in where expression.\n     */\n    SelectQueryBuilder.prototype.where = function (where, parameters) {\n        this.expressionMap.wheres = []; // don't move this block below since computeWhereParameter can add where expressions\n        var condition = this.getWhereCondition(where);\n        if (condition)\n            this.expressionMap.wheres = [{ type: \"simple\", condition: condition }];\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    SelectQueryBuilder.prototype.andWhere = function (where, parameters) {\n        this.expressionMap.wheres.push({ type: \"and\", condition: this.getWhereCondition(where) });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new OR WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    SelectQueryBuilder.prototype.orWhere = function (where, parameters) {\n        this.expressionMap.wheres.push({ type: \"or\", condition: this.getWhereCondition(where) });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     *\n     * Ids are mixed.\n     * It means if you have single primary key you can pass a simple id values, for example [1, 2, 3].\n     * If you have multiple primary keys you need to pass object with property names and values specified,\n     * for example [{ firstId: 1, secondId: 2 }, { firstId: 2, secondId: 3 }, ...]\n     */\n    SelectQueryBuilder.prototype.whereInIds = function (ids) {\n        return this.where(this.getWhereInIdsCondition(ids));\n    };\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     *\n     * Ids are mixed.\n     * It means if you have single primary key you can pass a simple id values, for example [1, 2, 3].\n     * If you have multiple primary keys you need to pass object with property names and values specified,\n     * for example [{ firstId: 1, secondId: 2 }, { firstId: 2, secondId: 3 }, ...]\n     */\n    SelectQueryBuilder.prototype.andWhereInIds = function (ids) {\n        return this.andWhere(this.getWhereInIdsCondition(ids));\n    };\n    /**\n     * Adds new OR WHERE with conditions for the given ids.\n     *\n     * Ids are mixed.\n     * It means if you have single primary key you can pass a simple id values, for example [1, 2, 3].\n     * If you have multiple primary keys you need to pass object with property names and values specified,\n     * for example [{ firstId: 1, secondId: 2 }, { firstId: 2, secondId: 3 }, ...]\n     */\n    SelectQueryBuilder.prototype.orWhereInIds = function (ids) {\n        return this.orWhere(this.getWhereInIdsCondition(ids));\n    };\n    /**\n     * Sets HAVING condition in the query builder.\n     * If you had previously HAVING expression defined,\n     * calling this function will override previously set HAVING conditions.\n     * Additionally you can add parameters used in where expression.\n     */\n    SelectQueryBuilder.prototype.having = function (having, parameters) {\n        this.expressionMap.havings.push({ type: \"simple\", condition: having });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND HAVING condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    SelectQueryBuilder.prototype.andHaving = function (having, parameters) {\n        this.expressionMap.havings.push({ type: \"and\", condition: having });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new OR HAVING condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    SelectQueryBuilder.prototype.orHaving = function (having, parameters) {\n        this.expressionMap.havings.push({ type: \"or\", condition: having });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Sets GROUP BY condition in the query builder.\n     * If you had previously GROUP BY expression defined,\n     * calling this function will override previously set GROUP BY conditions.\n     */\n    SelectQueryBuilder.prototype.groupBy = function (groupBy) {\n        if (groupBy) {\n            this.expressionMap.groupBys = [groupBy];\n        }\n        else {\n            this.expressionMap.groupBys = [];\n        }\n        return this;\n    };\n    /**\n     * Adds GROUP BY condition in the query builder.\n     */\n    SelectQueryBuilder.prototype.addGroupBy = function (groupBy) {\n        this.expressionMap.groupBys.push(groupBy);\n        return this;\n    };\n    /**\n     * Sets ORDER BY condition in the query builder.\n     * If you had previously ORDER BY expression defined,\n     * calling this function will override previously set ORDER BY conditions.\n     */\n    SelectQueryBuilder.prototype.orderBy = function (sort, order, nulls) {\n        var _a, _b;\n        if (order === void 0) { order = \"ASC\"; }\n        if (order !== undefined && order !== \"ASC\" && order !== \"DESC\")\n            throw new TypeORMError(\"SelectQueryBuilder.addOrderBy \\\"order\\\" can accept only \\\"ASC\\\" and \\\"DESC\\\" values.\");\n        if (nulls !== undefined && nulls !== \"NULLS FIRST\" && nulls !== \"NULLS LAST\")\n            throw new TypeORMError(\"SelectQueryBuilder.addOrderBy \\\"nulls\\\" can accept only \\\"NULLS FIRST\\\" and \\\"NULLS LAST\\\" values.\");\n        if (sort) {\n            if (sort instanceof Object) {\n                this.expressionMap.orderBys = sort;\n            }\n            else {\n                if (nulls) {\n                    this.expressionMap.orderBys = (_a = {}, _a[sort] = { order: order, nulls: nulls }, _a);\n                }\n                else {\n                    this.expressionMap.orderBys = (_b = {}, _b[sort] = order, _b);\n                }\n            }\n        }\n        else {\n            this.expressionMap.orderBys = {};\n        }\n        return this;\n    };\n    /**\n     * Adds ORDER BY condition in the query builder.\n     */\n    SelectQueryBuilder.prototype.addOrderBy = function (sort, order, nulls) {\n        if (order === void 0) { order = \"ASC\"; }\n        if (order !== undefined && order !== \"ASC\" && order !== \"DESC\")\n            throw new TypeORMError(\"SelectQueryBuilder.addOrderBy \\\"order\\\" can accept only \\\"ASC\\\" and \\\"DESC\\\" values.\");\n        if (nulls !== undefined && nulls !== \"NULLS FIRST\" && nulls !== \"NULLS LAST\")\n            throw new TypeORMError(\"SelectQueryBuilder.addOrderBy \\\"nulls\\\" can accept only \\\"NULLS FIRST\\\" and \\\"NULLS LAST\\\" values.\");\n        if (nulls) {\n            this.expressionMap.orderBys[sort] = { order: order, nulls: nulls };\n        }\n        else {\n            this.expressionMap.orderBys[sort] = order;\n        }\n        return this;\n    };\n    /**\n     * Set's LIMIT - maximum number of rows to be selected.\n     * NOTE that it may not work as you expect if you are using joins.\n     * If you want to implement pagination, and you are having join in your query,\n     * then use instead take method instead.\n     */\n    SelectQueryBuilder.prototype.limit = function (limit) {\n        this.expressionMap.limit = this.normalizeNumber(limit);\n        if (this.expressionMap.limit !== undefined && isNaN(this.expressionMap.limit))\n            throw new TypeORMError(\"Provided \\\"limit\\\" value is not a number. Please provide a numeric value.\");\n        return this;\n    };\n    /**\n     * Set's OFFSET - selection offset.\n     * NOTE that it may not work as you expect if you are using joins.\n     * If you want to implement pagination, and you are having join in your query,\n     * then use instead skip method instead.\n     */\n    SelectQueryBuilder.prototype.offset = function (offset) {\n        this.expressionMap.offset = this.normalizeNumber(offset);\n        if (this.expressionMap.offset !== undefined && isNaN(this.expressionMap.offset))\n            throw new TypeORMError(\"Provided \\\"offset\\\" value is not a number. Please provide a numeric value.\");\n        return this;\n    };\n    /**\n     * Sets maximal number of entities to take.\n     */\n    SelectQueryBuilder.prototype.take = function (take) {\n        this.expressionMap.take = this.normalizeNumber(take);\n        if (this.expressionMap.take !== undefined && isNaN(this.expressionMap.take))\n            throw new TypeORMError(\"Provided \\\"take\\\" value is not a number. Please provide a numeric value.\");\n        return this;\n    };\n    /**\n     * Sets number of entities to skip.\n     */\n    SelectQueryBuilder.prototype.skip = function (skip) {\n        this.expressionMap.skip = this.normalizeNumber(skip);\n        if (this.expressionMap.skip !== undefined && isNaN(this.expressionMap.skip))\n            throw new TypeORMError(\"Provided \\\"skip\\\" value is not a number. Please provide a numeric value.\");\n        return this;\n    };\n    /**\n     * Set certain index to be used by the query.\n     *\n     * @param index Name of index to be used.\n     */\n    SelectQueryBuilder.prototype.useIndex = function (index) {\n        this.expressionMap.useIndex = index;\n        return this;\n    };\n    /**\n     * Sets locking mode.\n     */\n    SelectQueryBuilder.prototype.setLock = function (lockMode, lockVersion, lockTables) {\n        this.expressionMap.lockMode = lockMode;\n        this.expressionMap.lockVersion = lockVersion;\n        this.expressionMap.lockTables = lockTables;\n        return this;\n    };\n    /**\n     * Disables the global condition of \"non-deleted\" for the entity with delete date columns.\n     */\n    SelectQueryBuilder.prototype.withDeleted = function () {\n        this.expressionMap.withDeleted = true;\n        return this;\n    };\n    /**\n     * Gets first raw result returned by execution of generated query builder sql.\n     */\n    SelectQueryBuilder.prototype.getRawOne = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getRawMany()];\n                    case 1: return [2 /*return*/, (_a.sent())[0]];\n                }\n            });\n        });\n    };\n    /**\n     * Gets all raw results returned by execution of generated query builder sql.\n     */\n    SelectQueryBuilder.prototype.getRawMany = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, transactionStartedByUs, results, error_1, rollbackError_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.expressionMap.lockMode === \"optimistic\")\n                            throw new OptimisticLockCanNotBeUsedError();\n                        this.expressionMap.queryEntity = false;\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 7, 12, 15]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _a.sent();\n                        transactionStartedByUs = true;\n                        _a.label = 3;\n                    case 3: return [4 /*yield*/, this.loadRawResults(queryRunner)];\n                    case 4:\n                        results = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 6];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 5:\n                        _a.sent();\n                        _a.label = 6;\n                    case 6: return [2 /*return*/, results];\n                    case 7:\n                        error_1 = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 11];\n                        _a.label = 8;\n                    case 8:\n                        _a.trys.push([8, 10, , 11]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 9:\n                        _a.sent();\n                        return [3 /*break*/, 11];\n                    case 10:\n                        rollbackError_1 = _a.sent();\n                        return [3 /*break*/, 11];\n                    case 11: throw error_1;\n                    case 12:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 14];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 13:\n                        _a.sent();\n                        _a.label = 14;\n                    case 14: return [7 /*endfinally*/];\n                    case 15: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes sql generated by query builder and returns object with raw results and entities created from them.\n     */\n    SelectQueryBuilder.prototype.getRawAndEntities = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, transactionStartedByUs, results, error_2, rollbackError_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 7, 12, 15]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _a.sent();\n                        transactionStartedByUs = true;\n                        _a.label = 3;\n                    case 3:\n                        this.expressionMap.queryEntity = true;\n                        return [4 /*yield*/, this.executeEntitiesAndRawResults(queryRunner)];\n                    case 4:\n                        results = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 6];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 5:\n                        _a.sent();\n                        _a.label = 6;\n                    case 6: return [2 /*return*/, results];\n                    case 7:\n                        error_2 = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 11];\n                        _a.label = 8;\n                    case 8:\n                        _a.trys.push([8, 10, , 11]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 9:\n                        _a.sent();\n                        return [3 /*break*/, 11];\n                    case 10:\n                        rollbackError_2 = _a.sent();\n                        return [3 /*break*/, 11];\n                    case 11: throw error_2;\n                    case 12:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 14];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 13:\n                        _a.sent();\n                        _a.label = 14;\n                    case 14: return [7 /*endfinally*/];\n                    case 15: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Gets single entity returned by execution of generated query builder sql.\n     */\n    SelectQueryBuilder.prototype.getOne = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var results, result, metadata, actualVersion, actualVersion;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getRawAndEntities()];\n                    case 1:\n                        results = _a.sent();\n                        result = results.entities[0];\n                        if (result && this.expressionMap.lockMode === \"optimistic\" && this.expressionMap.lockVersion) {\n                            metadata = this.expressionMap.mainAlias.metadata;\n                            if (this.expressionMap.lockVersion instanceof Date) {\n                                actualVersion = metadata.updateDateColumn.getEntityValue(result);\n                                if (actualVersion.getTime() !== this.expressionMap.lockVersion.getTime())\n                                    throw new OptimisticLockVersionMismatchError(metadata.name, this.expressionMap.lockVersion, actualVersion);\n                            }\n                            else {\n                                actualVersion = metadata.versionColumn.getEntityValue(result);\n                                if (actualVersion !== this.expressionMap.lockVersion)\n                                    throw new OptimisticLockVersionMismatchError(metadata.name, this.expressionMap.lockVersion, actualVersion);\n                            }\n                        }\n                        return [2 /*return*/, result];\n                }\n            });\n        });\n    };\n    /**\n     * Gets the first entity returned by execution of generated query builder sql or rejects the returned promise on error.\n     */\n    SelectQueryBuilder.prototype.getOneOrFail = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var entity;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getOne()];\n                    case 1:\n                        entity = _a.sent();\n                        if (!entity) {\n                            throw new EntityNotFoundError(this.expressionMap.mainAlias.target, this);\n                        }\n                        return [2 /*return*/, entity];\n                }\n            });\n        });\n    };\n    /**\n     * Gets entities returned by execution of generated query builder sql.\n     */\n    SelectQueryBuilder.prototype.getMany = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var results;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.expressionMap.lockMode === \"optimistic\")\n                            throw new OptimisticLockCanNotBeUsedError();\n                        return [4 /*yield*/, this.getRawAndEntities()];\n                    case 1:\n                        results = _a.sent();\n                        return [2 /*return*/, results.entities];\n                }\n            });\n        });\n    };\n    /**\n     * Gets count - number of entities selected by sql generated by this query builder.\n     * Count excludes all limitations set by setFirstResult and setMaxResults methods call.\n     */\n    SelectQueryBuilder.prototype.getCount = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, transactionStartedByUs, results, error_3, rollbackError_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.expressionMap.lockMode === \"optimistic\")\n                            throw new OptimisticLockCanNotBeUsedError();\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 7, 12, 15]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _a.sent();\n                        transactionStartedByUs = true;\n                        _a.label = 3;\n                    case 3:\n                        this.expressionMap.queryEntity = false;\n                        return [4 /*yield*/, this.executeCountQuery(queryRunner)];\n                    case 4:\n                        results = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 6];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 5:\n                        _a.sent();\n                        _a.label = 6;\n                    case 6: return [2 /*return*/, results];\n                    case 7:\n                        error_3 = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 11];\n                        _a.label = 8;\n                    case 8:\n                        _a.trys.push([8, 10, , 11]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 9:\n                        _a.sent();\n                        return [3 /*break*/, 11];\n                    case 10:\n                        rollbackError_3 = _a.sent();\n                        return [3 /*break*/, 11];\n                    case 11: throw error_3;\n                    case 12:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 14];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 13:\n                        _a.sent();\n                        _a.label = 14;\n                    case 14: return [7 /*endfinally*/];\n                    case 15: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes built SQL query and returns entities and overall entities count (without limitation).\n     * This method is useful to build pagination.\n     */\n    SelectQueryBuilder.prototype.getManyAndCount = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, transactionStartedByUs, entitiesAndRaw, cacheId, count, results, error_4, rollbackError_4;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.expressionMap.lockMode === \"optimistic\")\n                            throw new OptimisticLockCanNotBeUsedError();\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 8, 13, 16]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _a.sent();\n                        transactionStartedByUs = true;\n                        _a.label = 3;\n                    case 3:\n                        this.expressionMap.queryEntity = true;\n                        return [4 /*yield*/, this.executeEntitiesAndRawResults(queryRunner)];\n                    case 4:\n                        entitiesAndRaw = _a.sent();\n                        this.expressionMap.queryEntity = false;\n                        cacheId = this.expressionMap.cacheId;\n                        // Creates a new cacheId for the count query, or it will retreive the above query results\n                        // and count will return 0.\n                        this.expressionMap.cacheId = (cacheId) ? cacheId + \"-count\" : cacheId;\n                        return [4 /*yield*/, this.executeCountQuery(queryRunner)];\n                    case 5:\n                        count = _a.sent();\n                        results = [entitiesAndRaw.entities, count];\n                        if (!transactionStartedByUs) return [3 /*break*/, 7];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 6:\n                        _a.sent();\n                        _a.label = 7;\n                    case 7: return [2 /*return*/, results];\n                    case 8:\n                        error_4 = _a.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 12];\n                        _a.label = 9;\n                    case 9:\n                        _a.trys.push([9, 11, , 12]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 10:\n                        _a.sent();\n                        return [3 /*break*/, 12];\n                    case 11:\n                        rollbackError_4 = _a.sent();\n                        return [3 /*break*/, 12];\n                    case 12: throw error_4;\n                    case 13:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 15];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 14:\n                        _a.sent();\n                        _a.label = 15;\n                    case 15: return [7 /*endfinally*/];\n                    case 16: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Executes built SQL query and returns raw data stream.\n     */\n    SelectQueryBuilder.prototype.stream = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, sql, parameters, queryRunner, transactionStartedByUs, releaseFn, results, error_5, rollbackError_5;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.expressionMap.queryEntity = false;\n                        _a = __read(this.getQueryAndParameters(), 2), sql = _a[0], parameters = _a[1];\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 6, , 11]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _b.sent();\n                        transactionStartedByUs = true;\n                        _b.label = 3;\n                    case 3:\n                        releaseFn = function () {\n                            if (queryRunner !== _this.queryRunner) // means we created our own query runner\n                                return queryRunner.release();\n                            return;\n                        };\n                        results = queryRunner.stream(sql, parameters, releaseFn, releaseFn);\n                        if (!transactionStartedByUs) return [3 /*break*/, 5];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 4:\n                        _b.sent();\n                        _b.label = 5;\n                    case 5: return [2 /*return*/, results];\n                    case 6:\n                        error_5 = _b.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 10];\n                        _b.label = 7;\n                    case 7:\n                        _b.trys.push([7, 9, , 10]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 8:\n                        _b.sent();\n                        return [3 /*break*/, 10];\n                    case 9:\n                        rollbackError_5 = _b.sent();\n                        return [3 /*break*/, 10];\n                    case 10: throw error_5;\n                    case 11: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Enables or disables query result caching.\n     */\n    SelectQueryBuilder.prototype.cache = function (enabledOrMillisecondsOrId, maybeMilliseconds) {\n        if (typeof enabledOrMillisecondsOrId === \"boolean\") {\n            this.expressionMap.cache = enabledOrMillisecondsOrId;\n        }\n        else if (typeof enabledOrMillisecondsOrId === \"number\") {\n            this.expressionMap.cache = true;\n            this.expressionMap.cacheDuration = enabledOrMillisecondsOrId;\n        }\n        else if (typeof enabledOrMillisecondsOrId === \"string\" || typeof enabledOrMillisecondsOrId === \"number\") {\n            this.expressionMap.cache = true;\n            this.expressionMap.cacheId = enabledOrMillisecondsOrId;\n        }\n        if (maybeMilliseconds) {\n            this.expressionMap.cacheDuration = maybeMilliseconds;\n        }\n        return this;\n    };\n    /**\n     * Sets extra options that can be used to configure how query builder works.\n     */\n    SelectQueryBuilder.prototype.setOption = function (option) {\n        this.expressionMap.options.push(option);\n        return this;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    SelectQueryBuilder.prototype.join = function (direction, entityOrProperty, aliasName, condition, parameters, mapToProperty, isMappingMany) {\n        this.setParameters(parameters || {});\n        var joinAttribute = new JoinAttribute(this.connection, this.expressionMap);\n        joinAttribute.direction = direction;\n        joinAttribute.mapToProperty = mapToProperty;\n        joinAttribute.isMappingMany = isMappingMany;\n        joinAttribute.entityOrProperty = entityOrProperty; // relationName\n        joinAttribute.condition = condition ? condition : undefined; // joinInverseSideCondition\n        // joinAttribute.junctionAlias = joinAttribute.relation.isOwning ? parentAlias + \"_\" + destinationTableAlias : destinationTableAlias + \"_\" + parentAlias;\n        this.expressionMap.joinAttributes.push(joinAttribute);\n        if (joinAttribute.metadata) {\n            if (joinAttribute.metadata.deleteDateColumn && !this.expressionMap.withDeleted) {\n                var conditionDeleteColumn = aliasName + \".\" + joinAttribute.metadata.deleteDateColumn.propertyName + \" IS NULL\";\n                joinAttribute.condition = joinAttribute.condition ? \" \" + joinAttribute.condition + \" AND \" + conditionDeleteColumn : \"\" + conditionDeleteColumn;\n            }\n            // todo: find and set metadata right there?\n            joinAttribute.alias = this.expressionMap.createAlias({\n                type: \"join\",\n                name: aliasName,\n                metadata: joinAttribute.metadata\n            });\n            if (joinAttribute.relation && joinAttribute.relation.junctionEntityMetadata) {\n                this.expressionMap.createAlias({\n                    type: \"join\",\n                    name: joinAttribute.junctionAlias,\n                    metadata: joinAttribute.relation.junctionEntityMetadata\n                });\n            }\n        }\n        else {\n            var subQuery = \"\";\n            if (entityOrProperty instanceof Function) {\n                var subQueryBuilder = entityOrProperty(this.subQuery());\n                this.setParameters(subQueryBuilder.getParameters());\n                subQuery = subQueryBuilder.getQuery();\n            }\n            else {\n                subQuery = entityOrProperty;\n            }\n            var isSubQuery = entityOrProperty instanceof Function || entityOrProperty.substr(0, 1) === \"(\" && entityOrProperty.substr(-1) === \")\";\n            joinAttribute.alias = this.expressionMap.createAlias({\n                type: \"join\",\n                name: aliasName,\n                tablePath: isSubQuery === false ? entityOrProperty : undefined,\n                subQuery: isSubQuery === true ? subQuery : undefined,\n            });\n        }\n    };\n    /**\n     * Creates \"SELECT FROM\" part of SQL query.\n     */\n    SelectQueryBuilder.prototype.createSelectExpression = function () {\n        var _this = this;\n        if (!this.expressionMap.mainAlias)\n            throw new TypeORMError(\"Cannot build query because main alias is not set (call qb#from method)\");\n        // todo throw exception if selects or from is missing\n        var allSelects = [];\n        var excludedSelects = [];\n        if (this.expressionMap.mainAlias.hasMetadata) {\n            var metadata = this.expressionMap.mainAlias.metadata;\n            allSelects.push.apply(allSelects, __spreadArray([], __read(this.buildEscapedEntityColumnSelects(this.expressionMap.mainAlias.name, metadata)), false));\n            excludedSelects.push.apply(excludedSelects, __spreadArray([], __read(this.findEntityColumnSelects(this.expressionMap.mainAlias.name, metadata)), false));\n        }\n        // add selects from joins\n        this.expressionMap.joinAttributes\n            .forEach(function (join) {\n            if (join.metadata) {\n                allSelects.push.apply(allSelects, __spreadArray([], __read(_this.buildEscapedEntityColumnSelects(join.alias.name, join.metadata)), false));\n                excludedSelects.push.apply(excludedSelects, __spreadArray([], __read(_this.findEntityColumnSelects(join.alias.name, join.metadata)), false));\n            }\n            else {\n                var hasMainAlias = _this.expressionMap.selects.some(function (select) { return select.selection === join.alias.name; });\n                if (hasMainAlias) {\n                    allSelects.push({ selection: _this.escape(join.alias.name) + \".*\" });\n                    var excludedSelect = _this.expressionMap.selects.find(function (select) { return select.selection === join.alias.name; });\n                    excludedSelects.push(excludedSelect);\n                }\n            }\n        });\n        // add all other selects\n        this.expressionMap.selects\n            .filter(function (select) { return excludedSelects.indexOf(select) === -1; })\n            .forEach(function (select) { return allSelects.push({ selection: _this.replacePropertyNames(select.selection), aliasName: select.aliasName }); });\n        // if still selection is empty, then simply set it to all (*)\n        if (allSelects.length === 0)\n            allSelects.push({ selection: \"*\" });\n        var lock = \"\";\n        if (this.connection.driver instanceof SqlServerDriver) {\n            switch (this.expressionMap.lockMode) {\n                case \"pessimistic_read\":\n                    lock = \" WITH (HOLDLOCK, ROWLOCK)\";\n                    break;\n                case \"pessimistic_write\":\n                    lock = \" WITH (UPDLOCK, ROWLOCK)\";\n                    break;\n                case \"dirty_read\":\n                    lock = \" WITH (NOLOCK)\";\n                    break;\n            }\n        }\n        // Use certain index\n        var useIndex = \"\";\n        if (this.expressionMap.useIndex) {\n            if (this.connection.driver instanceof MysqlDriver) {\n                useIndex = \" USE INDEX (\" + this.expressionMap.useIndex + \")\";\n            }\n        }\n        // create a selection query\n        var froms = this.expressionMap.aliases\n            .filter(function (alias) { return alias.type === \"from\" && (alias.tablePath || alias.subQuery); })\n            .map(function (alias) {\n            if (alias.subQuery)\n                return alias.subQuery + \" \" + _this.escape(alias.name);\n            return _this.getTableName(alias.tablePath) + \" \" + _this.escape(alias.name);\n        });\n        var select = this.createSelectDistinctExpression();\n        var selection = allSelects.map(function (select) { return select.selection + (select.aliasName ? \" AS \" + _this.escape(select.aliasName) : \"\"); }).join(\", \");\n        return select + selection + \" FROM \" + froms.join(\", \") + lock + useIndex;\n    };\n    /**\n     * Creates select | select distinct part of SQL query.\n     */\n    SelectQueryBuilder.prototype.createSelectDistinctExpression = function () {\n        var _this = this;\n        var _a = this.expressionMap, selectDistinct = _a.selectDistinct, selectDistinctOn = _a.selectDistinctOn, maxExecutionTime = _a.maxExecutionTime;\n        var driver = this.connection.driver;\n        var select = \"SELECT \";\n        if (maxExecutionTime > 0) {\n            if (driver instanceof MysqlDriver) {\n                select += \"/*+ MAX_EXECUTION_TIME(\" + this.expressionMap.maxExecutionTime + \") */ \";\n            }\n        }\n        if (driver instanceof PostgresDriver && selectDistinctOn.length > 0) {\n            var selectDistinctOnMap = selectDistinctOn.map(function (on) { return _this.replacePropertyNames(on); }).join(\", \");\n            select = \"SELECT DISTINCT ON (\" + selectDistinctOnMap + \") \";\n        }\n        else if (selectDistinct) {\n            select = \"SELECT DISTINCT \";\n        }\n        return select;\n    };\n    /**\n     * Creates \"JOIN\" part of SQL query.\n     */\n    SelectQueryBuilder.prototype.createJoinExpression = function () {\n        // examples:\n        // select from owning side\n        // qb.select(\"post\")\n        //     .leftJoinAndSelect(\"post.category\", \"category\");\n        // select from non-owning side\n        // qb.select(\"category\")\n        //     .leftJoinAndSelect(\"category.post\", \"post\");\n        var _this = this;\n        var joins = this.expressionMap.joinAttributes.map(function (joinAttr) {\n            var relation = joinAttr.relation;\n            var destinationTableName = joinAttr.tablePath;\n            var destinationTableAlias = joinAttr.alias.name;\n            var appendedCondition = joinAttr.condition ? \" AND (\" + joinAttr.condition + \")\" : \"\";\n            var parentAlias = joinAttr.parentAlias;\n            // if join was build without relation (e.g. without \"post.category\") then it means that we have direct\n            // table to join, without junction table involved. This means we simply join direct table.\n            if (!parentAlias || !relation) {\n                var destinationJoin = joinAttr.alias.subQuery ? joinAttr.alias.subQuery : _this.getTableName(destinationTableName);\n                return \" \" + joinAttr.direction + \" JOIN \" + destinationJoin + \" \" + _this.escape(destinationTableAlias) +\n                    (joinAttr.condition ? \" ON \" + _this.replacePropertyNames(joinAttr.condition) : \"\");\n            }\n            // if real entity relation is involved\n            if (relation.isManyToOne || relation.isOneToOneOwner) {\n                // JOIN `category` `category` ON `category`.`id` = `post`.`categoryId`\n                var condition = relation.joinColumns.map(function (joinColumn) {\n                    return destinationTableAlias + \".\" + joinColumn.referencedColumn.propertyPath + \"=\" +\n                        parentAlias + \".\" + relation.propertyPath + \".\" + joinColumn.referencedColumn.propertyPath;\n                }).join(\" AND \");\n                return \" \" + joinAttr.direction + \" JOIN \" + _this.getTableName(destinationTableName) + \" \" + _this.escape(destinationTableAlias) + \" ON \" + _this.replacePropertyNames(condition + appendedCondition);\n            }\n            else if (relation.isOneToMany || relation.isOneToOneNotOwner) {\n                // JOIN `post` `post` ON `post`.`categoryId` = `category`.`id`\n                var condition = relation.inverseRelation.joinColumns.map(function (joinColumn) {\n                    if (relation.inverseEntityMetadata.tableType === \"entity-child\" && relation.inverseEntityMetadata.discriminatorColumn) {\n                        appendedCondition += \" AND \" + destinationTableAlias + \".\" + relation.inverseEntityMetadata.discriminatorColumn.databaseName + \"='\" + relation.inverseEntityMetadata.discriminatorValue + \"'\";\n                    }\n                    return destinationTableAlias + \".\" + relation.inverseRelation.propertyPath + \".\" + joinColumn.referencedColumn.propertyPath + \"=\" +\n                        parentAlias + \".\" + joinColumn.referencedColumn.propertyPath;\n                }).join(\" AND \");\n                return \" \" + joinAttr.direction + \" JOIN \" + _this.getTableName(destinationTableName) + \" \" + _this.escape(destinationTableAlias) + \" ON \" + _this.replacePropertyNames(condition + appendedCondition);\n            }\n            else { // means many-to-many\n                var junctionTableName = relation.junctionEntityMetadata.tablePath;\n                var junctionAlias_1 = joinAttr.junctionAlias;\n                var junctionCondition = \"\", destinationCondition = \"\";\n                if (relation.isOwning) {\n                    junctionCondition = relation.joinColumns.map(function (joinColumn) {\n                        // `post_category`.`postId` = `post`.`id`\n                        return junctionAlias_1 + \".\" + joinColumn.propertyPath + \"=\" + parentAlias + \".\" + joinColumn.referencedColumn.propertyPath;\n                    }).join(\" AND \");\n                    destinationCondition = relation.inverseJoinColumns.map(function (joinColumn) {\n                        // `category`.`id` = `post_category`.`categoryId`\n                        return destinationTableAlias + \".\" + joinColumn.referencedColumn.propertyPath + \"=\" + junctionAlias_1 + \".\" + joinColumn.propertyPath;\n                    }).join(\" AND \");\n                }\n                else {\n                    junctionCondition = relation.inverseRelation.inverseJoinColumns.map(function (joinColumn) {\n                        // `post_category`.`categoryId` = `category`.`id`\n                        return junctionAlias_1 + \".\" + joinColumn.propertyPath + \"=\" + parentAlias + \".\" + joinColumn.referencedColumn.propertyPath;\n                    }).join(\" AND \");\n                    destinationCondition = relation.inverseRelation.joinColumns.map(function (joinColumn) {\n                        // `post`.`id` = `post_category`.`postId`\n                        return destinationTableAlias + \".\" + joinColumn.referencedColumn.propertyPath + \"=\" + junctionAlias_1 + \".\" + joinColumn.propertyPath;\n                    }).join(\" AND \");\n                }\n                return \" \" + joinAttr.direction + \" JOIN \" + _this.getTableName(junctionTableName) + \" \" + _this.escape(junctionAlias_1) + \" ON \" + _this.replacePropertyNames(junctionCondition) +\n                    \" \" + joinAttr.direction + \" JOIN \" + _this.getTableName(destinationTableName) + \" \" + _this.escape(destinationTableAlias) + \" ON \" + _this.replacePropertyNames(destinationCondition + appendedCondition);\n            }\n        });\n        return joins.join(\" \");\n    };\n    /**\n     * Creates \"GROUP BY\" part of SQL query.\n     */\n    SelectQueryBuilder.prototype.createGroupByExpression = function () {\n        if (!this.expressionMap.groupBys || !this.expressionMap.groupBys.length)\n            return \"\";\n        return \" GROUP BY \" + this.replacePropertyNames(this.expressionMap.groupBys.join(\", \"));\n    };\n    /**\n     * Creates \"ORDER BY\" part of SQL query.\n     */\n    SelectQueryBuilder.prototype.createOrderByExpression = function () {\n        var _this = this;\n        var orderBys = this.expressionMap.allOrderBys;\n        if (Object.keys(orderBys).length > 0)\n            return \" ORDER BY \" + Object.keys(orderBys)\n                .map(function (columnName) {\n                if (typeof orderBys[columnName] === \"string\") {\n                    return _this.replacePropertyNames(columnName) + \" \" + orderBys[columnName];\n                }\n                else {\n                    return _this.replacePropertyNames(columnName) + \" \" + orderBys[columnName].order + \" \" + orderBys[columnName].nulls;\n                }\n            })\n                .join(\", \");\n        return \"\";\n    };\n    /**\n     * Creates \"LIMIT\" and \"OFFSET\" parts of SQL query.\n     */\n    SelectQueryBuilder.prototype.createLimitOffsetExpression = function () {\n        // in the case if nothing is joined in the query builder we don't need to make two requests to get paginated results\n        // we can use regular limit / offset, that's why we add offset and limit construction here based on skip and take values\n        var offset = this.expressionMap.offset, limit = this.expressionMap.limit;\n        if (!offset && !limit && this.expressionMap.joinAttributes.length === 0) {\n            offset = this.expressionMap.skip;\n            limit = this.expressionMap.take;\n        }\n        if (this.connection.driver instanceof SqlServerDriver) {\n            // Due to a limitation in SQL Server's parser implementation it does not support using\n            // OFFSET or FETCH NEXT without an ORDER BY clause being provided. In cases where the\n            // user does not request one we insert a dummy ORDER BY that does nothing and should\n            // have no effect on the query planner or on the order of the results returned.\n            // https://dba.stackexchange.com/a/193799\n            var prefix = \"\";\n            if ((limit || offset) && Object.keys(this.expressionMap.allOrderBys).length <= 0) {\n                prefix = \" ORDER BY (SELECT NULL)\";\n            }\n            if (limit && offset)\n                return prefix + \" OFFSET \" + offset + \" ROWS FETCH NEXT \" + limit + \" ROWS ONLY\";\n            if (limit)\n                return prefix + \" OFFSET 0 ROWS FETCH NEXT \" + limit + \" ROWS ONLY\";\n            if (offset)\n                return prefix + \" OFFSET \" + offset + \" ROWS\";\n        }\n        else if (this.connection.driver instanceof MysqlDriver || this.connection.driver instanceof AuroraDataApiDriver || this.connection.driver instanceof SapDriver) {\n            if (limit && offset)\n                return \" LIMIT \" + limit + \" OFFSET \" + offset;\n            if (limit)\n                return \" LIMIT \" + limit;\n            if (offset)\n                throw new OffsetWithoutLimitNotSupportedError();\n        }\n        else if (this.connection.driver instanceof AbstractSqliteDriver) {\n            if (limit && offset)\n                return \" LIMIT \" + limit + \" OFFSET \" + offset;\n            if (limit)\n                return \" LIMIT \" + limit;\n            if (offset)\n                return \" LIMIT -1 OFFSET \" + offset;\n        }\n        else if (this.connection.driver instanceof OracleDriver) {\n            if (limit && offset)\n                return \" OFFSET \" + offset + \" ROWS FETCH NEXT \" + limit + \" ROWS ONLY\";\n            if (limit)\n                return \" FETCH NEXT \" + limit + \" ROWS ONLY\";\n            if (offset)\n                return \" OFFSET \" + offset + \" ROWS\";\n        }\n        else {\n            if (limit && offset)\n                return \" LIMIT \" + limit + \" OFFSET \" + offset;\n            if (limit)\n                return \" LIMIT \" + limit;\n            if (offset)\n                return \" OFFSET \" + offset;\n        }\n        return \"\";\n    };\n    /**\n     * Creates \"LOCK\" part of SQL query.\n     */\n    SelectQueryBuilder.prototype.createLockExpression = function () {\n        var driver = this.connection.driver;\n        var lockTablesClause = \"\";\n        if (this.expressionMap.lockTables) {\n            if (!(driver instanceof PostgresDriver)) {\n                throw new TypeORMError(\"Lock tables not supported in selected driver\");\n            }\n            if (this.expressionMap.lockTables.length < 1) {\n                throw new TypeORMError(\"lockTables cannot be an empty array\");\n            }\n            lockTablesClause = \" OF \" + this.expressionMap.lockTables.join(\", \");\n        }\n        switch (this.expressionMap.lockMode) {\n            case \"pessimistic_read\":\n                if (driver instanceof MysqlDriver || driver instanceof AuroraDataApiDriver) {\n                    return \" LOCK IN SHARE MODE\";\n                }\n                else if (driver instanceof PostgresDriver) {\n                    return \" FOR SHARE\" + lockTablesClause;\n                }\n                else if (driver instanceof OracleDriver) {\n                    return \" FOR UPDATE\";\n                }\n                else if (driver instanceof SqlServerDriver) {\n                    return \"\";\n                }\n                else {\n                    throw new LockNotSupportedOnGivenDriverError();\n                }\n            case \"pessimistic_write\":\n                if (driver instanceof MysqlDriver || driver instanceof AuroraDataApiDriver || driver instanceof OracleDriver) {\n                    return \" FOR UPDATE\";\n                }\n                else if (driver instanceof PostgresDriver) {\n                    return \" FOR UPDATE\" + lockTablesClause;\n                }\n                else if (driver instanceof SqlServerDriver) {\n                    return \"\";\n                }\n                else {\n                    throw new LockNotSupportedOnGivenDriverError();\n                }\n            case \"pessimistic_partial_write\":\n                if (driver instanceof PostgresDriver) {\n                    return \" FOR UPDATE\" + lockTablesClause + \" SKIP LOCKED\";\n                }\n                else if (driver instanceof MysqlDriver) {\n                    return \" FOR UPDATE SKIP LOCKED\";\n                }\n                else {\n                    throw new LockNotSupportedOnGivenDriverError();\n                }\n            case \"pessimistic_write_or_fail\":\n                if (driver instanceof PostgresDriver) {\n                    return \" FOR UPDATE\" + lockTablesClause + \" NOWAIT\";\n                }\n                else if (driver instanceof MysqlDriver) {\n                    return \" FOR UPDATE NOWAIT\";\n                }\n                else {\n                    throw new LockNotSupportedOnGivenDriverError();\n                }\n            case \"for_no_key_update\":\n                if (driver instanceof PostgresDriver) {\n                    return \" FOR NO KEY UPDATE\" + lockTablesClause;\n                }\n                else {\n                    throw new LockNotSupportedOnGivenDriverError();\n                }\n            default:\n                return \"\";\n        }\n    };\n    /**\n     * Creates \"HAVING\" part of SQL query.\n     */\n    SelectQueryBuilder.prototype.createHavingExpression = function () {\n        var _this = this;\n        if (!this.expressionMap.havings || !this.expressionMap.havings.length)\n            return \"\";\n        var conditions = this.expressionMap.havings.map(function (having, index) {\n            switch (having.type) {\n                case \"and\":\n                    return (index > 0 ? \"AND \" : \"\") + _this.replacePropertyNames(having.condition);\n                case \"or\":\n                    return (index > 0 ? \"OR \" : \"\") + _this.replacePropertyNames(having.condition);\n                default:\n                    return _this.replacePropertyNames(having.condition);\n            }\n        }).join(\" \");\n        if (!conditions.length)\n            return \"\";\n        return \" HAVING \" + conditions;\n    };\n    SelectQueryBuilder.prototype.buildEscapedEntityColumnSelects = function (aliasName, metadata) {\n        var _this = this;\n        var hasMainAlias = this.expressionMap.selects.some(function (select) { return select.selection === aliasName; });\n        var columns = [];\n        if (hasMainAlias) {\n            columns.push.apply(columns, __spreadArray([], __read(metadata.columns.filter(function (column) { return column.isSelect === true; })), false));\n        }\n        columns.push.apply(columns, __spreadArray([], __read(metadata.columns.filter(function (column) {\n            return _this.expressionMap.selects.some(function (select) { return select.selection === aliasName + \".\" + column.propertyPath; });\n        })), false));\n        // if user used partial selection and did not select some primary columns which are required to be selected\n        // we select those primary columns and mark them as \"virtual\". Later virtual column values will be removed from final entity\n        // to make entity contain exactly what user selected\n        if (columns.length === 0) // however not in the case when nothing (even partial) was selected from this target (for example joins without selection)\n            return [];\n        var nonSelectedPrimaryColumns = this.expressionMap.queryEntity ? metadata.primaryColumns.filter(function (primaryColumn) { return columns.indexOf(primaryColumn) === -1; }) : [];\n        var allColumns = __spreadArray(__spreadArray([], __read(columns), false), __read(nonSelectedPrimaryColumns), false);\n        return allColumns.map(function (column) {\n            var selection = _this.expressionMap.selects.find(function (select) { return select.selection === aliasName + \".\" + column.propertyPath; });\n            var selectionPath = _this.escape(aliasName) + \".\" + _this.escape(column.databaseName);\n            if (_this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                if (_this.connection.driver instanceof MysqlDriver || _this.connection.driver instanceof AuroraDataApiDriver) {\n                    var useLegacy = _this.connection.driver.options.legacySpatialSupport;\n                    var asText = useLegacy ? \"AsText\" : \"ST_AsText\";\n                    selectionPath = asText + \"(\" + selectionPath + \")\";\n                }\n                if (_this.connection.driver instanceof PostgresDriver)\n                    // cast to JSON to trigger parsing in the driver\n                    if (column.precision) {\n                        selectionPath = \"ST_AsGeoJSON(\" + selectionPath + \", \" + column.precision + \")::json\";\n                    }\n                    else {\n                        selectionPath = \"ST_AsGeoJSON(\" + selectionPath + \")::json\";\n                    }\n                if (_this.connection.driver instanceof SqlServerDriver)\n                    selectionPath = selectionPath + \".ToString()\";\n            }\n            return {\n                selection: selectionPath,\n                aliasName: selection && selection.aliasName ? selection.aliasName : DriverUtils.buildAlias(_this.connection.driver, aliasName, column.databaseName),\n                // todo: need to keep in mind that custom selection.aliasName breaks hydrator. fix it later!\n                virtual: selection ? selection.virtual === true : (hasMainAlias ? false : true),\n            };\n        });\n    };\n    SelectQueryBuilder.prototype.findEntityColumnSelects = function (aliasName, metadata) {\n        var mainSelect = this.expressionMap.selects.find(function (select) { return select.selection === aliasName; });\n        if (mainSelect)\n            return [mainSelect];\n        return this.expressionMap.selects.filter(function (select) {\n            return metadata.columns.some(function (column) { return select.selection === aliasName + \".\" + column.propertyPath; });\n        });\n    };\n    SelectQueryBuilder.prototype.computeCountExpression = function () {\n        var _this = this;\n        var mainAlias = this.expressionMap.mainAlias.name; // todo: will this work with \"fromTableName\"?\n        var metadata = this.expressionMap.mainAlias.metadata;\n        var primaryColumns = metadata.primaryColumns;\n        var distinctAlias = this.escape(mainAlias);\n        // If we aren't doing anything that will create a join, we can use a simpler `COUNT` instead\n        // so we prevent poor query patterns in the most likely cases\n        if (this.expressionMap.joinAttributes.length === 0 &&\n            this.expressionMap.relationIdAttributes.length === 0 &&\n            this.expressionMap.relationCountAttributes.length === 0) {\n            return \"COUNT(1)\";\n        }\n        // For everything else, we'll need to do some hackery to get the correct count values.\n        if (this.connection.driver instanceof CockroachDriver || this.connection.driver instanceof PostgresDriver) {\n            // Postgres and CockroachDB can pass multiple parameters to the `DISTINCT` function\n            // https://www.postgresql.org/docs/9.5/sql-select.html#SQL-DISTINCT\n            return \"COUNT(DISTINCT(\" +\n                primaryColumns.map(function (c) { return distinctAlias + \".\" + _this.escape(c.databaseName); }).join(\", \") +\n                \"))\";\n        }\n        if (this.connection.driver instanceof MysqlDriver) {\n            // MySQL & MariaDB can pass multiple parameters to the `DISTINCT` language construct\n            // https://mariadb.com/kb/en/count-distinct/\n            return \"COUNT(DISTINCT \" +\n                primaryColumns.map(function (c) { return distinctAlias + \".\" + _this.escape(c.databaseName); }).join(\", \") +\n                \")\";\n        }\n        if (this.connection.driver instanceof SqlServerDriver) {\n            // SQL Server has gotta be different from everyone else.  They don't support\n            // distinct counting multiple columns & they don't have the same operator\n            // characteristic for concatenating, so we gotta use the `CONCAT` function.\n            // However, If it's exactly 1 column we can omit the `CONCAT` for better performance.\n            var columnsExpression = primaryColumns.map(function (primaryColumn) { return distinctAlias + \".\" + _this.escape(primaryColumn.databaseName); }).join(\", '|;|', \");\n            if (primaryColumns.length === 1) {\n                return \"COUNT(DISTINCT(\" + columnsExpression + \"))\";\n            }\n            return \"COUNT(DISTINCT(CONCAT(\" + columnsExpression + \")))\";\n        }\n        // If all else fails, fall back to a `COUNT` and `DISTINCT` across all the primary columns concatenated.\n        // Per the SQL spec, this is the canonical string concatenation mechanism which is most\n        // likely to work across servers implementing the SQL standard.\n        // Please note, if there is only one primary column that the concatenation does not occur in this\n        // query and the query is a standard `COUNT DISTINCT` in that case.\n        return \"COUNT(DISTINCT(\" +\n            primaryColumns.map(function (c) { return distinctAlias + \".\" + _this.escape(c.databaseName); }).join(\" || '|;|' || \") +\n            \"))\";\n    };\n    SelectQueryBuilder.prototype.executeCountQuery = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var countSql, results;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        countSql = this.computeCountExpression();\n                        return [4 /*yield*/, this.clone()\n                                .orderBy()\n                                .groupBy()\n                                .offset(undefined)\n                                .limit(undefined)\n                                .skip(undefined)\n                                .take(undefined)\n                                .select(countSql, \"cnt\")\n                                .setOption(\"disable-global-order\")\n                                .loadRawResults(queryRunner)];\n                    case 1:\n                        results = _a.sent();\n                        if (!results || !results[0] || !results[0][\"cnt\"])\n                            return [2 /*return*/, 0];\n                        return [2 /*return*/, parseInt(results[0][\"cnt\"])];\n                }\n            });\n        });\n    };\n    /**\n     * Executes sql generated by query builder and returns object with raw results and entities created from them.\n     */\n    SelectQueryBuilder.prototype.executeEntitiesAndRawResults = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, relationIdLoader, relationCountLoader, relationIdMetadataTransformer, relationCountMetadataTransformer, rawResults, entities, _a, selects, orderBys_1, metadata_1, mainAliasName_1, querySelects, condition, parameters_1, alias_1, ids, areAllNumbers, rawRelationIdResults, rawRelationCountResults, transformer;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!this.expressionMap.mainAlias)\n                            throw new TypeORMError(\"Alias is not set. Use \\\"from\\\" method to set an alias.\");\n                        if ((this.expressionMap.lockMode === \"pessimistic_read\" || this.expressionMap.lockMode === \"pessimistic_write\" || this.expressionMap.lockMode === \"pessimistic_partial_write\" || this.expressionMap.lockMode === \"pessimistic_write_or_fail\" || this.expressionMap.lockMode === \"for_no_key_update\") && !queryRunner.isTransactionActive)\n                            throw new PessimisticLockTransactionRequiredError();\n                        if (this.expressionMap.lockMode === \"optimistic\") {\n                            metadata = this.expressionMap.mainAlias.metadata;\n                            if (!metadata.versionColumn && !metadata.updateDateColumn)\n                                throw new NoVersionOrUpdateDateColumnError(metadata.name);\n                        }\n                        relationIdLoader = new RelationIdLoader(this.connection, queryRunner, this.expressionMap.relationIdAttributes);\n                        relationCountLoader = new RelationCountLoader(this.connection, queryRunner, this.expressionMap.relationCountAttributes);\n                        relationIdMetadataTransformer = new RelationIdMetadataToAttributeTransformer(this.expressionMap);\n                        relationIdMetadataTransformer.transform();\n                        relationCountMetadataTransformer = new RelationCountMetadataToAttributeTransformer(this.expressionMap);\n                        relationCountMetadataTransformer.transform();\n                        rawResults = [], entities = [];\n                        if (!((this.expressionMap.skip || this.expressionMap.take) && this.expressionMap.joinAttributes.length > 0)) return [3 /*break*/, 4];\n                        _a = __read(this.createOrderByCombinedWithSelectExpression(\"distinctAlias\"), 2), selects = _a[0], orderBys_1 = _a[1];\n                        metadata_1 = this.expressionMap.mainAlias.metadata;\n                        mainAliasName_1 = this.expressionMap.mainAlias.name;\n                        querySelects = metadata_1.primaryColumns.map(function (primaryColumn) {\n                            var distinctAlias = _this.escape(\"distinctAlias\");\n                            var columnAlias = _this.escape(DriverUtils.buildAlias(_this.connection.driver, mainAliasName_1, primaryColumn.databaseName));\n                            if (!orderBys_1[columnAlias]) // make sure we aren't overriding user-defined order in inverse direction\n                                orderBys_1[columnAlias] = \"ASC\";\n                            var alias = DriverUtils.buildAlias(_this.connection.driver, \"ids_\" + mainAliasName_1, primaryColumn.databaseName);\n                            return distinctAlias + \".\" + columnAlias + \" as \\\"\" + alias + \"\\\"\";\n                        });\n                        return [4 /*yield*/, new SelectQueryBuilder(this.connection, queryRunner)\n                                .select(\"DISTINCT \" + querySelects.join(\", \"))\n                                .addSelect(selects)\n                                .from(\"(\" + this.clone().orderBy().getQuery() + \")\", \"distinctAlias\")\n                                .offset(this.expressionMap.skip)\n                                .limit(this.expressionMap.take)\n                                .orderBy(orderBys_1)\n                                .cache(this.expressionMap.cache ? this.expressionMap.cache : this.expressionMap.cacheId, this.expressionMap.cacheDuration)\n                                .setParameters(this.getParameters())\n                                .setNativeParameters(this.expressionMap.nativeParameters)\n                                .getRawMany()];\n                    case 1:\n                        rawResults = _b.sent();\n                        if (!(rawResults.length > 0)) return [3 /*break*/, 3];\n                        condition = \"\";\n                        parameters_1 = {};\n                        if (metadata_1.hasMultiplePrimaryKeys) {\n                            condition = rawResults.map(function (result, index) {\n                                return metadata_1.primaryColumns.map(function (primaryColumn) {\n                                    var paramKey = \"orm_distinct_ids_\" + index + \"_\" + primaryColumn.databaseName;\n                                    parameters_1[paramKey] = result[\"ids_\" + mainAliasName_1 + \"_\" + primaryColumn.databaseName];\n                                    return mainAliasName_1 + \".\" + primaryColumn.propertyPath + \"=:\" + paramKey;\n                                }).join(\" AND \");\n                            }).join(\" OR \");\n                        }\n                        else {\n                            alias_1 = DriverUtils.buildAlias(this.connection.driver, \"ids_\" + mainAliasName_1, metadata_1.primaryColumns[0].databaseName);\n                            ids = rawResults.map(function (result) { return result[alias_1]; });\n                            areAllNumbers = ids.every(function (id) { return typeof id === \"number\"; });\n                            if (areAllNumbers) {\n                                // fixes #190. if all numbers then its safe to perform query without parameter\n                                condition = mainAliasName_1 + \".\" + metadata_1.primaryColumns[0].propertyPath + \" IN (\" + ids.join(\", \") + \")\";\n                            }\n                            else {\n                                parameters_1[\"orm_distinct_ids\"] = ids;\n                                condition = mainAliasName_1 + \".\" + metadata_1.primaryColumns[0].propertyPath + \" IN (:...orm_distinct_ids)\";\n                            }\n                        }\n                        return [4 /*yield*/, this.clone()\n                                .mergeExpressionMap({ extraAppendedAndWhereCondition: condition })\n                                .setParameters(parameters_1)\n                                .loadRawResults(queryRunner)];\n                    case 2:\n                        rawResults = _b.sent();\n                        _b.label = 3;\n                    case 3: return [3 /*break*/, 6];\n                    case 4: return [4 /*yield*/, this.loadRawResults(queryRunner)];\n                    case 5:\n                        rawResults = _b.sent();\n                        _b.label = 6;\n                    case 6:\n                        if (!(rawResults.length > 0)) return [3 /*break*/, 10];\n                        return [4 /*yield*/, relationIdLoader.load(rawResults)];\n                    case 7:\n                        rawRelationIdResults = _b.sent();\n                        return [4 /*yield*/, relationCountLoader.load(rawResults)];\n                    case 8:\n                        rawRelationCountResults = _b.sent();\n                        transformer = new RawSqlResultsToEntityTransformer(this.expressionMap, this.connection.driver, rawRelationIdResults, rawRelationCountResults, this.queryRunner);\n                        entities = transformer.transform(rawResults, this.expressionMap.mainAlias);\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 10];\n                        return [4 /*yield*/, queryRunner.broadcaster.broadcast(\"Load\", this.expressionMap.mainAlias.metadata, entities)];\n                    case 9:\n                        _b.sent();\n                        _b.label = 10;\n                    case 10: return [2 /*return*/, {\n                            raw: rawResults,\n                            entities: entities,\n                        }];\n                }\n            });\n        });\n    };\n    SelectQueryBuilder.prototype.createOrderByCombinedWithSelectExpression = function (parentAlias) {\n        var _this = this;\n        // if table has a default order then apply it\n        var orderBys = this.expressionMap.allOrderBys;\n        var selectString = Object.keys(orderBys)\n            .map(function (orderCriteria) {\n            if (orderCriteria.indexOf(\".\") !== -1) {\n                var criteriaParts = orderCriteria.split(\".\");\n                var aliasName = criteriaParts[0];\n                var propertyPath = criteriaParts.slice(1).join(\".\");\n                var alias = _this.expressionMap.findAliasByName(aliasName);\n                var column = alias.metadata.findColumnWithPropertyPath(propertyPath);\n                return _this.escape(parentAlias) + \".\" + _this.escape(DriverUtils.buildAlias(_this.connection.driver, aliasName, column.databaseName));\n            }\n            else {\n                if (_this.expressionMap.selects.find(function (select) { return select.selection === orderCriteria || select.aliasName === orderCriteria; }))\n                    return _this.escape(parentAlias) + \".\" + orderCriteria;\n                return \"\";\n            }\n        })\n            .join(\", \");\n        var orderByObject = {};\n        Object.keys(orderBys).forEach(function (orderCriteria) {\n            if (orderCriteria.indexOf(\".\") !== -1) {\n                var criteriaParts = orderCriteria.split(\".\");\n                var aliasName = criteriaParts[0];\n                var propertyPath = criteriaParts.slice(1).join(\".\");\n                var alias = _this.expressionMap.findAliasByName(aliasName);\n                var column = alias.metadata.findColumnWithPropertyPath(propertyPath);\n                orderByObject[_this.escape(parentAlias) + \".\" + _this.escape(DriverUtils.buildAlias(_this.connection.driver, aliasName, column.databaseName))] = orderBys[orderCriteria];\n            }\n            else {\n                if (_this.expressionMap.selects.find(function (select) { return select.selection === orderCriteria || select.aliasName === orderCriteria; })) {\n                    orderByObject[_this.escape(parentAlias) + \".\" + orderCriteria] = orderBys[orderCriteria];\n                }\n                else {\n                    orderByObject[orderCriteria] = orderBys[orderCriteria];\n                }\n            }\n        });\n        return [selectString, orderByObject];\n    };\n    /**\n     * Loads raw results from the database.\n     */\n    SelectQueryBuilder.prototype.loadRawResults = function (queryRunner) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, sql, parameters, queryId, cacheOptions, savedQueryResultCacheOptions, cacheError, error_6, results, error_7;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _a = __read(this.getQueryAndParameters(), 2), sql = _a[0], parameters = _a[1];\n                        queryId = sql + \" -- PARAMETERS: \" + JSON.stringify(parameters);\n                        cacheOptions = typeof this.connection.options.cache === \"object\" ? this.connection.options.cache : {};\n                        savedQueryResultCacheOptions = undefined;\n                        cacheError = false;\n                        if (!(this.connection.queryResultCache && (this.expressionMap.cache || cacheOptions.alwaysEnabled))) return [3 /*break*/, 4];\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.connection.queryResultCache.getFromCache({\n                                identifier: this.expressionMap.cacheId,\n                                query: queryId,\n                                duration: this.expressionMap.cacheDuration || cacheOptions.duration || 1000\n                            }, queryRunner)];\n                    case 2:\n                        savedQueryResultCacheOptions = _b.sent();\n                        if (savedQueryResultCacheOptions && !this.connection.queryResultCache.isExpired(savedQueryResultCacheOptions)) {\n                            return [2 /*return*/, JSON.parse(savedQueryResultCacheOptions.result)];\n                        }\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_6 = _b.sent();\n                        if (!cacheOptions.ignoreErrors) {\n                            throw error_6;\n                        }\n                        cacheError = true;\n                        return [3 /*break*/, 4];\n                    case 4: return [4 /*yield*/, queryRunner.query(sql, parameters, true)];\n                    case 5:\n                        results = _b.sent();\n                        if (!(!cacheError && this.connection.queryResultCache && (this.expressionMap.cache || cacheOptions.alwaysEnabled))) return [3 /*break*/, 9];\n                        _b.label = 6;\n                    case 6:\n                        _b.trys.push([6, 8, , 9]);\n                        return [4 /*yield*/, this.connection.queryResultCache.storeInCache({\n                                identifier: this.expressionMap.cacheId,\n                                query: queryId,\n                                time: new Date().getTime(),\n                                duration: this.expressionMap.cacheDuration || cacheOptions.duration || 1000,\n                                result: JSON.stringify(results.records)\n                            }, savedQueryResultCacheOptions, queryRunner)];\n                    case 7:\n                        _b.sent();\n                        return [3 /*break*/, 9];\n                    case 8:\n                        error_7 = _b.sent();\n                        if (!cacheOptions.ignoreErrors) {\n                            throw error_7;\n                        }\n                        return [3 /*break*/, 9];\n                    case 9: return [2 /*return*/, results.records];\n                }\n            });\n        });\n    };\n    /**\n     * Merges into expression map given expression map properties.\n     */\n    SelectQueryBuilder.prototype.mergeExpressionMap = function (expressionMap) {\n        ObjectUtils.assign(this.expressionMap, expressionMap);\n        return this;\n    };\n    /**\n     * Normalizes a give number - converts to int if possible.\n     */\n    SelectQueryBuilder.prototype.normalizeNumber = function (num) {\n        if (typeof num === \"number\" || num === undefined || num === null)\n            return num;\n        return Number(num);\n    };\n    /**\n     * Creates a query builder used to execute sql queries inside this query builder.\n     */\n    SelectQueryBuilder.prototype.obtainQueryRunner = function () {\n        return this.queryRunner || this.connection.createQueryRunner(\"slave\");\n    };\n    return SelectQueryBuilder;\n}(QueryBuilder));\nexport { SelectQueryBuilder };\n\n//# sourceMappingURL=SelectQueryBuilder.js.map\n","import { __awaiter, __extends, __generator, __read } from \"tslib\";\nimport { CockroachDriver } from \"../driver/cockroachdb/CockroachDriver\";\nimport { QueryBuilder } from \"./QueryBuilder\";\nimport { SqlServerDriver } from \"../driver/sqlserver/SqlServerDriver\";\nimport { PostgresDriver } from \"../driver/postgres/PostgresDriver\";\nimport { UpdateResult } from \"./result/UpdateResult\";\nimport { ReturningStatementNotSupportedError } from \"../error/ReturningStatementNotSupportedError\";\nimport { ReturningResultsEntityUpdator } from \"./ReturningResultsEntityUpdator\";\nimport { MysqlDriver } from \"../driver/mysql/MysqlDriver\";\nimport { LimitOnUpdateNotSupportedError } from \"../error/LimitOnUpdateNotSupportedError\";\nimport { MissingDeleteDateColumnError } from \"../error/MissingDeleteDateColumnError\";\nimport { OracleDriver } from \"../driver/oracle/OracleDriver\";\nimport { UpdateValuesMissingError } from \"../error/UpdateValuesMissingError\";\nimport { EntitySchema } from \"../entity-schema/EntitySchema\";\nimport { TypeORMError } from \"../error\";\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nvar SoftDeleteQueryBuilder = /** @class */ (function (_super) {\n    __extends(SoftDeleteQueryBuilder, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function SoftDeleteQueryBuilder(connectionOrQueryBuilder, queryRunner) {\n        var _this = _super.call(this, connectionOrQueryBuilder, queryRunner) || this;\n        _this.expressionMap.aliasNamePrefixingEnabled = false;\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated sql query without parameters being replaced.\n     */\n    SoftDeleteQueryBuilder.prototype.getQuery = function () {\n        var sql = this.createUpdateExpression();\n        sql += this.createOrderByExpression();\n        sql += this.createLimitExpression();\n        return sql.trim();\n    };\n    /**\n     * Executes sql generated by query builder and returns raw database results.\n     */\n    SoftDeleteQueryBuilder.prototype.execute = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, transactionStartedByUs, returningResultsEntityUpdator, _a, sql, parameters, queryResult, updateResult, error_1, rollbackError_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 13, 18, 21]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _b.sent();\n                        transactionStartedByUs = true;\n                        _b.label = 3;\n                    case 3:\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, queryRunner.broadcaster.broadcast(\"BeforeUpdate\", this.expressionMap.mainAlias.metadata)];\n                    case 4:\n                        _b.sent();\n                        _b.label = 5;\n                    case 5:\n                        returningResultsEntityUpdator = new ReturningResultsEntityUpdator(queryRunner, this.expressionMap);\n                        if (this.expressionMap.updateEntity === true &&\n                            this.expressionMap.mainAlias.hasMetadata &&\n                            this.expressionMap.whereEntities.length > 0) {\n                            this.expressionMap.extraReturningColumns = returningResultsEntityUpdator.getUpdationReturningColumns();\n                        }\n                        _a = __read(this.getQueryAndParameters(), 2), sql = _a[0], parameters = _a[1];\n                        return [4 /*yield*/, queryRunner.query(sql, parameters, true)];\n                    case 6:\n                        queryResult = _b.sent();\n                        updateResult = UpdateResult.from(queryResult);\n                        if (!(this.expressionMap.updateEntity === true &&\n                            this.expressionMap.mainAlias.hasMetadata &&\n                            this.expressionMap.whereEntities.length > 0)) return [3 /*break*/, 8];\n                        return [4 /*yield*/, returningResultsEntityUpdator.update(updateResult, this.expressionMap.whereEntities)];\n                    case 7:\n                        _b.sent();\n                        _b.label = 8;\n                    case 8:\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 10];\n                        return [4 /*yield*/, queryRunner.broadcaster.broadcast(\"AfterUpdate\", this.expressionMap.mainAlias.metadata)];\n                    case 9:\n                        _b.sent();\n                        _b.label = 10;\n                    case 10:\n                        if (!transactionStartedByUs) return [3 /*break*/, 12];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 11:\n                        _b.sent();\n                        _b.label = 12;\n                    case 12: return [2 /*return*/, updateResult];\n                    case 13:\n                        error_1 = _b.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 17];\n                        _b.label = 14;\n                    case 14:\n                        _b.trys.push([14, 16, , 17]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 15:\n                        _b.sent();\n                        return [3 /*break*/, 17];\n                    case 16:\n                        rollbackError_1 = _b.sent();\n                        return [3 /*break*/, 17];\n                    case 17: throw error_1;\n                    case 18:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 20];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 19:\n                        _b.sent();\n                        _b.label = 20;\n                    case 20: return [7 /*endfinally*/];\n                    case 21: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Specifies FROM which entity's table select/update/delete/soft-delete will be executed.\n     * Also sets a main string alias of the selection data.\n     */\n    SoftDeleteQueryBuilder.prototype.from = function (entityTarget, aliasName) {\n        entityTarget = entityTarget instanceof EntitySchema ? entityTarget.options.name : entityTarget;\n        var mainAlias = this.createFromAlias(entityTarget, aliasName);\n        this.expressionMap.setMainAlias(mainAlias);\n        return this;\n    };\n    /**\n     * Sets WHERE condition in the query builder.\n     * If you had previously WHERE expression defined,\n     * calling this function will override previously set WHERE conditions.\n     * Additionally you can add parameters used in where expression.\n     */\n    SoftDeleteQueryBuilder.prototype.where = function (where, parameters) {\n        this.expressionMap.wheres = []; // don't move this block below since computeWhereParameter can add where expressions\n        var condition = this.getWhereCondition(where);\n        if (condition)\n            this.expressionMap.wheres = [{ type: \"simple\", condition: condition }];\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    SoftDeleteQueryBuilder.prototype.andWhere = function (where, parameters) {\n        this.expressionMap.wheres.push({ type: \"and\", condition: this.getWhereCondition(where) });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new OR WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    SoftDeleteQueryBuilder.prototype.orWhere = function (where, parameters) {\n        this.expressionMap.wheres.push({ type: \"or\", condition: this.getWhereCondition(where) });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     */\n    SoftDeleteQueryBuilder.prototype.whereInIds = function (ids) {\n        return this.where(this.getWhereInIdsCondition(ids));\n    };\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     */\n    SoftDeleteQueryBuilder.prototype.andWhereInIds = function (ids) {\n        return this.andWhere(this.getWhereInIdsCondition(ids));\n    };\n    /**\n     * Adds new OR WHERE with conditions for the given ids.\n     */\n    SoftDeleteQueryBuilder.prototype.orWhereInIds = function (ids) {\n        return this.orWhere(this.getWhereInIdsCondition(ids));\n    };\n    /**\n     * Optional returning/output clause.\n     */\n    SoftDeleteQueryBuilder.prototype.output = function (output) {\n        return this.returning(output);\n    };\n    /**\n     * Optional returning/output clause.\n     */\n    SoftDeleteQueryBuilder.prototype.returning = function (returning) {\n        // not all databases support returning/output cause\n        if (!this.connection.driver.isReturningSqlSupported())\n            throw new ReturningStatementNotSupportedError();\n        this.expressionMap.returning = returning;\n        return this;\n    };\n    /**\n     * Sets ORDER BY condition in the query builder.\n     * If you had previously ORDER BY expression defined,\n     * calling this function will override previously set ORDER BY conditions.\n     */\n    SoftDeleteQueryBuilder.prototype.orderBy = function (sort, order, nulls) {\n        var _a, _b;\n        if (order === void 0) { order = \"ASC\"; }\n        if (sort) {\n            if (sort instanceof Object) {\n                this.expressionMap.orderBys = sort;\n            }\n            else {\n                if (nulls) {\n                    this.expressionMap.orderBys = (_a = {}, _a[sort] = { order: order, nulls: nulls }, _a);\n                }\n                else {\n                    this.expressionMap.orderBys = (_b = {}, _b[sort] = order, _b);\n                }\n            }\n        }\n        else {\n            this.expressionMap.orderBys = {};\n        }\n        return this;\n    };\n    /**\n     * Adds ORDER BY condition in the query builder.\n     */\n    SoftDeleteQueryBuilder.prototype.addOrderBy = function (sort, order, nulls) {\n        if (order === void 0) { order = \"ASC\"; }\n        if (nulls) {\n            this.expressionMap.orderBys[sort] = { order: order, nulls: nulls };\n        }\n        else {\n            this.expressionMap.orderBys[sort] = order;\n        }\n        return this;\n    };\n    /**\n     * Sets LIMIT - maximum number of rows to be selected.\n     */\n    SoftDeleteQueryBuilder.prototype.limit = function (limit) {\n        this.expressionMap.limit = limit;\n        return this;\n    };\n    /**\n     * Indicates if entity must be updated after update operation.\n     * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n     * Enabled by default.\n     */\n    SoftDeleteQueryBuilder.prototype.whereEntity = function (entity) {\n        var _this = this;\n        if (!this.expressionMap.mainAlias.hasMetadata)\n            throw new TypeORMError(\".whereEntity method can only be used on queries which update real entity table.\");\n        this.expressionMap.wheres = [];\n        var entities = Array.isArray(entity) ? entity : [entity];\n        entities.forEach(function (entity) {\n            var entityIdMap = _this.expressionMap.mainAlias.metadata.getEntityIdMap(entity);\n            if (!entityIdMap)\n                throw new TypeORMError(\"Provided entity does not have ids set, cannot perform operation.\");\n            _this.orWhereInIds(entityIdMap);\n        });\n        this.expressionMap.whereEntities = entities;\n        return this;\n    };\n    /**\n     * Indicates if entity must be updated after update operation.\n     * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n     * Enabled by default.\n     */\n    SoftDeleteQueryBuilder.prototype.updateEntity = function (enabled) {\n        this.expressionMap.updateEntity = enabled;\n        return this;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates UPDATE express used to perform insert query.\n     */\n    SoftDeleteQueryBuilder.prototype.createUpdateExpression = function () {\n        var metadata = this.expressionMap.mainAlias.hasMetadata ? this.expressionMap.mainAlias.metadata : undefined;\n        if (!metadata)\n            throw new TypeORMError(\"Cannot get entity metadata for the given alias \\\"\" + this.expressionMap.mainAlias + \"\\\"\");\n        if (!metadata.deleteDateColumn) {\n            throw new MissingDeleteDateColumnError(metadata);\n        }\n        // prepare columns and values to be updated\n        var updateColumnAndValues = [];\n        switch (this.expressionMap.queryType) {\n            case \"soft-delete\":\n                updateColumnAndValues.push(this.escape(metadata.deleteDateColumn.databaseName) + \" = CURRENT_TIMESTAMP\");\n                break;\n            case \"restore\":\n                updateColumnAndValues.push(this.escape(metadata.deleteDateColumn.databaseName) + \" = NULL\");\n                break;\n            default:\n                throw new TypeORMError(\"The queryType must be \\\"soft-delete\\\" or \\\"restore\\\"\");\n        }\n        if (metadata.versionColumn)\n            updateColumnAndValues.push(this.escape(metadata.versionColumn.databaseName) + \" = \" + this.escape(metadata.versionColumn.databaseName) + \" + 1\");\n        if (metadata.updateDateColumn)\n            updateColumnAndValues.push(this.escape(metadata.updateDateColumn.databaseName) + \" = CURRENT_TIMESTAMP\"); // todo: fix issue with CURRENT_TIMESTAMP(6) being used, can \"DEFAULT\" be used?!\n        if (updateColumnAndValues.length <= 0) {\n            throw new UpdateValuesMissingError();\n        }\n        // get a table name and all column database names\n        var whereExpression = this.createWhereExpression();\n        var returningExpression = this.createReturningExpression();\n        // generate and return sql update query\n        if (returningExpression && (this.connection.driver instanceof PostgresDriver || this.connection.driver instanceof OracleDriver || this.connection.driver instanceof CockroachDriver)) {\n            return \"UPDATE \" + this.getTableName(this.getMainTableName()) + \" SET \" + updateColumnAndValues.join(\", \") + whereExpression + \" RETURNING \" + returningExpression;\n        }\n        else if (returningExpression && this.connection.driver instanceof SqlServerDriver) {\n            return \"UPDATE \" + this.getTableName(this.getMainTableName()) + \" SET \" + updateColumnAndValues.join(\", \") + \" OUTPUT \" + returningExpression + whereExpression;\n        }\n        else {\n            return \"UPDATE \" + this.getTableName(this.getMainTableName()) + \" SET \" + updateColumnAndValues.join(\", \") + whereExpression; // todo: how do we replace aliases in where to nothing?\n        }\n    };\n    /**\n     * Creates \"ORDER BY\" part of SQL query.\n     */\n    SoftDeleteQueryBuilder.prototype.createOrderByExpression = function () {\n        var _this = this;\n        var orderBys = this.expressionMap.orderBys;\n        if (Object.keys(orderBys).length > 0)\n            return \" ORDER BY \" + Object.keys(orderBys)\n                .map(function (columnName) {\n                if (typeof orderBys[columnName] === \"string\") {\n                    return _this.replacePropertyNames(columnName) + \" \" + orderBys[columnName];\n                }\n                else {\n                    return _this.replacePropertyNames(columnName) + \" \" + orderBys[columnName].order + \" \" + orderBys[columnName].nulls;\n                }\n            })\n                .join(\", \");\n        return \"\";\n    };\n    /**\n     * Creates \"LIMIT\" parts of SQL query.\n     */\n    SoftDeleteQueryBuilder.prototype.createLimitExpression = function () {\n        var limit = this.expressionMap.limit;\n        if (limit) {\n            if (this.connection.driver instanceof MysqlDriver) {\n                return \" LIMIT \" + limit;\n            }\n            else {\n                throw new LimitOnUpdateNotSupportedError();\n            }\n        }\n        return \"\";\n    };\n    return SoftDeleteQueryBuilder;\n}(QueryBuilder));\nexport { SoftDeleteQueryBuilder };\n\n//# sourceMappingURL=SoftDeleteQueryBuilder.js.map\n","import { __awaiter, __extends, __generator, __read, __spreadArray, __values } from \"tslib\";\nimport { CockroachDriver } from \"../driver/cockroachdb/CockroachDriver\";\nimport { SapDriver } from \"../driver/sap/SapDriver\";\nimport { QueryBuilder } from \"./QueryBuilder\";\nimport { SqlServerDriver } from \"../driver/sqlserver/SqlServerDriver\";\nimport { PostgresDriver } from \"../driver/postgres/PostgresDriver\";\nimport { UpdateResult } from \"./result/UpdateResult\";\nimport { ReturningStatementNotSupportedError } from \"../error/ReturningStatementNotSupportedError\";\nimport { ReturningResultsEntityUpdator } from \"./ReturningResultsEntityUpdator\";\nimport { MysqlDriver } from \"../driver/mysql/MysqlDriver\";\nimport { LimitOnUpdateNotSupportedError } from \"../error/LimitOnUpdateNotSupportedError\";\nimport { OracleDriver } from \"../driver/oracle/OracleDriver\";\nimport { UpdateValuesMissingError } from \"../error/UpdateValuesMissingError\";\nimport { EntityColumnNotFound } from \"../error/EntityColumnNotFound\";\nimport { AuroraDataApiDriver } from \"../driver/aurora-data-api/AuroraDataApiDriver\";\nimport { TypeORMError } from \"../error\";\n/**\n * Allows to build complex sql queries in a fashion way and execute those queries.\n */\nvar UpdateQueryBuilder = /** @class */ (function (_super) {\n    __extends(UpdateQueryBuilder, _super);\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function UpdateQueryBuilder(connectionOrQueryBuilder, queryRunner) {\n        var _this = _super.call(this, connectionOrQueryBuilder, queryRunner) || this;\n        _this.expressionMap.aliasNamePrefixingEnabled = false;\n        return _this;\n    }\n    // -------------------------------------------------------------------------\n    // Public Implemented Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Gets generated sql query without parameters being replaced.\n     */\n    UpdateQueryBuilder.prototype.getQuery = function () {\n        var sql = this.createComment();\n        sql += this.createUpdateExpression();\n        sql += this.createOrderByExpression();\n        sql += this.createLimitExpression();\n        return sql.trim();\n    };\n    /**\n     * Executes sql generated by query builder and returns raw database results.\n     */\n    UpdateQueryBuilder.prototype.execute = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var queryRunner, transactionStartedByUs, declareSql, selectOutputSql, returningResultsEntityUpdator, returningColumns_1, _a, _b, columnPath, _c, updateSql, parameters, statements, queryResult, updateResult, error_1, rollbackError_1;\n            var e_1, _d;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        queryRunner = this.obtainQueryRunner();\n                        transactionStartedByUs = false;\n                        _e.label = 1;\n                    case 1:\n                        _e.trys.push([1, 13, 18, 21]);\n                        if (!(this.expressionMap.useTransaction === true && queryRunner.isTransactionActive === false)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, queryRunner.startTransaction()];\n                    case 2:\n                        _e.sent();\n                        transactionStartedByUs = true;\n                        _e.label = 3;\n                    case 3:\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 5];\n                        return [4 /*yield*/, queryRunner.broadcaster.broadcast(\"BeforeUpdate\", this.expressionMap.mainAlias.metadata, this.expressionMap.valuesSet)];\n                    case 4:\n                        _e.sent();\n                        _e.label = 5;\n                    case 5:\n                        declareSql = null;\n                        selectOutputSql = null;\n                        returningResultsEntityUpdator = new ReturningResultsEntityUpdator(queryRunner, this.expressionMap);\n                        returningColumns_1 = [];\n                        if (Array.isArray(this.expressionMap.returning) && this.expressionMap.mainAlias.hasMetadata) {\n                            try {\n                                for (_a = __values(this.expressionMap.returning), _b = _a.next(); !_b.done; _b = _a.next()) {\n                                    columnPath = _b.value;\n                                    returningColumns_1.push.apply(returningColumns_1, __spreadArray([], __read(this.expressionMap.mainAlias.metadata.findColumnsWithPropertyPath(columnPath)), false));\n                                }\n                            }\n                            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                            finally {\n                                try {\n                                    if (_b && !_b.done && (_d = _a.return)) _d.call(_a);\n                                }\n                                finally { if (e_1) throw e_1.error; }\n                            }\n                        }\n                        if (this.expressionMap.updateEntity === true &&\n                            this.expressionMap.mainAlias.hasMetadata &&\n                            this.expressionMap.whereEntities.length > 0) {\n                            this.expressionMap.extraReturningColumns = returningResultsEntityUpdator.getUpdationReturningColumns();\n                            returningColumns_1.push.apply(returningColumns_1, __spreadArray([], __read(this.expressionMap.extraReturningColumns.filter(function (c) { return !returningColumns_1.includes(c); })), false));\n                        }\n                        if (returningColumns_1.length > 0 && this.connection.driver instanceof SqlServerDriver) {\n                            declareSql = this.connection.driver.buildTableVariableDeclaration(\"@OutputTable\", returningColumns_1);\n                            selectOutputSql = \"SELECT * FROM @OutputTable\";\n                        }\n                        _c = __read(this.getQueryAndParameters(), 2), updateSql = _c[0], parameters = _c[1];\n                        statements = [declareSql, updateSql, selectOutputSql];\n                        return [4 /*yield*/, queryRunner.query(statements.filter(function (sql) { return sql != null; }).join(\";\\n\\n\"), parameters, true)];\n                    case 6:\n                        queryResult = _e.sent();\n                        updateResult = UpdateResult.from(queryResult);\n                        if (!(this.expressionMap.updateEntity === true &&\n                            this.expressionMap.mainAlias.hasMetadata &&\n                            this.expressionMap.whereEntities.length > 0)) return [3 /*break*/, 8];\n                        return [4 /*yield*/, returningResultsEntityUpdator.update(updateResult, this.expressionMap.whereEntities)];\n                    case 7:\n                        _e.sent();\n                        _e.label = 8;\n                    case 8:\n                        if (!(this.expressionMap.callListeners === true && this.expressionMap.mainAlias.hasMetadata)) return [3 /*break*/, 10];\n                        return [4 /*yield*/, queryRunner.broadcaster.broadcast(\"AfterUpdate\", this.expressionMap.mainAlias.metadata, this.expressionMap.valuesSet)];\n                    case 9:\n                        _e.sent();\n                        _e.label = 10;\n                    case 10:\n                        if (!transactionStartedByUs) return [3 /*break*/, 12];\n                        return [4 /*yield*/, queryRunner.commitTransaction()];\n                    case 11:\n                        _e.sent();\n                        _e.label = 12;\n                    case 12: return [2 /*return*/, updateResult];\n                    case 13:\n                        error_1 = _e.sent();\n                        if (!transactionStartedByUs) return [3 /*break*/, 17];\n                        _e.label = 14;\n                    case 14:\n                        _e.trys.push([14, 16, , 17]);\n                        return [4 /*yield*/, queryRunner.rollbackTransaction()];\n                    case 15:\n                        _e.sent();\n                        return [3 /*break*/, 17];\n                    case 16:\n                        rollbackError_1 = _e.sent();\n                        return [3 /*break*/, 17];\n                    case 17: throw error_1;\n                    case 18:\n                        if (!(queryRunner !== this.queryRunner)) return [3 /*break*/, 20];\n                        return [4 /*yield*/, queryRunner.release()];\n                    case 19:\n                        _e.sent();\n                        _e.label = 20;\n                    case 20: return [7 /*endfinally*/];\n                    case 21: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Values needs to be updated.\n     */\n    UpdateQueryBuilder.prototype.set = function (values) {\n        this.expressionMap.valuesSet = values;\n        return this;\n    };\n    /**\n     * Sets WHERE condition in the query builder.\n     * If you had previously WHERE expression defined,\n     * calling this function will override previously set WHERE conditions.\n     * Additionally you can add parameters used in where expression.\n     */\n    UpdateQueryBuilder.prototype.where = function (where, parameters) {\n        this.expressionMap.wheres = []; // don't move this block below since computeWhereParameter can add where expressions\n        var condition = this.getWhereCondition(where);\n        if (condition)\n            this.expressionMap.wheres = [{ type: \"simple\", condition: condition }];\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    UpdateQueryBuilder.prototype.andWhere = function (where, parameters) {\n        this.expressionMap.wheres.push({ type: \"and\", condition: this.getWhereCondition(where) });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new OR WHERE condition in the query builder.\n     * Additionally you can add parameters used in where expression.\n     */\n    UpdateQueryBuilder.prototype.orWhere = function (where, parameters) {\n        this.expressionMap.wheres.push({ type: \"or\", condition: this.getWhereCondition(where) });\n        if (parameters)\n            this.setParameters(parameters);\n        return this;\n    };\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     */\n    UpdateQueryBuilder.prototype.whereInIds = function (ids) {\n        return this.where(this.getWhereInIdsCondition(ids));\n    };\n    /**\n     * Adds new AND WHERE with conditions for the given ids.\n     */\n    UpdateQueryBuilder.prototype.andWhereInIds = function (ids) {\n        return this.andWhere(this.getWhereInIdsCondition(ids));\n    };\n    /**\n     * Adds new OR WHERE with conditions for the given ids.\n     */\n    UpdateQueryBuilder.prototype.orWhereInIds = function (ids) {\n        return this.orWhere(this.getWhereInIdsCondition(ids));\n    };\n    /**\n     * Optional returning/output clause.\n     */\n    UpdateQueryBuilder.prototype.output = function (output) {\n        return this.returning(output);\n    };\n    /**\n     * Optional returning/output clause.\n     */\n    UpdateQueryBuilder.prototype.returning = function (returning) {\n        // not all databases support returning/output cause\n        if (!this.connection.driver.isReturningSqlSupported())\n            throw new ReturningStatementNotSupportedError();\n        this.expressionMap.returning = returning;\n        return this;\n    };\n    /**\n     * Sets ORDER BY condition in the query builder.\n     * If you had previously ORDER BY expression defined,\n     * calling this function will override previously set ORDER BY conditions.\n     */\n    UpdateQueryBuilder.prototype.orderBy = function (sort, order, nulls) {\n        var _a, _b;\n        if (order === void 0) { order = \"ASC\"; }\n        if (sort) {\n            if (sort instanceof Object) {\n                this.expressionMap.orderBys = sort;\n            }\n            else {\n                if (nulls) {\n                    this.expressionMap.orderBys = (_a = {}, _a[sort] = { order: order, nulls: nulls }, _a);\n                }\n                else {\n                    this.expressionMap.orderBys = (_b = {}, _b[sort] = order, _b);\n                }\n            }\n        }\n        else {\n            this.expressionMap.orderBys = {};\n        }\n        return this;\n    };\n    /**\n     * Adds ORDER BY condition in the query builder.\n     */\n    UpdateQueryBuilder.prototype.addOrderBy = function (sort, order, nulls) {\n        if (order === void 0) { order = \"ASC\"; }\n        if (nulls) {\n            this.expressionMap.orderBys[sort] = { order: order, nulls: nulls };\n        }\n        else {\n            this.expressionMap.orderBys[sort] = order;\n        }\n        return this;\n    };\n    /**\n     * Sets LIMIT - maximum number of rows to be selected.\n     */\n    UpdateQueryBuilder.prototype.limit = function (limit) {\n        this.expressionMap.limit = limit;\n        return this;\n    };\n    /**\n     * Indicates if entity must be updated after update operation.\n     * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n     * Enabled by default.\n     */\n    UpdateQueryBuilder.prototype.whereEntity = function (entity) {\n        var _this = this;\n        if (!this.expressionMap.mainAlias.hasMetadata)\n            throw new TypeORMError(\".whereEntity method can only be used on queries which update real entity table.\");\n        this.expressionMap.wheres = [];\n        var entities = Array.isArray(entity) ? entity : [entity];\n        entities.forEach(function (entity) {\n            var entityIdMap = _this.expressionMap.mainAlias.metadata.getEntityIdMap(entity);\n            if (!entityIdMap)\n                throw new TypeORMError(\"Provided entity does not have ids set, cannot perform operation.\");\n            _this.orWhereInIds(entityIdMap);\n        });\n        this.expressionMap.whereEntities = entities;\n        return this;\n    };\n    /**\n     * Indicates if entity must be updated after update operation.\n     * This may produce extra query or use RETURNING / OUTPUT statement (depend on database).\n     * Enabled by default.\n     */\n    UpdateQueryBuilder.prototype.updateEntity = function (enabled) {\n        this.expressionMap.updateEntity = enabled;\n        return this;\n    };\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates UPDATE express used to perform insert query.\n     */\n    UpdateQueryBuilder.prototype.createUpdateExpression = function () {\n        var _this = this;\n        var valuesSet = this.getValueSet();\n        var metadata = this.expressionMap.mainAlias.hasMetadata ? this.expressionMap.mainAlias.metadata : undefined;\n        // prepare columns and values to be updated\n        var updateColumnAndValues = [];\n        var updatedColumns = [];\n        if (metadata) {\n            this.createPropertyPath(metadata, valuesSet).forEach(function (propertyPath) {\n                // todo: make this and other query builder to work with properly with tables without metadata\n                var columns = metadata.findColumnsWithPropertyPath(propertyPath);\n                if (columns.length <= 0) {\n                    throw new EntityColumnNotFound(propertyPath);\n                }\n                columns.forEach(function (column) {\n                    if (!column.isUpdate) {\n                        return;\n                    }\n                    updatedColumns.push(column);\n                    //\n                    var value = column.getEntityValue(valuesSet);\n                    if (column.referencedColumn && value instanceof Object && !(value instanceof Buffer)) {\n                        value = column.referencedColumn.getEntityValue(value);\n                    }\n                    else if (!(value instanceof Function)) {\n                        value = _this.connection.driver.preparePersistentValue(value, column);\n                    }\n                    // todo: duplication zone\n                    if (value instanceof Function) { // support for SQL expressions in update query\n                        updateColumnAndValues.push(_this.escape(column.databaseName) + \" = \" + value());\n                    }\n                    else if (_this.connection.driver instanceof SapDriver && value === null) {\n                        updateColumnAndValues.push(_this.escape(column.databaseName) + \" = NULL\");\n                    }\n                    else {\n                        if (_this.connection.driver instanceof SqlServerDriver) {\n                            value = _this.connection.driver.parametrizeValue(column, value);\n                        }\n                        var paramName = _this.createParameter(value);\n                        var expression = null;\n                        if ((_this.connection.driver instanceof MysqlDriver || _this.connection.driver instanceof AuroraDataApiDriver) && _this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            var useLegacy = _this.connection.driver.options.legacySpatialSupport;\n                            var geomFromText = useLegacy ? \"GeomFromText\" : \"ST_GeomFromText\";\n                            if (column.srid != null) {\n                                expression = geomFromText + \"(\" + paramName + \", \" + column.srid + \")\";\n                            }\n                            else {\n                                expression = geomFromText + \"(\" + paramName + \")\";\n                            }\n                        }\n                        else if (_this.connection.driver instanceof PostgresDriver && _this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            if (column.srid != null) {\n                                expression = \"ST_SetSRID(ST_GeomFromGeoJSON(\" + paramName + \"), \" + column.srid + \")::\" + column.type;\n                            }\n                            else {\n                                expression = \"ST_GeomFromGeoJSON(\" + paramName + \")::\" + column.type;\n                            }\n                        }\n                        else if (_this.connection.driver instanceof SqlServerDriver && _this.connection.driver.spatialTypes.indexOf(column.type) !== -1) {\n                            expression = column.type + \"::STGeomFromText(\" + paramName + \", \" + (column.srid || \"0\") + \")\";\n                        }\n                        else {\n                            expression = paramName;\n                        }\n                        updateColumnAndValues.push(_this.escape(column.databaseName) + \" = \" + expression);\n                    }\n                });\n            });\n            if (metadata.versionColumn && updatedColumns.indexOf(metadata.versionColumn) === -1)\n                updateColumnAndValues.push(this.escape(metadata.versionColumn.databaseName) + \" = \" + this.escape(metadata.versionColumn.databaseName) + \" + 1\");\n            if (metadata.updateDateColumn && updatedColumns.indexOf(metadata.updateDateColumn) === -1)\n                updateColumnAndValues.push(this.escape(metadata.updateDateColumn.databaseName) + \" = CURRENT_TIMESTAMP\"); // todo: fix issue with CURRENT_TIMESTAMP(6) being used, can \"DEFAULT\" be used?!\n        }\n        else {\n            Object.keys(valuesSet).map(function (key) {\n                var value = valuesSet[key];\n                // todo: duplication zone\n                if (value instanceof Function) { // support for SQL expressions in update query\n                    updateColumnAndValues.push(_this.escape(key) + \" = \" + value());\n                }\n                else if (_this.connection.driver instanceof SapDriver && value === null) {\n                    updateColumnAndValues.push(_this.escape(key) + \" = NULL\");\n                }\n                else {\n                    // we need to store array values in a special class to make sure parameter replacement will work correctly\n                    // if (value instanceof Array)\n                    //     value = new ArrayParameter(value);\n                    var paramName = _this.createParameter(value);\n                    updateColumnAndValues.push(_this.escape(key) + \" = \" + paramName);\n                }\n            });\n        }\n        if (updateColumnAndValues.length <= 0) {\n            throw new UpdateValuesMissingError();\n        }\n        // get a table name and all column database names\n        var whereExpression = this.createWhereExpression();\n        var returningExpression = this.createReturningExpression();\n        // generate and return sql update query\n        if (returningExpression && (this.connection.driver instanceof PostgresDriver || this.connection.driver instanceof OracleDriver || this.connection.driver instanceof CockroachDriver)) {\n            return \"UPDATE \" + this.getTableName(this.getMainTableName()) + \" SET \" + updateColumnAndValues.join(\", \") + whereExpression + \" RETURNING \" + returningExpression;\n        }\n        else if (returningExpression && this.connection.driver instanceof SqlServerDriver) {\n            return \"UPDATE \" + this.getTableName(this.getMainTableName()) + \" SET \" + updateColumnAndValues.join(\", \") + \" OUTPUT \" + returningExpression + whereExpression;\n        }\n        else {\n            return \"UPDATE \" + this.getTableName(this.getMainTableName()) + \" SET \" + updateColumnAndValues.join(\", \") + whereExpression; // todo: how do we replace aliases in where to nothing?\n        }\n    };\n    /**\n     * Creates \"ORDER BY\" part of SQL query.\n     */\n    UpdateQueryBuilder.prototype.createOrderByExpression = function () {\n        var _this = this;\n        var orderBys = this.expressionMap.orderBys;\n        if (Object.keys(orderBys).length > 0)\n            return \" ORDER BY \" + Object.keys(orderBys)\n                .map(function (columnName) {\n                if (typeof orderBys[columnName] === \"string\") {\n                    return _this.replacePropertyNames(columnName) + \" \" + orderBys[columnName];\n                }\n                else {\n                    return _this.replacePropertyNames(columnName) + \" \" + orderBys[columnName].order + \" \" + orderBys[columnName].nulls;\n                }\n            })\n                .join(\", \");\n        return \"\";\n    };\n    /**\n     * Creates \"LIMIT\" parts of SQL query.\n     */\n    UpdateQueryBuilder.prototype.createLimitExpression = function () {\n        var limit = this.expressionMap.limit;\n        if (limit) {\n            if (this.connection.driver instanceof MysqlDriver || this.connection.driver instanceof AuroraDataApiDriver) {\n                return \" LIMIT \" + limit;\n            }\n            else {\n                throw new LimitOnUpdateNotSupportedError();\n            }\n        }\n        return \"\";\n    };\n    /**\n     * Gets array of values need to be inserted into the target table.\n     */\n    UpdateQueryBuilder.prototype.getValueSet = function () {\n        if (this.expressionMap.valuesSet instanceof Object)\n            return this.expressionMap.valuesSet;\n        throw new UpdateValuesMissingError();\n    };\n    return UpdateQueryBuilder;\n}(QueryBuilder));\nexport { UpdateQueryBuilder };\n\n//# sourceMappingURL=UpdateQueryBuilder.js.map\n","import { __read } from \"tslib\";\nimport { QueryBuilderUtils } from \"../QueryBuilderUtils\";\nimport { ObjectUtils } from \"../../util/ObjectUtils\";\nimport { TypeORMError } from \"../../error/TypeORMError\";\nvar RelationCountAttribute = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationCountAttribute(expressionMap, relationCountAttribute) {\n        this.expressionMap = expressionMap;\n        ObjectUtils.assign(this, relationCountAttribute || {});\n    }\n    Object.defineProperty(RelationCountAttribute.prototype, \"joinInverseSideMetadata\", {\n        // -------------------------------------------------------------------------\n        // Public Methods\n        // -------------------------------------------------------------------------\n        get: function () {\n            return this.relation.inverseEntityMetadata;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"parentAlias\", {\n        /**\n         * Alias of the parent of this join.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"post\" is a parent alias.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new TypeORMError(\"Given value must be a string representation of alias property\");\n            return this.relationName.split(\".\")[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"relationProperty\", {\n        /**\n         * Relation property name of the parent.\n         * This is used to understand what is joined.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"category\" is a relation property.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new TypeORMError(\"Given value is a string representation of alias property\");\n            return this.relationName.split(\".\")[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"junctionAlias\", {\n        get: function () {\n            var _a = __read(this.relationName.split(\".\"), 2), parentAlias = _a[0], relationProperty = _a[1];\n            return parentAlias + \"_\" + relationProperty + \"_rc\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"relation\", {\n        /**\n         * Relation of the parent.\n         * This is used to understand what is joined.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new TypeORMError(\"Given value is a string representation of alias property\");\n            var _a = __read(this.relationName.split(\".\"), 2), parentAlias = _a[0], propertyPath = _a[1];\n            var relationOwnerSelection = this.expressionMap.findAliasByName(parentAlias);\n            var relation = relationOwnerSelection.metadata.findRelationWithPropertyPath(propertyPath);\n            if (!relation)\n                throw new TypeORMError(\"Relation with property path \" + propertyPath + \" in entity was not found.\");\n            return relation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"metadata\", {\n        /**\n         * Metadata of the joined entity.\n         * If table without entity was joined, then it will return undefined.\n         */\n        get: function () {\n            if (!QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new TypeORMError(\"Given value is a string representation of alias property\");\n            var parentAlias = this.relationName.split(\".\")[0];\n            var selection = this.expressionMap.findAliasByName(parentAlias);\n            return selection.metadata;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RelationCountAttribute.prototype, \"mapToPropertyPropertyName\", {\n        get: function () {\n            return this.mapToProperty.split(\".\")[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return RelationCountAttribute;\n}());\nexport { RelationCountAttribute };\n\n//# sourceMappingURL=RelationCountAttribute.js.map\n","import { __read } from \"tslib\";\nimport { QueryBuilderUtils } from \"../QueryBuilderUtils\";\nimport { ObjectUtils } from \"../../util/ObjectUtils\";\nimport { TypeORMError } from \"../../error/TypeORMError\";\n/**\n * Stores all join relation id attributes which will be used to build a JOIN query.\n */\nvar RelationIdAttribute = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function RelationIdAttribute(queryExpressionMap, relationIdAttribute) {\n        this.queryExpressionMap = queryExpressionMap;\n        /**\n         * Indicates if relation id should NOT be loaded as id map.\n         */\n        this.disableMixedMap = false;\n        ObjectUtils.assign(this, relationIdAttribute || {});\n    }\n    Object.defineProperty(RelationIdAttribute.prototype, \"joinInverseSideMetadata\", {\n        // -------------------------------------------------------------------------\n        // Public Methods\n        // -------------------------------------------------------------------------\n        get: function () {\n            return this.relation.inverseEntityMetadata;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RelationIdAttribute.prototype, \"parentAlias\", {\n        /**\n         * Alias of the parent of this join.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"post\" is a parent alias.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new TypeORMError(\"Given value must be a string representation of alias property\");\n            return this.relationName.substr(0, this.relationName.indexOf(\".\"));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RelationIdAttribute.prototype, \"relationPropertyPath\", {\n        /**\n         * Relation property name of the parent.\n         * This is used to understand what is joined.\n         * For example, if we join (\"post.category\", \"categoryAlias\") then \"category\" is a relation property.\n         * This value is extracted from entityOrProperty value.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new TypeORMError(\"Given value must be a string representation of alias property\");\n            return this.relationName.substr(this.relationName.indexOf(\".\") + 1);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RelationIdAttribute.prototype, \"relation\", {\n        /**\n         * Relation of the parent.\n         * This is used to understand what is joined.\n         * This is available when join was made using \"post.category\" syntax.\n         */\n        get: function () {\n            if (!QueryBuilderUtils.isAliasProperty(this.relationName))\n                throw new TypeORMError(\"Given value must be a string representation of alias property\");\n            var relationOwnerSelection = this.queryExpressionMap.findAliasByName(this.parentAlias);\n            var relation = relationOwnerSelection.metadata.findRelationWithPropertyPath(this.relationPropertyPath);\n            if (!relation)\n                throw new TypeORMError(\"Relation with property path \" + this.relationPropertyPath + \" in entity was not found.\");\n            return relation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RelationIdAttribute.prototype, \"junctionAlias\", {\n        /**\n         * Generates alias of junction table, whose ids we get.\n         */\n        get: function () {\n            var _a = __read(this.relationName.split(\".\"), 2), parentAlias = _a[0], relationProperty = _a[1];\n            return parentAlias + \"_\" + relationProperty + \"_rid\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RelationIdAttribute.prototype, \"junctionMetadata\", {\n        /**\n         * Metadata of the joined entity.\n         * If extra condition without entity was joined, then it will return undefined.\n         */\n        get: function () {\n            return this.relation.junctionEntityMetadata;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RelationIdAttribute.prototype, \"mapToPropertyParentAlias\", {\n        get: function () {\n            return this.mapToProperty.substr(0, this.mapToProperty.indexOf(\".\"));\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RelationIdAttribute.prototype, \"mapToPropertyPropertyPath\", {\n        get: function () {\n            return this.mapToProperty.substr(this.mapToProperty.indexOf(\".\") + 1);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return RelationIdAttribute;\n}());\nexport { RelationIdAttribute };\n\n//# sourceMappingURL=RelationIdAttribute.js.map\n","/**\n * Result object returned by DeleteQueryBuilder execution.\n */\nvar DeleteResult = /** @class */ (function () {\n    function DeleteResult() {\n    }\n    DeleteResult.from = function (queryResult) {\n        var result = new this();\n        result.raw = queryResult.records;\n        result.affected = queryResult.affected;\n        return result;\n    };\n    return DeleteResult;\n}());\nexport { DeleteResult };\n\n//# sourceMappingURL=DeleteResult.js.map\n","/**\n * Result object returned by InsertQueryBuilder execution.\n */\nvar InsertResult = /** @class */ (function () {\n    function InsertResult() {\n        /**\n         * Contains inserted entity id.\n         * Has entity-like structure (not just column database name and values).\n         */\n        this.identifiers = [];\n        /**\n         * Generated values returned by a database.\n         * Has entity-like structure (not just column database name and values).\n         */\n        this.generatedMaps = [];\n    }\n    InsertResult.from = function (queryResult) {\n        var result = new this();\n        result.raw = queryResult.raw;\n        return result;\n    };\n    return InsertResult;\n}());\nexport { InsertResult };\n\n//# sourceMappingURL=InsertResult.js.map\n","/**\n * Result object returned by UpdateQueryBuilder execution.\n */\nvar UpdateResult = /** @class */ (function () {\n    function UpdateResult() {\n        /**\n         * Contains inserted entity id.\n         * Has entity-like structure (not just column database name and values).\n         */\n        // identifier: ObjectLiteral[] = [];\n        /**\n         * Generated values returned by a database.\n         * Has entity-like structure (not just column database name and values).\n         */\n        this.generatedMaps = [];\n    }\n    UpdateResult.from = function (queryResult) {\n        var result = new this();\n        result.raw = queryResult.records;\n        result.affected = queryResult.affected;\n        return result;\n    };\n    return UpdateResult;\n}());\nexport { UpdateResult };\n\n//# sourceMappingURL=UpdateResult.js.map\n","import { __assign } from \"tslib\";\nimport { TableColumn } from \"./TableColumn\";\nimport { TableIndex } from \"./TableIndex\";\nimport { TableForeignKey } from \"./TableForeignKey\";\nimport { TableUtils } from \"../util/TableUtils\";\nimport { TableUnique } from \"./TableUnique\";\nimport { TableCheck } from \"./TableCheck\";\nimport { TableExclusion } from \"./TableExclusion\";\n/**\n * Table in the database represented in this class.\n */\nvar Table = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function Table(options) {\n        /**\n         * Table columns.\n         */\n        this.columns = [];\n        /**\n         * Table indices.\n         */\n        this.indices = [];\n        /**\n         * Table foreign keys.\n         */\n        this.foreignKeys = [];\n        /**\n         * Table unique constraints.\n         */\n        this.uniques = [];\n        /**\n         * Table check constraints.\n         */\n        this.checks = [];\n        /**\n         * Table exclusion constraints.\n         */\n        this.exclusions = [];\n        /**\n         * Indicates if table was just created.\n         * This is needed, for example to check if we need to skip primary keys creation\n         * for new tables.\n         */\n        this.justCreated = false;\n        if (options) {\n            this.database = options.database;\n            this.schema = options.schema;\n            this.name = options.name;\n            if (options.columns)\n                this.columns = options.columns.map(function (column) { return new TableColumn(column); });\n            if (options.indices)\n                this.indices = options.indices.map(function (index) { return new TableIndex(index); });\n            if (options.foreignKeys)\n                this.foreignKeys = options.foreignKeys.map(function (foreignKey) { return new TableForeignKey(__assign(__assign({}, foreignKey), { referencedDatabase: (foreignKey === null || foreignKey === void 0 ? void 0 : foreignKey.referencedDatabase) || options.database, referencedSchema: (foreignKey === null || foreignKey === void 0 ? void 0 : foreignKey.referencedSchema) || options.schema })); });\n            if (options.uniques)\n                this.uniques = options.uniques.map(function (unique) { return new TableUnique(unique); });\n            if (options.checks)\n                this.checks = options.checks.map(function (check) { return new TableCheck(check); });\n            if (options.exclusions)\n                this.exclusions = options.exclusions.map(function (exclusion) { return new TableExclusion(exclusion); });\n            if (options.justCreated !== undefined)\n                this.justCreated = options.justCreated;\n            this.engine = options.engine;\n        }\n    }\n    Object.defineProperty(Table.prototype, \"primaryColumns\", {\n        // -------------------------------------------------------------------------\n        // Accessors\n        // -------------------------------------------------------------------------\n        get: function () {\n            return this.columns.filter(function (column) { return column.isPrimary; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Clones this table to a new table with all properties cloned.\n     */\n    Table.prototype.clone = function () {\n        return new Table({\n            schema: this.schema,\n            database: this.database,\n            name: this.name,\n            columns: this.columns.map(function (column) { return column.clone(); }),\n            indices: this.indices.map(function (constraint) { return constraint.clone(); }),\n            foreignKeys: this.foreignKeys.map(function (constraint) { return constraint.clone(); }),\n            uniques: this.uniques.map(function (constraint) { return constraint.clone(); }),\n            checks: this.checks.map(function (constraint) { return constraint.clone(); }),\n            exclusions: this.exclusions.map(function (constraint) { return constraint.clone(); }),\n            justCreated: this.justCreated,\n            engine: this.engine,\n        });\n    };\n    /**\n     * Add column and creates its constraints.\n     */\n    Table.prototype.addColumn = function (column) {\n        this.columns.push(column);\n    };\n    /**\n     * Remove column and its constraints.\n     */\n    Table.prototype.removeColumn = function (column) {\n        var foundColumn = this.columns.find(function (c) { return c.name === column.name; });\n        if (foundColumn)\n            this.columns.splice(this.columns.indexOf(foundColumn), 1);\n    };\n    /**\n     * Adds unique constraint.\n     */\n    Table.prototype.addUniqueConstraint = function (uniqueConstraint) {\n        this.uniques.push(uniqueConstraint);\n        if (uniqueConstraint.columnNames.length === 1) {\n            var uniqueColumn = this.columns.find(function (column) { return column.name === uniqueConstraint.columnNames[0]; });\n            if (uniqueColumn)\n                uniqueColumn.isUnique = true;\n        }\n    };\n    /**\n     * Removes unique constraint.\n     */\n    Table.prototype.removeUniqueConstraint = function (removedUnique) {\n        var foundUnique = this.uniques.find(function (unique) { return unique.name === removedUnique.name; });\n        if (foundUnique) {\n            this.uniques.splice(this.uniques.indexOf(foundUnique), 1);\n            if (foundUnique.columnNames.length === 1) {\n                var uniqueColumn = this.columns.find(function (column) { return column.name === foundUnique.columnNames[0]; });\n                if (uniqueColumn)\n                    uniqueColumn.isUnique = false;\n            }\n        }\n    };\n    /**\n     * Adds check constraint.\n     */\n    Table.prototype.addCheckConstraint = function (checkConstraint) {\n        this.checks.push(checkConstraint);\n    };\n    /**\n     * Removes check constraint.\n     */\n    Table.prototype.removeCheckConstraint = function (removedCheck) {\n        var foundCheck = this.checks.find(function (check) { return check.name === removedCheck.name; });\n        if (foundCheck) {\n            this.checks.splice(this.checks.indexOf(foundCheck), 1);\n        }\n    };\n    /**\n     * Adds exclusion constraint.\n     */\n    Table.prototype.addExclusionConstraint = function (exclusionConstraint) {\n        this.exclusions.push(exclusionConstraint);\n    };\n    /**\n     * Removes exclusion constraint.\n     */\n    Table.prototype.removeExclusionConstraint = function (removedExclusion) {\n        var foundExclusion = this.exclusions.find(function (exclusion) { return exclusion.name === removedExclusion.name; });\n        if (foundExclusion) {\n            this.exclusions.splice(this.exclusions.indexOf(foundExclusion), 1);\n        }\n    };\n    /**\n     * Adds foreign keys.\n     */\n    Table.prototype.addForeignKey = function (foreignKey) {\n        this.foreignKeys.push(foreignKey);\n    };\n    /**\n     * Removes foreign key.\n     */\n    Table.prototype.removeForeignKey = function (removedForeignKey) {\n        var fk = this.foreignKeys.find(function (foreignKey) { return foreignKey.name === removedForeignKey.name; });\n        if (fk)\n            this.foreignKeys.splice(this.foreignKeys.indexOf(fk), 1);\n    };\n    /**\n     * Adds index.\n     */\n    Table.prototype.addIndex = function (index, isMysql) {\n        if (isMysql === void 0) { isMysql = false; }\n        this.indices.push(index);\n        // in Mysql unique indices and unique constraints are the same thing\n        // if index is unique and have only one column, we mark this column as unique\n        if (index.columnNames.length === 1 && index.isUnique && isMysql) {\n            var column = this.columns.find(function (c) { return c.name === index.columnNames[0]; });\n            if (column)\n                column.isUnique = true;\n        }\n    };\n    /**\n     * Removes index.\n     */\n    Table.prototype.removeIndex = function (tableIndex, isMysql) {\n        if (isMysql === void 0) { isMysql = false; }\n        var index = this.indices.find(function (index) { return index.name === tableIndex.name; });\n        if (index) {\n            this.indices.splice(this.indices.indexOf(index), 1);\n            // in Mysql unique indices and unique constraints are the same thing\n            // if index is unique and have only one column, we move `unique` attribute from its column\n            if (index.columnNames.length === 1 && index.isUnique && isMysql) {\n                var column_1 = this.columns.find(function (c) { return c.name === index.columnNames[0]; });\n                if (column_1)\n                    column_1.isUnique = this.indices.some(function (ind) { return ind.columnNames.length === 1 && ind.columnNames[0] === column_1.name && !!index.isUnique; });\n            }\n        }\n    };\n    Table.prototype.findColumnByName = function (name) {\n        return this.columns.find(function (column) { return column.name === name; });\n    };\n    /**\n     * Returns all column indices.\n     */\n    Table.prototype.findColumnIndices = function (column) {\n        return this.indices.filter(function (index) {\n            return !!index.columnNames.find(function (columnName) { return columnName === column.name; });\n        });\n    };\n    /**\n     * Returns all column foreign keys.\n     */\n    Table.prototype.findColumnForeignKeys = function (column) {\n        return this.foreignKeys.filter(function (foreignKey) {\n            return !!foreignKey.columnNames.find(function (columnName) { return columnName === column.name; });\n        });\n    };\n    /**\n     * Returns all column uniques.\n     */\n    Table.prototype.findColumnUniques = function (column) {\n        return this.uniques.filter(function (unique) {\n            return !!unique.columnNames.find(function (columnName) { return columnName === column.name; });\n        });\n    };\n    /**\n     * Returns all column checks.\n     */\n    Table.prototype.findColumnChecks = function (column) {\n        return this.checks.filter(function (check) {\n            return !!check.columnNames.find(function (columnName) { return columnName === column.name; });\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates table from a given entity metadata.\n     */\n    Table.create = function (entityMetadata, driver) {\n        var database = entityMetadata.database === driver.database ? undefined : entityMetadata.database;\n        var schema = entityMetadata.schema === driver.options.schema ? undefined : entityMetadata.schema;\n        var options = {\n            database: entityMetadata.database,\n            schema: entityMetadata.schema,\n            name: driver.buildTableName(entityMetadata.tableName, schema, database),\n            engine: entityMetadata.engine,\n            columns: entityMetadata.columns\n                .filter(function (column) { return column; })\n                .map(function (column) { return TableUtils.createTableColumnOptions(column, driver); }),\n            indices: entityMetadata.indices\n                .filter(function (index) { return index.synchronize === true; })\n                .map(function (index) { return TableIndex.create(index); }),\n            uniques: entityMetadata.uniques.map(function (unique) { return TableUnique.create(unique); }),\n            checks: entityMetadata.checks.map(function (check) { return TableCheck.create(check); }),\n            exclusions: entityMetadata.exclusions.map(function (exclusion) { return TableExclusion.create(exclusion); }),\n        };\n        return new Table(options);\n    };\n    return Table;\n}());\nexport { Table };\n\n//# sourceMappingURL=Table.js.map\n","import { __read, __spreadArray } from \"tslib\";\n/**\n * Database's table check constraint stored in this class.\n */\nvar TableCheck = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TableCheck(options) {\n        /**\n         * Column that contains this constraint.\n         */\n        this.columnNames = [];\n        this.name = options.name;\n        this.columnNames = options.columnNames;\n        this.expression = options.expression;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new copy of this constraint with exactly same properties.\n     */\n    TableCheck.prototype.clone = function () {\n        return new TableCheck({\n            name: this.name,\n            columnNames: this.columnNames ? __spreadArray([], __read(this.columnNames), false) : [],\n            expression: this.expression,\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates checks from the check metadata object.\n     */\n    TableCheck.create = function (checkMetadata) {\n        return new TableCheck({\n            name: checkMetadata.name,\n            expression: checkMetadata.expression\n        });\n    };\n    return TableCheck;\n}());\nexport { TableCheck };\n\n//# sourceMappingURL=TableCheck.js.map\n","/**\n * Table's columns in the database represented in this class.\n */\nvar TableColumn = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TableColumn(options) {\n        /**\n         * Indicates if column is NULL, or is NOT NULL in the database.\n         */\n        this.isNullable = false;\n        /**\n         * Indicates if column is auto-generated sequence.\n         */\n        this.isGenerated = false;\n        /**\n         * Indicates if column is a primary key.\n         */\n        this.isPrimary = false;\n        /**\n         * Indicates if column has unique value.\n         */\n        this.isUnique = false;\n        /**\n         * Indicates if column stores array.\n         */\n        this.isArray = false;\n        /**\n         * Column type's length. Used only on some column types.\n         * For example type = \"string\" and length = \"100\" means that ORM will create a column with type varchar(100).\n         */\n        this.length = \"\";\n        /**\n         * Puts ZEROFILL attribute on to numeric column. Works only for MySQL.\n         * If you specify ZEROFILL for a numeric column, MySQL automatically adds the UNSIGNED attribute to the column\n         */\n        this.zerofill = false;\n        /**\n         * Puts UNSIGNED attribute on to numeric column. Works only for MySQL.\n         */\n        this.unsigned = false;\n        if (options) {\n            this.name = options.name;\n            this.type = options.type || \"\";\n            this.length = options.length || \"\";\n            this.width = options.width;\n            this.charset = options.charset;\n            this.collation = options.collation;\n            this.precision = options.precision;\n            this.scale = options.scale;\n            this.zerofill = options.zerofill || false;\n            this.unsigned = this.zerofill ? true : (options.unsigned || false);\n            this.default = options.default;\n            this.onUpdate = options.onUpdate;\n            this.isNullable = options.isNullable || false;\n            this.isGenerated = options.isGenerated || false;\n            this.generationStrategy = options.generationStrategy;\n            this.isPrimary = options.isPrimary || false;\n            this.isUnique = options.isUnique || false;\n            this.isArray = options.isArray || false;\n            this.comment = options.comment;\n            this.enum = options.enum;\n            this.enumName = options.enumName;\n            this.asExpression = options.asExpression;\n            this.generatedType = options.generatedType;\n            this.spatialFeatureType = options.spatialFeatureType;\n            this.srid = options.srid;\n        }\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Clones this column to a new column with exact same properties as this column has.\n     */\n    TableColumn.prototype.clone = function () {\n        return new TableColumn({\n            name: this.name,\n            type: this.type,\n            length: this.length,\n            width: this.width,\n            charset: this.charset,\n            collation: this.collation,\n            precision: this.precision,\n            scale: this.scale,\n            zerofill: this.zerofill,\n            unsigned: this.unsigned,\n            enum: this.enum,\n            enumName: this.enumName,\n            asExpression: this.asExpression,\n            generatedType: this.generatedType,\n            default: this.default,\n            onUpdate: this.onUpdate,\n            isNullable: this.isNullable,\n            isGenerated: this.isGenerated,\n            generationStrategy: this.generationStrategy,\n            isPrimary: this.isPrimary,\n            isUnique: this.isUnique,\n            isArray: this.isArray,\n            comment: this.comment,\n            spatialFeatureType: this.spatialFeatureType,\n            srid: this.srid\n        });\n    };\n    return TableColumn;\n}());\nexport { TableColumn };\n\n//# sourceMappingURL=TableColumn.js.map\n","/**\n * Database's table exclusion constraint stored in this class.\n */\nvar TableExclusion = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TableExclusion(options) {\n        this.name = options.name;\n        this.expression = options.expression;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new copy of this constraint with exactly same properties.\n     */\n    TableExclusion.prototype.clone = function () {\n        return new TableExclusion({\n            name: this.name,\n            expression: this.expression,\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates exclusions from the exclusion metadata object.\n     */\n    TableExclusion.create = function (exclusionMetadata) {\n        return new TableExclusion({\n            name: exclusionMetadata.name,\n            expression: exclusionMetadata.expression\n        });\n    };\n    return TableExclusion;\n}());\nexport { TableExclusion };\n\n//# sourceMappingURL=TableExclusion.js.map\n","import { __read, __spreadArray } from \"tslib\";\n/**\n * Foreign key from the database stored in this class.\n */\nvar TableForeignKey = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TableForeignKey(options) {\n        /**\n         * Column names which included by this foreign key.\n         */\n        this.columnNames = [];\n        /**\n         * Column names which included by this foreign key.\n         */\n        this.referencedColumnNames = [];\n        this.name = options.name;\n        this.columnNames = options.columnNames;\n        this.referencedColumnNames = options.referencedColumnNames;\n        this.referencedDatabase = options.referencedDatabase;\n        this.referencedSchema = options.referencedSchema;\n        this.referencedTableName = options.referencedTableName;\n        this.onDelete = options.onDelete;\n        this.onUpdate = options.onUpdate;\n        this.deferrable = options.deferrable;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new copy of this foreign key with exactly same properties.\n     */\n    TableForeignKey.prototype.clone = function () {\n        return new TableForeignKey({\n            name: this.name,\n            columnNames: __spreadArray([], __read(this.columnNames), false),\n            referencedColumnNames: __spreadArray([], __read(this.referencedColumnNames), false),\n            referencedDatabase: this.referencedDatabase,\n            referencedSchema: this.referencedSchema,\n            referencedTableName: this.referencedTableName,\n            onDelete: this.onDelete,\n            onUpdate: this.onUpdate,\n            deferrable: this.deferrable,\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new table foreign key from the given foreign key metadata.\n     */\n    TableForeignKey.create = function (metadata, driver) {\n        return new TableForeignKey({\n            name: metadata.name,\n            columnNames: metadata.columnNames,\n            referencedColumnNames: metadata.referencedColumnNames,\n            referencedDatabase: metadata.referencedEntityMetadata.database,\n            referencedSchema: metadata.referencedEntityMetadata.schema,\n            referencedTableName: metadata.referencedTablePath,\n            onDelete: metadata.onDelete,\n            onUpdate: metadata.onUpdate,\n            deferrable: metadata.deferrable,\n        });\n    };\n    return TableForeignKey;\n}());\nexport { TableForeignKey };\n\n//# sourceMappingURL=TableForeignKey.js.map\n","import { __read, __spreadArray } from \"tslib\";\n/**\n * Database's table index stored in this class.\n */\nvar TableIndex = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TableIndex(options) {\n        /**\n         * Columns included in this index.\n         */\n        this.columnNames = [];\n        this.name = options.name;\n        this.columnNames = options.columnNames;\n        this.isUnique = !!options.isUnique;\n        this.isSpatial = !!options.isSpatial;\n        this.isFulltext = !!options.isFulltext;\n        this.parser = options.parser;\n        this.where = options.where ? options.where : \"\";\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new copy of this index with exactly same properties.\n     */\n    TableIndex.prototype.clone = function () {\n        return new TableIndex({\n            name: this.name,\n            columnNames: __spreadArray([], __read(this.columnNames), false),\n            isUnique: this.isUnique,\n            isSpatial: this.isSpatial,\n            isFulltext: this.isFulltext,\n            parser: this.parser,\n            where: this.where\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates index from the index metadata object.\n     */\n    TableIndex.create = function (indexMetadata) {\n        return new TableIndex({\n            name: indexMetadata.name,\n            columnNames: indexMetadata.columns.map(function (column) { return column.databaseName; }),\n            isUnique: indexMetadata.isUnique,\n            isSpatial: indexMetadata.isSpatial,\n            isFulltext: indexMetadata.isFulltext,\n            parser: indexMetadata.parser,\n            where: indexMetadata.where\n        });\n    };\n    return TableIndex;\n}());\nexport { TableIndex };\n\n//# sourceMappingURL=TableIndex.js.map\n","import { __read, __spreadArray } from \"tslib\";\n/**\n * Database's table unique constraint stored in this class.\n */\nvar TableUnique = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TableUnique(options) {\n        /**\n         * Columns that contains this constraint.\n         */\n        this.columnNames = [];\n        this.name = options.name;\n        this.columnNames = options.columnNames;\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates a new copy of this constraint with exactly same properties.\n     */\n    TableUnique.prototype.clone = function () {\n        return new TableUnique({\n            name: this.name,\n            columnNames: __spreadArray([], __read(this.columnNames), false)\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates unique from the unique metadata object.\n     */\n    TableUnique.create = function (uniqueMetadata) {\n        return new TableUnique({\n            name: uniqueMetadata.name,\n            columnNames: uniqueMetadata.columns.map(function (column) { return column.databaseName; })\n        });\n    };\n    return TableUnique;\n}());\nexport { TableUnique };\n\n//# sourceMappingURL=TableUnique.js.map\n","var TableUtils = /** @class */ (function () {\n    function TableUtils() {\n    }\n    TableUtils.createTableColumnOptions = function (columnMetadata, driver) {\n        return {\n            name: columnMetadata.databaseName,\n            length: driver.getColumnLength(columnMetadata),\n            width: columnMetadata.width,\n            charset: columnMetadata.charset,\n            collation: columnMetadata.collation,\n            precision: columnMetadata.precision,\n            scale: columnMetadata.scale,\n            zerofill: columnMetadata.zerofill,\n            unsigned: columnMetadata.unsigned,\n            asExpression: columnMetadata.asExpression,\n            generatedType: columnMetadata.generatedType,\n            default: driver.normalizeDefault(columnMetadata),\n            onUpdate: columnMetadata.onUpdate,\n            comment: columnMetadata.comment,\n            isGenerated: columnMetadata.isGenerated,\n            generationStrategy: columnMetadata.generationStrategy,\n            isNullable: columnMetadata.isNullable,\n            type: driver.normalizeType(columnMetadata),\n            isPrimary: columnMetadata.isPrimary,\n            isUnique: driver.normalizeIsUnique(columnMetadata),\n            isArray: columnMetadata.isArray || false,\n            enum: columnMetadata.enum ? columnMetadata.enum.map(function (val) { return val + \"\"; }) : columnMetadata.enum,\n            enumName: columnMetadata.enumName,\n            spatialFeatureType: columnMetadata.spatialFeatureType,\n            srid: columnMetadata.srid\n        };\n    };\n    return TableUtils;\n}());\nexport { TableUtils };\n\n//# sourceMappingURL=TableUtils.js.map\n","/**\n * View in the database represented in this class.\n */\nvar View = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function View(options) {\n        if (options) {\n            this.database = options.database;\n            this.schema = options.schema;\n            this.name = options.name;\n            this.expression = options.expression;\n            this.materialized = !!options.materialized;\n        }\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Clones this table to a new table with all properties cloned.\n     */\n    View.prototype.clone = function () {\n        return new View({\n            database: this.database,\n            schema: this.schema,\n            name: this.name,\n            expression: this.expression,\n            materialized: this.materialized,\n        });\n    };\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Creates view from a given entity metadata.\n     */\n    View.create = function (entityMetadata, driver) {\n        var options = {\n            database: entityMetadata.database,\n            schema: entityMetadata.schema,\n            name: driver.buildTableName(entityMetadata.tableName, entityMetadata.schema, entityMetadata.database),\n            expression: entityMetadata.expression,\n            materialized: entityMetadata.tableMetadataArgs.materialized\n        };\n        return new View(options);\n    };\n    return View;\n}());\nexport { View };\n\n//# sourceMappingURL=View.js.map\n","import { __awaiter, __generator } from \"tslib\";\n/**\n * Broadcaster execution result - promises executed by operations and number of executed listeners and subscribers.\n */\nvar BroadcasterResult = /** @class */ (function () {\n    function BroadcasterResult() {\n        /**\n         * Number of executed listeners and subscribers.\n         */\n        this.count = 0;\n        /**\n         * Promises returned by listeners and subscribers which needs to be awaited.\n         */\n        this.promises = [];\n    }\n    /**\n     * Wait for all promises to settle\n     */\n    BroadcasterResult.prototype.wait = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.promises.length > 0)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, Promise.all(this.promises)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    return BroadcasterResult;\n}());\nexport { BroadcasterResult };\n\n//# sourceMappingURL=BroadcasterResult.js.map\n","var ApplyValueTransformers = /** @class */ (function () {\n    function ApplyValueTransformers() {\n    }\n    ApplyValueTransformers.transformFrom = function (transformer, databaseValue) {\n        if (Array.isArray(transformer)) {\n            var reverseTransformers = transformer.slice().reverse();\n            return reverseTransformers.reduce(function (transformedValue, _transformer) {\n                return _transformer.from(transformedValue);\n            }, databaseValue);\n        }\n        return transformer.from(databaseValue);\n    };\n    ApplyValueTransformers.transformTo = function (transformer, entityValue) {\n        if (Array.isArray(transformer)) {\n            return transformer.reduce(function (transformedValue, _transformer) {\n                return _transformer.to(transformedValue);\n            }, entityValue);\n        }\n        return transformer.to(entityValue);\n    };\n    return ApplyValueTransformers;\n}());\nexport { ApplyValueTransformers };\n\n//# sourceMappingURL=ApplyValueTransformers.js.map\n","import { __read } from \"tslib\";\n/**\n * Provides utilities to transform hydrated and persisted data.\n */\nvar DateUtils = /** @class */ (function () {\n    function DateUtils() {\n    }\n    // -------------------------------------------------------------------------\n    // Public Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Normalizes date object hydrated from the database.\n     */\n    DateUtils.normalizeHydratedDate = function (mixedDate) {\n        if (!mixedDate)\n            return mixedDate;\n        return typeof mixedDate === \"string\" ? new Date(mixedDate) : mixedDate;\n    };\n    /**\n     * Converts given value into date string in a \"YYYY-MM-DD\" format.\n     */\n    DateUtils.mixedDateToDateString = function (value) {\n        if (value instanceof Date)\n            return this.formatZerolessValue(value.getFullYear()) + \"-\" + this.formatZerolessValue(value.getMonth() + 1) + \"-\" + this.formatZerolessValue(value.getDate());\n        return value;\n    };\n    /**\n     * Converts given value into date object.\n     */\n    DateUtils.mixedDateToDate = function (mixedDate, toUtc, useMilliseconds) {\n        if (toUtc === void 0) { toUtc = false; }\n        if (useMilliseconds === void 0) { useMilliseconds = true; }\n        var date = typeof mixedDate === \"string\" ? new Date(mixedDate) : mixedDate;\n        if (toUtc)\n            date = new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n        if (!useMilliseconds)\n            date.setUTCMilliseconds(0);\n        return date;\n    };\n    /**\n     * Converts given value into time string in a \"HH:mm:ss\" format.\n     */\n    DateUtils.mixedDateToTimeString = function (value, skipSeconds) {\n        if (skipSeconds === void 0) { skipSeconds = false; }\n        if (value instanceof Date)\n            return this.formatZerolessValue(value.getHours()) +\n                \":\" + this.formatZerolessValue(value.getMinutes()) +\n                (!skipSeconds ? \":\" + this.formatZerolessValue(value.getSeconds()) : \"\");\n        return value;\n    };\n    /**\n     * Converts given value into time string in a \"HH:mm:ss\" format.\n     */\n    DateUtils.mixedTimeToDate = function (value) {\n        if (typeof value === \"string\") {\n            var _a = __read(value.split(\":\"), 3), hours = _a[0], minutes = _a[1], seconds = _a[2];\n            var date = new Date();\n            if (hours)\n                date.setHours(parseInt(hours));\n            if (minutes)\n                date.setMinutes(parseInt(minutes));\n            if (seconds)\n                date.setSeconds(parseInt(seconds));\n            return date;\n        }\n        return value;\n    };\n    /**\n     * Converts given string value with \"-\" separator into a \"HH:mm:ss\" format.\n     */\n    DateUtils.mixedTimeToString = function (value, skipSeconds) {\n        if (skipSeconds === void 0) { skipSeconds = false; }\n        value = value instanceof Date ? (value.getHours() + \":\" + value.getMinutes() + (!skipSeconds ? \":\" + value.getSeconds() : \"\")) : value;\n        if (typeof value === \"string\") {\n            return value.split(\":\")\n                .map(function (v) { return v.length === 1 ? \"0\" + v : v; }) // append zero at beginning if we have a first-zero-less number\n                .join(\":\");\n        }\n        return value;\n    };\n    /**\n     * Converts given value into datetime string in a \"YYYY-MM-DD HH-mm-ss\" format.\n     */\n    DateUtils.mixedDateToDatetimeString = function (value, useMilliseconds) {\n        if (typeof value === \"string\") {\n            value = new Date(value);\n        }\n        if (value instanceof Date) {\n            var finalValue = this.formatZerolessValue(value.getFullYear()) + \"-\" +\n                this.formatZerolessValue(value.getMonth() + 1) + \"-\" +\n                this.formatZerolessValue(value.getDate()) + \" \" +\n                this.formatZerolessValue(value.getHours()) + \":\" +\n                this.formatZerolessValue(value.getMinutes()) + \":\" +\n                this.formatZerolessValue(value.getSeconds());\n            if (useMilliseconds)\n                finalValue += \".\" + this.formatMilliseconds(value.getMilliseconds());\n            value = finalValue;\n        }\n        return value;\n    };\n    /**\n     * Converts given value into utc datetime string in a \"YYYY-MM-DD HH-mm-ss.sss\" format.\n     */\n    DateUtils.mixedDateToUtcDatetimeString = function (value) {\n        if (typeof value === \"string\") {\n            value = new Date(value);\n        }\n        if (value instanceof Date) {\n            return this.formatZerolessValue(value.getUTCFullYear()) + \"-\" +\n                this.formatZerolessValue(value.getUTCMonth() + 1) + \"-\" +\n                this.formatZerolessValue(value.getUTCDate()) + \" \" +\n                this.formatZerolessValue(value.getUTCHours()) + \":\" +\n                this.formatZerolessValue(value.getUTCMinutes()) + \":\" +\n                this.formatZerolessValue(value.getUTCSeconds()) + \".\" +\n                this.formatMilliseconds(value.getUTCMilliseconds());\n        }\n        return value;\n    };\n    /**\n     * Converts each item in the given array to string joined by \",\" separator.\n     */\n    DateUtils.simpleArrayToString = function (value) {\n        if (Array.isArray(value)) {\n            return value\n                .map(function (i) { return String(i); })\n                .join(\",\");\n        }\n        return value;\n    };\n    /**\n     * Converts given string to simple array split by \",\" separator.\n     */\n    DateUtils.stringToSimpleArray = function (value) {\n        if (value instanceof String || typeof value === \"string\") {\n            if (value.length > 0) {\n                return value.split(\",\");\n            }\n            else {\n                return [];\n            }\n        }\n        return value;\n    };\n    DateUtils.simpleJsonToString = function (value) {\n        return JSON.stringify(value);\n    };\n    DateUtils.stringToSimpleJson = function (value) {\n        return typeof value === \"string\" ? JSON.parse(value) : value;\n    };\n    DateUtils.simpleEnumToString = function (value) {\n        return \"\" + value;\n    };\n    DateUtils.stringToSimpleEnum = function (value, columnMetadata) {\n        if (columnMetadata.enum\n            && !isNaN(value)\n            && columnMetadata.enum.indexOf(parseInt(value)) >= 0) {\n            // convert to number if that exists in poosible enum options\n            value = parseInt(value);\n        }\n        return value;\n    };\n    // -------------------------------------------------------------------------\n    // Private Static Methods\n    // -------------------------------------------------------------------------\n    /**\n     * Formats given number to \"0x\" format, e.g. if it is 1 then it will return \"01\".\n     */\n    DateUtils.formatZerolessValue = function (value) {\n        if (value < 10)\n            return \"0\" + value;\n        return String(value);\n    };\n    /**\n     * Formats given number to \"0x\" format, e.g. if it is 1 then it will return \"01\".\n     */\n    DateUtils.formatMilliseconds = function (value) {\n        if (value < 10) {\n            return \"00\" + value;\n        }\n        else if (value < 100) {\n            return \"0\" + value;\n        }\n        else {\n            return String(value);\n        }\n    };\n    return DateUtils;\n}());\nexport { DateUtils };\n\n//# sourceMappingURL=DateUtils.js.map\n","import { __values } from \"tslib\";\nvar ObjectUtils = /** @class */ (function () {\n    function ObjectUtils() {\n    }\n    /**\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\n     * target object.\n     * @param target The target object to copy to.\n     * @param sources One or more source objects from which to copy properties\n     */\n    ObjectUtils.assign = function (target) {\n        var e_1, _a, e_2, _b;\n        var sources = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            sources[_i - 1] = arguments[_i];\n        }\n        try {\n            for (var sources_1 = __values(sources), sources_1_1 = sources_1.next(); !sources_1_1.done; sources_1_1 = sources_1.next()) {\n                var source = sources_1_1.value;\n                try {\n                    for (var _c = (e_2 = void 0, __values(Object.getOwnPropertyNames(source))), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var prop = _d.value;\n                        target[prop] = source[prop];\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (sources_1_1 && !sources_1_1.done && (_a = sources_1.return)) _a.call(sources_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    return ObjectUtils;\n}());\nexport { ObjectUtils };\n\n//# sourceMappingURL=ObjectUtils.js.map\n","import { __values } from \"tslib\";\nvar OrmUtils = /** @class */ (function () {\n    function OrmUtils() {\n    }\n    // -------------------------------------------------------------------------\n    // Public methods\n    // -------------------------------------------------------------------------\n    /**\n     * Chunks array into pieces.\n     */\n    OrmUtils.chunk = function (array, size) {\n        return Array.from(Array(Math.ceil(array.length / size)), function (_, i) {\n            return array.slice(i * size, i * size + size);\n        });\n    };\n    OrmUtils.splitClassesAndStrings = function (clsesAndStrings) {\n        return [\n            (clsesAndStrings).filter(function (cls) { return typeof cls !== \"string\"; }),\n            (clsesAndStrings).filter(function (str) { return typeof str === \"string\"; }),\n        ];\n    };\n    OrmUtils.groupBy = function (array, propertyCallback) {\n        return array.reduce(function (groupedArray, value) {\n            var key = propertyCallback(value);\n            var grouped = groupedArray.find(function (i) { return i.id === key; });\n            if (!grouped) {\n                grouped = { id: key, items: [] };\n                groupedArray.push(grouped);\n            }\n            grouped.items.push(value);\n            return groupedArray;\n        }, []);\n    };\n    OrmUtils.uniq = function (array, criteriaOrProperty) {\n        return array.reduce(function (uniqueArray, item) {\n            var found = false;\n            if (criteriaOrProperty instanceof Function) {\n                var itemValue_1 = criteriaOrProperty(item);\n                found = !!uniqueArray.find(function (uniqueItem) { return criteriaOrProperty(uniqueItem) === itemValue_1; });\n            }\n            else if (typeof criteriaOrProperty === \"string\") {\n                found = !!uniqueArray.find(function (uniqueItem) { return uniqueItem[criteriaOrProperty] === item[criteriaOrProperty]; });\n            }\n            else {\n                found = uniqueArray.indexOf(item) !== -1;\n            }\n            if (!found)\n                uniqueArray.push(item);\n            return uniqueArray;\n        }, []);\n    };\n    // Checks if it's an object made by Object.create(null), {} or new Object()\n    OrmUtils.isPlainObject = function (item) {\n        if (item === null || item === undefined) {\n            return false;\n        }\n        return !item.constructor || item.constructor === Object;\n    };\n    OrmUtils.mergeArrayKey = function (target, key, value, memo) {\n        // Have we seen this before?  Prevent infinite recursion.\n        if (memo.has(value)) {\n            target[key] = memo.get(value);\n            return;\n        }\n        if (value instanceof Promise) {\n            // Skip promises entirely.\n            // This is a hold-over from the old code & is because we don't want to pull in\n            // the lazy fields.  Ideally we'd remove these promises via another function first\n            // but for now we have to do it here.\n            return;\n        }\n        if (!this.isPlainObject(value) && !Array.isArray(value)) {\n            target[key] = value;\n            return;\n        }\n        if (!target[key]) {\n            target[key] = Array.isArray(value) ? [] : {};\n        }\n        memo.set(value, target[key]);\n        this.merge(target[key], value, memo);\n        memo.delete(value);\n    };\n    OrmUtils.mergeObjectKey = function (target, key, value, memo) {\n        var _a, _b, _c;\n        // Have we seen this before?  Prevent infinite recursion.\n        if (memo.has(value)) {\n            Object.assign(target, (_a = {}, _a[key] = memo.get(value), _a));\n            return;\n        }\n        if (value instanceof Promise) {\n            // Skip promises entirely.\n            // This is a hold-over from the old code & is because we don't want to pull in\n            // the lazy fields.  Ideally we'd remove these promises via another function first\n            // but for now we have to do it here.\n            return;\n        }\n        if (!this.isPlainObject(value) && !Array.isArray(value)) {\n            Object.assign(target, (_b = {}, _b[key] = value, _b));\n            return;\n        }\n        if (!target[key]) {\n            Object.assign(target, (_c = {}, _c[key] = Array.isArray(value) ? [] : {}, _c));\n        }\n        memo.set(value, target[key]);\n        this.merge(target[key], value, memo);\n        memo.delete(value);\n    };\n    OrmUtils.merge = function (target, source, memo) {\n        var e_1, _a;\n        if (memo === void 0) { memo = new Map(); }\n        if (this.isPlainObject(target) && this.isPlainObject(source)) {\n            try {\n                for (var _b = __values(Object.keys(source)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var key = _c.value;\n                    this.mergeObjectKey(target, key, source[key], memo);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }\n        if (Array.isArray(target) && Array.isArray(source)) {\n            for (var key = 0; key < source.length; key++) {\n                this.mergeArrayKey(target, key, source[key], memo);\n            }\n        }\n    };\n    /**\n     * Deep Object.assign.\n     */\n    OrmUtils.mergeDeep = function (target) {\n        var e_2, _a;\n        var sources = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            sources[_i - 1] = arguments[_i];\n        }\n        if (!sources.length) {\n            return target;\n        }\n        try {\n            for (var sources_1 = __values(sources), sources_1_1 = sources_1.next(); !sources_1_1.done; sources_1_1 = sources_1.next()) {\n                var source = sources_1_1.value;\n                OrmUtils.merge(target, source);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sources_1_1 && !sources_1_1.done && (_a = sources_1.return)) _a.call(sources_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return target;\n    };\n    /**\n     * Deep compare objects.\n     *\n     * @see http://stackoverflow.com/a/1144249\n     */\n    OrmUtils.deepCompare = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var i, l, leftChain, rightChain;\n        if (arguments.length < 1) {\n            return true; // Die silently? Don't know how to handle such case, please help...\n            // throw \"Need two or more arguments to compare\";\n        }\n        for (i = 1, l = arguments.length; i < l; i++) {\n            leftChain = []; // Todo: this can be cached\n            rightChain = [];\n            if (!this.compare2Objects(leftChain, rightChain, arguments[0], arguments[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Check if two entity-id-maps are the same\n     */\n    OrmUtils.compareIds = function (firstId, secondId) {\n        if (firstId === undefined || firstId === null || secondId === undefined || secondId === null)\n            return false;\n        // Optimized version for the common case\n        if (((typeof firstId.id === \"string\" && typeof secondId.id === \"string\") ||\n            (typeof firstId.id === \"number\" && typeof secondId.id === \"number\")) &&\n            Object.keys(firstId).length === 1 &&\n            Object.keys(secondId).length === 1) {\n            return firstId.id === secondId.id;\n        }\n        return OrmUtils.deepCompare(firstId, secondId);\n    };\n    /**\n     * Transforms given value into boolean value.\n     */\n    OrmUtils.toBoolean = function (value) {\n        if (typeof value === \"boolean\")\n            return value;\n        if (typeof value === \"string\")\n            return value === \"true\" || value === \"1\";\n        if (typeof value === \"number\")\n            return value > 0;\n        return false;\n    };\n    /**\n     * Composes an object from the given array of keys and values.\n     */\n    OrmUtils.zipObject = function (keys, values) {\n        return keys.reduce(function (object, column, index) {\n            object[column] = values[index];\n            return object;\n        }, {});\n    };\n    /**\n     * Compares two arrays.\n     */\n    OrmUtils.isArraysEqual = function (arr1, arr2) {\n        if (arr1.length !== arr2.length)\n            return false;\n        return arr1.every(function (element) {\n            return arr2.indexOf(element) !== -1;\n        });\n    };\n    OrmUtils.areMutuallyExclusive = function () {\n        var lists = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            lists[_i] = arguments[_i];\n        }\n        var haveSharedObjects = lists.some(function (list) {\n            var otherLists = lists.filter(function (otherList) { return otherList !== list; });\n            return list.some(function (item) { return otherLists.some(function (otherList) { return otherList.includes(item); }); });\n        });\n        return !haveSharedObjects;\n    };\n    // -------------------------------------------------------------------------\n    // Private methods\n    // -------------------------------------------------------------------------\n    OrmUtils.compare2Objects = function (leftChain, rightChain, x, y) {\n        var p;\n        // remember that NaN === NaN returns false\n        // and isNaN(undefined) returns true\n        if (Number.isNaN(x) && Number.isNaN(y))\n            return true;\n        // Compare primitives and functions.\n        // Check if both arguments link to the same object.\n        // Especially useful on the step where we compare prototypes\n        if (x === y)\n            return true;\n        // Unequal, but either is null or undefined (use case: jsonb comparasion)\n        // PR #3776, todo: add tests\n        if (x === null || y === null || x === undefined || y === undefined)\n            return false;\n        // Fix the buffer compare bug.\n        // See: https://github.com/typeorm/typeorm/issues/3654\n        if ((typeof x.equals === \"function\" || x.equals instanceof Function) && x.equals(y))\n            return true;\n        // Works in case when functions are created in constructor.\n        // Comparing dates is a common scenario. Another built-ins?\n        // We can even handle functions passed across iframes\n        if ((typeof x === \"function\" && typeof y === \"function\") ||\n            (x instanceof Date && y instanceof Date) ||\n            (x instanceof RegExp && y instanceof RegExp) ||\n            (x instanceof String && y instanceof String) ||\n            (x instanceof Number && y instanceof Number))\n            return x.toString() === y.toString();\n        // At last checking prototypes as good as we can\n        if (!(x instanceof Object && y instanceof Object))\n            return false;\n        if (x.isPrototypeOf(y) || y.isPrototypeOf(x))\n            return false;\n        if (x.constructor !== y.constructor)\n            return false;\n        if (x.prototype !== y.prototype)\n            return false;\n        // Check for infinitive linking loops\n        if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1)\n            return false;\n        // Quick checking of one object being a subset of another.\n        // todo: cache the structure of arguments[0] for performance\n        for (p in y) {\n            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                return false;\n            }\n            else if (typeof y[p] !== typeof x[p]) {\n                return false;\n            }\n        }\n        for (p in x) {\n            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                return false;\n            }\n            else if (typeof y[p] !== typeof x[p]) {\n                return false;\n            }\n            switch (typeof (x[p])) {\n                case \"object\":\n                case \"function\":\n                    leftChain.push(x);\n                    rightChain.push(y);\n                    if (!this.compare2Objects(leftChain, rightChain, x[p], y[p])) {\n                        return false;\n                    }\n                    leftChain.pop();\n                    rightChain.pop();\n                    break;\n                default:\n                    if (x[p] !== y[p]) {\n                        return false;\n                    }\n                    break;\n            }\n        }\n        return true;\n    };\n    return OrmUtils;\n}());\nexport { OrmUtils };\n\n//# sourceMappingURL=OrmUtils.js.map\n","var RandomGenerator = /** @class */ (function () {\n    function RandomGenerator() {\n    }\n    /**\n     *  discuss at: http://locutus.io/php/sha1/\n     * original by: Webtoolkit.info (http://www.webtoolkit.info/)\n     * improved by: Michael White (http://getsprink.com)\n     * improved by: Kevin van Zonneveld (http://kvz.io)\n     *    input by: Brett Zamir (http://brett-zamir.me)\n     *      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n     *      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n     *      note 1: in a steaming fashion for faster and more efficient hashing\n     *   example 1: sha1('Kevin van Zonneveld')\n     *   returns 1: '54916d2e62f65b3afa6e192e6a601cdbe5cb5897'\n     */\n    RandomGenerator.sha1 = function (str) {\n        var _rotLeft = function (n, s) {\n            var t4 = (n << s) | (n >>> (32 - s));\n            return t4;\n        };\n        var _cvtHex = function (val) {\n            var str = \"\";\n            var i;\n            var v;\n            for (i = 7; i >= 0; i--) {\n                v = (val >>> (i * 4)) & 0x0f;\n                str += v.toString(16);\n            }\n            return str;\n        };\n        var blockstart;\n        var i, j;\n        var W = new Array(80);\n        var H0 = 0x67452301;\n        var H1 = 0xEFCDAB89;\n        var H2 = 0x98BADCFE;\n        var H3 = 0x10325476;\n        var H4 = 0xC3D2E1F0;\n        var A, B, C, D, E;\n        var temp;\n        // utf8_encode\n        str = /*unescape*/ (encodeURIComponent(str));\n        var strLen = str.length;\n        var wordArray = [];\n        for (i = 0; i < strLen - 3; i += 4) {\n            j = str.charCodeAt(i) << 24 |\n                str.charCodeAt(i + 1) << 16 |\n                str.charCodeAt(i + 2) << 8 |\n                str.charCodeAt(i + 3);\n            wordArray.push(j);\n        }\n        switch (strLen % 4) {\n            case 0:\n                i = 0x080000000;\n                break;\n            case 1:\n                i = str.charCodeAt(strLen - 1) << 24 | 0x0800000;\n                break;\n            case 2:\n                i = str.charCodeAt(strLen - 2) << 24 | str.charCodeAt(strLen - 1) << 16 | 0x08000;\n                break;\n            case 3:\n                i = str.charCodeAt(strLen - 3) << 24 |\n                    str.charCodeAt(strLen - 2) << 16 |\n                    str.charCodeAt(strLen - 1) <<\n                        8 | 0x80;\n                break;\n        }\n        wordArray.push(i);\n        while ((wordArray.length % 16) !== 14) {\n            wordArray.push(0);\n        }\n        wordArray.push(strLen >>> 29);\n        wordArray.push((strLen << 3) & 0x0ffffffff);\n        for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\n            for (i = 0; i < 16; i++) {\n                W[i] = wordArray[blockstart + i];\n            }\n            for (i = 16; i <= 79; i++) {\n                W[i] = _rotLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n            }\n            A = H0;\n            B = H1;\n            C = H2;\n            D = H3;\n            E = H4;\n            for (i = 0; i <= 19; i++) {\n                temp = (_rotLeft(A, 5) + ((B & C) | (~B & D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n            for (i = 20; i <= 39; i++) {\n                temp = (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n            for (i = 40; i <= 59; i++) {\n                temp = (_rotLeft(A, 5) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n            for (i = 60; i <= 79; i++) {\n                temp = (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n            H0 = (H0 + A) & 0x0ffffffff;\n            H1 = (H1 + B) & 0x0ffffffff;\n            H2 = (H2 + C) & 0x0ffffffff;\n            H3 = (H3 + D) & 0x0ffffffff;\n            H4 = (H4 + E) & 0x0ffffffff;\n        }\n        temp = _cvtHex(H0) + _cvtHex(H1) + _cvtHex(H2) + _cvtHex(H3) + _cvtHex(H4);\n        return temp.toLowerCase();\n    };\n    /**\n     * RFC4122 compliant UUID v4 generator.\n     */\n    RandomGenerator.uuid4 = function () {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c === \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n    return RandomGenerator;\n}());\nexport { RandomGenerator };\n\n//# sourceMappingURL=RandomGenerator.js.map\n","import shajs from \"sha.js\";\n/**\n * Converts string into camelCase.\n *\n * @see http://stackoverflow.com/questions/2970525/converting-any-string-into-camel-case\n */\nexport function camelCase(str, firstCapital) {\n    if (firstCapital === void 0) { firstCapital = false; }\n    return str.replace(/^([A-Z])|[\\s-_](\\w)/g, function (match, p1, p2, offset) {\n        if (firstCapital === true && offset === 0)\n            return p1;\n        if (p2)\n            return p2.toUpperCase();\n        return p1.toLowerCase();\n    });\n}\n/**\n * Converts string into snake_case.\n *\n */\nexport function snakeCase(str) {\n    return str\n        // ABc -> a_bc\n        .replace(/([A-Z])([A-Z])([a-z])/g, \"$1_$2$3\")\n        // aC -> a_c\n        .replace(/([a-z0-9])([A-Z])/g, \"$1_$2\")\n        .toLowerCase();\n}\n/**\n * Converts string into Title Case.\n *\n * @see http://stackoverflow.com/questions/196972/convert-string-to-title-case-with-javascript\n */\nexport function titleCase(str) {\n    return str.replace(/\\w\\S*/g, function (txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\n}\n/**\n * Builds abbreviated string from given string;\n */\nexport function abbreviate(str, abbrLettersCount) {\n    if (abbrLettersCount === void 0) { abbrLettersCount = 1; }\n    var words = str.replace(/([a-z\\xE0-\\xFF])([A-Z\\xC0\\xDF])/g, \"$1 $2\").split(\" \");\n    return words.reduce(function (res, word) {\n        res += word.substr(0, abbrLettersCount);\n        return res;\n    }, \"\");\n}\n/**\n * Shorten a given `input`. Useful for RDBMS imposing a limit on the\n * maximum length of aliases and column names in SQL queries.\n *\n * @param input String to be shortened.\n * @param options Default to `4` for segments length, `2` for terms length, `'__'` as a separator.\n *\n * @return Shortened `input`.\n *\n * @example\n * // returns: \"UsShCa__orde__mark__dire\"\n * shorten('UserShoppingCart__order__market__director')\n *\n * // returns: \"cat_wit_ver_lon_nam_pos_wit_ver_lon_nam_pos_wit_ver_lon_nam\"\n * shorten(\n *   'category_with_very_long_name_posts_with_very_long_name_post_with_very_long_name',\n *   { separator: '_', segmentLength: 3 }\n * )\n *\n * // equals: UsShCa__orde__mark_market_id\n * `${shorten('UserShoppingCart__order__market')}_market_id`\n */\nexport function shorten(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.segmentLength, segmentLength = _a === void 0 ? 4 : _a, _b = options.separator, separator = _b === void 0 ? \"__\" : _b, _c = options.termLength, termLength = _c === void 0 ? 2 : _c;\n    var segments = input.split(separator);\n    var shortSegments = segments.reduce(function (acc, val) {\n        // split the given segment into many terms based on an eventual camel cased name\n        var segmentTerms = val.replace(/([a-z\\xE0-\\xFF])([A-Z\\xC0-\\xDF])/g, \"$1 $2\").split(\" \");\n        // \"OrderItemList\" becomes \"OrItLi\", while \"company\" becomes \"comp\"\n        var length = segmentTerms.length > 1 ? termLength : segmentLength;\n        var shortSegment = segmentTerms.map(function (term) { return term.substr(0, length); }).join(\"\");\n        acc.push(shortSegment);\n        return acc;\n    }, []);\n    return shortSegments.join(separator);\n}\n/**\n * Returns a hashed input.\n *\n * @param input String to be hashed.\n * @param options.length Optionally, shorten the output to desired length.\n */\nexport function hash(input, options) {\n    if (options === void 0) { options = {}; }\n    var hashFunction = shajs(\"sha256\");\n    hashFunction.update(input, \"utf8\");\n    var hashedInput = hashFunction.digest(\"hex\");\n    if (options.length) {\n        return hashedInput.slice(0, options.length);\n    }\n    return hashedInput;\n}\n\n//# sourceMappingURL=StringUtils.js.map\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","/**\r\n * Copyright 2019 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst proxyMarker = Symbol(\"Comlink.proxy\");\r\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\r\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\r\nconst throwMarker = Symbol(\"Comlink.thrown\");\r\nconst isObject = (val) => (typeof val === \"object\" && val !== null) || typeof val === \"function\";\r\n/**\r\n * Internal transfer handle to handle objects marked to proxy.\r\n */\r\nconst proxyTransferHandler = {\r\n    canHandle: (val) => isObject(val) && val[proxyMarker],\r\n    serialize(obj) {\r\n        const { port1, port2 } = new MessageChannel();\r\n        expose(obj, port1);\r\n        return [port2, [port2]];\r\n    },\r\n    deserialize(port) {\r\n        port.start();\r\n        return wrap(port);\r\n    },\r\n};\r\n/**\r\n * Internal transfer handler to handle thrown exceptions.\r\n */\r\nconst throwTransferHandler = {\r\n    canHandle: (value) => isObject(value) && throwMarker in value,\r\n    serialize({ value }) {\r\n        let serialized;\r\n        if (value instanceof Error) {\r\n            serialized = {\r\n                isError: true,\r\n                value: {\r\n                    message: value.message,\r\n                    name: value.name,\r\n                    stack: value.stack,\r\n                },\r\n            };\r\n        }\r\n        else {\r\n            serialized = { isError: false, value };\r\n        }\r\n        return [serialized, []];\r\n    },\r\n    deserialize(serialized) {\r\n        if (serialized.isError) {\r\n            throw Object.assign(new Error(serialized.value.message), serialized.value);\r\n        }\r\n        throw serialized.value;\r\n    },\r\n};\r\n/**\r\n * Allows customizing the serialization of certain values.\r\n */\r\nconst transferHandlers = new Map([\r\n    [\"proxy\", proxyTransferHandler],\r\n    [\"throw\", throwTransferHandler],\r\n]);\r\nfunction expose(obj, ep = self) {\r\n    ep.addEventListener(\"message\", function callback(ev) {\r\n        if (!ev || !ev.data) {\r\n            return;\r\n        }\r\n        const { id, type, path } = Object.assign({ path: [] }, ev.data);\r\n        const argumentList = (ev.data.argumentList || []).map(fromWireValue);\r\n        let returnValue;\r\n        try {\r\n            const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\r\n            const rawValue = path.reduce((obj, prop) => obj[prop], obj);\r\n            switch (type) {\r\n                case \"GET\" /* GET */:\r\n                    {\r\n                        returnValue = rawValue;\r\n                    }\r\n                    break;\r\n                case \"SET\" /* SET */:\r\n                    {\r\n                        parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\r\n                        returnValue = true;\r\n                    }\r\n                    break;\r\n                case \"APPLY\" /* APPLY */:\r\n                    {\r\n                        returnValue = rawValue.apply(parent, argumentList);\r\n                    }\r\n                    break;\r\n                case \"CONSTRUCT\" /* CONSTRUCT */:\r\n                    {\r\n                        const value = new rawValue(...argumentList);\r\n                        returnValue = proxy(value);\r\n                    }\r\n                    break;\r\n                case \"ENDPOINT\" /* ENDPOINT */:\r\n                    {\r\n                        const { port1, port2 } = new MessageChannel();\r\n                        expose(obj, port2);\r\n                        returnValue = transfer(port1, [port1]);\r\n                    }\r\n                    break;\r\n                case \"RELEASE\" /* RELEASE */:\r\n                    {\r\n                        returnValue = undefined;\r\n                    }\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n        }\r\n        catch (value) {\r\n            returnValue = { value, [throwMarker]: 0 };\r\n        }\r\n        Promise.resolve(returnValue)\r\n            .catch((value) => {\r\n            return { value, [throwMarker]: 0 };\r\n        })\r\n            .then((returnValue) => {\r\n            const [wireValue, transferables] = toWireValue(returnValue);\r\n            ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\r\n            if (type === \"RELEASE\" /* RELEASE */) {\r\n                // detach and deactive after sending release response above.\r\n                ep.removeEventListener(\"message\", callback);\r\n                closeEndPoint(ep);\r\n            }\r\n        });\r\n    });\r\n    if (ep.start) {\r\n        ep.start();\r\n    }\r\n}\r\nfunction isMessagePort(endpoint) {\r\n    return endpoint.constructor.name === \"MessagePort\";\r\n}\r\nfunction closeEndPoint(endpoint) {\r\n    if (isMessagePort(endpoint))\r\n        endpoint.close();\r\n}\r\nfunction wrap(ep, target) {\r\n    return createProxy(ep, [], target);\r\n}\r\nfunction throwIfProxyReleased(isReleased) {\r\n    if (isReleased) {\r\n        throw new Error(\"Proxy has been released and is not useable\");\r\n    }\r\n}\r\nfunction createProxy(ep, path = [], target = function () { }) {\r\n    let isProxyReleased = false;\r\n    const proxy = new Proxy(target, {\r\n        get(_target, prop) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            if (prop === releaseProxy) {\r\n                return () => {\r\n                    return requestResponseMessage(ep, {\r\n                        type: \"RELEASE\" /* RELEASE */,\r\n                        path: path.map((p) => p.toString()),\r\n                    }).then(() => {\r\n                        closeEndPoint(ep);\r\n                        isProxyReleased = true;\r\n                    });\r\n                };\r\n            }\r\n            if (prop === \"then\") {\r\n                if (path.length === 0) {\r\n                    return { then: () => proxy };\r\n                }\r\n                const r = requestResponseMessage(ep, {\r\n                    type: \"GET\" /* GET */,\r\n                    path: path.map((p) => p.toString()),\r\n                }).then(fromWireValue);\r\n                return r.then.bind(r);\r\n            }\r\n            return createProxy(ep, [...path, prop]);\r\n        },\r\n        set(_target, prop, rawValue) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\r\n            // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\r\n            const [value, transferables] = toWireValue(rawValue);\r\n            return requestResponseMessage(ep, {\r\n                type: \"SET\" /* SET */,\r\n                path: [...path, prop].map((p) => p.toString()),\r\n                value,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        apply(_target, _thisArg, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const last = path[path.length - 1];\r\n            if (last === createEndpoint) {\r\n                return requestResponseMessage(ep, {\r\n                    type: \"ENDPOINT\" /* ENDPOINT */,\r\n                }).then(fromWireValue);\r\n            }\r\n            // We just pretend that `bind()` didn’t happen.\r\n            if (last === \"bind\") {\r\n                return createProxy(ep, path.slice(0, -1));\r\n            }\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"APPLY\" /* APPLY */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n        construct(_target, rawArgumentList) {\r\n            throwIfProxyReleased(isProxyReleased);\r\n            const [argumentList, transferables] = processArguments(rawArgumentList);\r\n            return requestResponseMessage(ep, {\r\n                type: \"CONSTRUCT\" /* CONSTRUCT */,\r\n                path: path.map((p) => p.toString()),\r\n                argumentList,\r\n            }, transferables).then(fromWireValue);\r\n        },\r\n    });\r\n    return proxy;\r\n}\r\nfunction myFlat(arr) {\r\n    return Array.prototype.concat.apply([], arr);\r\n}\r\nfunction processArguments(argumentList) {\r\n    const processed = argumentList.map(toWireValue);\r\n    return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\r\n}\r\nconst transferCache = new WeakMap();\r\nfunction transfer(obj, transfers) {\r\n    transferCache.set(obj, transfers);\r\n    return obj;\r\n}\r\nfunction proxy(obj) {\r\n    return Object.assign(obj, { [proxyMarker]: true });\r\n}\r\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\r\n    return {\r\n        postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\r\n        addEventListener: context.addEventListener.bind(context),\r\n        removeEventListener: context.removeEventListener.bind(context),\r\n    };\r\n}\r\nfunction toWireValue(value) {\r\n    for (const [name, handler] of transferHandlers) {\r\n        if (handler.canHandle(value)) {\r\n            const [serializedValue, transferables] = handler.serialize(value);\r\n            return [\r\n                {\r\n                    type: \"HANDLER\" /* HANDLER */,\r\n                    name,\r\n                    value: serializedValue,\r\n                },\r\n                transferables,\r\n            ];\r\n        }\r\n    }\r\n    return [\r\n        {\r\n            type: \"RAW\" /* RAW */,\r\n            value,\r\n        },\r\n        transferCache.get(value) || [],\r\n    ];\r\n}\r\nfunction fromWireValue(value) {\r\n    switch (value.type) {\r\n        case \"HANDLER\" /* HANDLER */:\r\n            return transferHandlers.get(value.name).deserialize(value.value);\r\n        case \"RAW\" /* RAW */:\r\n            return value.value;\r\n    }\r\n}\r\nfunction requestResponseMessage(ep, msg, transfers) {\r\n    return new Promise((resolve) => {\r\n        const id = generateUUID();\r\n        ep.addEventListener(\"message\", function l(ev) {\r\n            if (!ev.data || !ev.data.id || ev.data.id !== id) {\r\n                return;\r\n            }\r\n            ep.removeEventListener(\"message\", l);\r\n            resolve(ev.data);\r\n        });\r\n        if (ep.start) {\r\n            ep.start();\r\n        }\r\n        ep.postMessage(Object.assign({ id }, msg), transfers);\r\n    });\r\n}\r\nfunction generateUUID() {\r\n    return new Array(4)\r\n        .fill(0)\r\n        .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\r\n        .join(\"-\");\r\n}\n\nexport { createEndpoint, expose, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };\n//# sourceMappingURL=comlink.mjs.map\n"],"names":["exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","create","module","ctor","superCtor","super_","TempCtor","o","h","u","r","t","l","p","encode","f","getTypeOf","charAt","decode","uint8array","compressedSize","uncompressedSize","crc32","compression","compressedContent","getContentWorker","Promise","resolve","pipe","uncompressWorker","on","streamInfo","data_length","getCompressedWorker","withStreamInfo","createWorkerFrom","compressWorker","STORE","magic","DEFLATE","binary","createFolders","date","compressionOptions","comment","unixPermissions","dosPermissions","lie","Uint16Array","Uint32Array","_pako","_pakoAction","_pakoOptions","meta","inherits","processChunk","_createPako","transformTo","flush","cleanUp","raw","level","onData","pako","A","file","O","utf8encode","I","_","g","v","w","k","S","z","C","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCFullYear","getUTCMonth","getUTCDate","B","fileRecord","R","LOCAL_FILE_HEADER","dirRecord","CENTRAL_FILE_HEADER","bytesWritten","zipComment","zipPlatform","encodeFileName","streamFiles","accumulate","contentBuffer","dirRecords","currentSourceOffset","entriesCount","currentFile","_sources","percent","openedSource","closedSource","DATA_DESCRIPTOR","shift","CENTRAL_DIRECTORY_END","prepareNextSource","previous","isPaused","pause","resume","registerPrevious","generatedError","lock","generateWorker","platform","forEach","options","_compressWorker","files","root","clone","loadAsync","support","defaults","version","external","decompressed","extend","checkCRC32","optimizedBinaryString","decodeFileName","utf8decode","isNode","isStream","reject","prepareContent","then","load","all","fileNameStr","fileCommentStr","_upstreamEnded","_bindStream","_stream","Readable","_helper","emit","_read","newBufferFrom","allocBuffer","Date","toUpperCase","substring","filter","test","folder","remove","generate","generateInternalStream","mimeType","checkSupport","generateAsync","generateNodeStream","toNodejsStream","stream","byteAt","zero","lastIndexOfSignature","readAndCheckSignature","readData","index","checkIndex","setIndex","skip","readInt","readString","readDate","UTC","ZIP64_CENTRAL_DIRECTORY_LOCATOR","ZIP64_CENTRAL_DIRECTORY_END","destType","propName","dataIsReady","_tickScheduled","_tickAndRepeat","delay","isFinished","_tick","extraStreamInfo","isLocked","_listeners","mergeStreamInfo","hasOwnProperty","nodestream","_internalType","_outputType","_mimeType","_worker","newBlob","objectMode","arraybuffer","nodebuffer","blob","Blob","self","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","leftOver","applyFromCharCode","Utf8DecodeWorker","Utf8EncodeWorker","stringifyByChunk","stringifyByChar","applyCanBeUsed","MAX_VALUE_16BITS","MAX_VALUE_32BITS","pretty","FileReader","onload","result","onerror","readAsArrayBuffer","loadOptions","checkSignature","reader","isSignature","readBlockEndOfCentral","diskNumber","diskWithCentralDirStart","centralDirRecordsOnThisDisk","centralDirRecords","centralDirSize","centralDirOffset","zipCommentLength","readBlockZip64EndOfCentral","zip64EndOfCentralSize","zip64ExtensibleData","id","readBlockZip64EndOfCentralLocator","diskWithZip64CentralDirStart","relativeOffsetEndOfZip64CentralDir","disksCount","readLocalFiles","localHeaderOffset","readLocalPart","handleUTF8","processAttributes","readCentralDir","zip64","readCentralPart","readEndOfCentral","prepareReader","isEncrypted","bitFlag","useUTF8","fileNameLength","fileName","compressionMethod","versionMadeBy","extraFieldsLength","fileCommentLength","diskNumberStart","internalFileAttributes","externalFileAttributes","readExtraFields","parseZIP64ExtraField","fileComment","extraFields","findExtraFieldUnicodePath","findExtraFieldUnicodeComment","_data","_dataBinary","internalStream","_decompressWorker","async","nodeStream","MutationObserver","WebKitMutationObserver","document","createTextNode","observe","characterData","setImmediate","MessageChannel","createElement","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","port1","onmessage","port2","postMessage","window","state","queue","outcome","promise","onFulfilled","callFulfilled","otherCallFulfilled","onRejected","callRejected","otherCallRejected","status","finally","catch","race","immediate","assign","method","chunkSize","windowBits","memLevel","strategy","to","gzip","err","ended","chunks","strm","avail_out","deflateInit2","header","deflateSetHeader","dictionary","string2buf","deflateSetDictionary","_dict_set","next_in","avail_in","Buf8","next_out","deflate","onEnd","buf2binstring","shrinkBuf","deflateEnd","flattenChunks","Deflate","deflateRaw","inflateInit2","Z_OK","inflateGetHeader","Z_FINISH","Z_NO_FLUSH","binstring2buf","inflate","Z_NEED_DICT","inflateSetDictionary","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","Inflate","inflateRaw","ungzip","Int32Array","setTyped","Buf16","Buf32","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","T","D","F","pending","pending_buf","pending_out","total_out","N","_tr_flush_block","block_start","strstart","U","P","L","max_chain_length","prev_length","nice_match","w_size","w_mask","prev","good_match","lookahead","match_start","window_size","hash_size","head","wrap","adler","total_in","insert","ins_h","hash_shift","hash_mask","Z","match_length","_tr_tally","max_lazy_match","last_lit","W","prev_match","match_available","M","good_length","max_lazy","nice_length","max_chain","func","H","pending_buf_size","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","heap","heap_len","heap_max","depth","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","G","data_type","_tr_init","K","Y","deflateInit","deflateReset","deflateResetKeep","text","hcrc","extra","time","os","_tr_align","_tr_stored_block","deflateInfo","xflags","extra_len","done","dmax","wsize","whave","wnext","hold","bits","lencode","distcode","lenbits","distbits","mode","sane","havedict","flags","check","total","wbits","ncode","nlen","ndist","have","next","work","lendyn","distdyn","back","was","inflateReset","inflateReset2","inflateResetKeep","inflateInit","inflateInfo","static_tree","extra_bits","extra_base","elems","max_length","has_stree","dyn_tree","max_code","stat_desc","X","V","q","J","splice","_dereq_","global","scheduleDrain","draining","Mutation","called","observer","nextTick","element","scriptEl","channel","oldQueue","task","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","safelyResolveThenable","QueueItem","unwrap","returnValue","getThen","thenable","onError","onSuccess","tryCatch","reason","iterable","values","resolved","allResolver","outValue","response","_typeof","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","properties","builder","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","warn","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","_checkBlobSupport","txn","transaction","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","_getConnection","upgradeNeeded","forages","db","close","dbArgs","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onsuccess","onversionchange","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","retries","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","ready","initPromises","ignoreErrors","_defaultConfig","_support","isSafari","openDatabase","hasFetch","fetch","IDBKeyRange","isIndexedDBValid","iterate","req","openCursor","iterationNumber","cursor","getItem","setItem","blobSupport","onloadend","btoa","readAsBinaryString","store","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","bufferToString","base64String","localforageSerializer","serialize","valueType","marker","fileReader","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","getAllStoreNames","storeNames","item","webSQLStorage","dbInfoPromise","description","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorageTestKey","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","searchElement","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","_key","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","localforage_js","Reflect","factory","Function","exporter","makeExporter","hasOwn","supportsSymbol","toPrimitiveSymbol","iteratorSymbol","supportsCreate","supportsProto","__proto__","downLevel","HashMap","MakeDictionary","has","map","functionPrototype","getPrototypeOf","usePolyfill","process","env","_Map","Map","entries","cacheSentinel","arraySentinel","MapIterator","selector","_index","_keys","_values","_selector","throw","return","_cacheKey","_cacheIndex","_find","delete","getKey","getValue","getEntry","CreateMapPolyfill","_Set","Set","_map","add","Metadata","WeakMap","rootKey","CreateUniqueKey","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","random","crypto","getRandomValues","msCrypto","byte","CreateWeakMapPolyfill","GetOrCreateMetadataMap","Create","targetMetadata","IsUndefined","metadataMap","OrdinaryHasMetadata","MetadataKey","OrdinaryHasOwnMetadata","parent","OrdinaryGetPrototypeOf","IsNull","OrdinaryGetMetadata","OrdinaryGetOwnMetadata","OrdinaryDefineOwnMetadata","MetadataValue","OrdinaryMetadataKeys","ownKeys","OrdinaryOwnMetadataKeys","parentKeys","ownKeys_1","_a","parentKeys_1","GetMethod","IsCallable","IsObject","GetIterator","IteratorStep","nextValue","IteratorClose","Type","ToPrimitive","PreferredType","hint","exoticToPrim","toString_1","toString_2","OrdinaryToPrimitive","ToPropertyKey","argument","ToString","IsArray","IsConstructor","prototypeProto","__","decorators","propertyKey","attributes","decorated","decorator","DecorateConstructor","descriptor","DecorateProperty","metadataKey","metadataValue","IsPropertyKey","copyProps","SafeBuffer","Hash","blockSize","finalSize","_block","_finalSize","_blockSize","update","enc","block","accum","assigned","remainder","_update","digest","rem","lowBits","highBits","hash","_hash","algorithm","Algorithm","sha","sha1","sha224","sha256","sha384","sha512","Sha","init","_w","rotl30","ft","_b","_c","_d","_e","Sha1","rotl5","Sha256","Sha224","_f","_g","_h","ch","maj","sigma0","sigma1","gamma0","T1","T2","SHA512","Sha384","_ah","_bh","_ch","_dh","_eh","_fh","_gh","_hh","_al","_bl","_cl","_dl","_el","_fl","_gl","_hl","writeInt64BE","Sha512","Ch","xl","Gamma0","Gamma0l","Gamma1","Gamma1l","getCarry","ah","bh","dh","eh","fh","gh","hh","al","bl","cl","dl","el","fl","gl","hl","xh","gamma0l","gamma1","gamma1l","Wi7h","Wi7l","Wi16h","Wi16l","Wil","Wih","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Kih","Kil","chh","chl","t1l","t1h","t2l","t2h","initSqlJsPromise","initSqlJs","moduleConfig","resolveModule","Module","originalOnAbortFunction","errorThatCausedAbort","onRuntimeInitialized","Qa","Oa","kb","aa","cb","da","ib","Za","ob","filename","fa","ea","ha","ka","ia","la","handleError","hc","eb","Wa","cwrap","ba","ic","qb","jc","kc","lc","mc","nc","oc","pc","qc","rb","rc","sc","tc","uc","vc","wc","xc","yc","zc","Ac","Bc","Cc","Dc","Ec","sb","Fc","Gc","Hc","tb","bind","reset","Cb","Db","step","yb","Gb","Hb","useBigInt","getColumnNames","getAsObject","getSQL","getNormalizedSQL","run","na","ma","Bb","Eb","ub","freemem","oa","free","mb","pa","qa","ra","getRemainingSQL","prepare","exec","ja","ca","columns","each","iterateStatements","sa","fc","Nc","Va","ta","ua","getRowsModified","create_function","Ja","Ia","grow","WebAssembly","parameters","Instance","va","wb","Aa","Kc","Database","wa","Ca","Da","Ea","Fa","Ga","xa","ya","za","importScripts","Ba","versions","node","__dirname","normalize","readFileSync","readFile","argv","location","href","currentScript","XMLHttpRequest","send","responseText","responseType","Ha","print","printErr","thisProgram","Ka","La","ceil","Ma","Na","wasmBinary","noExitRuntime","Pa","Ra","Xa","Ua","TextDecoder","Ya","HEAP8","HEAP16","HEAP32","HEAPU8","HEAPU16","HEAPU32","HEAPF32","HEAPF64","$a","ab","bb","preRun","unshift","pb","onAbort","RuntimeError","fb","startsWith","preloadedImages","preloadedAudios","gb","locateFile","hb","jb","Qb","lb","vb","xb","zb","Ab","rdev","Q","tty","seekable","timestamp","now","readSync","stdin","fd","prompt","readline","Fb","createNode","Ta","Sa","rename","unlink","rmdir","readdir","symlink","link","readlink","Ib","Jb","Rb","Nb","dev","ino","nlink","uid","gid","atime","mtime","ctime","blocks","Kb","Lb","position","Mb","Ob","Pb","path","Sb","Tb","Ub","Vb","Wb","Xb","Yb","Zb","Pc","cc","dc","ec","willDeletePath","onDeletePath","gc","Ic","Jc","bc","$b","ac","logReadFiles","Lc","onOpenFile","nb","Mc","onWriteToFile","Oc","Qc","Rc","Sc","Tc","getTime","Wc","Uc","Vc","hrtime","performance","Zc","Xc","Yc","USER","LOGNAME","PATH","PWD","HOME","LANG","languages","defineProperties","randomBytes","ad","toTimeString","getFullYear","getTimezoneOffset","getSeconds","getMinutes","getHours","getDate","getMonth","getDay","$c","fsync","extraStackTrace","asm","monitorRunDependencies","clearInterval","credentials","ok","arrayBuffer","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_sqlite3_free","___errno_location","_sqlite3_step","_sqlite3_finalize","_sqlite3_prepare_v2","_sqlite3_reset","_sqlite3_clear_bindings","_sqlite3_value_blob","_sqlite3_value_text","_sqlite3_value_bytes","_sqlite3_value_double","_sqlite3_value_int","_sqlite3_value_type","_sqlite3_result_blob","_sqlite3_result_double","$","_sqlite3_result_error","_sqlite3_result_int","_sqlite3_result_int64","_sqlite3_result_null","_sqlite3_result_text","_sqlite3_column_count","_sqlite3_data_count","ga","_sqlite3_column_blob","_sqlite3_column_bytes","_sqlite3_column_double","_sqlite3_column_text","_sqlite3_column_type","_sqlite3_column_name","_sqlite3_bind_blob","_sqlite3_bind_double","_sqlite3_bind_int","_sqlite3_bind_text","_sqlite3_bind_parameter_index","_sqlite3_sql","_sqlite3_normalized_sql","_sqlite3_errmsg","_sqlite3_exec","_sqlite3_changes","_sqlite3_close_v2","_sqlite3_create_function_v2","_sqlite3_open","_malloc","_free","_RegisterExtensionFunctions","bd","__get_tzname","__get_daylight","__get_timezone","stackSave","stackRestore","stackAlloc","_memalign","dd","calledRun","noFSInit","stdout","stderr","postRun","setStatus","every","UTF8ToString","cd","preInit","extendStatics","__extends","__assign","__rest","getOwnPropertySymbols","propertyIsEnumerable","__awaiter","thisArg","_arguments","generator","fulfilled","rejected","__generator","body","label","sent","trys","ops","verb","op","__values","__read","ar","__spreadArray","pack","DriverUtils","buildDriverOptions","buildOptions","e_1","url","urlDriverOptions","parseConnectionUrl","useSid","database","sid","e_1_1","buildMongoDBDriverOptions","e_2","parseMongoDBConnectionUrl","e_2_1","buildAlias","maxAliasLength","alias","shorten","joiner","newAlias","shortenedAlias","buildColumnAlias","firstSlashes","preBase","secondSlash","base","afterBase","lastAtSign","usernameAndPassword","hostAndPort","username","password","firstColon","host","port","decodeURIComponent","e_3","optionKey_1","optionValue_1","hostReplicaSet","replicaSet","optionsObject","optionItem","connectionUrl","e_3_1","ViewUtils","viewMetadataCmp","metadataA","metadataB","dependsOn","RdbmsSchemaBuilder","connection","build","isUsingTransactions","tablePaths","error_1","_this","queryRunner","createQueryRunner","currentDatabase","currentSchema","schema","migrationsTransactionMode","startTransaction","viewEntityToSyncMetadatas","createTypeormMetadataTable","entityToSyncMetadatas","metadata","getTablePath","getTables","getViews","executeSchemaSyncOperationsInProperOrder","queryResultCache","synchronize","commitTransaction","rollbackTransaction","release","enableSqlMemory","getMemorySql","disableSqlMemory","entityMetadatas","tableType","sort","dropOldViews","dropOldForeignKeys","dropOldIndices","dropOldChecks","dropOldExclusions","dropCompositeUniqueConstraints","renameColumns","createNewTables","dropRemovedColumns","addNewColumns","updatePrimaryKeys","updateExistColumns","createNewIndices","createNewChecks","createNewExclusions","createCompositeUniqueConstraints","createForeignKeys","createViews","parseTableName","buildTableName","tableName","_loop_1","this_1","tableForeignKeysToDrop","loadedTables","find","foreignKeys","tableForeignKey","metadataFK","metadataForeignKey","referencedEntityMetadata","onDelete","onUpdate","logger","logSchemaBuild","dbForeignKey","dropForeignKeys","renameTables","_loop_2","this_2","renamedMetadataColumns","renamedTableColumns","renamedColumn","column","tableColumn","databaseName","normalizeType","isNullable","isUnique","normalizeIsUnique","renameColumn","_loop_3","this_3","dropQueries","indices","tableIndex","indexMetadata","isSpatial","isFullTextColumnTypeSupported","isFulltext","columnNames","dropIndex","_loop_4","this_4","e_4_1","e_4","oldChecks","checks","tableCheck","checkMetadata","dropCheckConstraints","_loop_5","this_5","e_5_1","e_5","compositeUniques","uniques","tableUnique","uniqueMetadata","unique","dropUniqueConstraints","_loop_6","this_6","e_6_1","e_6","oldExclusions","exclusions","tableExclusion","exclusionMetadata","exclusion","dropExclusionConstraints","_loop_7","this_7","e_7_1","e_7","existTable","Table","createTable","_loop_8","this_8","e_8_1","e_8","existView","view","loadedViews","viewExpression","expression","getQuery","metadataExpression","View","createView","droppedViews","viewToMetadata","_loop_9","viewMetadata","viewDependencyChain","droppedViewsWithDependencies","droppedViewsWithDependencies_1","droppedViewsWithDependencies_1_1","e_9_1","e_10","e_11","e_9","e_10_1","e_11_1","e_12","viewWithDependencies","currentView","currentMetadata","e_12_1","reduce","segment","reverse","dropView","_loop_10","this_9","e_13_1","e_13","droppedTableColumns","columnMetadata","dropColumns","_loop_11","this_10","e_14_1","e_14","newColumnMetadatas","newTableColumnOptions","newTableColumns","metadataColumnsToTableColumnOptions","option","TableColumn","addColumns","_loop_12","this_11","e_15_1","e_15","primaryMetadataColumns","changedPrimaryColumns","isPrimary","primaryMetadataColumn","TableUtils","_loop_13","this_12","e_16_1","e_16","changedColumns","changedColumns_1","changedColumns_1_1","e_17_1","changedColumns_2","changedColumns_2_1","e_18_1","changedColumns_3","changedColumns_3_1","changedColumn","e_19_1","newAndOldTableColumns","e_17","e_18","e_19","findChangedColumns","dropColumnReferencedForeignKeys","dropColumnCompositeIndices","dropColumnCompositeUniques","oldTableColumn","oldColumn","newColumn","changeColumns","_loop_14","this_13","e_20_1","e_20","newIndices","TableIndex","createIndices","_loop_15","this_14","e_21_1","e_21","newChecks","TableCheck","createCheckConstraints","_loop_16","this_15","e_22_1","e_22","TableUnique","createUniqueConstraints","_loop_17","this_16","e_23_1","e_23","newExclusions","TableExclusion","createExclusionConstraints","_loop_18","this_17","e_24_1","e_24","newKeys","dbForeignKeys","foreignKey","foreignKeyMetadata","TableForeignKey","tablePath","columnName","tablesWithFK","columnForeignKey","clonedTable","_loop_19","loadedTable","tablesWithFK_1","tablesWithFK_1_1","tableWithFK","e_25_1","e_26","e_25","removeForeignKey","dependForeignKeys","referencedColumnNames","dependForeignKey","e_26_1","relatedIndices","dropIndices","relatedUniques","typeormMetadataTable","mappedDataTypes","metadataType","metadataDatabase","metadataSchema","metadataTable","metadataName","AbstractSqliteDriver","isReplicated","treeSupport","supportedDataTypes","supportedUpsertType","withLengthColumnTypes","spatialTypes","withPrecisionColumnTypes","withScaleColumnTypes","createDate","createDateDefault","updateDate","updateDateDefault","deleteDate","deleteDateNullable","treeLevel","migrationId","migrationName","migrationTimestamp","cacheId","cacheIdentifier","cacheTime","cacheDuration","cacheQuery","cacheResult","connect","createDatabaseConnection","databaseConnection","afterConnect","disconnect","fail","createSchemaBuilder","preparePersistentValue","transformer","ApplyValueTransformers","Boolean","DateUtils","prepareHydratedValue","escapeQueryWithParameters","sql","nativeParameters","escapedParameters","full","createParameter","escape","driverDatabase","driverSchema","referencedTableName","referencedDatabase","referencedSchema","EntityMetadata","normalizeDefault","defaultValue","default","entityMetadata","some","uq","getColumnLength","createFullType","enum","precision","scale","obtainMasterConnection","obtainSlaveConnection","createGeneratedMap","insertResult","entityIndex","entityNum","generatedMap","generatedColumns","generatedColumn","generationStrategy","OrmUtils","createValueMap","tableColumns","columnMetadatas","isGenerated","isReturningSqlSupported","isUUIDGenerationSupported","parameterName","loadDependencies","EntitySchema","AlreadyHasActiveConnectionError","_super","connectionName","CannotAttachTreeChildrenEntityError","entityName","CannotConnectAlreadyConnectedError","CannotCreateEntityIdMapError","objectExample","primaryColumns","object","setEntityValue","targetName","CannotDetermineEntityError","operation","CannotExecuteNotConnectedError","CircularRelationsError","ColumnTypeUndefinedError","propertyName","ConnectionNotFoundError","CustomRepositoryCannotInheritRepositoryError","repository","CustomRepositoryDoesNotHaveEntityError","CustomRepositoryNotFoundError","DataTypeNotSupportedError","dataType","DriverOptionNotSetError","optionName","DriverPackageNotInstalledError","packageName","EntityColumnNotFound","propertyPath","EntityMetadataNotFoundError","stringifyTarget","EntityNotFoundError","entityClass","criteria","stringifyCriteria","FindRelationsNotFoundError","notFoundRelations","relation","InitializedRelationError","InsertValuesMissingError","LimitOnUpdateNotSupportedError","LockNotSupportedOnGivenDriverError","MissingDeleteDateColumnError","MissingDriverError","driverType","availableDrivers","MissingPrimaryColumnError","MustBeEntityError","wrongValue","NoConnectionOptionError","NoNeedToReleaseEntityManagerError","NoVersionOrUpdateDateColumnError","entity","OffsetWithoutLimitNotSupportedError","OptimisticLockCanNotBeUsedError","OptimisticLockVersionMismatchError","expectedVersion","actualVersion","PessimisticLockTransactionRequiredError","QueryFailedError","query","driverError","otherProperties","QueryRunnerAlreadyReleasedError","QueryRunnerProviderAlreadyReleasedError","RepositoryNotFoundError","RepositoryNotTreeError","ReturningStatementNotSupportedError","SubjectRemovedAndUpdatedError","subject","SubjectWithoutIdentifierError","TransactionAlreadyStartedError","TransactionNotStartedError","TreeRepositoryNotSupportedError","TypeORMError","_newTarget","UpdateValuesMissingError","dbType","relationType","inverseRelation","inverseEntityMetadata","strategyName","FindOperator","useParameter","multipleParameters","getSql","objectLiteralParameters","_type","_value","_useParameter","_multipleParameters","_getSql","_objectLiteralParameters","In","MetadataUtils","getInheritanceTree","tree","isInherited","target1","target2","filterByTarget","classes","MetadataArgsStorage","tables","trees","entityRepositories","transactionEntityManagers","transactionRepositories","namingStrategies","entitySubscribers","generations","relations","joinColumns","joinTables","entityListeners","relationCounts","relationIds","embeddeds","inheritances","discriminatorValues","filterTables","filterColumns","filterByTargetAndWithoutDuplicateProperties","findGenerated","generated","findTree","filterRelations","filterByTargetAndWithoutDuplicateRelationProperties","filterRelationIds","filterRelationCounts","filterIndices","filterUniques","filterChecks","filterExclusions","filterListeners","filterEmbeddeds","filterByTargetAndWithoutDuplicateEmbeddedProperties","findJoinTable","joinTable","filterJoinColumns","joinColumn","filterSubscribers","filterNamingStrategies","filterTransactionEntityManagers","transactionEm","filterTransactionRepository","filterSingleTableChildren","findInheritanceType","inheritance","findDiscriminatorValue","discriminatorValue","newArray","newItem","existingIndex","findIndex","prefix","PlatformTools","getGlobalVariable","pathNormalize","pathStr","pathExtname","pathResolve","fileExist","dotenv","getEnvVariable","appendFileSync","writeFile","highlightSql","highlightJson","json","logInfo","logError","logWarn","warning","ConnectionOptionsReader","DefaultNamingStrategy","nestedSetColumnNames","left","right","materializedPathColumnName","getTableName","tableOrName","userSpecifiedName","closureJunctionTableName","originalClosureTableName","customName","embeddedPrefixes","relationName","primaryKeyName","clonedColumnNames","RandomGenerator","uniqueConstraintName","relationConstraintName","where","defaultConstraintName","foreignKeyName","_referencedTablePath","_referencedColumnNames","indexName","checkConstraintName","isEnum","exclusionConstraintName","joinColumnName","referencedColumnName","joinTableName","firstTableName","secondTableName","firstPropertyName","secondPropertyName","joinTableColumnDuplicationPrefix","joinTableColumnName","joinTableInverseColumnName","prefixTableName","eagerJoinRelationAlias","Migration","MssqlParameter","params","MigrationExecutor","migrationsDatabase","migrationsSchema","migrationsTableName","migrationsTable","executeMigration","migration","withQueryRunner","createMigrationsTableIfNotExist","up","insertExecutedMigration","getAllMigrations","getMigrations","getExecutedMigrations","loadExecutedMigrations","getPendingMigrations","allMigrations","executedMigrations","executedMigration","insertMigration","deleteMigration","deleteExecutedMigration","showMigrations","hasUnappliedMigrations","allMigrations_1","allMigrations_1_1","executePendingMigrations","lastTimeExecutedMigration","successMigrations","pendingMigrations","transactionStartedByUs","pendingMigrations_1","pendingMigrations_1_1","err_1","getLatestTimestampMigration","isTransactionActive","logMigration","undoLastMigration","migrationToRevert","err_2","getLatestExecutedMigration","down","hasTable","collection","toArray","manager","createQueryBuilder","select","orderBy","getRawMany","migrationRaw","migrations","migrationClassName","checkForDuplicateMigrations","migrationNames","duplicates","sortedMigrations","insertOne","into","execute","conditions","deleteOne","andWhere","setParameters","createDFS","edges","leavesOnly","currentPath","visited","DFS","currentNode","DepGraph","nodes","outgoingEdges","incomingEdges","addNode","hasNode","removeNode","edgeList","idx","getNodeData","setNodeData","addDependency","removeDependency","dependenciesOf","dependantsOf","overallOrder","CycleDFS_1","DFS_1","EntityMetadataValidator","validateMany","validate","validateDependencies","validateEagerRelations","allEntityMetadatas","isJunction","inheritancePattern","discriminatorColumn","sameDiscriminatorValueEntityMetadata","inheritanceTree","relationCount","isManyToOne","isOneToOne","normalizedColumn","enumName","charset","entityInstance","isManyToMany","isOneToMany","persistenceEnabled","relationInitializedValue","getEntityValue","isCascadeRemove","eagerRelations","graph","relationsWithJoinColumns","isEager","Repository","hasId","getId","plainEntityLikeOrPlainEntityLikes","merge","mergeIntoEntity","entityLikes","preload","entityLike","save","entityOrEntities","softRemove","recover","partialEntity","upsert","conflictPathsOrOptions","softDelete","restore","optionsOrConditions","findAndCount","findByIds","ids","findOne","maybeOptions","findOneOrFail","increment","decrement","FindOptionsUtils","isFindOneOptions","possibleOptions","order","cache","loadRelationIds","loadEagerRelations","withDeleted","isFindManyOptions","take","extractFindManyOptionsAlias","applyFindManyOptionsOrConditionsToQueryBuilder","applyOptionsToQueryBuilder","expressionMap","useTransaction","mainAlias","hasMetadata","hasColumnWithPropertyPath","findColumnsWithPropertyPath","columns_1","columns_1_1","addSelect","allRelations","applyRelationsRecursively","leftJoin","innerJoin","leftJoinAndSelect","innerJoinAndSelect","milliseconds","setLock","tableNames","tableAlias","aliases","tableNameWithoutPrefix","loadAllRelationIds","findColumnWithPropertyPath","addOrderBy","applyOptionsToTreeQueryBuilder","matchedBaseRelations","regexp_1","RegExp","findRelationWithPropertyPath","relationAlias","selection","joinAttributes","entityOrProperty","relMetadata","joinEagerRelations","namingStrategy","addJoin","condition","mapToProperty","isMappingMany","direction","selects","aliasName","virtual","TreeRepository","findTrees","roots","findRoots","findDescendantsTree","parentPropertyName","treeParentRelation","getMany","findDescendants","createDescendantsQueryBuilder","entities","relationMaps","getRawAndEntities","createRelationMaps","buildChildrenEntityTree","countDescendants","getCount","closureTableAlias","treeType","joinCondition","closureJunctionTable","descendantColumns","referencedColumn","parameters_1","whereCondition","ancestorColumns","nestedSetLeftColumn","nestedSetRightColumn","parameters_2","subQuery","materializedPathColumn","whereInIds","getEntityIdMap","findAncestors","createAncestorsQueryBuilder","findAncestorsTree","buildParentEntityTree","countAncestors","parameters_3","parameters_4","rawResults","rawResult","givenDatabaseName","parentId","childProperty","treeChildrenRelation","parentEntityId","childRelationMaps","relationMap","childIds","childEntity","parentProperty","entityId","parentRelationMap","parentEntity","PlainObjectToNewEntityTransformer","transform","newEntity","getLazyRelationsPromiseValue","groupAndTransform","nonVirtualColumns","objectColumnValue","entityRelatedValue","objectRelatedValue","objectRelatedValueItem","objectRelatedValueEntity","entityRelatedValueItem","compareEntities","fromDeserializer","LoadMapItem","plainEntity","parentLoadMapItem","getEntityIdMixedMap","LoadMap","loadMapItems","addLoadMap","newLoadMap","fillEntities","loadMapItem","groupByTargetIds","groups","group","PlainObjectToDatabaseEntityTransformer","plainObject","loadMap","fillLoadMap","hasAllPrimaryKeys","extractRelationValuesFromEntity","targetWithIds","mainLoadMapItem","AbstractRepository","getCustomRepositoryTarget","getRepository","getTreeRepository","createQueryBuilderFor","getRepositoryFor","getTreeRepositoryFor","customRepository","entityRepositoryMetadataArgs","RepositoryFactory","SubjectTopoligicalSorter","subjects","metadatas","getUniqueMetadatas","sortedSubjects","junctionSubjects","databaseEntity","removeAlreadySorted","nonNullableDependencies","getNonNullableDependencies","sortedNonNullableEntityTargets","toposort","sortedEntityTarget","entityTargetSubjects","otherDependencies","getDependencies","sortedOtherEntityTargets","dependencies","i_1","edge","uniqueNodes","sorted","visit","predecessors","outgoing","preds","child","SubjectChangedColumnsComputer","compute","computeDiffColumns","computeDiffRelationalColumns","isVirtual","isDiscriminator","changeMap","changeMaps","entityValue","shouldTransformDatabaseEntity","databaseValue","relationMetadata","normalizedValue","diffColumns","allSubjects","relatedEntity","relatedEntityRelationIdMap","getRelationIdMap","databaseRelatedEntityRelationIdMap","diffRelations","valueSubject","mustBeInserted","NestedSetMultipleRootError","NestedSetSubjectExecutor","leftColumnName","rightColumnName","parentNsRight","parentSubject","insertedValueSet","getRawOne","isUniqueRootEntity","oldParent","oldParentId","escape_1","entityNs","parentNs","isMovingUp","treeSize","entitySize","updateLeftSide","updateRightSide","identifier","getNestedSetIds","entitiesIds","subjects_1","subjects_1_1","entitiesNs","entitiesNs_1","entitiesNs_1_1","queryBuilder","results_1","results_1_1","entry","countAlias","parameter","records","ClosureSubjectExecutor","closureJunctionInsertMap","queryParams_1","ancestorColumnNames","descendantColumnNames","childEntityIds1","updateEntity","callListeners","closureTable","createSubQuery","queryParams_2","superAlias_1","subAlias_1","entityWhereCondition","parentWhereCondition","subAlias","subSelect","getParameters","identifiers","generateWheres","ancestorWhere","descendantWhere","orWhere","MaterializedPathSubjectExecutor","parentPath","insertedEntityId","getEntityPath","newParent","newParentId","newParentPath","oldParentPath","entityPath","SubjectExecutor","hasExecutableOperations","insertSubjects","updateSubjects","removeSubjects","softRemoveSubjects","recoverSubjects","recompute","broadcasterResult","listeners","broadcastBeforeEventsForAll","promises","executeInsertOperations","mustBeUpdated","executeUpdateOperations","executeRemoveOperations","mustBeSoftRemoved","executeSoftRemoveOperations","mustBeRecovered","executeRecoverOperations","updateSpecialColumnsInPersistedEntities","broadcastAfterEventsForAll","mustBeRemoved","BroadcasterResult","broadcaster","broadcastBeforeInsertEvent","broadcastBeforeUpdateEvent","broadcastBeforeRemoveEvent","broadcastAfterInsertEvent","broadcastAfterUpdateEvent","broadcastAfterRemoveEvent","groupedInsertSubjects","groupedInsertSubjectKeys","groupedInsertSubjectKeys_1","groupedInsertSubjectKeys_1_1","groupName","groupBulkSubjects","bulkInsertMaps","bulkInsertSubjects","singleInsertSubjects","insertResult_1","insertResult_2","singleInsertSubjects_1","singleInsertSubjects_1_1","createDateColumn","updateDateColumn","createValueSetAndPopChangeMap","generatedMaps","reload","preparedValue","updateSubject","nestedSetSubjects","remainingSubjects","nestedSetPromise","updateMap","updateQueryBuilder","updateResult","updateGeneratedMap_1","cloneMongoSubjectEntity","objectIdColumn","whereEntity","nestedSetSubjects_1","nestedSetSubjects_1_1","groupedRemoveSubjects","groupedRemoveSubjectKeys","groupedRemoveSubjectKeys_1","groupedRemoveSubjectKeys_1_1","deleteMaps","getEntityValueMap","softDeleteQueryBuilder","deleteDateColumn","updateSpecialColumnsInInsertedAndUpdatedEntities","primaryColumn","relationId","setValue","childEntityMetadatas","updatedRelationMaps","updatedRelationMap","groupingAllowed","Subject","entityWithFulfilledIds","databaseEntityLoaded","canBeInserted","canBeUpdated","canBeSoftRemoved","canBeRecovered","changeMapsWithoutValues","changeSet","valueMap","OneToManySubjectBuilder","oneToManyRelations","buildForSubjectRelation","relatedEntityDatabaseRelationIds","relatedEntityDatabaseRelation","relatedEntities","relatedPersistedEntityRelationIds","relationIdMap","relatedEntitySubject","relatedDatabaseEntityRelationId","removedRelatedEntityRelationId","removedRelatedEntitySubject","orphanedRowAction","OneToOneInverseSideSubjectBuilder","oneToOneRelations","isOwning","relatedEntityDatabaseRelationId","operateSubject","ManyToManySubjectBuilder","manyToManyRelations","buildForAllRemoval","junctionSubject","junctionEntityMetadata","buildJunctionIdentifier","databaseRelatedEntityIds","databaseRelatedEntityRelationId","ownerValue","inverseValue","ownerColumns","inverseColumns","changedInverseEntityRelationIds","existRelationId","changedRelationId","removedEntityRelationId","ownerEntityMap","inverseEntityMap","SubjectDatabaseEntityLoader","operationType","groupByEntityTargets","subjectGroup","allIds","loadRelationPropertyPaths","findOptions","allSubjects_1","allSubjects_1_1","disableMixedMap","findByPersistEntityLike","entityTarget","operatedEntity","CascadesSubjectBuilder","relationEntity","relationEntityMetadata","isCascadeInsert","isCascadeUpdate","isCascadeSoftRemove","isCascadeRecover","alreadyExistRelationEntitySubject","relationEntitySubject","EntityPersistExecutor","oldQueryRunnerData","entitiesInChunks","executors","executorsWithExecutableOperations","isTransactionStartedByUs","executorsWithExecutableOperations_1","executorsWithExecutableOperations_1_1","chunk","cascadesSubjectBuilder","getMetadata","executor","EntityManager","repositories","plainObjectToEntityTransformer","ObjectUtils","isolationOrRunInTransaction","runInTransactionParam","isolation","runInTransaction","isReleased","targetOrEntity","maybeEntity","plainObjectOrObjects","plainEntityLike","transformedEntity","maybeEntityOrOptions","conflictColumns","overwriteColumns","conflictPaths","ix","conflictPropertyPath","col","mapPropertyPathsToColumns","orUpdate","getManyAndCount","andWhereInIds","idOrOptionsOrConditions","passedId","ensureEntityIdMap","getOne","clearTable","reduceRight","newRepository","getMongoRepository","getCustomRepository","entityRepositoryInstance","SqljsEntityManager","loadDatabase","fileNameOrLocalStorageOrData","saveDatabase","fileNameOrLocalStorage","exportDatabase","export","ColumnMetadata","isSelect","isInsert","isUpdate","zerofill","unsigned","isTreeLevel","isCreateDate","isUpdateDate","isDeleteDate","isVersion","isObjectId","isNestedSetLeft","isNestedSetRight","isMaterializedPath","embeddedMetadata","width","collation","primary","nullable","readonly","asExpression","generatedType","hstoreType","spatialFeatureType","srid","createDatePrecision","updateDatePrecision","deleteDatePrecision","closureType","nestedSetLeft","nestedSetRight","materializedPath","useDatabaseName","propertyNames","parentPropertyNames","extractEmbeddedColumnValue_1","isEmbeddedArray_1","extractEmbeddedColumnValue_2","submap","isEmbeddedArray","extractEmbeddedColumnValue_3","embeddedObject","extractEmbeddedColumnValue_4","embeddedMetadatas","embeddedMetadataTree","buildPropertyPath","propertyAliasName","buildDatabaseName","databasePath","buildDatabasePath","databaseNameWithoutPrefixes","parentPrefixes","Query","SqlInMemory","upQueries","downQueries","BaseQueryRunner","sqlMemoryMode","sqlInMemory","cachedTablePaths","getTable","loadTables","getView","viewPath","loadViews","viewPaths","clearSqlMemory","executeMemoryUpSql","executeMemoryDownSql","getCachedView","viewName","foundViews","getCachedTable","tablePath_1","foundTables","foundTablePath_1","cachedTable","replaceCachedTable","changedTable","oldTablePath","foundTable","justCreated","engine","getTypeormMetadataTableName","isColumnChanged","checkDefault","checkComment","isDefaultColumnLength","findColumnWithDatabaseName","dataTypeDefaults","isDefaultColumnPrecision","isDefaultColumnScale","executeQueries","upQueries_1","upQueries_1_1","AbstractSqliteQueryRunner","isolationLevel","broadcast","getDatabases","getSchemas","hasDatabase","getCurrentDatabase","hasSchema","getCurrentSchema","hasColumn","createDatabase","ifNotExist","dropDatabase","ifExist","createSchema","schemaPath","dropSchema","createTableSql","dropTableSql","createIndexSql","dropIndexSql","createViewSql","insertViewDefinitionSql","dropViewSql","deleteViewDefinitionSql","renameTable","oldTableOrName","newTableName","oldTable","newTable","recreateTable","addColumn","oldTableColumnOrName","newTableColumnOrName","changeColumn","changedColumnSet","findColumnUniques","findColumnForeignKeys","fk","findColumnIndices","originalColumn","dropColumn","columnOrName","findColumnByName","columnInstance","removeColumn","removeUniqueConstraint","removeIndex","createPrimaryKey","dropPrimaryKey","createUniqueConstraint","uniqueConstraint","uniqueConstraints","addUniqueConstraint","dropUniqueConstraint","uniqueOrName","createCheckConstraint","checkConstraint","checkConstraints","addCheckConstraint","dropCheckConstraint","checkOrName","removeCheckConstraint","createExclusionConstraint","exclusionConstraint","exclusionConstraints","dropExclusionConstraint","exclusionOrName","createForeignKey","addForeignKey","dropForeignKey","foreignKeyOrName","createIndex","addIndex","indexOrName","clearDatabase","dropViewQueries","dropTableQueries","viewNames","viewNamesString","dbView","dbTables","tableNamesString_1","tablesSql","tableNamesString","dbIndicesDef","_j","dbTable","dbColumns","dbIndices","autoIncrementColumnName","tableSql","autoIncrementIndex","comma","bracket","tableForeignKeyConstraints","uniqueRegexResult","uniqueMappings","uniqueRegex","tableUniquePromises","regexp","indicesPromises","dbColumn","enumMatch","fullType","dataType_1","re","ownForeignKeys","fkName","dbIndex","dbIndexName","indexInfos","indexColumns","foundMapping","indexInfo1","indexInfo2","indexInfo","indexColumn","mapping","indexDef","dbIndexDef","hasAutoIncrement","skipPrimary","columnDefinitions","buildCreateColumnSql","constraint","tableMetadata","withoutRowid","getQueryAndParameters","viewOrPath","migrateData","newColumnNames","oldColumnNames","Broadcaster","event","broadcastFunction","wait","beforeInsertListeners","listener","isAllowed","executionResult","subscribers","subscriber","isAllowedSubscriber","beforeInsert","updatedColumns","updatedRelations","beforeUpdateListeners","beforeUpdate","beforeRemoveListeners","beforeRemove","afterInsertListeners","afterInsert","broadcastBeforeTransactionStartEvent","beforeTransactionStart","broadcastAfterTransactionStartEvent","afterTransactionStart","broadcastBeforeTransactionCommitEvent","beforeTransactionCommit","broadcastAfterTransactionCommitEvent","afterTransactionCommit","broadcastBeforeTransactionRollbackEvent","beforeTransactionRollback","broadcastAfterTransactionRollbackEvent","afterTransactionRollback","afterUpdateListeners","afterUpdate","afterRemoveListeners","afterRemove","broadcastLoadEventsForAll","broadcastLoadEvent","isLazy","afterLoadListeners","afterLoad","listenTo","isPrototypeOf","QueryResult","SqljsQueryRunner","isDirty","autoSave","useStructuredResult","command","queryStartTime","statement","maxQueryExecutionTime","queryEndTime","queryExecutionTime","logQuery","logQuerySlow","affected","logQueryError","SqljsDriver","autoSaveCallback","checkIfFileOrLocalStorageExists","localStorageContent","createDatabaseConnectionWithImport","useLocalForage","localforage","content","databaseArray","sqlite","sqlJsConfig","SQL","EntityManagerFactory","CordovaQueryRunner","resultSet","insertId","parametrize","objectLiteral","startIndex","CordovaDriver","sqlitePlugin","ReactNativeQueryRunner","rowsAffected","ReactNativeDriver","NativescriptQueryRunner","isInsertQuery","handler","execSQL","NativescriptDriver","readOnly","multithreading","migrate","iosFlags","androidFlags","resultType","RESULTSASOBJECT","ExpoQueryRunner","ExpoDriver","_db","databaseConnection_1","tsx","VersionUtils","isGreaterOrEqual","targetVersion","v1","parseVersion","v2","AuroraDataApiPostgresQueryRunner","client","databaseConnectionPromise","connectedQueryRunners","releaseCallback","numberOfRecordsUpdated","PostgresQueryRunnerWrapper","PostgresQueryRunner","onErrorCallback","releasePostgresConnection","removeListener","rowCount","QueryStream","loadStreamDependency","parsedTableName","isCascade","enumColumns","createdEnumTypes","enumColumns_1","enumColumns_1_1","hasEnum","hasEnumType","buildEnumName","createEnumTypeSql","dropEnumTypeSql","dropForeignKeySql","schemaName","oldTableName","oldPkName","newPkName","enumColumns_2","enumColumns_2_1","oldEnumType","escapePath","sequencePath","buildSequencePath","sequenceName","buildSequenceName","newSequencePath","newSequenceName","newUniqueName","newIndexName","newForeignKeyName","getUserDefinedTypeName","pkName_1","columnNames_1","pkName","columnIndex","escapeComment","defaultValueChanged","arraySuffix","newEnumName","oldEnumName","oldEnumNameWithoutSchema","oldEnumNameWithSchema_old","oldEnumNameWithoutSchema_old","upType","downType","pkName_2","columnNames_2","columnCheck","columnUnique","enumType","escapedEnumName","dropCheckConstraintSql","createCheckConstraintSql","dropUniqueConstraintSql","createUniqueConstraintSql","columns_2","columns_2_1","createPrimaryKeySql","dropPrimaryKeySql","pkName_3","columnNamesString_1","columnNamesString","uniqueConstraints_1","uniqueConstraints_1_1","uniqueConstraints_2","uniqueConstraints_2_1","createExclusionConstraintSql","dropExclusionConstraintSql","addExclusionConstraint","removeExclusionConstraint","createForeignKeySql","foreignKeys_1","foreignKeys_1_1","foreignKeys_2","foreignKeys_2_1","indices_1","indices_1_1","indices_2","indices_2_1","schemas","schemaNamesString","selectViewDropsQuery","selectMatViewDropsQuery","dropMatViewQueries","selectTableDropsQuery","getVersion","dropEnumTypes","viewsCondition","materialized","tablesCondition","columnsCondition","columnsSql","constraintsCondition","constraintsSql","indicesSql","foreignKeysCondition","hasRelispartitionColumn","foreignKeysSql","dbConstraints","_k","table_schema","table_name","hasSupportForPartitionedTables","getSchemaFromKey","tableUniqueConstraints","tableCheckConstraints","tableExclusionConstraints","tableIndexConstraints","dbObject","columnConstraints","name_1","builtEnumName","geometryColumnSql","geographyColumnSql","length_1","isConstraintComposite","serialDefaultName","serialDefaultPath","defaultWithoutQuotes","dbConstraint","is_identity","dbC","dbFk","deferrable","uniquesSql","checksSql","exclusionsSql","it","tableOrPath","materializedClause","schemaNames","selectDropsQuery","enumValues","uniqueName","checkName","exclusionName","seqName","withSchema","disableEscape","toOld","udtName","searchSchema","uuidGenerator","AuroraDataApiPostgresDriver","DataApiDriver","region","secretArn","resourceArn","serviceConfigOptions","formatOptions","castParameters","pg","executeQuery","extensionsMetadata","checkMetadataForExtensions","hasExtensions","enableExtensions","PostgresWrapper","CapacitorQueryRunner","executeSet","changes","lastId","CapacitorDriver","databaseMode","isDatabaseEncryted","databaseVersion","createConnection","journalMode","DriverFactory","importClassesFromDirectories","directories","formats","defaultContainer","class_1","instances","someClass","getFromContainer","IndexMetadata","columnNamesWithOrderingMap","spatial","fulltext","parser","isSparse","sparse","isBackground","background","expireAfterSeconds","givenName","givenColumnNames","columnPropertyPaths","columnsFnResult_1","propertiesMap","columnWithSameName","relationWithSameName","isWithJoinColumn","updatedMap","RelationMetadata","isTreeParent","isTreeChildren","createForeignKeyConstraints","isOneToOneOwner","isOneToOneNotOwner","isManyToManyOwner","isManyToManyNotOwner","inverseJoinColumns","inverseSideProperty","givenInverseSidePropertyFactory","cascade","eager","persistence","referencedColumns","ensureRelationIdMap","registerForeignKeys","registerJoinColumns","registerJunctionEntityMetadata","buildInverseSidePropertyPath","ownerEntityPropertiesMap","EmbeddedMetadata","isAlwaysUsingConstructor","columnsFromTree","relationsFromTree","listenersFromTree","indicesFromTree","uniquesFromTree","relationIdsFromTree","relationCountsFromTree","customPrefix","embedded","buildPrefix","buildParentPropertyNames","buildParentPrefixes","buildEmbeddedMetadataTree","buildColumnsFromTree","buildRelationsFromTree","buildListenersFromTree","buildIndicesFromTree","buildUniquesFromTree","buildRelationIdsFromTree","buildRelationCountsFromTree","entitySkipConstructor","buildPartialPrefix","prefixes","parentEmbeddedMetadata","RelationIdMetadata","relationNameOrFactory","queryBuilderFactory","inverseEntity","RelationCountMetadata","EventListenerTypes","AFTER_LOAD","BEFORE_INSERT","AFTER_INSERT","BEFORE_UPDATE","AFTER_UPDATE","BEFORE_REMOVE","AFTER_REMOVE","ForeignKeyMetadata","referencedTablePath","JunctionEntityMetadataBuilder","collectReferencedColumns","inverseReferencedColumns","collectInverseReferencedColumns","junctionColumns","joinColumnArgs","inverseJunctionColumns","inverseReferencedColumn","changeDuplicatedColumnNames","ownColumns","ownIndices","hasAnyReferencedColumnName","hasInverseJoinColumns","hasAnyInverseReferencedColumnName","junctionColumn","inverseJunctionColumn","junctionColumnName","inverseJunctionColumnName","ClosureJunctionEntityMetadataBuilder","parentClosureEntityMetadata","treeOptions","closureTableName","ancestorColumnName","descendantColumnName","treeLevelColumn","UniqueMetadata","RelationJoinColumnBuilder","collectColumns","manyToOneWithoutJoinColumn","hasJoinColumnWithoutAnyReferencedColumnName","joinColumnMetadataArg","relationalColumn","registerColumn","EntityListenerMetadata","callEntityEmbeddedMethod","propertyPaths","CheckMetadata","ExclusionMetadata","EntityMetadataBuilder","metadataArgsStorage","junctionEntityMetadataBuilder","closureJunctionEntityMetadataBuilder","relationJoinColumnBuilder","entityClasses","tableArgs","createEntityMetadata","computeParentEntityMetadata","childMetadata","computeEntityMetadataStep1","computeEntityMetadataStep2","computeInverseProperties","ownUniques","hasNonNullableRelations","closureJunctionEntityMetadata","createKeysForTableInheritance","relationLoader","enableLazyLoad","singleTableChildrenTargets","tableInheritance","tableTree","pattern","parentEntityMetadata","allEntityMetadata","entityInheritance","createEmbeddedsRecursively","otherEntityMetadata","discriminatorColumnName_1","discriminatorColumn_1","ownRelations","parentRelation","ownListeners","embeddedArgs","targets","subEmbedded","allEmbeddeds","lazyRelations","manyToOneRelations","ownerOneToOneRelations","ownerManyToManyRelations","hasMultiplePrimaryKeys","hasUUIDGeneratedColumns","versionColumn","createPropertiesMap","givenTableName","inverseSidePropertyPath","foundRelation","EntitySchemaTransformer","entitySchema","treeChildrenCount","objectId","columnAgrs","generationArgs","relationSchema","lazy","inverseSide","treeParent","treeChildren","joinColumnsOptions","joinColumnsOptions_1","joinColumnsOptions_1_1","joinColumnOption","inverseJoinColumn","indexAgrs","uniqueAgrs","checkAgrs","exclusionArgs","ConnectionMetadataBuilder","buildMigrations","migrationClasses","migrationClass","buildSubscribers","subscriberClasses","allSubscriberClasses","buildEntityMetadatas","entityClassesOrSchemas","entitySchemas","allEntityClasses","decoratorEntityMetadatas","metadataArgsStorageFromSchema","schemaEntityMetadatas","SimpleConsoleLogger","stringifyParams","AdvancedConsoleLogger","FileLogger","DummyLogger","DebugLogger","debugQueryLog","debugQueryError","debugQuerySlow","debugSchemaBuild","debugMigration","debugLog","debugInfo","debugWarn","enabled","LoggerFactory","RedisQueryResultCache","clientType","redis","loadRedis","cacheOptions","createClient","Cluster","startupNodes","quit","getFromCache","isExpired","savedCache","duration","storeInCache","flushdb","deleteKey","del","DbQueryResultCache","cacheTableName","queryResultCacheDatabase","queryResultCacheSchema","queryResultCacheTable","getQueryRunner","insertedValues","QueryResultCacheFactory","provider","RelationLoader","loadManyToOneOrOneToOneOwner","loadOneToManyOrOneToOneNotOwner","loadManyToManyOwner","loadManyToManyNotOwner","joinAliasName","setParameter","paramName","joinAlias","joinColumnConditions","inverseJoinColumnConditions","dataIndex","promiseIndex","resolveIndex","setData","setPromise","loader","Connection","logging","createEntityManager","isConnected","buildMetadatas","migrationsRun","runMigrations","dropBeforeSync","databases_2","databases_1","databases_1_1","migrationExecutor","findMetadata","usedQueryRunner","entityOrRunner","SelectQueryBuilder","getManyToManyMetadata","relationPropertyPath","connectionMetadataBuilder","entityMetadataValidator","ConnectionManager","connectionMap","existConnection","globalScope","typeormMetadataArgsStorage","getConnectionOptions","getConnectionManager","optionsOrName","Column","typeOrOptions","reflectMetadataType","CreateDateColumn","PrimaryGeneratedColumn","strategyOrOptions","UpdateDateColumn","JoinColumn","optionsOrOptionsArray","ManyToOne","typeFunctionOrTarget","inverseSideOrOptions","reflectedType","OneToMany","Entity","nameOrOptions","BaseEntity","newestEntity","useConnection","usedConnection","isClosureJunction","tableMetadataArgs","newObject","getValueMap","skipNulls","idMap","firstEntity","secondEntity","firstEntityIdMap","secondEntityIdMap","findColumnWithPropertyName","hasRelationWithPropertyPath","hasEmbeddedWithPropertyPath","findEmbeddedWithPropertyPath","relationsAndValues","subValue","getInverseEntityMetadata","createPropertyPath","paths","subPaths","difference","firstIdMaps","secondIdMaps","firstIdMap","secondIdMap","entityPrefix","separator","segmentLength","MongoDriver","MongoQueryRunner","MongoEntityManager","MongoRepository","PostgresDriver","AuroraDataApiDriver","CockroachDriver","SqlServerDriver","SapDriver","MysqlDriver","OracleDriver","SqliteDriver","BetterSqlite3Driver","Brackets","whereFactory","DeleteQueryBuilder","connectionOrQueryBuilder","aliasNamePrefixingEnabled","createComment","createDeleteExpression","queryResult","deleteResult","obtainQueryRunner","createFromAlias","setMainAlias","wheres","getWhereCondition","getWhereInIdsCondition","orWhereInIds","returning","getMainTableName","whereExpression","createWhereExpression","returningExpression","createReturningExpression","InsertQueryBuilder","createInsertExpression","valueSets","broadcastResult_1","declareSql","selectOutputSql","returningResultsEntityUpdator","returningColumns_1","columnPath","insertSql","broadcastResult_2","getValueSets","valueSet","extraReturningColumns","getInsertionReturningColumns","buildTableVariableDeclaration","insertColumns","valuesSet","onConflict","orIgnore","onIgnore","statementOrOverwrite","conflictTarget","overwrite","conflict","conflict_target","valuesExpression","createValuesExpression","columnsExpression","createColumnNamesExpression","isOverridingAutoIncrementBehavior","getInsertedColumns","expression_1","valueSetIndex","locallyGenerated","parametrizeValue","geomFromText","legacySpatialSupport","expression_2","insertionIndex","JoinAttribute","queryExpressionMap","joinAttribute","isSelectedEvaluated","relationEvaluated","isSelectedCache","state_1","relationCache","relationOwnerSelection","findAliasByName","parentAlias","Alias","_metadata","QueryExpressionMap","queryEntity","queryType","maxExecutionTime","selectDistinct","selectDistinctOn","relationIdAttributes","relationCountAttributes","havings","orderBys","groupBys","disableEscaping","enableRelationIdValues","extraAppendedAndWhereCondition","whereEntities","entityOrderBy_1","createAlias","findColumnByAliasExpression","aliasExpression","RelationIdAttribute","RelationCountAttribute","having","groupBy","lockMode","lockVersion","lockTables","of","QueryBuilder","parameterIndex","selectionAliasName","SelectQueryBuilderCls","InsertQueryBuilderCls","entityOrTableNameUpdateSet","maybeUpdateSet","updateSet","UpdateQueryBuilderCls","DeleteQueryBuilderCls","SoftDeleteQueryBuilderCls","entityTargetOrPropertyPath","maybePropertyPath","RelationQueryBuilderCls","hasRelation","hasParameter","parentQueryBuilder","setNativeParameters","printSql","setQueryRunner","isSubquery","subQueryBuilder","subquery","replacePropertyNames","escapeRegExp","replaceAliasNamePrefix","replacementAliasNamePrefix","replacements","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","replacementKeys","pre","conditionsArray","createWhereClausesExpression","getReturningColumns","columnTypeToNativeParameter","oracle","BIND_OUT","clauses","clause","createWhereConditionExpression","alwaysWrap","operator","normalized","primaryColumn_1","normalized_1","normalized_1_1","findColumnsForPropertyPath","propertyPathParts","part","joinAttr","fullRelationPath","aliasPropertyPath","subPaths_1","getPredicates","propertyPaths_1","propertyPaths_1_1","containedWhere","aliasPropertyPath_1","aliasPropertyPath_1_1","parameterValue","aliasPath","getWherePredicateCondition","whereQueryBuilder","wheres_1","wheres_1_1","where_1","QueryBuilderUtils","isAliasProperty","RelationUpdater","updateSet_1","conditions_1","of_1","junctionMetadata_1","ofs","firstColumnValues","secondColumnValues_1","bulkInserted_1","relationValue","ofIndex","firstColumnVal","secondColumnVal","inserted","RelationRemover","values_1","conditions_2","valueIndex","firstColumnValIndex","secondColumnValIndex","RelationQueryBuilder","addAndRemove","added","removed","loadOne","loadMany","ReturningResultsEntityUpdator","returningColumns","loadedReturningColumns","newRaw","rawItem","rawItemIndex","getUpdationReturningColumns","setOption","insertionColumns","entityIds","returningResult_1","needToCheckGenerated","RawSqlResultsToEntityTransformer","rawRelationIdResults","rawRelationCountResults","transformRawResultsGroup","keyValue","items","discriminatorValues_1","discriminatorMetadata","childEntityMetadata","hasColumns","transformColumns","hasRelations","transformJoins","hasRelationIds","transformRelationIds","hasRelationCounts","transformRelationCounts","hasData","isSelected","mapToPropertyParentAlias","isMany","mapToPropertyPropertyName","rawSqlResults","rawRelationIdResult","relationIdAttribute","createValueMapFromJoinColumns","idMaps","entityPrimaryIds","extractEntityPrimaryIds","mapToPropertyPropertyPath","property","rawRelationCountResult","relationCountAttribute","referenceColumnName","referenceColumnValue","rawSqlResult","relationIdRawResult","RelationIdLoader","rawEntities","relationIdAttr","duplicates_1","relation_1","joinColumns_1","tableAlias_1","duplicates_2","qb_1","joinColumns_2","inverseJoinColumns_1","junctionAlias_1","inverseSideTableName","inverseSideTableAlias_1","junctionTableName","mappedColumns","duplicates_3","inverseJoinColumnCondition_1","qb_2","rawEntity","duplicateParts","duplicatePart","duplicate","parameterParts","queryPart","junctionAlias","joinInverseSideMetadata","mappedColumn","RelationIdMetadataToAttributeTransformer","attribute","metadataToAttribute","parentAliasName","RelationCountLoader","onlyUnique","relationCountAttr","referenceColumnName_1","inverseSideTable","inverseSidePropertyName","joinTableColumnName_1","inverseJoinColumnName","firstJunctionColumn","secondJunctionColumn","referenceColumnValues","inverseSideTableAlias","addGroupBy","vals","RelationCountMetadataToAttributeTransformer","createSelectExpression","createJoinExpression","createGroupByExpression","createHavingExpression","createOrderByExpression","createLimitOffsetExpression","createLockExpression","distinct","distinctOn","addFrom","innerJoinAndMapMany","innerJoinAndMapOne","leftJoinAndMapMany","leftJoinAndMapOne","loadRelationIdAndMap","aliasNameOrOptions","loadRelationCountAndMap","andHaving","orHaving","nulls","normalizeNumber","useIndex","loadRawResults","error_2","executeEntitiesAndRawResults","getOneOrFail","error_3","executeCountQuery","entitiesAndRaw","error_4","releaseFn","error_5","enabledOrMillisecondsOrId","maybeMilliseconds","conditionDeleteColumn","isSubQuery","allSelects","excludedSelects","buildEscapedEntityColumnSelects","findEntityColumnSelects","hasMainAlias","excludedSelect","froms","createSelectDistinctExpression","destinationTableName","destinationTableAlias","appendedCondition","destinationJoin","junctionCondition","destinationCondition","allOrderBys","lockTablesClause","nonSelectedPrimaryColumns","selectionPath","mainSelect","computeCountExpression","distinctAlias","countSql","relationIdLoader","relationCountLoader","orderBys_1","metadata_1","mainAliasName_1","querySelects","alias_1","createOrderByCombinedWithSelectExpression","columnAlias","paramKey","mergeExpressionMap","selectString","orderCriteria","criteriaParts","orderByObject","queryId","savedQueryResultCacheOptions","cacheError","error_6","error_7","alwaysEnabled","SoftDeleteQueryBuilder","createUpdateExpression","createLimitExpression","entityIdMap","updateColumnAndValues","UpdateQueryBuilder","updateSql","statements","getValueSet","DeleteResult","InsertResult","UpdateResult","foundColumn","uniqueColumn","removedUnique","foundUnique","removedCheck","foundCheck","removedExclusion","foundExclusion","removedForeignKey","isMysql","column_1","ind","findColumnChecks","createTableColumnOptions","transformFrom","transformedValue","_transformer","normalizeHydratedDate","mixedDate","mixedDateToDateString","formatZerolessValue","mixedDateToDate","toUtc","useMilliseconds","getUTCMilliseconds","setUTCMilliseconds","mixedDateToTimeString","skipSeconds","mixedTimeToDate","hours","minutes","seconds","setHours","setMinutes","setSeconds","mixedTimeToString","mixedDateToDatetimeString","finalValue","formatMilliseconds","getMilliseconds","mixedDateToUtcDatetimeString","simpleArrayToString","stringToSimpleArray","simpleJsonToString","stringToSimpleJson","simpleEnumToString","stringToSimpleEnum","sources","sources_1","sources_1_1","source","getOwnPropertyNames","prop","splitClassesAndStrings","clsesAndStrings","cls","propertyCallback","groupedArray","grouped","uniq","criteriaOrProperty","uniqueArray","itemValue_1","uniqueItem","isPlainObject","mergeArrayKey","memo","mergeObjectKey","mergeDeep","deepCompare","leftChain","rightChain","compare2Objects","compareIds","firstId","secondId","toBoolean","zipObject","isArraysEqual","arr1","arr2","areMutuallyExclusive","lists","haveSharedObjects","otherLists","otherList","blockstart","temp","_rotLeft","_cvtHex","H0","H1","H2","H3","H4","encodeURIComponent","wordArray","uuid4","camelCase","firstCapital","p1","p2","snakeCase","titleCase","txt","termLength","acc","segmentTerms","shortSegment","term","hashFunction","hashedInput","formatArgs","useColors","namespace","humanize","diff","color","lastC","namespaces","storage","DEBUG","__nwjs","style","WebkitAppearance","firebug","exception","$1","localstorage","destroy","warned","colors","debug","formatters","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","curr","ms","coerce","format","formatter","selectColor","delimiter","newDebug","toNamespace","disable","names","skips","enable","plural","msAbs","isPlural","round","parseFloat","long","fmtShort","rnds8","rng","uuid","byteToHex","rnds","proxyMarker","createEndpoint","releaseProxy","throwMarker","isObject","transferHandlers","canHandle","expose","createProxy","serialized","isError","ep","addEventListener","ev","argumentList","fromWireValue","rawValue","proxy","transfers","transferCache","transfer","wireValue","transferables","toWireValue","removeEventListener","closeEndPoint","endpoint","isMessagePort","throwIfProxyReleased","isProxyReleased","Proxy","_target","requestResponseMessage","_thisArg","rawArgumentList","processArguments","construct","processed","serializedValue","MAX_SAFE_INTEGER"],"sourceRoot":""}